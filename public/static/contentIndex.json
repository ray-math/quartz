{"Class/공통-수학/분할과-분배":{"slug":"Class/공통-수학/분할과-분배","filePath":"Class/공통 수학/분할과 분배.md","title":"분할과 분배","links":[],"tags":[],"content":"여러 개의 물건을 몇 개의 묶음으로 나누는 것을 분할이라 하고, 분할된 묶음을 일렬로 나열하는 것을 분배라 한다.\n네 개의 물건 A, B, C, D를 1개, 3개의 두 묶음으로 나누어 일렬로 나열하는 경우와 2개, 2개의 두 묶음으로 나누어 일렬로 나열하는 방법의 수를 각각 구해 보자.\n1.  1개, 3개로 나누는 경우\n이때, 나누는 개수가 다름으로 중복되는 경우가 없다. A, B, C, D 4개 중에서 1개를 뽑고, 나머지 3개에서 3개를 뽑으면 되므로\n{}_4C_1 \\cdot {}_3C_3 = 4 \\quad \\leftarrow \\text{분할}\n이 두 묶음을 일렬로 나열하는 방법의 수는 2!이므로 구하는 방법의 수는\n{}_4C_1 \\cdot {}_3C_3 \\cdot 2! = 4 \\cdot 2 = 8 \\quad \\leftarrow \\text{분배}\n2. 2개, 2개로 나누는 경우\n나누는 개수가 같으므로 중복되는 경우가 2!개씩 생긴다. A, B, C, D 4개 중에서 2개를 뽑고, 나머지 2개에서 2개를 뽑으면 되므로\n{}_4C_2 \\cdot {}_2C_2\n이때 같은 것이 2!개씩 있으므로\n{}_4C_2 \\cdot {}_2C_2 \\cdot \\frac{1}{2!} = 3 \\quad \\leftarrow \\text{분할}\n이 두 묶음을 일렬로 나열하는 방법의 수는 2!이므로 구하는 방법의 수는\n{}_4C_2 \\cdot {}_2C_2 \\cdot \\frac{1}{2!} \\cdot 2! = 3 \\cdot 2 = 6 \\quad \\leftarrow \\text{분배}\n정리\n1. 분할의 수\n서로 다른 n개의 물건을 p개, q개, r개 (p+q+r=n)의 세 묶음으로 분할하는 방법의 수는 다음과 같다.\n\np, q, r가 모두 다른 수일 때,\n\n{}_nC_p \\cdot {}_{n-p}C_q \\cdot {}_{n-p-q}C_r\n\np, q, r 중 어느 두 수가 같을 때,\n\n{}_nC_p \\cdot {}_{n-p}C_q \\cdot \\frac{1}{2!}\n\np, q, r의 세 수가 모두 같을 때,\n\n{}_nC_p \\cdot {}_{n-p}C_q \\cdot \\frac{1}{3!}\n2. 분배의 수\n앞서 분할한 세 묶음을 일렬로 나열하는 분배의 수를 구할 때에는 각각의 분할하는 방법의 수에 3!을 곱한다.\n(\\text{분할하는 방법의 수}) \\cdot 3!"},"Class/공통-수학/순열과-조합":{"slug":"Class/공통-수학/순열과-조합","filePath":"Class/공통 수학/순열과 조합.md","title":"순열과 조합","links":[],"tags":["사건","개"],"content":"합의 법칙\n사건과 경우의 수\n실험이나 관찰에 의하여 나타나는 결과를 사건이라 하고, 사건이 일어날 수 있는 경우의 가지 수를 경우의 수라 한다.\n합의 법칙\n두 사건 A, B가 동시에 일어나지 않을 때, 사건 A, B가 일어나는 경우의 수가 각각 m, n이면 사건 A 또는 사건 B가 일어나는 경우의 수는 m+n이다.\n\n두 사건 A, B가 동시에 일어나는 경우의 수가 l이면 사건 A 또는 사건 B가 일어나는 경우의 수는 m+n-l이다.\n\n곱의 법칙\n두 사건 A, B에 대하여 사건 A가 일어나는 경우의 수가 m이고, 그 각각에 대하여 사건 B가 일어나는 경우의 수가 n일 때, 두 사건 A, B가 잇달아 일어나는 경우의 수는 m \\times n이다.\n순열\n서로 다른 n개에서 r (0&lt;r\\le n)개를 택하여 일렬로 나열하는 것을 n개에서 r개를 택하는 순열이라 하고, 이 순열의 수를 기호로 {}_nP_r와 같이 나타낸다.\n\n{}_nP_r의 n은 서로 다른 것의 개수, r은 택하는 것의 개수, P는 순열을 뜻하는 permutation의 첫 글자이다.\n\n순열의 수\n서로 다른 n개에서 r (0 &lt; r\\le n)개를 택하는 순열의 수는\n{}_nP_r = n(n-1)(n-2)\\cdots(n-r+1)\n{}_nP_r는 n에서 시작하여 1씩 작아지는 자연수를 차례대로 r개 곱한 것이다.\nn의 계승\n1부터 n까지의 자연수를 차례대로 곱한 것을 n의 계승이라 하며, 이것을 기호로 n!과 같이 나타낸다. 즉\nn! = n(n-1)(n-2)\\cdots 3 \\cdot 2 \\cdot 1\nn!은 ‘n 팩토리얼(factorial)‘이라 읽기도 한다.\nn!을 이용한 순열의 수\n\n{}_nP_n = n!, {}_nP_0 = 1, 0! = 1\n{}_nP_r = \\frac{n!}{(n-r)!} (단, 0 \\le r \\le n)\n\n조합\n서로 다른 n개에서 순서를 생각하지 않고 r (0&lt;r\\le n)개를 택하는 것을 n개에서 r개를 택하는 조합이라 하고, 이 조합의 수를 기호로 {}_nC_r와 같이 나타낸다.\n{}_nC_r = \\frac{{}_nP_r}{r!} = \\frac{n!}{r!(n-r)!}\n\n{}_nC_r의 n은 서로 다른 것의 개수, r은 택하는 것의 개수, C는 조합을 뜻하는 combination의 첫 글자이다.\n\n조합의 수\n\n{}_nC_n = 1, {}_nC_0 = 1\n{}_nC_r = {}_nC_{n-r} (단, 0 \\le r \\le n)\n{}_nC_r = {}_{n-1}C_{r-1} + {}_{n-1}C_r (단, 1 \\le r &lt; n)\n\n\\begin{align*}\n{}_{n-1}C_{r-1} + {}_{n-1}C_r &amp;= \\frac{(n-1)!}{(r-1)! \\{(n-1)-(r-1)\\}!} + \\frac{(n-1)!}{r! \\{(n-1)-r\\}!}\\\\\n&amp;= \\frac{(n-1)!}{(r-1)!(n-r)!} + \\frac{(n-1)!}{r!(n-r-1)!}\\\\\n&amp;= \\frac{(n-1)!}{(r-1)!(n-r-1)!} \\left( \\frac{1}{n-r} + \\frac{1}{r} \\right)\\\\\n&amp;= \\frac{(n-1)!}{(r-1)!(n-r-1)!} \\cdot\\frac{n}{(n-r)r}\\\\\n&amp;= \\frac{n!}{r!(n-r)!} = {}_nC_r\n\\end{align*}\n\n\n서로 다른 n개에서 r개를 뽑는 조합의 수는 n개에서 뽑지 않은 (n-r)개를 택하는 조합의 수와 같으므로 {}_nC_r = {}_nC_{n-r} 가 성립한다. 따라서 {}_nC_r의 값을 구할 때, r &gt; n-r인 경우 {}_nC_r = {}_nC_{n-r}임을 이용하면 간단히 계산할 수 있다.\n{}_nC_r = (특정한 한 개를 뽑고 나머지 (n-1)개 중에서 (r-1)개를 뽑는 조합의 수) + (특정한 한 개를 제외하고 나머지 (n-1)개 중에서 r개를 뽑는 조합의 수)= {}_{n-1}C_{r-1} + {}_{n-1}C_r\n\n"},"Class/공통-수학/원의-접선의-방정식":{"slug":"Class/공통-수학/원의-접선의-방정식","filePath":"Class/공통 수학/원의 접선의 방정식.md","title":"원의 접선의 방정식","links":[],"tags":["방정식","접선"],"content":"기울기가 주어진 원의 접선의 방정식\n원 x^2 + y^2 = r^2 (r &gt; 0)에 접하고 기울기가 m인 직선의 방정식은 다음과 같다.\ny = mx \\pm \\frac{r}{\\sqrt{1 + m^2}}\n\n기울기가 m으로 정해져 있으므로 y절편만 주의하여 기억하면 된다.\n\n판별식 이용\n구하는 직선의 방정식을 y = mx + n이라 하고 원의 방정식 x^2 + y^2 = r^2에 대입하면\nx^2 + (mx + n)^2 = r^2\n(1 + m^2)x^2 + 2mnx + n^2 - r^2 = 0\n이 이차방정식의 판별식을 D라 하면 원과 직선이 접하므로\nD = \\frac{4(mn)^2 - 4(1 + m^2)(n^2 - r^2)}{4(1 + m^2)} = 0\n따라서\nn = \\pm \\frac{r}{\\sqrt{1 + m^2}}\n원의 중심과 접선 사이의 거리 이용\n구하는 직선의 방정식을 y = mx + n, 즉 mx - y + n = 0이라 하면 원 x^2 + y^2 = r^2의 중심 (0, 0)과 이 직선 사이의 거리가 원의 반지름의 길이 r와 같아야 하므로\n\\frac{|n|}{\\sqrt{m^2 + (-1)^2}} = r\n따라서\nn = \\pm \\frac{r}{\\sqrt{1 + m^2}}\n따라서 구하는 접선의 방정식은\ny = mx \\pm \\frac{r}{\\sqrt{1 + m^2}}\n원 위의 점에서의 접선의 방정식\n\n원 x^2 + y^2 = r^2 위의 점 (x_1, y_1)에서의 접선의 방정식은\n\nx_1 x + y_1 y = r^2\n\n원 (x - a)^2 + (y - b)^2 = r^2 위의 점 (x_1, y_1)에서의 접선의 방정식은\n\n(x_1 - a)(x - a) + (y_1 - b)(y - b) = r^2\n\n원 x^2 + y^2 + Ax + By + C = 0 위의 점 (x_1, y_1)에서의 접선의 방정식은\n\nx_1 x + y_1 y + A \\cdot \\frac{x_1 + x}{2} + B \\cdot \\frac{y_1 + y}{2} + C = 0 \n\nRemark\n\nx^2 \\rightarrow x_1 x, \\quad (x - a)^2 \\rightarrow (x_1 - a)(x - a)\ny^2 \\rightarrow y_1 y , \\quad (y - b)^2 \\rightarrow (y_1 - b)(y - b)\nx \\rightarrow \\frac{x_1 + x}{2}\ny \\rightarrow \\frac{y_1 + y}{2}\n\n\n원 밖의 점에서 원에 그은 접선의 방정식\n원 밖의 점 (a, b)에서 원에 그은 접선의 방정식을 구할 때에는 다음 세 가지 방법이 주로 쓰인다.\n원 위의 점에서의 접선의 방정식 이용\n접점을 (x_1, y_1)로 놓고, 원 위의 점에서의 접선의 방정식을 구하는 방법을 이용한다.\n원의 중심과 접선 사이의 거리 이용\n접선의 기울기를 m이라 하고, 점 (a, b)를 지나는 접선의 방정식을 세운 후, 원의 중심과 접선 사이의 거리가 반지름의 길이와 같음을 이용한다.\n판별식 이용\n접선의 기울기를 m이라 하고, 점 (a, b)를 지나는 접선의 방정식을 세운 후, 원의 방정식과 접선의 방정식을 연립하여 얻은 이차방정식의 판별식 D가 D = 0임을 이용한다."},"Class/공통-수학/이차-방정식의-판별식":{"slug":"Class/공통-수학/이차-방정식의-판별식","filePath":"Class/공통 수학/이차 방정식의 판별식.md","title":"이차 방정식의 판별식","links":[],"tags":["방정식","근"],"content":"이차방정식의 판별식\n계수가 실수인 이차방정식 ax^2 + bx + c = 0의 근은\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n이므로 근호 안의 식 b^2 - 4ac의 부호에 따라 주어진 방정식의 근이 실근인지 허근인지 결정된다. 이와 같이 b^2 - 4ac의 부호에 따라 이 이차방정식의 근을 판별할 수 있으므로\nb^2 - 4ac\n를 이차방정식의 판별식이라 하고, 이것을 기호 D로 나타낸다.\n\nD는 판별식을 뜻하는 Discriminant의 첫 글자를 딴 것이다.\n\n이차방정식의 근의 판별\n계수가 실수인 이차방정식 ax^2 + bx + c = 0에서 D = b^2 - 4ac라 하면 다음이 성립한다.\n\nD &gt; 0 \\iff 서로 다른 두 실근을 갖는다.\nD = 0 \\iff 중근(서로 같은 두 실근)을 갖는다.\nD &lt; 0 \\iff 서로 다른 두 허근을 갖는다.\n\n\nD \\ge 0이면 \\sqrt{D}는 실수이고, D &lt; 0이면 \\sqrt{D}는 허수이다.\n\n이차식이 완전제곱식이 되도록 하는 조건\n이차식 ax^2 + bx + c가 완전제곱식이 되도록 하는 조건을 알아보자. 이차식 ax^2 + bx + c에서\nax^2 + bx + c = a \\left( x + \\frac{b}{2a} \\right)^2 - \\frac{b^2 - 4ac}{4a}\n이므로 ax^2 + bx + c가 완전제곱식이 되려면\n-\\frac{b^2 - 4ac}{4a} = 0\n즉, b^2 - 4ac = 0 이어야 한다.\n거꾸로 이차식 ax^2 + bx + c에서 b^2 - 4ac = 0이면\nax^2 + bx + c = a \\left( x + \\frac{b}{2a} \\right)^2 - \\frac{b^2 - 4ac}{4a} = a \\left( x + \\frac{b}{2a} \\right)^2\n이므로 ax^2 + bx + c는 완전제곱식이다.\n\n이차식 ax^2 + bx + c가 완전제곱식\n\\iff 이차방정식 ax^2 + bx + c = 0이 중근을 갖는다.\n\\iff D = b^2 - 4ac = 0\n\n계수가 허수인 이차방정식의 근의 판별\n판별식으로 이차방정식의 근을 판별하는 것은 계수가 모두 실수일 때에만 가능하다. 근의 공식을 이용하여 이차방정식 ax^2 + bx + c = 0의 근을 구하면 다음과 같다.\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n이차방정식 ax^2 + bx + c = 0의 판별식 D = b^2 - 4ac에 대하여 D &gt; 0이라 하자.\n(i) a, b, c가 모두 실수이면 \\sqrt{D}의 값이 실수가 되므로 이차방정식이 서로 다른 두 실근을 갖는다.\n(ii) a, c가 실수이고 b가 허수이면 \\sqrt{D}의 값이 허수가 된다. 즉, 이차방정식의 계수가 허수일 때에는 D &gt; 0이지만 서로 다른 두 허근을 가질 수도 있다.\n예를 들어 이차방정식 x^2 - 3ix - 3 = 0 (i = \\sqrt{-1})의 판별식을 D&#039;이라 하면\nD&#039; = (-3i)^2 - 4 \\cdot 1 \\cdot (-3) = 9 - (-12) = 3&gt;0\n그런데 근의 공식을 이용하면\nx = \\frac{-(-3i) \\pm \\sqrt{(-3i)^2 - 4 \\cdot 1 \\cdot (-3)}}{2 \\cdot 1} = \\frac{3i \\pm \\sqrt{3}}{2}\n즉, D&#039; &gt; 0이지만 이차방정식 x^2 - 3ix - 3 = 0은 서로 다른 두 허근을 갖는다.\n한편 D = 0인 경우에는 계수가 허수일 때에도 이차방정식이 서로 같은 두 근을 갖는다. 그러나 그 근이 반드시 실근이라고 말할 수는 없다.\n예를 들어 이차방정식 x^2 + 2ix - 1 = 0의 판별식을 D&#039;&#039;이라 하면\nD&#039;&#039; = (2i)^2 - 4 \\cdot 1 \\cdot (-1) = -4 + 4 = 0\n그런데 근의 공식을 이용하면\nx = \\frac{-2i \\pm \\sqrt{0}}{2 \\cdot 1} = -i\n즉, D&#039;&#039; = 0이지만 이차방정식 x^2 + 2ix - 1 = 0은 서로 같은 두 허근을 갖는다.\n이와 같이 계수가 허수인 이차방정식의 근은 판별식으로는 판별할 수 없다."},"Class/공통-수학/이차함수의-최대,-최소":{"slug":"Class/공통-수학/이차함수의-최대,-최소","filePath":"Class/공통 수학/이차함수의 최대, 최소.md","title":"이차함수의 최대, 최소","links":[],"tags":[],"content":"완전제곱식 또는 판별식을 이용한 이차함수의 최대, 최소\n이차함수의 최대, 최소를 구하는 두 가지 방법을 알아보고, 이것을 이용하여 이차식 f(x, y)의 최대, 최소와 이차방정식 f(x, y) = 0을 만족시키는 실수 x 또는 y의 최대, 최소를 구하는 방법을 알아보자.\n완전제곱식을 이용한 최대, 최소\n이차함수 y = ax^2 + bx + c의 최대, 최소는 함수를 y = a(x - p)^2 + q 꼴로 변형한 후, (실수) \\ge 0임을 이용하여 구할 수 있다. 예를 들어 이차함수 y = x^2 - 4x + 1 = (x - 2)^2 - 3에서 (x - 2)^2 \\ge 0이므로 y는 x = 2에서 최소값 -3을 갖는다. 이와 같은 방법으로 실수 x, y에 대한 이차식 f(x, y)의 최댓값 또는 최소값은 다음과 같이 구할 수 있다.\nx, y에 대한 이차식 f(x, y)가 x, y에 대한 완전제곱식을 포함한 꼴, 즉\nf(x, y) = a(x - l)^2 + b(y - m)^2 + k \\quad (a, b, l, m, k\\text{는 상수})\n꼴로 변형되면 (실수) \\ge 0임을 이용한다.\n판별식을 이용한 최대, 최소\n이차함수 y = ax^2 + bx + c의 식을 완전제곱식을 포함한 꼴로 변형하지 않고, x, y가 실수임을 이용하여 다음과 같이 최대, 최소를 구할 수도 있다. 예를 들어 y = x^2 - 4x + 1을 x = 0에 대하여 내림차순으로 정리하면\nx^2 - 4x + 1 -y= 0\n이 식을 x에 대한 이차방정식으로 보면 x는 실수이므로 이차방정식이 실근을 가져야 한다. 즉, 판별식을 D라 할 때,\n\\frac{D}{4} = (-2)^2 - (1-y) \\ge 0 \\Rightarrow y \\ge -3\n따라서 y의 최솟값은 -3이다. 이때 x의 값은 y = -3을 (x - 3)에 대입하여 구할 수 있다. 이와 같은 방법으로 이차방정식 f(x, y) = 0을 만족시키는 실수 y의 최대, 최소는 다음과 같이 구할 수 있다.\n\ny의 최댓값 또는 최솟값을 구할 때, f(x, y) = 0을 x에 대한 이차방정식으로 정리되면 이 이차방정식이 실근을 가짐을 이용한다. 즉, (판별식) \\ge 0임을 이용한다.\n\n이차방정식 f(x,~y) = 0을 만족시키는 실수 x의 최대, 최소도 같은 방법으로 구할 수 있다."},"Class/공통-수학/점-대칭,-선-대칭":{"slug":"Class/공통-수학/점-대칭,-선-대칭","filePath":"Class/공통 수학/점 대칭, 선 대칭.md","title":"점 대칭, 선 대칭","links":[],"tags":["점","대칭","이동","직선"],"content":"점에 대한 대칭이동\n점 P(x, y)를 점 A(a, b)에 대하여 대칭이동한 점을 P&#039;(x&#039;, y&#039;)이라 하면 점 A에서 두 점 P, P&#039;에 이르는 거리가 서로 같으므로 점 A는 선분 PP&#039;의 중점이 된다.\na = \\frac{x + x&#039;}{2}, \\quad b = \\frac{y + y&#039;}{2}\n즉, x&#039; = 2a - x, y&#039; = 2b - y이므로 점 P(x, y)를 점 A(a, b)에 대하여 대칭이동한 점은 P&#039;(2a - x, 2b - y)이다.\n또 도형 f(x, y) = 0 위의 임의의 점 P(x, y)를 점 A(a, b)에 대하여 대칭이동한 점을 P&#039;(x&#039;, y&#039;)이라 하면\nx&#039; = 2a - x, \\quad y&#039; = 2b - y\n이것을 f(x, y) = 0에 대입하면\nf(2a - x, 2b - y) = 0\n따라서 점 P&#039;(x&#039;, y&#039;)은 도형 f(2a - x, 2b - y) = 0 위의 점이므로 도형 f(x, y) = 0을 점 A(a, b)에 대하여 대칭이동한 도형의 방정식은 f(2a - x, 2b - y) = 0임을 알 수 있다.\n\n점 (x, y)를 점 (a, b)에 대하여 대칭이동하면\n\n(x&#039;, y&#039;) = (2a - x, 2b - y)\n\n도형 f(x, y) = 0을 점 (a, b)에 대하여 대칭이동하면\n\nf(x, y) = 0 \\Rightarrow f(2a - x, 2b - y) = 0\n\n점대칭이동은 선대칭이동과 동일하다. 즉, 점 (a, b)에 대한 대칭이동은 직선 x = a, y = b에 대한 대칭이동과 직선 y = b에 대한 대칭이동을 거듭한 것과 같다. 참고로 직선 x = a에 대한 대칭이동은 (x, y) \\rightarrow (2a - x, y), 직선 y = b에 대한 대칭이동은 (x, y) \\rightarrow (x, 2b - y)이다.\n\n직선에 대한 대칭이동\n점 P(x, y)를 직선 l: ax + by + c = 0에 대하여 대칭이동한 점을 P&#039;(x&#039;, y&#039;)이라 하고, PP&#039;와 직선 l의 교점을 M이라 하면 직선 l은 PP&#039;의 수직이등분선이므로 PM = P&#039;M, PP&#039; \\perp l이다. 즉 점 P&#039;의 좌표는 다음의 두 조건을 이용하여 구할 수 있다.\n\n중점 조건: PP&#039;의 중점 \\left( \\frac{x + x&#039;}{2}, \\frac{y + y&#039;}{2} \\right)이 직선 l 위의 점이다.\n\na \\cdot \\frac{x + x&#039;}{2} + b \\cdot \\frac{y + y&#039;}{2} + c = 0\n\n수직 조건: 직선 PP&#039;과 직선 l은 서로 수직이다.\n\n\\frac{y&#039; - y}{x&#039; - x} \\cdot \\left( -\\frac{a}{b} \\right) = -1\n직선에 대하여 대칭이동한 도형의 방정식을 구할 때에도 같은 방법을 이용한다. 즉 도형 f(x, y) = 0 위의 임의의 점 P(x, y)를 직선에 대하여 대칭이동한 점의 좌표를 P&#039;(x&#039;, y&#039;)으로 놓고, 위의 방법을 이용하면 된다.\n일반적으로 기울기가 1 또는 -1인 직선에 대하여 대칭이동한 도형의 방정식은 다음과 같다.\n\n직선 y = x + a에 대한 대칭이동은\n\nf(x, y) = 0 \\Rightarrow f(y - a, x + a) = 0\n\n직선 y = -x + a에 대한 대칭이동은\n\nf(x, y) = 0 \\Rightarrow f(a - y, a - x) = 0"},"Class/공통-수학/좌표평면-위의-삼각형의-넓이":{"slug":"Class/공통-수학/좌표평면-위의-삼각형의-넓이","filePath":"Class/공통 수학/좌표평면 위의 삼각형의 넓이.md","title":"좌표평면 위의 삼각형의 넓이","links":[],"tags":[],"content":"점과 직선 사이의 거리 공식을 이용하면 좌표평면 위에서 세 꼭짓점의 좌표가 주어진 삼각형의 넓이를 구할 수 있다.\n오른쪽 그림과 같이 세 점 O(0, 0), A(x_1, y_1), B(x_2, y_2)를 꼭짓점으로 하는 삼각형 OAB에서\nAB = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}\n직선 AB의 방정식은\ny - y_1 = \\frac{y_2 - y_1}{x_2 - x_1} (x - x_1)\n이므로\n\\begin{align*}\n&amp;(y_2 - y_1)(x - x_1) = (y - y_1)(x_2 - x_1)\\\\\n\\Rightarrow ~&amp;(y_2 - y_1)x - (x_2 - x_1)y = x_1 y_2 - x_2 y_1\n\\end{align*}\n한편 원점 O에서 직선 AB에 내린 수선의 발을 H라 하면 삼각형 OAB의 높이, 즉 OH의 길이는 원점 O와 직선 AB 사이의 거리이므로\nOH = \\frac{|x_1 y_2 - x_2 y_1|}{\\sqrt{(y_2 - y_1)^2 + (x_2 - x_1)^2}}\n따라서 삼각형 OAB의 넓이를 S라 하면 다음이 성립한다.\nS = \\frac{1}{2} \\cdot AB \\cdot OH = \\frac{1}{2} |x_1 y_2 - x_2 y_1|\n\n(x_1, y_1), (x_2, y_2) 절댓값이므로 뺄셈 순서는 상관없다.\n\n위의 공식을 이용하여 원점 O와 두 점 A(3, -4), B(4, 4)를 꼭짓점으로 하는 삼각형 OAB의 넓이를 구해 보면\n\\triangle OAB = \\frac{1}{2} |3 \\cdot 4 - (-4) \\cdot 4| = \\frac{1}{2} |12 + 16| = \\frac{1}{2} \\cdot 28 = 14\n이고, 이는 점과 직선 사이의 거리 공식을 이용하여 구한 삼각형의 넓이와 서로 같음을 확인할 수 있다.\n\n세 점 (x_1, y_1), (x_2, y_2), (x_3, y_3)을 꼭짓점으로 하는 삼각형 ABC의 넓이는 한 꼭짓점이 원점이 되도록 삼각형을 평행이동한 후 공식을 적용하여 구할 수 있다.\n"},"Class/공통-수학/특수한-형태의-유리식의-계산":{"slug":"Class/공통-수학/특수한-형태의-유리식의-계산","filePath":"Class/공통 수학/특수한 형태의 유리식의 계산.md","title":"특수한 형태의 유리식의 계산","links":[],"tags":["분모","유리"],"content":"복잡한 유리식의 계산은 유리식의 연산 방법을 바로 적용하는 것보다 유리식의 꼴에 따라 다음과 같이 간단히 변형한 후 계산하는 것이 편리하다.\n1. (분자의 차수) ≥ (분모의 차수)일 때\n분자의 차수가 분모의 차수보다 크거나 같은 유리식의 계산은 유리식의 분자를 분모로 나누어 (분자의 차수) &lt; (분모의 차수)가 되도록 변형한 후 계산한다.\n\\frac{x+2}{x} + \\frac{x+1}{x-2} = \\left(1 + \\frac{2}{x}\\right) + \\left(1 + \\frac{3}{x-2}\\right)\n2. 네 개 이상의 유리식의 합, 차를 구할 때\n네 개 이상의 유리식의 계산은 계산 과정이 간단해지도록 적당히 두 개씩 묶어서 계산한다.\n\\begin{align*}\n\\frac{1}{x} + \\frac{1}{x+1} - \\frac{1}{x+2} + \\frac{1}{x+3} &amp;= \\left(\\frac{1}{x} - \\frac{1}{x+2}\\right) + \\left(\\frac{1}{x+1} - \\frac{1}{x+3}\\right)\\\\\n&amp;= \\frac{2}{x(x+2)} + \\frac{2}{(x+1)(x+3)} \n\\end{align*}\n3. 분모가 두 개 이상의 인수의 곱일 때\n분모가 두 개 이상의 인수의 곱이면 다음과 같이 부분 분수로 변형한다.\n\\begin{gather*}\n\\frac{1}{AB} = \\frac{1}{B-A}\\left(\\frac{1}{A} - \\frac{1}{B}\\right)(A \\ne B)\\\\\n\\\\\n\n\\frac{1}{ABC} = \\frac{1}{C-A}\\left(\\frac{1}{AB} - \\frac{1}{BC}\\right)(A \\ne C) \n\\end{gather*}\n4. 분자 또는 분모가 분수식일 때\n분자 또는 분모가 분수식이면 다음과 같이 분자에 분모의 역수를 곱하여 계산한다.\n\\frac{\\frac{A}{B}}{\\frac{C}{D}} = \\frac{A}{B} \\div \\frac{C}{D}= \\frac{A}{B} \\times \\frac{D}{C}=\\frac{AD}{BC}\n5. x^n + \\frac{1}{x^n}의 값을 구할 때\n등식 x^2 + ax + 1 = 0 또는 x^2 + ax - 1 = 0이 주어질 때, x^n + \\frac{1}{x^n} (n은 자연수)의 값은 등식의 양변을 x로 나누어 x + \\frac{1}{x} 또는 x - \\frac{1}{x}의 값을 구한 후, 다음과 같이 곱셈 공식의 변형을 이용한다.\n\\begin{align*}\nx^2 + \\frac{1}{x^2} &amp;= \\left(x + \\frac{1}{x}\\right)^2 - 2 \\\\\n&amp;= \\left(x - \\frac{1}{x}\\right)^2 + 2\\\\\nx^3 + \\frac{1}{x^3} &amp;= \\left(x + \\frac{1}{x}\\right)^3 - 3\\left(x + \\frac{1}{x}\\right)\n\\\\\nx^3 - \\frac{1}{x^3} &amp;= \\left(x - \\frac{1}{x}\\right)^3 + 3\\left(x - \\frac{1}{x}\\right)\\end{align*}\n6. 유리함수의 역함수\n유리함수\ny = \\frac{ax + b}{cx + d}\n의 역함수는\ny = \\frac{-dx + b}{cx - a}\n\n유리함수 y = \\frac{ax + b}{cx + d}의 역함수 y = \\frac{-dx + b}{cx - a}는 원래 함수식에서 분자의 x의 계수인 a와 분모의 상수항인 d의 위치가 서로 바뀌고, 그 부호가 각각 바뀐 것과 같다.\n"},"Class/기하/삼각형의-넓이":{"slug":"Class/기하/삼각형의-넓이","filePath":"Class/기하/삼각형의 넓이.md","title":"삼각형의 넓이","links":[],"tags":["삼각형","넓이"],"content":"기본 공식\n\n세 변의 길이가 주어진 삼각형의 넓이\n\n코사인 법칙을 이용하여 \\theta를 구한 후 기본공식을 사용한다.\n\n\nc^2=a^2+b^2-2ab \\cos \\theta\n\n\n헤론의 공식1\n\n\ns=\\frac{a+b+c}{2}라 할 때, S = \\sqrt{s(s-a)(s-b)(s-c)}\n\n원과 삼각형의 넓이2\n\n좌표 위의 도형의 넓이\n세 점의 좌표가 주어진 경우 흔히 신발끈 공식3이라 불리는 공식을 이용할 수 있다.\n\\begin{align*}\nS =&amp; \\frac{1}{2} \\left| \\begin{array}{ccccc} x_1 &amp; x_2 &amp; x_3 &amp; x_1 \\\\ y_1 &amp; y_2 &amp; y_3 &amp; y_1 \\end{array} \\right|\\\\\n=&amp;\\frac{1}{2} \\left| (x_1y_2 + x_2y_3 + x_3y_1) - (x_2y_1 + x_3y_2 + x_1y_3) \\right|\n\\end{align*}\n이때, 점 (x_1, ~y_1)이 원점인 경우, 계산식이 매우 간단해진다.\nS = \\frac{1}{2} \\left \\vert x_2 y_3 - y_2 x_3 \\right\\vert\n그러므로, 세 점이 주어졌을 때, 평행이동으로 한 점을 원점으로 옮긴 후 넓이를 구하면 편하다.4 또한 모든 점의 좌표를 알고 있으므로, 벡터의 내적5을 이용하여 끼인각을 구하는 방법도 고려해보자.\n\n만약 세 점의 좌표가 모두 정수로만 이루어져 있다면 Pick의 법칙6에 의해 S = I + \\frac{B}{2} - 1로 넓이를 구할 수 있다.(I는 다각형 내부에 있는 격자점의 수, B는 다각형 변 위에 있는 격자점의 수) 앞선 공식들은 삼각형 뿐만 아니라 일반적인 다각형으로 확장할 수 있다.\nFootnotes\n\n\n삼각형의 높이 h = b \\sin C라 하자. 삼각함수의 성질에 의해 \\sin^2 C = 1 - \\cos^2 C이고, 코사인 법칙에 의해 \\cos C = \\frac{a^2 + b^2 - c^2}{2ab}이므로, \\sin C = \\frac{\\sqrt{4a^2b^2 - (a^2 + b^2 - c^2)^2}}{2ab}이다. 따라서 삼각형의 넓이 S=\\frac{1}{2} ab \\sin C =\\frac{1}{4} \\sqrt{4a^2b^2 - (a^2 + b^2 - c^2)^2}이다. 이때, s = \\frac{a + b + c}{2}라 하면, S = \\sqrt{s(s-a)(s-b)(s-c)}로 정리할 수 있다. ↩\n\n\n삼각형 ABC의 외접원의 반지름을 R이라 하면, 사인법칙에 의해 \\frac{a}{\\sin A} = \\frac{b}{\\sin B} = \\frac{c}{\\sin C} = 2R이다. S = \\frac{1}{2}ab\\sin C에서 \\sin C = \\frac{c}{2R}이므로, S = \\frac{abc}{4R}이다. ↩\n\n\n삼각형 (x_1, y_1), (x_2, y_2), (x_3, y_3)을 포함하는 사다리꼴 3개를 생각하자. (사다리꼴 T_1: (x_1, 0), (x_2, 0), (x_2, y_2), (x_1, y_1), 사다리꼴 T_2: (x_2, 0), (x_3, 0), (x_3, y_3), (x_2, y_2), 사다리꼴 T_3: (x_3, 0), (x_1, 0), (x_1, y_1), (x_3, y_3)) 각 사다리꼴의 넓이는 S_{T_1} = \\frac{1}{2} \\left( x_2 - x_1 \\right) \\left( y_1 + y_2 \\right), S_{T_2} = \\frac{1}{2} \\left( x_3 - x_2 \\right) \\left( y_2 + y_3 \\right), S_{T_3} = \\frac{1}{2} \\left( x_1 - x_3 \\right) \\left( y_3 + y_1 \\right)이다. 삼각형은 이 넓이의 합에서 중복된 영역이므로, S = |S_{T_2} +S_{T_3}-S_{T_1}|이다. 따라서 각 식을 전개하여 정리하면, S= \\frac{1}{2} \\left| x_1 y_2 + x_2 y_3 + x_3 y_1 - y_1 x_2 - y_2 x_3 - y_3 x_1 \\right|이다. 이는 벡터의 외적을 이용하여 구할 수도 있다. ↩\n\n\n\\det A = \\det \\begin{bmatrix} u \\\\ v \\end{bmatrix} = \\det \\begin{bmatrix} x_2 &amp; y_2 \\\\ x_3 &amp; y_3 \\end{bmatrix} = x_2 y_3 - y_2 x_3이다. 2차 정사각행렬의 행렬식의 크기는 두 벡터로 이루어진 평행사변형의 넓이와 같다. (3차 정사각행렬의 행렬의 행렬식의 크기는 세 벡터로 이루어진 평행육면체의 부피와 같다.) ↩\n\n\n두 벡터 \\vec{a} = (a_1, a_2)와 \\vec{b} = (b_1, b_2)의 내적은 \\vec{a} \\cdot \\vec{b} = a_1 a_2 + b_1 b_2와 같이 정의된다. 내적은 스칼라 값을 가지며, 두 벡터의 성분을 곱한 후 합을 구한다. 벡터의 내적은 \\vec{a} \\cdot \\vec{b} = |\\vec{a}| |\\vec{b}| \\cos \\theta와 같은 성질을 갖고 있다. |\\vec{a}|와 |\\vec{b}|는 각각 벡터 \\vec{a}와 \\vec{b}의 크기(길이)이며, \\theta는 두 벡터 사이의 각이다. 벡터의 크기는 |\\vec{A}| = \\sqrt{a_1^{~2} + a_2^{~2}}, |\\vec{B}| = \\sqrt{b_1^{~2} + b_2^{~2}}로 정의한다. 이를 이용해 각을 구하면 \\cos \\theta = \\frac{\\vec{a} ~\\cdot ~\\vec{b}}{|\\vec{a}| |\\vec{b}|}이다. ↩\n\n\n픽의 법칙의 증명은 신발끈 공식을 응용해서 증명할 수 있다. 증명 아이디어를 간략히 보면, 내부 격자점 하나는 전체 넓이에 1의 단위 넓이를 기여한다. 변 위의 격자점은 두 삼각형의 일부로 간주되므로, 각 변 위의 격자점은 \\frac{1}{2}단위 넓이를 기여한다. 삼각형이 기본 도형으로 분해될 때, 중복으로 계산된 넓이를 조정하기 위해 1을 빼준다. ↩\n\n\n"},"Class/기하/알아두면-좋은-기하-성질":{"slug":"Class/기하/알아두면-좋은-기하-성질","filePath":"Class/기하/알아두면 좋은 기하 성질.md","title":"알아두면 좋은 기하 성질","links":[],"tags":[],"content":"평행사변형 법칙(Parallelogram low)\n평행사변형의 두 대각선의 길이를 각각 제곱해서 더한 값은 둘레의 각 변의 길이를 각각 제곱해서 더한값과 같다.12\n| x+y |^2 + | x - y |^2 = 2 | x |^2 + 2 | y |^2\n피타고라스 정리는 이 정리의 특수한 경우이다.\n수정사항을 바로 반영 하는가?\nFootnotes\n\n\n내적공간에서는 등호가 성립하지만, 일반적인 노름 공간에서는 | x+y |^2 + | x - y |^2 \\leq 2 | x |^2 + 2 | y |^2가 성립한다. ↩\n\n\n조던(Jordan)- 폰 노이만(von Neumann)정리에 따르면, 평행사변형 법칙을 만족하는 노름이 존재하면, 반드시 내적(inner product)이 존재하고, 이 노름은 그 내적에서 유도될 수 있다. \\langle x, y \\rangle = \\frac{1}{4} \\left( \\|x + y\\|^2 - \\|x - y\\|^2 \\right) ↩\n\n\n"},"Class/대수/무제":{"slug":"Class/대수/무제","filePath":"Class/대수/무제.md","title":"무제","links":[],"tags":[],"content":"a^n := \\prod_{k=1}^{n} a \nn! := \\prod_{k=1}^{n} k "},"Class/대수/복소수(Complex-number)":{"slug":"Class/대수/복소수(Complex-number)","filePath":"Class/대수/복소수(Complex number).md","title":"복소수(Complex number)","links":[],"tags":[],"content":"대수학에서는 실수체 만으로 이론을 전개하기 어려울 때가 많다. 예를 들어, x^2 + 1 = 0처럼 실수 계수를 갖는 다항식 중에서 실수 범위에서 해를 갖지 않는 경우가 있기 때문이다. 이러한 이유로, 모든 비영(非零)차수의 다항식이 그 계수를 가진 집합에서 해를 갖도록 하는 확장이 필요하다. 즉, 실수의 집합을 확장하여 이러한 조건을 만족하는 새로운 수 체계를 구축할 수 있다.\n복소수(Complex number)\n복소수(Complex number)는 다음과 같은 꼴의 표현을 갖는 수이다.\nz = a + bi\n여기서 a, b는 실수이며, 각각 실수 부분(real part)과 허수 부분(imaginary part)이라고 부른다.\n복소수의 덧셈과 곱셈\n복소수 z = a + bi와 w = c + di에 대해, 두 복소수의 합(Sum)과 곱(Product)은 각각 다음과 같이 정의된다.\n\n덧셈 (Addition)\n\nz + w = (a + bi)+ (c + di)= (a + c)+ (b + d)i\n\n곱셈 (Multiplication)\n\nzw = (a + bi)(c + di)= (ac - bd)+ (bc + ad)i\n실수를 복소수로 확장하기\n어떤 실수 c도 복소수로 간주할 수 있다. 즉, c를 복소수 c + 0i와 동일한 것으로 보면, 실수의 연산이 복소수의 연산과 자연스럽게 일치함을 확인할 수 있다.\n\\begin{gather*}\n(c + 0i)+ (d + 0i)= (c + d)+ 0i \\\\\\\\\n(c + 0i)(d + 0i)= cd + 0i\n\\end{gather*}\n따라서, 실수의 덧셈과 곱셈은 복소수의 덧셈과 곱셈의 특수한 경우로 볼 수 있다.\n허수의 정의\nbi = 0 + bi 형태의 복소수를 허수(imaginary number)라고 한다. 이때, b는 0이 아닌 실수이다. 두 허수의 곱은 실수가 됨을 보이자.\n(bi)(di)= (0 + bi)(0 + di)= (0 - bd)+ (b\\cdot 0 + 0\\cdot d)i = -bd\n특히, 허수 단위 i에 대해\ni \\cdot i = -1\n이는 복소수 곱셈의 정의를 기억하는 중요한 성질이 된다.\n즉, 복소수를 곱할 때 일반적인 다항식 전개처럼 계산하고,\ni^2 = -1로 대체하면 된다.\n덧셈과 곱셈에 대한 항등원\n\n덧셈 항등원 : 복소수에서 0은 덧셈 항등원(identity)역할을 한다.\n\n(a + bi)+ 0 = (a + bi)+ (0 + 0i)= (a+0)+ (b+0)i = a + bi.\n\n곱셈 항등원 : 복소수에서 1은 곱셈 항등원 역할을 한다.\n\n(a + bi)\\cdot 1 = (a + bi)(1 + 0i)= (a\\cdot1 - b\\cdot0)+ (b\\cdot1 + a\\cdot0)i = a + bi.\n복소수의 덧셈 역원과 곱셈 역원\n\n덧셈 역원 : 복소수 a + bi의 덧셈 역원은 -a - bi이다.\n\n(a + bi)+ (-a - bi)= 0.\n\n곱셈 역원 : 0이 아닌 복소수 a + bi의 곱셈 역원은 다음과 같이 주어진다.\n\n(a + bi)^{-1} = \\frac{a}{a^2 + b^2} - \\frac{b}{a^2 + b^2} i.\n복소수의 역수를 구하려면 켤레 복소수를 이용하여 분모를 실수로 만들면 된다.\n결국 복소수는 덧셈, 곱셈, 뺄셈, 나눗셈에 대해 닫혀 있으며, 교환법칙, 결합법칙, 분배법칙이 성립하므로 체(Field)를 만족한다.\n복소수의 켤레 (Complex Conjugate)\n복소수 a + bi의 켤레 복소수(complex conjugate)는 a - bi이다. 복소수 z의 켤레는 \\overline{z}로 표기한다.\n켤레 복소수의 성질\n복소수 z, w에 대해 다음 성질들이 성립한다.\n\n켤레 연산의 자기역성(Self-involution)\n\n\\overline{\\overline{z}} = z\n\n덧셈에 대한 성질1\n\n\\overline{z + w} = \\overline{z} + \\overline{w}\n\n곱셈에 대한 성질2\n\n\\overline{zw} = \\overline{z} \\cdot \\overline{w}\n\n나눗셈에 대한 성질 (단, w \\neq 0)3\n\n\\overline{\\left(\\frac{z}{w}\\right)} = \\frac{\\overline{z}}{\\overline{w}}\n\nz가 실수일 필요충분 조건\n\nz \\text{가 실수} \\iff \\overline{z} = z\n켤레 복소수와 절댓값\n어떤 복소수 z = a + bi에 대해, z \\overline{z}는 항상 실수이고 0이상이다.\n\\begin{align*}\nz \\overline{z} &amp;= (a + bi)(a - bi)\\\\\n&amp;= a^2 - abi + abi - b^2i^2\\\\\n&amp;= a^2 + b^2\n\\end{align*}\n복소수의 절댓값 (Absolute Value)\n복소수 z = a + bi의 절댓값(absolute value)또는 법(modulus)은 다음과 같이 정의된다.\n|z| = \\sqrt{a^2 + b^2}\nz의 절댓값을 \\vert z \\vert라 표기한다. z\\overline{z} = \\vert z \\vert^2임을 기억하자. 복소수와 켤레복소수이 곱이 실수임을 이용하면 복소수의 나눗셈을 쉽게할 수 있다. 복소수 z = a + bi, w = c + di에 대해 w \\neq 0일 때, 복소수의 나눗셈은 다음과 같이 정의된다.\n\\frac{a + bi}{c + di} = \\frac{(a + bi)(c - di)}{(c + di)(c - di)} = \\frac{(ac+bd) + (bc -ad)i}{c^2 + d^2} = \\frac{ac + bd}{c^2 + d^2} + \\frac{bc - ad}{c^2 + d^2} i\n\n복소수 절댓값의 성질\n\n곱셈에 대한 성질4\n\n|zw| = |z| \\cdot |w|\n\n나눗셈에 대한 성질 (단, w \\neq 0)5\n\n\\left| \\frac{z}{w} \\right| = \\frac{|z|}{|w|}\n\n삼각 부등식 (Triangle Inequality)6\n\n|z + w| \\leq |z| + |w|\n\n절댓값 차에 대한 부등식7\n\n||z| - |w|| \\leq |z + w|\n복소수의 기하학적 표현 (Geometric Representation of Complex Numbers)\n복소수는 대수적 표현뿐만 아니라 기하학적 표현도 가질 수 있다. 즉, 복소수 z = a + bi는 복소수 평면(complex plane)에서 한 점으로 표현할 수 있다.\n![[CleanShot 2025-02-21 at 17.53.51@2x.png]]\n\n복소수의 실수부(real part)a는 실수 축(real axis)에서의 좌표이다.\n복소수의 허수부(imaginary part)b는 허수 축(imaginary axis)에서의 좌표이다.\n절댓값 |z|는 원점에서 해당 점까지의 벡터의 길이를 나타낸다.\n복소수 덧셈은 평행사변형 법칙(parallelogram law)을 이용해 해석할 수 있다.\n\n오일러 공식과 극형식 (Euler’s Formula and Polar Form)\n복소수를 극좌표계에서 표현할 수도 있다. 특히, 오일러 공식(Euler’s formula)은 다음과 같이 주어진다.\ne^{i\\theta} = \\cos\\theta + i\\sin\\theta\n이로 인해, 복소수 z를 다음과 같은 극형식으로 나타낼 수 있다.\nz = |z| e^{i\\phi}\n여기서 \\phi는 복소수 z가 양의 실수 축(positive real axis)과 이루는 각도이다.\n복소수 곱셈의 기하학적 의미\n두 복소수 z와 w를 극형식으로 표현하면,\nz = |z| e^{i\\theta}, \\quad w = |w| e^{i\\omega}\n이제, 곱셈을 수행하면\nzw = (|z| e^{i\\theta})(|w| e^{i\\omega})\n곱셈 성질을 이용하여 정리하면,\nzw = |z| |w| e^{i(\\theta + \\omega)}\n즉, 복소수의 곱셈은 길이의 곱과 각도의 합으로 해석된다.\n\n길이(절댓값): |zw| = |z| |w|.\n각도(위상): zw는 z와 w의 각도를 더한 방향을 가진다.\n\n이 기하학적 해석은 회전 변환(rotation transformation)을 설명하는 데 유용하며, 신호 처리, 양자 역학, 공학 등 다양한 분야에서 중요한 역할을 한다.\nFootnotes\n\n\nz + w = (a + bi)+ (c + di)= (a + c)+ (b + d)i이므로, \\overline{z + w} = (a + c)- (b + d)i = (a - bi)+ (c - di) =  \\overline{z} + \\overline{w} ↩\n\n\nzw = (a + bi)(c + di)= ac - bd + (ad + bc)i이므로, \\overline{zw} = (ac - bd)- (ad + bc)i이다. \\overline{z} \\cdot \\overline{w} = (a - bi)(c - di)= ac - bd - (ad + bc)i이다. 따라서 \\overline{zw} = \\overline{z} \\cdot \\overline{w} ↩\n\n\n\\overline{\\frac{1}{z}} = \\frac{1}{\\overline{z}}임을 보이면 충분하다. \\overline{\\frac{1}{z}} = \\overline{\\frac{1}{a+bi}} = \\overline{\\frac{a-bi}{a^2 + b^2}} = {\\frac{a+bi}{a^2 + b^2}}이고, \\frac{1}{\\overline{z}} = \\frac{1}{\\overline{a+bi}} = \\frac{1}{a-bi} = {\\frac{a+bi}{a^2 + b^2}}이다. 따라서 \\overline{\\frac{1}{z}} = \\frac{1}{\\overline{z}}이다.(또는 z\\overline{z} = \\vert z \\vert^2이므로, \\overline{\\frac{1}{z}} = \\overline{\\frac{\\overline{z}}{\\vert z \\vert^2}} = {\\frac{{z}}{\\vert z \\vert^2}} =\\frac{1}{\\overline{z}}) 켤레 곱셈의 성질에 의해 \\overline{\\left(\\frac{z}{w}\\right)} = \\frac{\\overline{z}}{\\overline{w}}이다. ↩\n\n\n|zw|^2 = (zw)(\\overline{zw})= (zw)(\\overline{z} \\cdot \\overline{w})= (z\\overline{z})(w\\overline{w})= |z|^2 |w|^2 이므로, |zw| = |z| \\cdot |w|이다. ↩\n\n\n\\left| \\frac{z}{w} \\right|^2 = \\left| z w^{-1} \\right|^2 = |z|^2 |w^{-1}|^2이므로, \\left|\\frac{z}{w} \\right| = \\frac{|z|}{|w|} ↩\n\n\n먼저 임의의 복소수 x = a + bi에 대해, x + \\overline{x} = (a+bi)+ (a-bi)= 2a \\leq 2\\sqrt{a^2 + b^2} = 2|x|이다. 이제 x = w\\overline{z}로 두면, w\\overline{z} + \\overline{w}z \\leq 2|w|\\cdot|z|이다. 따라서, |z + w|^2 = (z + w)(\\overline{z} + \\overline{w})= z\\overline{z} + w\\overline{z} + \\overline{w}z + w\\overline{w}\\leq |z|^2 + 2|z||w| + |w|^2 = (|z| + |w|)^2이므로, |z + w| \\leq |z| + |w|이다. ↩\n\n\n|z| = |(z + w)- w| \\leq |z + w| + |-w| = |z + w| + |w|이므로, |z| - |w| \\leq |z + w|이다. ↩\n\n\n"},"Class/대수/삼각-부등식,-코시-슈바르츠-부등식":{"slug":"Class/대수/삼각-부등식,-코시-슈바르츠-부등식","filePath":"Class/대수/삼각 부등식, 코시 슈바르츠 부등식.md","title":"삼각 부등식(triangle inequality)과 코시 슈바르츠 부등식(Cauchy-Schwarz inequality)","links":[],"tags":[],"content":"벡터의 크기와 내적\n벡터의 크기(길이)는 유클리드 거리 개념을 사용하여 정의한다.\n|\\mathbf{a}| = \\sqrt{a_1^2 + a_2^2 + \\dots + a_n^2}\n벡터의 내적은 다음과 같이 정의한다.\n\\mathbf{a} \\cdot \\mathbf{b} = a_1 b_1 + a_2 b_2 + \\dots + a_n b_n\n코시-슈바르츠 부등식(Cauchy-Schwarz Inequality)\n벡터 \\mathbf{a}, \\mathbf{b} 의 크기와 내적을 사용하여 다음과 같이 정의할 수 있다.1\n|\\mathbf{a} \\cdot \\mathbf{b}| \\leq |\\mathbf{a}| |\\mathbf{b}|\n이 부등식은 두 벡터의 내적은 두 벡터 크기의 곱을 초과할 수 없다는 것을 의미한다.\n증명\n두 벡터 \\mathbf{a}, \\mathbf{b} 사이의 각을 \\theta 라고 하면, 내적의 정의에 의해\n\\mathbf{a} \\cdot \\mathbf{b} = |\\mathbf{a}| |\\mathbf{b}| \\cos\\theta\n여기에 절댓값을 취하면,\n|\\mathbf{a} \\cdot \\mathbf{b}| = |\\mathbf{a}| |\\mathbf{b}| |\\cos\\theta|\n이고, 삼각 함수의 기본 성질에 의해\n|\\cos\\theta| \\leq 1\n이므로,\n\n삼각 부등식(Triangle Inequality)\n삼각 부등식도 벡터의 크기개념을 사용하여 다음과 같이 정의할 수 있다.\n|\\mathbf{a} + \\mathbf{b}| \\leq |\\mathbf{a}| + |\\mathbf{b}|\n이 부등식은 한 벡터의 크기와 다른 벡터의 크기의 합이, 두 벡터를 더한 크기보다 크거나 같다는 것을 의미한다. 삼각형의 두 변의 길이 합이 나머지 한 변보다 크거나 같다 원리다.\n증명\n내적의 정의에 의해,\n|\\mathbf{a} + \\mathbf{b}|^2 = (\\mathbf{a} + \\mathbf{b})\\cdot (\\mathbf{a} + \\mathbf{b})\n이를 전개하면,\n|\\mathbf{a}|^2 + 2 (\\mathbf{a} \\cdot \\mathbf{b})+ |\\mathbf{b}|^2\n코시-슈바르츠 부등식에 의해\n|\\mathbf{a} \\cdot \\mathbf{b}| \\leq |\\mathbf{a}| |\\mathbf{b}|\n이므로,\n|\\mathbf{a} + \\mathbf{b}|^2 \\leq (|\\mathbf{a}| + |\\mathbf{b}|)^2\n양변에 제곱근을 취하면,\n|\\mathbf{a} + \\mathbf{b}| \\leq |\\mathbf{a}| + |\\mathbf{b}| \n\n내적공간(inner product space)\nV 를 체 F 위의 벡터 공간이라고 하자. V 위의 내적(inner product)은 V 의 임의의 벡터 x, y 쌍에 대해 스칼라 값을 부여하는 함수로, \\langle x, y \\rangle 로 표기하며, 다음 조건들을 만족한다.\n\n선형성 (Linear in the first component)\n\n\\langle x + z, y \\rangle = \\langle x, y \\rangle + \\langle z, y \\rangle\n\n스칼라 곱 (Scalar multiplication)\n\n\\langle cx, y \\rangle = c \\langle x, y \\rangle\n\n켤레 대칭성 (Conjugate symmetry)\n\n\\langle x, y \\rangle = \\overline{\\langle y, x \\rangle}\n\n양의 정부호성 (Positive definiteness)\nx \\neq 0 이면,\n\n\\langle x, x \\rangle\n은 양의 실수이다. 만약 F = \\mathbb{R} 이면, 조건 3은 단순히 \\langle x, y \\rangle = \\langle y, x \\rangle 가 된다.\n노름(norm)\n내적 공간(inner product space) V 가 주어졌다고 하자. x \\in V 에 대해, x 의 노름(norm)또는 길이(length)를 다음과 같이 정의한다.\n\\|x\\| = \\sqrt{\\langle x, x \\rangle}\n유클리드 길이\nV = F^n 이라고 하자. x = (a_1, a_2, \\dots, a_n)라면,\n\\| x \\| = \\| (a_1, a_2, \\dots, a_n)\\| = \\left[ \\sum_{i=1}^{n} |a_i|^2 \\right]^{1/2}\n는 유클리드 길이(Euclidean definition of length)의 정의이다. 또한, n = 1 이면, \\| a \\| = |a| 가 성립한다.\n코시 슈바르츠 부등식(Cauchy-Schwarz inequality)\nF-내적공간 V와 임의의 벡터 x, y \\in V, 스칼라 c \\in F 대해\n|\\langle x, y \\rangle| \\leq \\|x\\| \\cdot \\|y\\|\n가 성립한다. 이를 코시 슈바르츠 부등식(Cauchy-Schwarz inequality)이라고 한다.\n증명\ny = 0 이면, 결과는 자명하다. 따라서 y \\neq 0 라고 가정하자. 임의의 c \\in F 에 대해,\n\\begin{align*}\n0 \\leq \\langle x - cy, x - cy \\rangle =&amp; \\langle x, x - cy \\rangle - c \\langle y, x - cy \\rangle\\\\\n=&amp; \\langle x, x \\rangle - \\overline{c} \\langle x, y \\rangle - c \\langle y, x \\rangle + c \\overline{c} \\langle y, y \\rangle\n\\end{align*}\n이때, c = \\frac{\\langle x, y \\rangle}{\\langle y, y \\rangle} 라고 두면, \\overline{c} \\langle x, y \\rangle, c \\langle y, x \\rangle, c \\overline{c} \\langle y, y \\rangle 는 모두\n\\frac{\\langle x, y \\rangle \\langle y, x \\rangle}{\\langle y, y \\rangle} = \\frac{| \\langle x, y \\rangle |^2}{\\| y \\|^2}\n와 같으므로, 위의 부등식은\n0 \\leq \\langle x, x \\rangle - \\frac{| \\langle x, y \\rangle |^2}{\\langle y, y \\rangle} = \\| x \\|^2 - \\frac{| \\langle x, y \\rangle |^2}{\\| y \\|^2}\n이 성립한다.\n삼각 부등식(triangle inequality)\nF-내적공간 V와 임의의 벡터 x, y \\in V, 스칼라 c \\in F 대해\n\\|x + y\\| \\leq \\|x\\| + \\|y\\|\n가 성립한다. 이를 삼각 부등식(triangle inequality)이라고 한다.\n증명\n\\begin{align*}\n\\| x + y \\|^2 &amp;= \\langle x + y, x + y \\rangle = \\langle x, x \\rangle + \\langle y, x \\rangle + \\langle x, y \\rangle + \\langle y, y \\rangle\\\\\n&amp;= \\| x \\|^2 + \\text{Re} \\langle x, y \\rangle + \\| y \\|^2\\\\\n&amp;\\leq \\| x \\|^2 + 2 \\langle x, y \\rangle + \\| y \\|^2\\\\\n&amp;\\leq \\| x \\|^2 + 2 \\| x \\| \\cdot \\| y \\| + \\| y \\|^2\\\\\n&amp;= (\\| x \\| + \\| y \\|)^2\n\\end{align*}\n여기서 \\text{Re} \\langle x, y \\rangle 는 복소수 \\langle x, y \\rangle의 실수부를 나타낸다. 또한, 삼각 부등식 증명에서 코시-슈바르츠 부등식을 사용했음을 유의한다.\nFootnotes\n\n\n(a_1b_1 + a_2b_2)^2 \\leq (a_1^2 + a_2^2)(b_1^2 + b_2^2) ↩\n\n\n"},"Class/대수/선형-연산(Linear-operator)":{"slug":"Class/대수/선형-연산(Linear-operator)","filePath":"Class/대수/선형 연산(Linear operator).md","title":"선형 연산자(Linear operator)","links":[],"tags":[],"content":"벡터 공간에서의 선형 변환(Linear transformation)은 다음과 같이 정의한다.\nT(v+w)= T(v)+ T(w), \\quad T(cv)= cT(v)\n고등\n\n원점을 지나는 일차함수(정비례)\n\nf(x)= ax, \\quad f(x+y)= f(x)+ f(y), \\quad f(cx)= c f(x)\n\n행렬 덧셈\n\nA(x + y)= Ax + Ay, \\quad A(c x)= c(Ax)\n\n(수렴하는)수열의 합(급수) 연산1\n\n\\sum (a_n + b_n)= \\sum a_n + \\sum b_n, \\quad \\sum (c a_n)= c \\sum a_n\n\n확률에서의 기댓값 연산\n\nE[X + Y] = E[X] + E[Y], \\quad E[cX] = cE[X]\n\n(수렴하는)극한 연산\n\n\\lim_{x \\to a} (f(x)+ g(x))= \\lim_{x \\to a} f(x)+ \\lim_{x \\to a} g(x), \\quad \\lim_{x \\to a} (c f(x))= c \\lim_{x \\to a} f(x)\n\n미분 연산\n\nD(f)= f&#039;, \\quad D(f+g)= D(f)+ D(g), \\quad D(cf)= cD(f)\n\n적분 연산\n\nI(f)= \\int f(x)\\,dx, \\quad I(f+g)= I(f)+ I(g), \\quad I(cf)= cI(f)\n\n벡터 덧셈\n\n(x+w, y+z) = (x,y)+ (w,z),  \\quad  (cx,cy) = c(x,y)\n\n\n행렬의 대각합\n\n\\text{tr}(A+B)= \\text{tr}(A)+ \\text{tr}(B), \\quad \\text{tr}(cA)= c \\cdot \\text{tr}(A)\n\n행렬의 전치\n\n(A+B)^T= A^T+ B^T, \\quad (cA)^T= cA^T\n\n행렬식 (한 행 또는 한 열에 대해 선형성 성립)\n\n\\det{\\begin{bmatrix} u+w \\\\ v \\end{bmatrix}}\n= \\det{\\begin{bmatrix} u \\\\ v \\end{bmatrix}} + \\det{\\begin{bmatrix} w \\\\ v \\end{bmatrix}},\n\\quad\n\\det{\\begin{bmatrix} cu \\\\ v \\end{bmatrix}}\n= c \\cdot \\det{\\begin{bmatrix} u \\\\ v \\end{bmatrix}}\n\n내적 (첫번째 벡터에 대해 선형성 성립)2\n\n\\langle u+v, w \\rangle = \\langle u, w \\rangle + \\langle v, w \\rangle, \\quad \\langle c u, w \\rangle = c \\langle u, w \\rangle\n\n외적 (한 벡터에 대해 선형성 성립)\n\n\\mathbf{a} \\times (\\mathbf{b} + \\mathbf{c})= \\mathbf{a} \\times \\mathbf{b} + \\mathbf{a} \\times \\mathbf{c}, \\quad (c \\mathbf{a})\\times \\mathbf{b} = c (\\mathbf{a} \\times \\mathbf{b})\n학부\n\n푸리에 변환\n\n\\mathcal{F}(f+g)= \\mathcal{F}(f)+ \\mathcal{F}(g), \\quad \\mathcal{F}(cf)= c \\mathcal{F}(f)\n\n라플라스 변환\n\n\\mathcal{L}(f+g)= \\mathcal{L}(f)+ \\mathcal{L}(g), \\quad \\mathcal{L}(cf)= c \\mathcal{L}(f)\n\n\n선형 미분 방정식 연산자\nL(y+z)= L(y)+ L(z), \\quad L(cy)= cL(y) \n\n\n맥스웰 방정식\n\n\n\\nabla \\cdot \\mathbf{E} = \\frac{\\rho}{\\epsilon_0}, \\quad \\nabla \\times \\mathbf{B} - \\frac{1}{c^2} \\frac{\\partial \\mathbf{E}}{\\partial t} = \\mu_0 \\mathbf{J}\n\n파동 방정식\n\n\\frac{\\partial^2 u}{\\partial t^2} = c^2 \\nabla^2 u, \\quad (\\Box u = 0)\n\n\n슈뢰딩거 방정식\ni\\hbar \\frac{\\partial}{\\partial t} \\Psi = H \\Psi, \\quad H(\\Psi_1 + \\Psi_2)= H\\Psi_1 + H\\Psi_2\n\n\n아인슈타인 장 방정식\n\n\nG_{\\mu\\nu} = \\frac{8\\pi G}{c^4} T_{\\mu\\nu}\nFootnotes\n\n\n단, 더하는 순서가 바뀌면 수렴하지 않을 수 있다. 절대 수렴 \\sum |a_n | &lt; \\infty인 경우에는 더하는 순서가 바뀌어도 수렴한다. 절대 수렴하지 않는다면, 리만 재배열 정리(Riemann Rearrangement Theorem)에 의해 어떤 방식으로 재배열(rearrangement)하느냐에 따라 급수의 합이 다르게 나올 수도 있다. ↩\n\n\n두 번째 벡터에 대해서는 성립하지 않는다. \\langle x, cy \\rangle = \\bar{c} \\langle x, y \\rangle ↩\n\n\n"},"Class/대수/행렬-OX":{"slug":"Class/대수/행렬-OX","filePath":"Class/대수/행렬 OX.md","title":"행렬 참, 거짓 문제","links":[],"tags":["행렬"],"content":"\nAB=BA이다.1\nA^2=I이면, A=I 또는 A=-I이다.2\nA^2=O 이면, A=O 이다.3\n(AB)^t = B^tA^t이다.4\n(A+cB)^t = A^t+cB^t이다.5\n\\text{tr}(AB) = \\text{tr}(BA)이다.6\nAB=I이면, A와 B는 역행렬이 존재한다.7\nA가 역행렬이 존재하면 (A^{-1})^{-1}=A 이다.8\nn \\times n행렬 A, B에 대하여, AB가 역행렬이 존재하면 A, B 모두 역행렬이 존재한다.9\nm \\times n 행렬 A에 대하여AB = I_m인 n \\times m 행렬 B가 존재한다. (또는 n \\times m 행렬 B에 대하여 AB=I_m인 m \\times n 행렬 A가 존재한다) 10\n임의의 n \\times n 행렬 A, B에 대하여 \\det(AB) = \\det(A) \\cdot \\det(B)이다.11\nA의 두 행 또는 두 열을 교환하여 얻은 행렬을 B라 하면, \\det(A) = \\det(B)이다.12\nA의 한 행 또는 열의 각 성분에 스칼라를 곱하여 얻은 행렬을 B라 하면, \\det(A) = \\det(B)이다.13\nA의 한 행의 스칼라 배를 다른 행에 더하여 얻은 행렬을 B라 하면, \\det(A) = \\det(B)이다.14\n\\det(A^t) = \\det(A)이다.15\n\n\n\n닮음 행렬의 고윳값은 항상 같다.16\n닮음 행렬의 고유벡터는 항상 같다.17\n\nFootnotes\n\n\nFalse, A와 B가 동시에 대각화 가능(simultaneously diagonalizable)하다면 참이다. ↩\n\n\nFalse, A^2 =\\begin{pmatrix}0 &amp; 1 \\\\ 1 &amp; 0\\end{pmatrix} \\begin{pmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{pmatrix} = \\begin{pmatrix} 1 &amp; 0 \\\\ 0 &amp; 1\\end{pmatrix} = I ↩\n\n\nFalse, A^2 = \\begin{pmatrix} 0 &amp; 1 \\\\ 0 &amp; 0 \\end{pmatrix} \\begin{pmatrix} 0 &amp; 1 \\\\ 0 &amp; 0 \\end{pmatrix} = \\begin{pmatrix} 0 &amp; 0 \\\\ 0 &amp; 0 \\end{pmatrix} = O ↩\n\n\nTrue ↩\n\n\nTrue, 따라서 A와 A^t의 특성 다항식도 같다.(고윳값과 중복도 또한 같다.) ↩\n\n\nTrue, \\text{tr}(AB) = \\sum_{i=1}^{n} (AB)_{ii} = \\sum_{i=1}^{n} \\sum_{j=1}^{n} A_{ij}B_{ji} = \\sum_{j=1}^{n} \\sum_{i=1}^{n} B_{ji}A_{ij} = \\sum_{j=1}^{n} (BA)_{jj} = \\text{tr}(BA) 따라서, 닮음 행렬의 대각합도 같다. ↩\n\n\nFalse, AB = \\begin{pmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 \\\\ 0 &amp; 1 \\\\ 0 &amp; 0 \\end{pmatrix} = \\begin{pmatrix} 1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} = I ↩\n\n\nTrue, A^{-1}A = I \\Rightarrow (A^{-1})^{-1} = A ↩\n\n\nTrue, C(AB) = I \\Rightarrow (CA)B = I,  (AB)D = I \\Rightarrow A(BD) = I ↩\n\n\nFalse, A(또는 B)의 랭크가 m일 때만 참이다. ↩\n\n\nTrue, 행렬식은 기하학적으로 부피 변화율을 나타내며, 행렬 A가 공간을 변화시키는 비율이 \\det(A), 행렬 B가 공간을 변화시키는 비율이 \\det(B)라고 할 때, 연속적으로 변형하면 전체 변화율이 곱해지는 것이 자연스럽다. 이 성질로 부터 다음이 성립한다. \\det(A^{-1}) = \\frac{1}{\\det(A)} ↩\n\n\nFalse, \\det(B) = -\\det(A) ↩\n\n\nFalse, \\det(B) = k \\cdot \\det(A) ↩\n\n\nTrue ↩\n\n\nTrue ↩\n\n\nTrue, A = P^{-1}BP라 할 때, A(v) = \\lambda v \\Rightarrow B(P(v)) =  PA(v) = P\\lambda(v) = \\lambda (P(v))이므로 B의 고윳값도 \\lambda이다. 따라서 닮음 행렬은 같은 특성다항식을 가진다. ↩\n\n\nFalse, P(v) ↩\n\n\n"},"Class/미적/그래프-완전정복-1---기본":{"slug":"Class/미적/그래프-완전정복-1---기본","filePath":"Class/미적/그래프 완전정복 1 - 기본.md","title":"그래프 그리기 1","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["그래프","인수분해","미분","평행이동"],"content":"\n\n                  \n                  그래프를 그리기 전에 \n                  \n                \n\n\n\nx축을 그린다 \\Rightarrow 개형을 그린다 \\Rightarrow 점을 찍는다\ny축은 필요할 때만 그린다. (때에 따라 x축 또한 생략한다.)\nf의 최고차항의 계수와 차수가 개형을 결정한다.\nf&#039;&gt;0이면 f는 증가하고, f&#039;&lt;0이면 f는 감소한다.\nf&#039;=0이면 f는 평평하다. 즉, 봉우리가 생길 가능성이 높다.\nf&#039;&#039;&gt;0이면 f는 아래로 볼록, f&#039;&#039;&lt;0이면 f는 위로 볼록이다.\n대칭성(우함수, 기함수, 선대칭, 점대칭)과 주기성을 고려한다.\n\\lim f(x)가 점근선을 갖는지 확인한다.\n\n\n\n\n인수분해를 이용한 그래프 그리기\nf(x)=x^4 - 4x^3 + 4x^2 - 1 = (x-1)^2 (x-1+ \\sqrt{2})(x-1- \\sqrt{2})이므로, x=1(중근), x=1- \\sqrt{2}, x=1+ \\sqrt{2}을 근으로 가진다. 따라서 x=1에서 f(x)의 그래프는 x축에 접하며, x=1 \\pm \\sqrt{2}에서는 근을 갖는 사차함수를 그린다.\n\n미분을 이용한 그래프 그리기\nf&#039;(x) = 4x^3 - 12x^2 + 8x = 4x(x - 1)(x - 2)이므로 x=0, x=1, x=2에서 근을 갖는 삼차함수를 그린다. f&#039;=0인 곳을 기준으로 f&#039;&gt;0이면 f가 증가(우상향)하도록, f&#039;&lt;0이면 f는 감소(우하향)하도록 사차함수를 그린다.\n\n평행이동을 이용한 그래프 그리기\nf(x) = x^4 - 4x^3 + 4x^2 - 1 = x^2 (x - 2)^2 - 1이므로, x=0, x=2에서 중근을 갖는 사차 함수를 그린 후, y축으로 -1만큼 평행이동 한다. 상수항은 함수의 그래프를 y축 방향으로 평행이동 시킬 뿐이다.\n\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n"},"Class/미적/그래프-완전정복-2---사칙연산":{"slug":"Class/미적/그래프-완전정복-2---사칙연산","filePath":"Class/미적/그래프 완전정복 2 - 사칙연산.md","title":"그래프 그리기 2","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["그래프","사칙연산"],"content":"\n\n함숫값이 0이 되는 x값(근)을 찾는다.\n개형을 찾는다. 다항함수라면 최고차항의 차수나 계수를 확인하고, 초월함수라면 함수의 속도를 고려하여 점근선, 볼록성을 확인한다.\n\n\n그래프의 덧셈과 뺄셈\n\n덧셈 그래프는 한 그래프를 다른 그래프가 따라 올라가는 경향을 보인다.\n뺄셈 그래프는 빼기 뒤에 있는 함수를 기준(x축이라 생각하고)으로 빼기 앞에 있는 함수를 관찰한다.\n\n\n그래프의 곱셈과 나눗셈\n\n곰셈 그래프는 두 그래프의 부호가 같으면 x축 위에, 부호가 다르면 x축 아래에 그래프를 그린다.\n\n나눗셈 그래프는 역수(?) 그래프를 그린 후 곱한다. 함숫값이 0인 곳은 역수를 취하면 발산하고, 양의 무한대나 음의 무한대로 발산하는 곳은 역수를 취하면 0으로 수렴한다. 이때, 방향에 주의하자.\n\n\n예제\n다음 함수들의 개형을 그리시오.\n\nx^3+x\nx^3-x\n|x|+x\n|x|-x\ne^x+x\ne^x-x\nx + \\ln |x|\n\\ln|x|-x\nx + \\sin x\n\\sin x - x\nx \\cdot e^x\nx  \\cdot \\ln |x|\nx  \\cdot  \\sin x\n\\frac{e^x}{x}\n\\frac{\\ln x}{x}\n\\frac{\\sin x}{x}\n\n\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n"},"Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대":{"slug":"Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","filePath":"Class/미적/그래프 완전정복 3 - 평행, 대칭, 주기, 확대.md","title":"그래프 그리기 3","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["평행이동","대칭","주기","확대"],"content":"\n\n                  \n                  대칭이동 \n                  \n                \n\n\n\nx축 대칭 f(x,~-y)=0\ny축 대칭 f(-x,~y)=0\n원점 대칭 f(-x,~-y)=0\ny=x에 대한 대칭 f(y,~x)=0\nx=a에 대한 선대칭 f(a+x)=f(a-x)\n(a,~b)에 대한 점대칭 f(a-x)+f(a+x)=2b\n\n\n\n\n그래프의 주기성\n상수 함수가 아닌 함수 f(x)에서 정의역에 속하는 모든 x에 대하여 f(x+p)=f(x)를 만족시키는 0이 아닌 상수 p가 존재할 때, f(x)를 주기함수라고 하며 f(x+p)=f(x)를 만족시키는 상수 p의 값 중 최소의 양수를 함수 f의 주기라 한다.\n대칭, 주기 판별법\n두 함수 f(1+x)=f(1-x), g(x+1)=g(x-1)의 대칭성 또는 주기성을 판별하기 위해서는 변수에 들어간 식을 뺀 값을 보는 것을 추천한다. 예를 들어 함수 f에 대하여 (1+x)-(1-x)=2x처럼 문자가 남으면 대칭함수이며, 함수 g에 대하여 (x+1)-(x-1)=2처럼 숫자가 남으면 그 숫자를 주기로 갖는 주기 함수이다.\n\n\n                  \n                  그래프의 확대, 축소 \n                  \n                \n\n\n\nx축으로 a배 확대 f\\left(\\frac{x}{a},y\\right)=0, x축으로 a배 축소 f(ax,y)=0\ny축으로 a배 확대 f\\left(x,\\frac{y}{a}\\right)=0, y축으로 a배 축소 f(x,ay)=0\n주기함수 f(x)의 주기가 p일 때, f(ax)의 주기는 \\frac{p}{a}이다.\n\n\n\n\nx또는 y에 상수를 곱하게 되면 각 변수의 축 방향으로 그래프가 축소된다. 이 때, x축 또는 y축으로 확장한 만큼 넓이가 늘어나고, 축소한 만큼 넓이가 줄어든다. 이를 통해 도형의 넓이를 빠르게 계산하는 데 응용될 수 있다.\n예제\n\n원의 방정식 x^2+y^2=1에서 x축 방향으로 2배, y축 방향으로 3배 확대한 도형의 방정식은?\n주기함수 f(x), ~g(x)에 대하여, f(x)+g(x)는 주기함수인가?1\n\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n\nFootnotes\n\n\n합함수의 주기성: 두 함수 f(x), g(x)가 모두 실함수(\\mathbb{R} \\to \\mathbb{R}), 연속함수, 주기함수이고 각각의 주기가 p, q일 때, f(x) + g(x)도 주기함수일 필요충분조건은 \\frac{p}{q}가 유리수이다. ↩\n\n\n"},"Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수":{"slug":"Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","filePath":"Class/미적/그래프 완전정복 4 - 절댓값 함수, 가우스 함수.md","title":"그래프 그리기 4","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["절댓값","가우스","그래프"],"content":"y=|f(x)| 그래프\ny=f(x)의 그래프를 그린 후 y \\ge 0인 부분은 그대로 두고 y \\le 0인 부분을 x축에 대하여 대칭이동 시켜 그린다.(함숫값 즉, y는 항상 양수라는 것을 생각하자.)\n\n|y|=f(x) 그래프\ny=f(x)의 그래프를 그린 후 y&lt;0인 부분을 없애고 y \\ge 0인 부분만 남긴다. 그리고 난 후 남은 부분을 x축에 대하여 복사한다.(f(x)가 양수인 것만 생각하자.)\n\ny=f(|x|) 그래프\ny=f(x)의 그래프를 그린 후 x&lt;0인 부분을 없애고 x \\ge 0인 부분만 남긴다. 그리고 난 후 남은 부분을 y축에 대하여 복사한다.(정의역이 항상 양수라는 것을 생각하자.)\n\n|y|=f(|x|) 그래프\ny=f(x)의 그래프를 그린 후 제 1사분면의 그래프 부분만 남긴다. 그리고 난 후 남은 부분을 x축, y축, 원점에 대하여 각각복사한다.(x,~y 모두 양수인 부분 즉, 1사분면만 생각하자.)\n\n가우스 함수 그래프\n\n가우스 함수 또는 바닥 함수 [x]는 x보다 크지 않은 최대 정수를 의미한다. 예를 들어 [2.5]=2이고, [3]=3이다. 대괄호 안에 수가 양수일 때는 소수점 첫째 자리 버림이라고 생각하면 편하다. 음수일 때는 [-4]=-4이지만, [-1.2]는 -1.2보다 크지 않은 즉, 작거나 같은 최대 정수 이므로 [-2]가 된다. 따라서 [1]=[1.3]=[1.99]=1과 같이 가우스 함수는 일정 범위 안에 있는 정의역에 대해 같은 함숫값을 갖는 다는 것을 알 수 있다.\n\n\ny=f(x)의 그래프를 그린 후 y축을 정수 단위로 나눈 후 교점을 표시한다.\n교점들의 x좌표를 기준으로, 계단모양의 함수를 그린다. 쉽게 설명하면 한 교점에서 다음 교점 전까지 그래프가 상승하는 방향으로 x축과 평행한 선을 그려준다.\n\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n"},"Class/미적/그래프-완전정복-5---합성함수":{"slug":"Class/미적/그래프-완전정복-5---합성함수","filePath":"Class/미적/그래프 완전정복 5 - 합성함수.md","title":"그래프 그리기 5","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["합성함수","그래프"],"content":"합성함수란 f:X \\rightarrow Y 와 g:Y \\rightarrow Z 라는 두 함수에 대하여 한 함수의 공역이 다른 함수의 정의역과 일치하는 경우, 두 함수를 이어 하나의 함수로 만드는 연산이다. 쉽게 생각해 일반적인 함수는 X값에 따라 Y값, 즉 함숫값이 바로 생기는데 반해 합성함수는 이 과정을 연달아하게 되면서 새로운 함수 g \\circ f:X \\rightarrow Z를 만든다.\n자기 자신을 합성한 함수\n함수 f(x)에 대하여 자기 자신을 합성한 함수는 일반적으로 f^2(x)=f \\circ f(x)라 표현한다. 합성한 함수의 그래프를 그릴 때는 첫 번째 함수의 함숫값을 다시 정의역으로 하여 두 번째 함수의 함숫값을 찾아야하므로 y=x를 같이 그려 합성함수의 그래프를 찾는 것이 좋다.\n\nf(x)와 y=x의 교점은 f \\circ f(x)와 y=x의 교점이 된다. 자기 자신을 합성한 함수의 모양을 보면 원함수와 y=x가 만나는 점을 기준으로 (교점을 기준으로 증가, 감소가 바뀌지 않는다면)원함수와 비교하여 위에 있는 곳은 더 위에, 아래에 있는 곳은 더 아래에 그려지는 경향이 있다.\n합성함수 그리기\n\n정의역에 있는 함수의 증가, 감소가 바뀌는 점을 기준으로 x가 변해감에 따라 y가 어떻게 변하는지 관찰하고, 함숫값(y)의 변화와 방향을 기준으로 z가 어떻게 변하는지 본다. 마지막으로 y를 생략하고 x가 변할 때, z가 어떻게 변하는지 확인하여 개형을 그린다.\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n"},"Class/미적/그래프-완전정복-6---볼록함수":{"slug":"Class/미적/그래프-완전정복-6---볼록함수","filePath":"Class/미적/그래프 완전정복 6 - 볼록함수.md","title":"그래프 그리기 6","links":["Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수"],"tags":["볼록"],"content":"\n언어적으로 볼록은 ‘어떤 물체의 일부분이 튀어나왔거나 도드라져 있는 상태’인 반면 수학에서는 볼록은 도형 내부에 있는 임의의 두 점을 이은 선분이 도형에 포함되는 것을 의미한다. 왼쪽 도형처럼 도형 내 임의의 두 점을 연결한 선분이 다시 도형 안에 포함되면 볼록 도형이라 부른다. 반대로 오른쪽과 같이 도형 내 임의의 두 점을 이은 선분이 도형 바깥으로 나오는 부분이 생기면 오목 도형이라 부른다.\n\n\n\n                  \n                  함수에서의 위로 볼록, 아래로 볼록 \n                  \n                \n\n\n위로 볼록인 함수는 x와 y사이의 내분점의 함숫값이 f(x)와 f(y)사이의 내분점보다 위에 있으므로 f(tx+(1-t)y) &gt; tf(x)+(1-t)f(y)라 할 수 있다. 반대로 아래로 볼록한 함수는 f(x)와f(y)사이의 내분점이 x와 y사이의 함숫값보다 크므로 부등호 방향만 바꾸어 표현할 수 있다.\n\n\n\n볼록한 함수를 표현하는 다양한 방법\n\n위로 볼록인 함수에서 임의의 세 점을 선택해 x의 좌표가 작은 순서대로 A, B, C라 할 때, 선분 \\overline{AB}와 \\overline{BC}의 기울기 즉, 평균변화를 비교하면 \\overline{AB}의 기울기가 \\overline{BC}의 기울기보다 큰 것을 볼 수 있다.\n\n\n\\frac{f(b) - f(a)}{b - a} &gt; \\frac{f(c) - f(b)}{c - b}\n\n위로 볼록인 함수에서 임의의 세 점을 선택해 x의 좌표가 작은 순서대로 A, B, C라 할 때, 한 점을 고정시킨다음 평균변화를 관찰하면 선분 \\overline{AB}의 기울기가 선분 \\overline{AC}의 기울기보다 큰 것을 관찰할 수 있다.\n\n\n\\frac{f(b) - f(a)}{b - a} &gt; \\frac{f(c) - f(a)}{c - a}\n\n특히 고정점이 원점이라면 식을 더 간단하게 바꿀 수 있다.\n\n\n\\frac{f(a)}{a} &gt; \\frac{f(b)}{b} \\implies bf(a) &gt; af(b)\n\n위로 볼록인 함수에서 임의의 두 점을 선택해 x의 좌표가 작은 순서대로 A, B라 할 때, 점 A의 접선의 기울기 f&#039;(a)와 점 B의 접선의 기울기 f&#039;(b)를 비교하면 f&#039;(a)&gt;f&#039;(b)이다. 위로 볼록인 함수들은 x좌표가 커짐에 따라 순간변화율이 감소하므로 순간변화율의 변화율 즉, f&#039;&#039;(x) &lt; 0임을 자명하게 얻어낼 수 있다.\n\n\nf&#039;(a) &gt; f&#039;(b) \\implies f&#039;&#039;(x) &lt; 0\n\n위로 볼록인 함수에서 임의의 두 점을 선택해 x의 좌표가 작은 순서대로 A, B라 할 때, 점 A의 접선의 기울기 f&#039;(a)와 선분 AB의 기울기를 비교하면 순간변화율이 평균변화율보다 크다는 것을 알 수 있다.\n\n\nf&#039;(a) &gt; \\frac{f(b) - f(a)}{b - a} \\implies (b - a) f&#039;(a) &gt; f(b) - f(a)\n\n위로 볼록한 함수라면 선분 \\overline{AB}위로 넓이가 더 생기므로, 적분값이 사다리꼴의 넓이보다 크다.\n\n\n\\int_a^b f(x) dx &gt; \\frac{(b-a)(f(a)+f(b))}{2}\n예제\n\n\n다항함수 f(x)에 대하여 f(0)=0이고, 0&lt;x&lt;y&lt;1인 모든 x,~y에 대하여 0&lt;xf(y)&lt;yf(x)가 성립할 때, A=f&#039;(0), B=f(1), C=2 \\int_0^1f(x)dx의 대소관계는?\n\n\n열린 구간 (0,~1)에서 f&#039;(x)&gt;0, f&#039;&#039;(x)&gt;0 일 때, 함수 y=\\{f(x)\\}^2은 아래로 볼록한가?\n\n\nf(x)=x+\\sin x에 대하여 g(x)=(f \\circ f)(x)로 정의할 때, \b함수 g(x)의 그래프는 열린구간(0,~\\pi)에서 위로 볼록한가?\n\n\n함수 f(x)=\\sin \\frac{x^2}{2}에 대하여, \\int_0^1 f(x)dx \\le \\frac{1}{2}\\sin \\frac{1}{2}인가?\n\n\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n그래프 완전정복 1 - 기본\n그래프 완전정복 2 - 사칙연산\n그래프 완전정복 3 - 평행, 대칭, 주기, 확대\n그래프 완전정복 4 - 절댓값 함수, 가우스 함수\n그래프 완전정복 5 - 합성함수\n그래프 완전정복 6 - 볼록함수\n\n\n\n"},"Class/미적/다항함수의-넓이-공식":{"slug":"Class/미적/다항함수의-넓이-공식","filePath":"Class/미적/다항함수의 넓이 공식.md","title":"다항 함수의 넓이 공식","links":[],"tags":["이차함수","삼차함수","사차함수","넓이","적분"],"content":"다항함수와 직선으로 둘러싸인 넓이는 평행이동 또는 치환적분을 이용하여 간단하게 표현할 수 있다.\n이차함수\n\n삼차함수\n\n\n사차함수\n\n\n예제\n\n각 넓이 공식이 맞는지 증명하여라.\n삼차함수의 넓이 첫번째 공식에서 \\beta가 변곡점을 지날 때, 넓이 공식을 구하여라.\n"},"Class/미적/등차수열":{"slug":"Class/미적/등차수열","filePath":"Class/미적/등차수열.md","title":"등차수열(Arithmetic sequence)","links":[],"tags":[],"content":"실수열\n수열은 숫자의 나열로 자연수를 차례로 넣었을 때, 어떤 실수가 대응되는 구조다. 그러므로 수열은 자연수 \\mathbb{N}을 정의역으로 하고 실수 \\mathbb{R}을 공역으로 하는 함수다.\nf: \\mathbb{N} \\rightarrow \\mathbb{R}\n등차수열 식의 이해\n등차수열은 연속하는 항들 사이의 차이가 항상 일정한 수열이다.\na_{n+1} - a_n = d\n이 수열을 자연수 n에 대한 함수로 바라보. 기울기는 기본적으로 두 점 사이의 x 증가량분의 y 증가량으로 정의된다.\n\n\\text{기울기} = \\frac{\\Delta y}{\\Delta x}\n\n등차수열 a_1, a_2, a_3, \\cdots는 각각 항 번호 n에 대응되는 값이므로, 항 번호 n을 x값, 항 a_n을 y값으로 생각할 수 있다. 이 수열을 평면 상의 점 (1, a_1), (2, a_2), (3, a_3), \\cdots으로 본다면, 이 점들은 모두 기울기가 일정한 직선 위에 놓이게 된다.\n이때, 항 번호 n이 1씩 증가할 때마다, 항 a_n은 항상 공차 d만큼 증가한다.\n\n\\Delta x = 1,\\quad \\Delta y = d\n\n그러므로 기울기는 d 이다.\n\n\\frac{\\Delta y}{\\Delta x} = \\frac{d}{1} = d\n\n따라서 등차수열을 일차함수로 표현하면 최고차항의 계수는 공차 d가 된다.\n\n등차수열 식의 응용\n연속하는 두 항의 차이가 모두 일정한 수열 이때 두 항의 차이는 공통적으로 나타나는 차이므로 공차(common difference) 라고 한다.\n\\begin{align*}\na_n &amp;= a_1 + (n - 1) d = dn + (a - d) \\\\\nS_n &amp;= \\frac{a + l}{2} \\times n = \\frac{n}{2} \\left\\{ 2a + (n - 1)d \\right\\} = \\frac{d}{2}n^2 + \\left( a - \\frac{d}{2} \\right)n\n\n\\end{align*}\n등차수열은 공차를 기울기로 갖는 일차함수이고 등차수열의 합은 등차수열을 적분한 꼴이므로 상수항이 없는 이차함수이다. 따라서 등차수열의 일반항을 구할 때는\na_n = dn + c\n라 적은 후 양변에\nn = 1\n을 대입하여 상수항을 보정한다. 같은 방법으로 등차수열의 합을 구할 때는\nS_n = \\frac{d}{2}n^2 + c n\n이라 적은 후 양변에\nn = 1\n을 대입 하여 일차항의 계수를 보정한다.\n예시\n3, 5, 7, 9, \\cdots인 등차수열이 있을 때 등차수열의 일반항은 , d = 2이므로 a_n = 2n + c라 적은 후 n = 1을 대입하면 a_1 = 2 + x이고 a_1 = 3이므로 x = 1이다. 따라서\na_n = 2n + 1\n이라 구할 수 있다.\n등차수열의 합은 d = 2이므로\nS_n = n^2 + c n\n이라 적은 후 n = 1을 대입하면 S_1 = 1 + x이고 S_1 = a_1 = 3이므로 c = 2이다. 따라서\nS_n = n^2 + 2n\n이라 구할 수 있다.\n등차수열과 미적분의 관계\n등차수열을 적분하면 등차수열의 합 꼴이 나오고 등차수열의 합을 미분하면 등차수열의 꼴이 나옴을 응용하면 등차수열로부터 등차수열의 합 또는 등차수열의 합으로부터 등차수열을 빠르게 찾을 수 있다.1\n예를 들어 a_n = 2n + 1을 적분한다 생각하고 최고차항만 적분하면\nS_n = n^2 + c n\n이라 할 수 있다. a_1 = S_1 = 3이므로 c = 2이고 따라서, S_n = n^2 + 2n이다. 반대로\nS_n = n^2 + 2n\n을 미분한다 생각하고 최고차항만 미분하면\na_n = 2n + c\n라 할 수 있다. a_1 = S_1 = 3이므로 c = 1이고 따라서\na_n = 2n + 1\n이다.\n상수항이 있는 이차함수는 등차수열일까?\nS_n = n^2 + 2n + 2에 대하여 a_n의 각 항을 찾으면 다음과 같고 a_n은 첫째항을 제외하면 a_n = 2n + 1인 등차수열 꼴임을 알 수 있다.\n\\begin{array}{ |c|c|}\n\\hline\nS_1 = 5 &amp; a_1 = 5 \\\\ \\hline\nS_2 = 10 &amp; a_2 = 5 \\\\ \\hline\nS_3 = 17 &amp; a_3  = 7 \\\\ \\hline\nS_4 = 26 &amp; a_4  = 9 \\\\ \\hline\nS_5 = 37 &amp; a_5  = 11 \\\\ \\hline\n\\vdots &amp; \\vdots \\\\ \\hline\n\\end{array}\n이는 상수항이 없다고 생각하면 앞선 방법과 같이 찾을 수 있다.\na_n = \n\\begin{cases}\nS_1 \\quad (n = 1) \\\\\nS_n - S_{n-1} \\quad (n &gt; 1)\n\\end{cases}\n상수항이 있는 이차함수 S_n을 이용하여 a_n을 찾고 싶다면 상수항이 없다고 생각하고 a_n을 찾은 후, 첫째항은 따로 찾는 것을 추천한다.\nFootnotes\n\n\n등차수열의 합이 함수의 정적분과 완전히 일치하지 않는 이유는 각 항마다 직사각형으로 근사한 합이 실제 함수 아래 면적보다 조금 더 크기 때문이다. 등차수열 a_n = dn + c를 연속함수 a_x = dx + c로 확장하고, 그 위에 오른쪽 끝점을 기준으로 한 밑변 1인 직사각형을 그리면 각 사각형은 정적분 면적보다 위로 살짝 튀어나온 부분을 갖게 된다. 이 튀어나온 부분은 사각형의 오른쪽 위 모서리와 함수 그래프 사이에 생긴 작은 삼각형이며, 그 삼각형의 밑변은 1이고 높이는 공차 d이므로 넓이는 \\frac{1}{2} \\cdot 1 \\cdot d = \\frac{d}{2}이다. 이 삼각형이 n개 있으므로 전체 초과된 넓이는 \\frac{d}{2}n이 되고, 따라서 등차수열의 합은 대응하는 정적분 값보다 항상 \\frac{d}{2}n만큼 더 크다. 이 차이는 근사나 오차가 아니라, 이산적인 수열의 합과 연속적인 적분이 본질적으로 가지는 구조의 차이에서 발생한다. ↩\n\n\n"},"Class/미적/로피탈":{"slug":"Class/미적/로피탈","filePath":"Class/미적/로피탈.md","title":"로피탈의 법칙(L'Hôpital's rule)","links":[],"tags":[],"content":"로피탈의 법칙\n함수 f(x),~g(x)가 미분 가능, \\lim_{x \\rightarrow a}\\frac{f(x)}{g(x)}가 부정형 \\left( \\frac{0}{0},~\\frac{\\infty}{\\infty},~\\cdots \\right), \\lim_{x \\rightarrow a}\\frac{f&#039;(x)}{g&#039;(x)} 존재, g&#039;(x) \\not= 0 을 만족하면 \\lim_{x \\rightarrow a}\\frac{f(x)}{g(x)}=\\lim_{x \\rightarrow a}\\frac{f&#039;(x)}{g&#039;(x)}이다.\n\\lim_{x \\rightarrow a}\\frac{f(x)}{g(x)}=\\lim_{x \\rightarrow a}\\frac{f&#039;(x)}{g&#039;(x)}\n최고차항 비교\n\\begin{align*}\n&amp;\\lim_{x \\rightarrow \\infty} \\frac{a_{n}x^{n} + a_{n-1}x^{n-1} + \\cdots + a_{1}x + a_{0}}{b_{n}x^{n} + b_{n-1}x^{n-1} + \\cdots + b_{1}x + b_{0}} = \\lim_{x \\rightarrow \\infty} \\frac{n!a_{n}}{n!b_{n}} = \\frac{a_{n}}{b_{n}}\\\\\n&amp;\\lim_{x \\rightarrow \\infty} \\frac{a_{n}x^{n} + a_{n-1}x^{n-1} + \\cdots + a_{1}x + a_{0}}{b_{n-1}x^{n-1} + \\cdots + b_{1}x + b_{0}} = \\frac{n!a_{n} x+(n-1)!a_{n-1}}{(n-1)!b_{n-1}} = \\infty\\\\\n&amp;\\lim_{x \\rightarrow \\infty} \\frac{a_{n-1}x^{n-1} + \\cdots + a_{1}x + a_{0}}{b_{n}x^{n} + b_{n-1}x^{n-1} + \\cdots + b_{1}x + b_{0}} = \\lim_{x \\rightarrow \\infty} \\frac{(n-1)!a_{n}}{n!b_{n}x + (n-1)!b_{n}} = 0\n\\end{align*}\n최저차항 비교\n\\begin{align*}\n&amp;\\lim_{x \\rightarrow 0} \\frac{a_{n}x^{n} + a_{n-1}x^{n-1} + \\cdots + a_{1}x}{b_{n}x^{n} + b_{n-1}x^{n-1} + \\cdots + b_{1}x}\\\\\n= &amp;\\lim_{x \\rightarrow 0} \\frac{na_{n}x^{n-1} + (n-1)a_{n-1}x^{n-2} + \\cdots + a_{1}}{nb_{n}x^{n-1} + (n-1)b_{n-1}x^{n-2} + \\cdots + b_{1}}\\\\\n = &amp;\\frac{a_{1}}{b_{1}}\n\\end{align*}\n\n초월함수 비교\n\n지수함수는 다항함수보다 빠르다.\n\n\\lim_{x \\rightarrow \\infty} \\frac{e^{x}}{x} = \\lim_{x \\rightarrow \\infty} \\frac{e^{x}}{1} = \\infty\n\n다항함수는 로그함수보다 빠르다.\n\n\\lim_{x \\rightarrow \\infty} \\frac{\\ln x}{x} = \\lim_{x \\rightarrow \\infty} \\frac{1}{x} = 0"},"Class/미적/사인함수의-넓이":{"slug":"Class/미적/사인함수의-넓이","filePath":"Class/미적/사인함수의 넓이.md","title":"사인 함수의 넓이","links":[],"tags":["적분","삼각함수","월리스"],"content":"f(x)=\\sin x은 기함수이며 주기성을 갖는다. 또한 \\sin(x+\\frac{\\pi}{2})=\\cos x이다. 그래프를 관찰하면\\left| \\int_{0}^{\\frac{\\pi}{2}} \\sin x \\, dx \\right| = \\left| \\int_{\\frac{\\pi}{2}}^{\\pi} \\sin x \\, dx \\right| = \\left| \\int_{\\pi}^{\\frac{3\\pi}{2}} \\sin x \\, dx \\right| = \\left| \\int_{\\frac{3\\pi}{2}}^{2\\pi} \\sin x \\, dx \\right|이고, \\int_{0}^{\\frac{\\pi}{2}} \\sin x \\, dx = \\int_{0}^{\\frac{\\pi}{2}} \\cos x \\, dx이다. 따라서 \\int_{0}^{\\frac{\\pi}{2}} \\sin x \\, dx의 값만 알고 있다면 삼각함수의 넓이를 빠르게 구할 수 있다.\n\n이는 고차 삼각함수로 손쉽게 응용할 수 있다.\n고차 삼각함수의 적분\n\nf(x)=\\sin^{n} x~(n \\ge 2)에 대하여, n이 짝수면 반각공식, n이 홀수면 치환적분을 이용하여 넓이를 구할 수 있다.\n\\begin{align*}\n\\int_{0}^{\\frac{\\pi}{2}} \\sin^{2} x \\, dx &amp;= \\int_{0}^{\\frac{\\pi}{2}} \\frac{1-\\cos2 x}{2} \\, dx = \\left[ \\frac{x}{2} - \\frac{1}{4} \\sin 2x \\right] \\Bigg|_{0}^{\\frac{\\pi}{2}} = \\frac{\\pi}{4}\\\\\n\\int_{0}^{\\frac{\\pi}{2}} \\sin^{3} x \\, dx &amp;= \\int_{0}^{\\frac{\\pi}{2}} (1-\\cos^2 x) \\sin x \\, dx = \\int_{0}^{1} (1-t^{2}) \\, dt = \\frac{2}{3}\n\\end{align*}\n삼각함수의 넓이\n\\int_{0}^{\\frac{\\pi}{2}} \\sin x \\, dx = 1 ,~\\int_{0}^{\\frac{\\pi}{2}} \\sin^2 x \\, dx = \\frac{\\pi}{4},~\\int_{0}^{\\frac{\\pi}{2}} \\sin^3 x \\, dx = \\frac{2}{3}\n\\int_{0}^{\\frac{\\pi}{2}} \\sin^{2} x \\, dx는 삼각함수의 성질을 이용하여 손쉽게 유도할 수 있다.\n\\begin{align*}\n&amp;\\int_{0}^{\\frac{\\pi}{2}} \\sin^{2} x \\, dx = \\int_{0}^{\\frac{\\pi}{2}} \\cos^{2} x \\, dx\\\\\n\\Rightarrow &amp; \\int_{0}^{\\frac{\\pi}{2}} \\sin^{2} x + \\cos^{2} x \\,dx=\\int_{0}^{\\frac{\\pi}{2}} \\,dx=\\frac{\\pi}{2}\\\\\n\\Rightarrow &amp; \\int_{0}^{\\frac{\\pi}{2}} \\sin^{2} x \\, dx = \\frac{\\pi}{4}\n\\end{align*}\n월리스 공식(Wallis product)\nI_{n} = \\int_{0}^{\\frac{\\pi}{2}} \\sin^{n} x \\, dx~(n \\ge 3)이라 하자. 부분적분을 사용하면\n\\begin{align*}\nI_{n} &amp;= \\int_{0}^{\\frac{\\pi}{2}} \\sin^{n-1} x \\sin x \\, dx\\\\\n&amp;= \\sin^{n-1} x (-\\cos x) \\Bigg|_{0}^{\\frac{\\pi}{2}} + \\int_{0}^{\\frac{\\pi}{2}} (n-1) \\sin^{n-2} x \\cos^2 x \\, dx \\\\\n&amp;= (n-1) \\int_{0}^{\\frac{\\pi}{2}} \\sin^{n-2} x (1 - \\sin^2 x) \\, dx\\\\\n&amp;= (n-1) I_{n-2} - (n-1) I_{n}\n\\end{align*}\n이므로,  I_{n} = \\frac{n-1}{n} \\, I_{n-2}이다.\n이 성질을 이용하면, I_{3} = \\int_{0}^{\\frac{\\pi}{2}} \\sin^3 x \\, dx = \\frac{2}{3} I_{1} = \\frac{2}{3},~I_{4} = \\int_{0}^{\\frac{\\pi}{2}} \\sin^4 x \\, dx = \\frac{3}{4} I_{2} = \\frac{3\\pi}{16}, \\cdots와 같은 적분값을 쉽게 구할 수 있다.\n이 식을 이용하면 \\pi의 값을 근사할 수 있는 식을 얻을 수 있다. 앞선 식을 n에 따라 나누어 정리하면 다음과 같다.\n\\begin{align*}\nI_{2n}&amp;=\\frac{2n-1}{2n} \\cdot \\frac{2n-3}{2n-2} \\cdot \\cdots \\cdot \\frac{3}{4} \\cdot \\frac{1}{2} \\cdot I_0= \\frac{\\pi}{2} \\cdot \\prod_{k=1}^{n}\\frac {2k-1}{2k}\\\\\nI_{2n+1}&amp;=\\frac{2n}{2n+1} \\cdot \\frac{2n-2}{2n-1} \\cdot \\cdots \\cdot \\frac{4}{5} \\cdot \\frac{2}{3} \\cdot I_1 = 1 \\cdot \\prod_{k=1}^{n}\\frac {2k}{2k+1}\n\\end{align*}\n다음으로, \\sin x \\le 1이므로 0 \\le x \\le \\pi일 때,\n\\begin{align*}\n&amp; \\sin^{2n+1} x \\le \\sin^{2n} x \\le \\sin^{2n-1} x\\\\\n\\Rightarrow ~ &amp; I(2n+1) \\le I(2n) \\le I(2n-1)\\\\\n\\Rightarrow ~ &amp; 1 \\le \\frac{I(2n)}{I(2n+1)} \\le \\frac{I(2n-1)}{I(2n+1)}=\\frac{2n+1}{2n} \\rightarrow1\\\\\n\\end{align*}\n이다. 따라서 \\frac{I(2n)}{I(2n+1)} \\rightarrow 1이다. 마지막으로 \\frac{I(2n)}{I(2n+1)}을 정리하면,\n\\begin{align*}\n\\lim_{n \\rightarrow \\infty} \\frac{I(2n)}{I(2n+1)} &amp;=\\lim_{n \\rightarrow \\infty} \\frac{\\pi}{2}  \\prod_{k=1}^{n} \\frac{(2k -1)\\times (2k+1)}{2k \\times 2k} =1\\\\\n\\Rightarrow \\frac{\\pi}{2} &amp;= \\lim_{n \\to \\infty} \\prod_{k=1}^{n} \\frac{2k \\times 2k}{(2k-1) \\times (2k+1)}\\\\\n&amp;= \\frac{2 \\cdot 2}{1 \\cdot 3} \\times \\frac{4 \\cdot 4}{3 \\cdot 5} \\times \\frac{6 \\cdot 6}{5 \\cdot 7} \\times\\cdots \n\\end{align*}"},"Class/미적/삼각함수의-각-변환":{"slug":"Class/미적/삼각함수의-각-변환","filePath":"Class/미적/삼각함수의 각 변환.md","title":"삼각함수의 각 변환","links":[],"tags":["ASTC"],"content":"\n\n\n                  \n                  각 변환 공식 \n                  \n                \n\n\n\n각을 \\frac{\\pi}{2} \\times n \\pm \\theta 꼴로 바꾼다. (단, n은 정수이고 \\theta는 예각이라 가정한다.)\n\\frac{\\pi}{2} \\times n \\pm \\theta이 몇 사분면의 각이냐에 따라 삼각함수를 변환한다.\nn이 짝수이면 삼각함수를 변환하지 않고, n이 홀수이면 삼각함수를 변환(\\sin \\to \\cos, \\cos \\to \\sin, \\tan \\to \\cot)한다.\n\\theta의 부호와 관계없이 반드시 양의 부호로 변환한다.\n\n\n\n\n삼각함수의 각 변환 공식\n\n\\sin(120^\\circ) = \\sin(90^\\circ \\times 1+ 30^\\circ) = \\cos(30^\\circ) = \\frac{\\sqrt{3}}{2}\n\\sin(120^\\circ) = \\sin(90^\\circ \\times 2 - 60^\\circ) = \\sin(60^\\circ) = \\frac{\\sqrt3}{2}\n\\cos(120^\\circ) = \\cos(90^\\circ \\times 1 + 30^\\circ) = -\\cos(60^\\circ) = -\\frac{1}{2}\n\\cos(120^\\circ) = \\cos(90^\\circ \\times 2 - 60^\\circ) = -\\cos(60^\\circ) = -\\frac{1}{2}\n\\tan(150^\\circ) = \\tan(90^\\circ \\times 1 + 60^\\circ) = -\\cot(60^\\circ) = -\\frac{1}{\\sqrt{3}}\n\\sin(210^\\circ) = \\sin(90^\\circ \\times 1 + 120^\\circ) = \\cos(120^\\circ) = -\\frac{1}{2}\n\n예제\n\n\\sin(\\frac{\\pi}{2} + \\theta) = \\cos\\theta\n\\sin(\\frac{\\pi}{2} - \\theta) = \\cos\\theta\n\\cos(\\frac{\\pi}{2} + \\theta) = -\\sin\\theta\n\\cos(\\frac{\\pi}{2} - \\theta) = \\sin\\theta\n\\tan(\\frac{\\pi}{2} + \\theta) = -\\cot\\theta\n\\tan(\\frac{\\pi}{2} - \\theta) = \\cot\\theta\n\\sin(\\pi + \\theta) = -\\sin\\theta\n\\sin(\\pi - \\theta) = \\sin\\theta\n\\cos(\\pi + \\theta) = -\\cos\\theta\n\\cos(\\pi - \\theta) = -\\cos\\theta\n\\tan(\\pi + \\theta) = \\tan\\theta\n\\tan(\\pi - \\theta) = -\\tan\\theta\n\\sin(\\frac{3\\pi}{2} + \\theta) = -\\cos\\theta\n\\sin(\\frac{3\\pi}{2} - \\theta) = -\\cos\\theta\n\\cos(\\frac{3\\pi}{2} + \\theta) = -\\sin\\theta\n\\cos(\\frac{3\\pi}{2} - \\theta) = \\sin\\theta\n\\tan(\\frac{3\\pi}{2} + \\theta) = \\cot\\theta\n\\tan(\\frac{3\\pi}{2} - \\theta) = -\\cot\\theta\n\\sin(2\\pi + \\theta) = \\sin\\theta\n\\sin(2\\pi - \\theta) = -\\sin\\theta\n\\cos(2\\pi + \\theta) = \\cos\\theta\n\\cos(2\\pi - \\theta) = \\cos\\theta\n\\tan(2\\pi + \\theta) = \\tan\\theta\n\\tan(2\\pi - \\theta) = -\\tan\\theta\n\\sin(-\\frac{\\pi}{2} + \\theta) = -\\cos\\theta\n\\sin(-\\frac{\\pi}{2} - \\theta) = -\\cos\\theta\n\\cos(-\\frac{\\pi}{2} + \\theta) = \\sin\\theta\n\\cos(-\\frac{\\pi}{2} - \\theta) = -\\sin\\theta\n\\tan(-\\frac{\\pi}{2} + \\theta) = -\\cot\\theta\n\\tan(-\\frac{\\pi}{2} - \\theta) = \\cot\\theta\n\\sin(-\\pi + \\theta) = -\\sin\\theta\n\\sin(-\\pi - \\theta) = -\\sin\\theta\n\\cos(-\\pi + \\theta) = -\\cos\\theta\n\\cos(-\\pi - \\theta) = -\\cos\\theta\n\\tan(-\\pi + \\theta) = \\tan\\theta\n\\tan(-\\pi - \\theta) = \\tan\\theta\n\\sin(-\\frac{3\\pi}{2} + \\theta) = \\cos\\theta\n\\sin(-\\frac{3\\pi}{2} - \\theta) = \\cos\\theta\n\\cos(-\\frac{3\\pi}{2} + \\theta) = -\\sin\\theta\n\\cos(-\\frac{3\\pi}{2} - \\theta) = \\sin\\theta\n\\tan(-\\frac{3\\pi}{2} + \\theta) = -\\cot\\theta\n\\tan(-\\frac{3\\pi}{2} - \\theta) = \\cot\\theta\n\\sin(-2\\pi + \\theta) = -\\sin\\theta\n\\sin(-2\\pi - \\theta) = -\\sin\\theta\n\\cos(-2\\pi + \\theta) = \\cos\\theta\n\\cos(-2\\pi - \\theta) = \\cos\\theta\n\\tan(-2\\pi + \\theta) = -\\tan\\theta\n\\tan(-2\\pi - \\theta) = -\\tan\\theta\n"},"Class/미적/삼차-함수":{"slug":"Class/미적/삼차-함수","filePath":"Class/미적/삼차 함수.md","title":"삼차함수(Cubic function)","links":[],"tags":["삼차함수","근","비율","넓이"],"content":"\n삼차 함수는 도함수의 근의 개수에 따라 총 3가지로 분류된다. 삼차 함수는 항상 점대칭이며, 이때 대칭점(변곡점)의 x좌표는 x=-\\frac{b}{3a}이므로 근과 계수와의 관계에 의해 삼차 함수 세 근의 평균값과 일치한다. 즉, 삼차함수의 모든 근의 합은 대칭점(변곡점)의 x좌표의 3배와 같다.1\n삼차 함수의 근의 개수\n\n근이 1개 인 경우 : (극댓값) \\times (극솟값) &gt; 0\n근이 2개 인 경우 : (극댓값) \\times (극솟값) = 0\n근이 3개 인 경우 : (극댓값) \\times (극솟값) &lt; 0\n\n\n삼차 함수의 비율관계\n\n극값에서 접선을 그었을 때, 변곡점을 기준으로 접선과 삼차 함수가 만나는 점들의 x좌표 사이의 길이는 같다.2\n\n\n\n변곡점을 지나는 직선을 그리고, 그 직선에 평행한 직선이 삼각함수와 접할 때 x좌표의 각 교점의 비율은 1:\\sqrt3이다.\n\n\n삼차함수의 넓이와 극값\n\n삼차 함수의 세 근 \\alpha,~\\beta,~\\gamma을 가질 때, S_1의 넓이는 \\frac{|a|(l+2m)l^3}{12}이다.\n\n\n\n삼차 함수의 두 근이 \\alpha,~\\beta을 가질 때, S_2의 넓이는 \\frac{|a||\\beta - \\alpha|^4}{12}이다.\n\n\n\n삼차 함수의 극값의 x좌표를 각각 \\alpha,~\\beta라 할 때, |f(\\alpha)-f(\\beta)|=\\frac{|a||\\beta - \\alpha|^3}{2}이다. 3\n\n\n변곡점에서의 순간변화율\n삼차 함수에서 변곡점의 순간변화율과 같은 임의의 두 점에서의 평균변화율은 존재하지 않는다. 삼차 함수 위에 적당한 두 점이 존재하여 그 두 점의 평균변화율이 변곡점의 순간변화율과 같아진다면 변곡점에서의 접선이 평행이동한 함수와 원함수가 만나는 두 점이 존재한다. 그런데, f(x) = ax^3 + bx^2 + cx + d의 변곡점 t=-\\frac{b}{3a}에 접선을 l(x) = (3at^2 + 2bt + x)(x - t) + at^3 + bt^2 + cx + d라 하면, f(x) - l(x) = a(x - t)^3이다. 따라서 l(x)를 평행이동한 l(x) + p에 대하여, f(x) - l(x) - p = a(x - t)^3 - p이므로, 모순이 생긴다. 따라서 삼차 함수에서 변곡점의 순간변화율과 같은 임의의 두 점에서의 평균변화율은 존재하지 않는다. (삼차함수의 변곡점은 평균값 정리의 역이 성립하지 않는 반례다.)\nFootnotes\n\n\n삼차 함수 f(x)=ax^{3} + bx^{2} + cx + d에서 f &#039;&#039;(x)=6ax+2b=0인 x=-\\frac{b}{3a}이다. 따라서 삼차 함수는 변곡점이 한 개 존재한다. 임의의 양수 t에 대하여 f\\left(-\\frac{b}{3a} + t\\right) + f\\left(-\\frac{b}{3a} - t\\right) = 2f\\left(-\\frac{b}{3a}\\right)가 성립하므로 삼차 함수 f(x)는 변곡점에 대하여 대칭이다. ↩\n\n\n삼차 함수는 변곡점에 대해 대칭이므로 변곡점을 원점이라 해도 일반성을 잃지 않는다. 또한 x좌표만 관찰할 것이므로 최고차항의 계수를 1이라 해도 마찬가지로 일반성을 잃지 않는다. 따라서 삼차 함수를 f(x) = x^3 - ax라 두자. 삼차 함수 위의 한 점 x=-t에서 접선의 방정식은 l(x) = (3t^2 - a)x + 2t^3이며, f(x) - l(x) = x^3 - 3t^2x - 2t^3 = (x + t)^2(x - 2t)이므로, 접선과 함수의 교점의 x좌표는 -t와 2t이다. 그러므로 원점(변곡점)을 기준으로 평행한 두 접선과의 교점과 변곡점의 x좌표는 1:1:1:1의 비율이 성립한다. ↩\n\n\n삼차 함수 f(x) = ax^3 + bx^2 + cx + d의 극값의 차는 도함수와 x축으로 둘러싸인 넓이와 일치하므로 f&#039;(x) = 3ax^2 + 2bx + c의 두 근 \\alpha, \\beta에서의 넓이와 같다. 따라서 삼차 함수의 극댓값과 극솟값의 차는 \\int_{\\alpha}^{\\beta} |3a(x - \\alpha)(x - \\beta)| \\, dx = \\frac{|a||\\beta - \\alpha|^3}{2}이다. 이는 이차 함수의 넓이 공식을 이용하면 직관적으로 유도할 수 있다. ↩\n\n\n"},"Class/미적/수열의-귀납적-정의":{"slug":"Class/미적/수열의-귀납적-정의","filePath":"Class/미적/수열의 귀납적 정의.md","title":"수열의 귀납적 정의(Recursive Definition of a Sequence)","links":[],"tags":[],"content":"수열의 귀납적 정의\n수열을 정의하는 방법에는 일반항 a_n을 직접 식으로 나타내는 방법 외에, 처음 몇 개의 항과 이웃하는 항들 사이의 관계를 이용하여 정의하는 방법이 있습니다. 이러한 방법을 수열의 귀납적 정의라고 합니다.\n수열 \\{a_n\\}을 귀납적으로 정의하기 위해서는 다음 두 가지 조건이 반드시 필요합니다.\n\n\n첫째항 a_1의 값 (또는 경우에 따라 처음 몇 개의 항)\n이웃하는 두 항 a_n과 a_{n+1} 사이의 관계식\n\n\n이 두 조건이 주어지면, 점화식에 n=1, 2, 3, \\cdots을 차례로 대입하여 수열의 모든 항을 순서대로 알아낼 수 있습니다.\n귀납적 정의로부터 일반항 찾기\n귀납적 정의 자체로는 수열의 항들을 직접적으로 찾을 수 있지만, 때로는 이 정의를 통해 일반항을 찾는 것이 유용할 수 있습니다.\n등차수열\n\\begin{align*}\na_{n+1} - a_n = d &amp;\\Longleftrightarrow a_{n+1} = a_n + d\\\\\n&amp;\\Longleftrightarrow a_{n+1} - a_n =  a_{n+2} - a_{n+1} \\\\\n&amp;\\Longleftrightarrow 2a_{n+1} = a_n + a_{n+2}\\\\\n&amp;\\Longleftrightarrow a_{n+1} = \\frac{a_n + a_{n+2}}{2}\n\\end{align*}\n만약 수열이 a_{n+1} = a_n + d 라는 규칙을 따른다고 합시다. 이 규칙은 다음 항은 바로 전 항에 항상 d를 더해서 얻는다는 의미입니다. 일반항 a_n을 찾기 위해 n에 1, 2, 3, \\cdots을 차례로 넣어 어떤 패턴이 나타나는지 살펴보겠습니다.\n\\begin{align*}\na_2 &amp;= a_1 + d \\\\\na_3 &amp;= a_2 + d = (a_1 + d) + d = a_1 + 2d \\\\\na_4 &amp;= a_3 + d = (a_1 + 2d) + d = a_1 + 3d \\\\\na_5 &amp;= a_4 + d = (a_1 + 3d) + d = a_1 + 4d \\\\\n\\end{align*}\na_n을 구할 때, a_1에 d를 (n-1)번 더하게 됩니다. 이 과정을 통해 우리는 다음과 같은 일반항을 직접 유도할 수 있습니다.\na_n = a_1 + (n-1)d\n등비수열\n\\begin{align*}\na_{n+1} = ra_n&amp;\\Longleftrightarrow \\frac{{a_{n+1}}}{{a_n}}= r\\\\\n&amp;\\Longleftrightarrow \\frac{{a_{n+1}}}{{a_{n}}} = \\frac{{a_{n+2}}}{{a_{n+1}}} \\\\\n&amp;\\Longleftrightarrow a_{n+1}^2 = a_n \\cdot a_{n+2} \\\\\n&amp;\\Longleftrightarrow a_{n+1} = \\pm \\sqrt{a_n \\cdot a_{n+2}}\\\\\n\\end{align*}\n수열이 a_{n+1} = a_n \\cdot r 이라는 규칙을 따른다고 합시다. 다음 항이 이전 항에 r을 곱해서 만들어진다는 의미입니다. 위와 같이 n에 숫자를 차례로 넣어보겠습니다.\n\\begin{align*}\na_2 &amp;= a_1 \\cdot r \\\\\na_3 &amp;= a_2 \\cdot r = (a_1 \\cdot r) \\cdot r = a_1 \\cdot r^2 \\\\\na_4 &amp;= a_3 \\cdot r = (a_1 \\cdot r^2) \\cdot r = a_1 \\cdot r^3 \\\\\na_5 &amp;= a_4 \\cdot r = (a_1 \\cdot r^3) \\cdot r = a_1 \\cdot r^4 \\\\\n\\end{align*}\na_n을 구할 때, a_1에 공비 r을 (n-1)번 곱하게 됩니다. 따라서 일반항은 다음과 같이 유도됩니다.\na_n = a_1 \\cdot r^{n-1}\n조화수열\n\\begin{align*}\n\\frac{1}{a_{n+1}} - \\frac{1}{a_n} = d &amp;\\Longleftrightarrow \\frac{1}{a_{n+1}} = \\frac{1}{a_n} + d \\\\\n&amp;\\Longleftrightarrow \\frac{1}{a_{n+1}} - \\frac{1}{a_n} = \\frac{1}{a_{n+2}} - \\frac{1}{a_{n+1}} \\\\\n&amp;\\Longleftrightarrow \\frac{2}{a_{n+1}} = \\frac{1}{a_n} + \\frac{1}{a_{n+2}} \\\\\n&amp;\\Longleftrightarrow a_{n+1} = \\frac{2a_n a_{n+2}}{a_n + a_{n+2}}\n\\end{align*}\n조화수열은 수열의 역수가 등차수열인 경우를 말합니다. 새로운 수열 \\{b_n\\}을 b_n = \\frac{1}{a_n} 이라고 정의해 봅시다. 즉, 원래 수열의 모든 항을 역수로 바꾼 것입니다.\nb_{n+1} - b_n = d\n\n수열 \\{b_n\\}은 공차가 d인 등차수열입니다. \\{b_n\\}의 첫째항은 b_1 = \\frac{1}{a_1} 이므로, \\{b_n\\}의 일반항은 다음과 같습니다.\nb_n = b_1 + (n-1)d = \\frac{1}{a_1} + (n-1)d\n\n우리가 진짜 원하는 것은 a_n이므로, 위에서 구한 b_n을 다시 뒤집어 주면 됩니다.\na_n = \\frac{1}{b_n} = \\frac{1}{\\frac{1}{a_1} + (n-1)d}\na_{n+1} = a_n + f(n)꼴로 정의된 수열\n수열이 a_{n+1} = a_n + f(n)이라는 규칙을 따르는 경우(a.k.a. 계차수열)를 생각해 봅시다. 이 규칙은 다음 항이 이전 항에 일정한 수가 아닌, 항의 번호 n에 따라 변하는 값 f(n)을 더해서 만들어진다는 의미입니다. 이 수열의 일반항을 구하기 위해, 등차수열에서 했던 것과 비슷한 방법을 사용해 보겠습니다.\n규칙을 나타내는 식의 n 자리에 1, 2, 3, \\dots, n-1을 차례대로 대입하여 아래와 같이 나열합니다.\n\\begin{align*}\na_2 &amp;= a_1 + f(1) \\\\\na_3 &amp;= a_2 + f(2) \\\\\na_4 &amp;= a_3 + f(3) \\\\\n&amp;\\vdots \\\\\na_n &amp;= a_{n-1} + f(n-1)\n\\end{align*}\n위 식을 변끼리 더하면, 좌변과 우변에 공통으로 있는 항들(a_2, a_3, \\dots, a_{n-1})이 양쪽에서 똑같이 소거됩니다.\n\\begin{array}{rll}\n   \\cancel{a_2} &amp;= a_1 + f(1) \\\\\n   \\cancel{a_3} &amp;= \\cancel{a_2} + f(2) \\\\\n   \\cancel{a_4} &amp;= \\cancel{a_3} + f(3) \\\\\n               &amp;\\vdots \\\\\n+ \\quad a_n   &amp;= \\cancel{a_{n-1}} + f(n-1) \\\\\n\\hline\n   a_n         &amp;= a_1 + f(1) + f(2) + \\dots + f(n-1) \\\\\n\\end{array}\n그러면 좌변에는 a_n만 남고, 우변에는 a_1과 f(n)들의 합만 남게 됩니다. 따라서 일반항은 다음과 같이 유도됩니다.\n\\begin{align*}\na_n &amp;= a_1 + f(1) + f(2) + \\dots + f(n-1)\\\\\n &amp;= a_1 + \\sum_{k=1}^{n-1} f(k) \\quad (\\text{단, } n \\ge 2)\n\\end{align*}\na_{n+1} = a_n f(n) 꼴로 정의된 수열\n수열이 a_{n+1} = a_n f(n)이라는 규칙을 따르는(a.k.a. 계비수열) 경우를 생각해 봅시다. 이 규칙은 다음 항이 이전 항에 일정한 수가 아닌, 항의 번호 n에 따라 변하는 값 f(n)을 곱해서 만들어진다는 의미입니다. 이 수열의 일반항을 구하기 위해, 등비수열에서 했던 것과 비슷한 방법을 사용해 보겠습니다.\n규칙을 나타내는 식의 n 자리에 1, 2, 3, \\dots, n-1을 차례대로 대입하여 아래와 같이 나열합니다.\n\\begin{align*}\na_2 &amp;= a_1 f(1) \\\\\na_3 &amp;= a_2 f(2) \\\\\na_4 &amp;= a_3 f(3) \\\\\n&amp;\\vdots \\\\\na_n &amp;= a_{n-1} f(n-1)\n\\end{align*}\n위 식을 변끼리 곱하면, 좌변과 우변에 공통으로 있는 항들(a_2, a_3, \\dots, a_{n-1})이 양쪽에서 똑같이 약분되어 사라집니다.\n\\begin{array}{rll}\n   \\cancel{a_2} &amp;= a_1 \\cdot f(1) \\\\\n   \\cancel{a_3} &amp;= \\cancel{a_2} \\cdot f(2) \\\\\n   \\cancel{a_4} &amp;= \\cancel{a_3} \\cdot f(3) \\\\\n               &amp;\\vdots \\\\\n\\times \\quad a_n   &amp;= \\cancel{a_{n-1}} \\cdot f(n-1) \\\\\n\\hline\n   a_n         &amp;= a_1 \\cdot f(1) \\cdot f(2) \\cdot \\dots \\cdot f(n-1) \\\\\n\\end{array}\n그러면 좌변에는 a_n만 남고, 우변에는 a_1과 f(n)들의 곱만 남게 됩니다. 따라서 일반항은 다음과 같이 유도됩니다.\n\\begin{align*}\na_n &amp;= a_1 \\cdot f(1) \\cdot f(2) \\cdot \\dots \\cdot f(n-1) \\\\\n &amp;= a_1 \\cdot \\prod_{k=1}^{n-1} f(k) \\quad (\\text{단, } n \\ge 2)\n\\end{align*}\na_{n+1} = pa_n + q 꼴로 정의된 수열 (p \\ne 1, q \\ne 0)\n이 형태의 규칙은 등차수열과 등비수열의 특징을 모두 가지고 있어 조금 더 복잡합니다. 일반항을 구하는 대표적인 두 가지 방법이 있습니다.\n방법 1: a_{n+1} - \\alpha = p(a_n - \\alpha) 꼴로 변형\n첫번째 방법은 우리가 이미 아는 등비수열 형태로 바꾸는 것입니다. 즉, a_{n+1} = pa_n + q를 적절한 상수 \\alpha를 찾아 a_{n+1} - \\alpha = p(a_n - \\alpha) 꼴로 변형하는 것입니다. 이렇게 하면 \\{a_n - \\alpha\\}라는 새로운 수열이 간단한 등비수열이 되어 일반항을 쉽게 구할 수 있습니다.\n먼저 목표 형태인 a_{n+1} - \\alpha = p(a_n - \\alpha)를 전개하여 원래 식 a_{n+1} = pa_n + q와 비교합니다.\na_{n+1} = pa_n - p\\alpha + \\alpha\n\n두 식이 완전히 같아지려면 상수항 부분이 일치해야 합니다. 이로부터 \\alpha 값을 유도할 수 있습니다.1\n\\begin{align*}\nq &amp;= -p\\alpha + \\alpha \\\\\n\\Rightarrow \\quad q &amp;= (1-p)\\alpha \\\\\n\\Rightarrow \\quad \\alpha &amp;= \\frac{q}{1-p}\n\\end{align*}\n위에서 구한 \\alpha를 이용하면, b_n = a_n - \\alpha 라는 새로운 수열을 생각할 수 있습니다. 이 수열 \\{b_n\\}은 b_{n+1} = p \\cdot b_n 을 만족하므로, 첫째항이 b_1 = a_1 - \\alpha이고 공비가 p인 등비수열입니다. 이제 등비수열의 일반항 공식을 이용하여 a_n을 구할 수 있습니다.\n\\begin{align*}\n&amp; b_n = b_1 \\cdot p^{n-1} \\\\\n\\Rightarrow \\quad&amp; a_n - \\alpha = (a_1 - \\alpha)p^{n-1} \\\\\n\\Rightarrow \\quad&amp; a_n = \\alpha + (a_1 - \\alpha)p^{n-1}\n\\end{align*}\n방법 2: 계차수열을 이용한 풀이\n두번째 방법은 원래 규칙의 n 자리에 n+1을 대입한 새로운 식을 만든 뒤, 두 식의 차를 이용하여 상수 q를 소거하는 것입니다. 이를 통해 \\{a_{n+1}-a_n\\}이 간단한 등비수열이 됨을 보이고, 최종적으로 a_n을 유도합니다.\n원래 규칙과, 그 다음 항에 대한 규칙을 나란히 놓고 변끼리 빼서 q를 소거합니다.\n\\begin{array}{rcrcr}\n  &amp; a_{n+2} &amp; = &amp; p a_{n+1} &amp; + q \\\\\n- &amp; a_{n+1} &amp; = &amp; p a_n &amp; + q \\\\\n\\hline\n  &amp; a_{n+2}-a_{n+1} &amp; = &amp; p(a_{n+1}-a_n)\n\\end{array}\n위 결과는 계차수열 b_n = a_{n+1} - a_n이 첫째항이 b_1=a_2-a_1이고 공비가 p인 등비수열임을 의미합니다. 따라서 b_n의 일반항은 b_n = (a_2-a_1)p^{n-1} 입니다. 우리가 최종적으로 원하는 a_n은 첫째항 a_1에 계차수열 b_k를 k=1부터 n-1까지 더한 값이므로, 등비수열 합 공식을 적용하여 다음과 같이 유도할 수 있습니다.\n\\begin{align*}\na_n &amp;= a_1 + \\sum_{k=1}^{n-1} b_k \\\\\n    &amp;= a_1 + \\sum_{k=1}^{n-1} (a_2-a_1)p^{k-1} \\\\\n    &amp;= a_1 + (a_2-a_1) \\sum_{k=1}^{n-1} p^{k-1} \\\\\n    &amp;= a_1 + (a_2-a_1) \\left( \\frac{p^{n-1}-1}{p-1} \\right)\n\\end{align*}\npa_{n+2} + qa_{n+1} + ra_n = 0 꼴로 정의된 수열 (p+q+r=0)\n이 형태는 세 개의 연속된 항에 대한 규칙이지만, 계수의 합이 0이 되는 특별한 조건(p+q+r=0) 덕분에 간단한 형태로 변형할 수 있습니다. 핵심 전략은 계수 사이의 관계를 이용해 식을 조작하여, 계차수열 \\{a_{n+1}-a_n\\}이 등비수열임을 밝혀내는 것입니다.\n주어진 조건 p+q+r=0을 이용하여 계수 q를 q=-p-r로 바꾸어 원래 식에 대입하고 정리합니다.\n\\begin{align*}\n&amp;pa_{n+2} + qa_{n+1} + ra_n = 0 \\\\\n\\Rightarrow \\quad &amp;pa_{n+2} + (-p-r)a_{n+1} + ra_n = 0 \\\\\n\\Rightarrow \\quad &amp;pa_{n+2} - pa_{n+1} - ra_{n+1} + ra_n = 0 \\\\\n\\Rightarrow \\quad &amp;p(a_{n+2} - a_{n+1}) = r(a_{n+1} - a_n) \\\\\n\\Rightarrow \\quad &amp;a_{n+2} - a_{n+1} = \\frac{r}{p}(a_{n+1} - a_n)\n\\end{align*}\n위 결과는 계차수열 b_n = a_{n+1} - a_n이 첫째항이 b_1 = a_2 - a_1이고 공비가 \\frac{r}{p}인 등비수열임을 의미합니다. 따라서 b_n의 일반항은 b_n = (a_2 - a_1)\\left(\\frac{r}{p}\\right)^{n-1} 입니다.\n\\begin{array}{rll}\n   \\cancel{a_2}-a_1 &amp;= a_2-a_1 \\\\\n   \\cancel{a_3}-\\cancel{a_2} &amp;= (a_2-a_1)\\left(\\frac{r}{p}\\right)^1 \\\\\n   \\cancel{a_4}-\\cancel{a_3} &amp;= (a_2-a_1)\\left(\\frac{r}{p}\\right)^2 \\\\\n   &amp;\\vdots \\\\\n+ \\quad a_n - \\cancel{a_{n-1}} &amp;= (a_2-a_1)\\left(\\frac{r}{p}\\right)^{n-2} \\\\\n\\hline\n   a_n-a_1 &amp;= (a_2-a_1)\\left\\{1+\\left(\\frac{r}{p}\\right)^1+\\left(\\frac{r}{p}\\right)^2+\\dots+\\left(\\frac{r}{p}\\right)^{n-2}\\right\\} \\\\\n\\therefore \\quad a_n &amp;= a_1 + (a_2-a_1)\\sum_{k=1}^{n-1}\\left(\\frac{r}{p}\\right)^{k-1}\n\\end{array}\n우리가 최종적으로 원하는 a_n은 첫째항 a_1에 계차수열 b_k를 k=1부터 n-1까지 더한 값이므로, 등비수열 합 공식을 적용하여 다음과 같이 유도할 수 있습니다.\na_n = a_1 + (a_2-a_1) \\left( \\frac{ \\left(\\frac{r}{p}\\right)^{n-1} - 1 }{ \\frac{r}{p} - 1 } \\right)\na_{n+1} = \\frac{ra_n}{pa_n + q} 꼴로 정의된 수열\n분수 형태의 복잡한 규칙처럼 보이지만, 이 문제의 해결책은 양변에 역수를 취하는 것입니다. 이 방법은 조화수열의 일반항을 구할 때와 마찬가지로, 복잡한 식을 우리가 이미 해결 방법을 아는 선형적인 형태(b_{n+1} = Ab_n + B)로 바꾸어 줍니다.\n주어진 규칙의 양변에 역수를 취하여 식을 정리합니다.\n\\begin{align*}\n\\frac{1}{a_{n+1}} &amp;= \\frac{pa_n + q}{ra_n} \\\\\n               &amp;= \\frac{pa_n}{ra_n} + \\frac{q}{ra_n} \\\\\n               &amp;= \\frac{p}{r} + \\frac{q}{r} \\cdot \\frac{1}{a_n}\n\\end{align*}\n이제 b_n = \\frac{1}{a_n}로 치환하면, 위 식은 b_{n+1} = \\frac{q}{r} b_n + \\frac{p}{r} 라는 새로운 규칙으로 바뀝니다. 이것은 이전에 다룬 a_{n+1} = pa_n + q 꼴의 규칙과 정확히 일치하므로, 해당 풀이법을 적용하여 수열 \\{b_n\\}의 일반항을 구한 뒤, 그 역수를 취해 a_n을 찾을 수 있습니다.(단, b_1=\\frac{1}{a_1})\n\\begin{align*}\n&amp;b_n = \\alpha + (b_1 - \\alpha)A^{n-1} \\\\\n\\Rightarrow \\quad &amp;\\frac{1}{a_n} = \\frac{p}{r-q} + \\left(\\frac{1}{a_1} - \\frac{p}{r-q}\\right)\\left(\\frac{q}{r}\\right)^{n-1} \\\\\n\\Rightarrow \\quad &amp;a_n = \\frac{1}{\\frac{p}{r-q} + \\left(\\frac{1}{a_1} - \\frac{p}{r-q}\\right)\\left(\\frac{q}{r}\\right)^{n-1}}\n\\end{align*}\n예제\n다음과 같이 정의된 수열 \\{a_n\\}의 일반항 a_n을 구하시오. (단, n=1, 2, 3, \\dots)\n\na_1=-2,  a_{n+1}=a_n+42\na_1=5, a_{n+1}=-2a_n3\na_1=\\frac{1}{7}, \\frac{1}{a_{n+1}}=\\frac{1}{a_n}-24\na_1=3, a_{n+1}=a_n+2n5\na_1=1, a_{n+1}=2a_n+36\na_1=6, a_{n+1}=\\frac{1}{2}a_n - 17\na_1=1, \\ a_2=2, 3a_{n+2}-5a_{n+1}+2a_n=08\na_1=\\frac{1}{2}, a_{n+1}=\\frac{a_n}{3a_n+1}9\n\nFootnotes\n\n\na_n이 \\alpha로 수렴한다고 가정하면, \\alpha = p \\alpha +q라는 식을 얻을 수 있습니다. 이를 정리하면 \\alpha = \\frac{q}{1-p}가 됩니다. 단, 이때 p \\ne 1이어야 합니다. ↩\n\n\na_n = 4n-6 ↩\n\n\na_n = 5(-2)^{n-1} ↩\n\n\na_n = \\frac{1}{9-2n} ↩\n\n\na_n = n^2-n+3 ↩\n\n\na_n = 2^{n+1}-3 ↩\n\n\na_n = 2^{4-n}-2 ↩\n\n\na_n = 4-3\\left(\\frac{2}{3}\\right)^{n-1} ↩\n\n\na_n = \\frac{1}{3n-1} ↩\n\n\n"},"Class/미적/연속-함수":{"slug":"Class/미적/연속-함수","filePath":"Class/미적/연속 함수.md","title":"연속 함수(Continuous)","links":[],"tags":["연속","함수"],"content":"연속의 정의\n\\lim_{x \\rightarrow a}f(x) = f(a)\n함수 f(x)가 실수 a에 대하여 x=a에서 의 좌극한, 우극한, 함숫값이 같으면 연속이라 한다. 연속은 &#039;함수가 이어져있음&#039;을 의미하지 않는다는 점을 유의하자.\n연속의 성질\n연속함수 f(x), ~g(x)에 대하여,\n\nf(x) \\pm g(x)도 연속이다.\nf(x) \\times g(x)도 연속이다.\n\\frac{f(x)}{g(x)}도 연속이다. (단, g(x) \\not= 0)\n역함수가 존재한다면, f^{-1}(x)도 연속이다.\n함수가 잘 정의된다면, f(g(x)),~ g(f(x))도 연속이다.\n\\lim_{x \\rightarrow a} {f(x)=f( \\lim _{x \\rightarrow a} {x} )} =f(a)\n\n연속 함수가 갖는 가장 큰 의미는 극한과 함수가 서로 교환될 수 있다는 점이다.\n연속 함수f(x)와 불연속 함수 g(x)의 연산\n\n1. f(x)g(x)는 x=0에서 연속인가?\n\\begin{array}{c|c|c|c}\n&amp; f (x) &amp; g(x) &amp; f(x)g(x) \\\\ \\hline\nx=0^+ &amp; 0 &amp; 1^- &amp; 0 \\\\ \\hline\nx=0^- &amp; 0 &amp; -1^+ &amp; 0 \\\\ \\hline\nx=0 &amp; 0 &amp; 0 &amp; 0  \\\\\n\\end{array}\ng(x)는 x=0에서 불연속이므로 좌극한, 우극한, 함숫값이 서로 다르다. 반면에 f(x)는 연속이므로 x=0에서 좌극한, 우극한, 함숫값이 같다. 이 두 함수을 곱해서 같은 좌극한, 우극한, 함숫값이 같기위해서는 f(0)=0이어야만 한다.\n2. f(g(x))는 x=0에서 연속인가?\n\\begin{array}{c|c|c}\n&amp; g(x) &amp; f(g(x)) \\\\ \\hline\nx=0^+ &amp; 1^- &amp; 0 \\\\ \\hline\nx=0^- &amp; -1^+ &amp; 0  \\\\ \\hline\nx=0 &amp; 0 &amp; 0   \\\\\n\\end{array}\nf(x)는 연속이므로 연속 함수의 성질에 의해 \\lim_{x \\rightarrow a} f(x) = f( \\lim_{x \\rightarrow a} g(x) )이다. 따라서 f(g(a+))=f(g(a-))=f(g(a))이면 x=a에서 f(g(x))가 연속이다. 쉽게 설명하면 g(x)그래프에서 불연속일 때의 y값들에 대해 f(y)의 값이 모두 같으면 연속이다.\n3. g(f(x))는 x=0에서 연속인가?\n\\begin{array}{c|c|c}\n&amp; f (x) &amp; g(f(x)) \\\\ \\hline\nx=0^+ &amp; 0 &amp; 0 \\\\ \\hline\nx=0^- &amp; 0 &amp; 0  \\\\ \\hline\nx=0 &amp; 0 &amp; 0   \\\\\n\\end{array}\n이 경우에는 정석으로 찾는 방법이 간단하긴 하지만 되도록 합성함수의 그래프를 그려서 전체적으로 판단하는 것이 좋다. 예를 들어 f(x)의 치역은 1에서 0을 지나 다시 1로 이동한다. 이를 g(x)에 정의역에 넣어 보면 x=1에서 x=0으로 갈 때는 연속이지만 x=0인 순간 불연속이 된다. 같은 방법으로 x=0에서 x=1로 이동할 때 다시 불연속이므로 g(f(x))의 불연속점이 2개라는 것을 직관적으로 찾아낼 수 있어야 한다.\n\n\n                  \n                  연속함수와 불연속함수의 연산 \n                  \n                \n\n\n\ng(x)가 불연속인 점에서 f(x)의 함숫값이 0이면 f(x)g(x)는 연속이다.\nf(g(a+))=f(g(a-))=f(g(a))이면 f(g(x))는 연속이다.\nf(x)의 함숫값이 g(x)의 불연속인 정의역 값을 지나지 않으면 g(f(x))는 연속이다.\n\n\n\n\n4. 발산하는 불연속 함수와의 곱셈^\\dagger\n함수 g(x) = \\begin{cases} \\frac{1}{x^2 - 1} &amp; (x \\neq \\pm 1) \\\\ 2 &amp; (x = \\pm 1) \\end{cases} 에 대하여 함수 f(x)g(x)가 모든 실수에서 연속이게 하는 다항함수 f(x)의 조건을 구해보자.\n\n이 문제는 곱함수의 연속성을 묻는 질문이므로 앞서 본 것과 같이 g(x)가 불연속인 x값에 대하여 f(x)=0이어야 한다. 그런데 앞선 경우에는 g(x)의 극한값이 존재했지만, 이번 경우에는 발산하므로  f(x)=0인 조건으로는 부족하다. 예를들어 f(x)=x^2-1로 둔다면, f(x)g(x) = \\begin{cases} 1 &amp; (x \\neq \\pm 1) \\\\ 2(x^2 - 1) &amp; (x = \\pm 1) \\end{cases}이다. 이 함수는 x=1에서 극한값은 1이지만 함숫값은 0이므로 불연속이다. 따라서 극한값도 0으로 수렴하게 만들기 위해서는 g(x)가 x=1에서 무한대로 발산하는 속도보다 더 빠른 속도로 0으로 수렴해야 한다. 이를 정리하면 f(x)=(x-1)^n(x+1)^mQ(x), (n,~m&gt;1)이다.\n예제\n\nf(x) = \\begin{cases} x &amp; (x \\in \\mathbb{Q}) \\\\ 0 &amp; (x \\in \\mathbb{Q}^c) \\end{cases}는 x=0에서 연속인가?\n\n\n\nX = [0,1] \\cup [2,3]에서 정의된 함수 f(x)가 다음과 같을 때, f(x)는 연속인가?\n\nf(x) = \\begin{cases} x &amp; (x \\in [0,1]) \\\\ x-1 &amp; (x \\in [2,3]) \\end{cases}\n\nf(x) = \\begin{cases} x \\sin (\\frac{1}{x}) &amp; (x \\not= 0) \\\\ 0 &amp; (x =0) \\end{cases}는 x=0에서 연속인가? 나아가 미분가능한가?\n\n\n\n실수 전체의 집합에서 정의된 함수 y=f(x)의 그래프는 그림과 같다. 삼차함수 g(x)는 최고차항의 계수가 1이고, g(0)=3이다. 합성함수 (g\\circ f)(x)가 실수 전체의 집합에서 연속일 때, g(3)의 값은?\n\n\n\n함수 f(x) = \\begin{cases} x^2-2x-1 &amp; (x &lt;1 ) \\\\ 1 &amp; (x =1) \\\\ -x^2+2x+1 &amp;(x&gt;1) \\end{cases}에 대하여, y=f(f(x))의 불연속점의 개수는?\n"},"Class/미적/우함수와-기함수":{"slug":"Class/미적/우함수와-기함수","filePath":"Class/미적/우함수와 기함수.md","title":"우함수와 기함수(Even & Odd function)","links":[],"tags":["우함수","기함수","넓이"],"content":"함수 f가 정의역의 임의의 원소에 대하여\nx^0, ~x^2, ~x^4, \\cdots와 같이 짝수 차수만을 갖는 함수처럼 f(-x)=f(x)이면 우함수(짝함수, even function) 라 부르며, y축 대칭인 성질을 갖는다.\nx^1, ~x^3, ~x^5, \\cdots와 같이 홀수 차수만을 갖는 함수처럼 f(-x)=-f(x)이면 기함수(홀함수, odd function) 라 부르며, 원점 대칭인 성질을 갖는다.\n우함수와 기함수의 적분\n함수 f(x)가 우함수면, y축 대칭이므로 \\int_{-a}^{a} f(x) \\, dx = 2 \\int_{0}^{a} f(x) \\, dx이다.\n함수 f(x)가 기함수면, 원축 대칭이므로 \\int_{-a}^{a} f(x) \\, dx = 0이다.\n\n그래프의 성질에 의해 우함수는 y축 대칭이므로\\int _{a} ^{b} {f(x)dx= \\int _{-b} ^{-a} {f(x)dx}}이며, 기함수는 원점대칭이므로 \\int _{a} ^{b} {f(x)dx= -\\int _{-b} ^{-a} {f(x)dx}}이다.(why?)\n모든 함수는 우함수와 기함수의 합으로 나타낼 수 있는가?\n임의의 함수 f(x)에 대하여 \\frac{f(x) + f(-x)}{2}는 우함수이며, \\frac{f(x) - f(-x)}{2}는 기함수이다. 이 때, f(x) = \\frac{f(x) + f(-x)}{2} + \\frac{f(x) - f(-x)}{2}이므로, 임의의 함수 f(x)는 우함수와 기함수의 합으로 유일하게 표현할 수 있다.1\nf(x) = \\frac{f(x) + f(-x)}{2} + \\frac{f(x) - f(-x)}{2}\n이 논리를 이용하여 다양한 함수의 특성을 파악할 수 있다.23\n예제\n\nf(x)가 우함수, g(x)가 기함수일 때, 다음 함수가 우함수인지 기함수인지 판별하라.\n\n\nf(x) +f(x)\nf(x)+g(x)\ng(x)+g(x)\nf(x) \\times f(x)\nf(x) \\times g(x)\ng(x) \\times g(x)\nf(f(x))\nf(g(x))\ng(f(x))\ng(g(x))\n\n\n다음 명제가 참이면 증명하고, 거짓이면 반례를 들어라.\n\n\n기함수는 원점을 지난다.\n우함수를 미분하면 기함수이다.\n기함수를 미분하면 우함수이다.\n우함수를 적분하면 기함수이다.\n기함수를 적분하면 우함수이다.\n우함수이며 동시에 기함수인 함수는 존재하지 않는다.\n기함수가 일대일 대응이면 역함수는 기함수이다.\n모든 함수는 우함수와 기함수의 합으로 유일하게 반드시 표현할 수 있다.\n\n\n\\int_{-2}^{2}(x+|x|+2)dx의 값은?\n\\int_{-1}^{1} 2^x+3^x+2^{-x}-3^{-x}dx의 값은?\n다항함수 f(x)가 모든 실수 x에 대하여 f(-x)=f(x)를 만족시키고, \\int_{0}^{1}f(x) dx=2일 때, \\int_{-1}^{1} (x^3-3x+2)f(x) dx의 값은?\n두 다항함수 f(x), ~g(x)가 모든 실수 x에 대하여 f(-x)=f(x), ~g(-x)=g(x)를 만족시킨다. h(x)=f(x)g(x)에 대하여 \\int_{-2}^{2}(x+4)h&#039;(x)dx=8일 때, h(2)의 값은?\n다항함수 f(x)가 \\int_{-1}^{3} \\left\\{ x f(x) + x f(-x) \\right\\} \\, dx = 6, ~\\int_{-3}^{-1} \\left\\{ x f(x) - x f(-x) \\right\\} \\, dx = 4일 때, \\int_{1}^{3} x f(-x) \\, dx의 값은?\n다항함수 f(x)에 대하여 \\int_{-1}^{2} x f\\left(x^2\\right) \\, dx = 1,~\\int_{-3}^{1} x f\\left(x^2\\right) \\, dx = -4일 때, \\int_{-2}^{3} x f\\left(x^2\\right) \\, dx의 값은?\n\nFootnotes\n\n\n임의의 함수 f(x)에 대하여 우함수 g(x)와 기함수 h(x)가 f(x) = g(x) + h(x)를 만족한다고 하자. f(-x) = g(-x) + h(-x) = g(x) - h(x)이므로, f(x)+f(-x) = 2g(x), f(x)-f(-x) = 2h(x)이다. 따라서, g(x) = \\frac{f(x) + f(-x)}{2}, h(x) = \\frac{f(x) - f(-x)}{2}이다. 그러므로, 임의의 함수 f(x)는 우함수와 기함수의 합으로 유일하게 표현할 수 있다. ↩\n\n\nf(x)=e^x라 하면, f(-x)=e^{-x}이므로, \\frac{f(x)+f(-x)}{2} = \\frac{e^x+e^{-x}}{2}이고, \\frac{f(x)-f(-x)}{2} = \\frac{e^x-e^{-x}}{2}이다. 이 때, \\frac{e^x + e^{-x}}{2} = \\cosh(x)라 하고, \\frac{e^x - e^{-x}}{2} = \\sinh(x)라 한다. 삼각 함수가 원을 기술하듯이, \\cosh(x), \\sinh(x)는 쌍곡선(Hyperbolic)을 나타내는 함수(\\cosh^2(x) - \\sinh^2(x) = 1)이며, \\cosh(x)는 현수선으로, 중력장에서 최소한의 에너지를 가지는 곡선(전선이나 다리의 케이블이 매달렸을 때의 형태)이다. ↩\n\n\nf(x)=e^{ix}라 하면, f(-x)=e^{-ix}이므로, \\frac{f(x)+f(-x)}{2} = \\frac{e^{ix}+e^{-ix}}{2}이고, \\frac{f(x)-f(-x)}{2} = \\frac{e^{ix}-e^{-ix}}{2}이다. 오일러 항등식에 의해 e^{ix} = \\cos x + i \\sin x이므로, \\frac{e^{ix}+e^{-ix}}{2} = \\cos x, \\frac{e^{ix}-e^{-ix}}{2i} = \\sin x이다. ↩\n\n\n"},"Class/미적/테일러-급수":{"slug":"Class/미적/테일러-급수","filePath":"Class/미적/테일러 급수.md","title":"테일러 급수(Taylor series)","links":[],"tags":["급수","매클로린","테일러"],"content":"테일러 급수\n함수 f가 a \\in \\mathbb{R}에서 여러번 미분 가능할 때, 다항함수로 근사한 식을 테일러 급수라고 부른다.\n\\begin{align*}\nT_f(x) &amp;= \\sum_{n=0}^{\\infty} \\frac{f^{(n)}(a)}{n!} (x-a)^n \\\\\n&amp;= f(a) + f&#039;(a)(x-a) + \\frac{1}{2!} f&#039;&#039;(a)(x-a)^2 + \\frac{1}{3!} f&#039;&#039;&#039;(a)(x-a)^3 +\\cdots\\\\\n\\end{align*}\n특히, a=0일 때의 테일러급수를 매클로린급수라고 부른다.\n\\begin{align*}\nM_f(x) &amp;= \\sum_{n=0}^{\\infty} \\frac{f^{(n)}(0)}{n!} x^n \\\\\n&amp;= f(0) + f&#039;(0)x + \\frac{1}{2} f&#039;&#039;(0)x^2 + \\frac{1}{3!} f&#039;&#039;&#039;(0)x^3 + \\cdots\n\\end{align*}\n여러 가지 함수의 매클로린 급수\n\\begin{align*}\n\\sin(x) &amp;= x - \\frac{x^3}{3!} + \\frac{x^5}{5!} - \\frac{x^7}{7!} + \\cdots\\\\\n\\cos(x) &amp;= 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} + \\cdots\\\\\n\\tan(x) &amp;= x - \\frac{x^3}{3} + \\frac{2x^5}{15} - \\frac{17x^7}{315} + \\cdots\\\\\n\\exp(x) &amp;= 1 + x + \\frac{x^2}{2!} + \\frac{x^3}{3!} + \\cdots\\\\\n\\ln(1+x) &amp;= x - \\frac{x^2}{2} + \\frac{x^3}{3} - \\frac{x^4}{4} + \\cdots\\\\\n\\frac{1}{1-x} &amp;= 1 + x + x^2 + x^3 + \\cdots\n\\end{align*}\n테일러 급수의 의미있는 결과\n테일러 급수와 로피탈의 결과를 응용하면 x \\rightarrow 0일 때, 다음과 같은 결과를 얻을 수 있다.\n\\begin{align*}\nax &amp;~= ~\\sin(ax) ~=~\\tan(ax) ~=~ \\ln(1 + ax)~ =~ e^{ax} - 1\\\\\n\\frac{1}{2} (ax)^2 &amp;~=~ 1 - \\cos(ax) ~=~ \\sec(ax) - 1 \\\\\n\\frac{1}{2} (ax)^3 &amp;~=~ \\tan(ax) - \\sin(ax)\n\\end{align*}"},"Class/미적/편미분":{"slug":"Class/미적/편미분","filePath":"Class/미적/편미분.md","title":"편미분","links":[],"tags":["미분"],"content":"\n\n                  \n                  편미분 \n                  \n                \n\n\n\ny에 대하여 미분한다.(x를 상수 취급)\ny에 0을 대입한다.(문제에 따라 다른 수를 대입)\n\n\n\n\n미분의 정의\nf(x+y)=f(x)+f(y)+2xy에 대하여 x,~y에 각각 0을 대입하면, f(0)=2f(0)이므로, f(0)=0이다. f(x)를 이항한 후, y로 양변을 나누면 식 (1)과 같다. 이후 양변에 극한 (y \\rightarrow 0)을 취하면, f&#039;(x)의 식을 얻을 수 있다.\n\\begin{align*}\\\\\n&amp;\\frac{f(x+y)-f(x)}{y}=\\frac{f(y)}{y}+2x \\tag{1}\\\\\\\\\n\\Rightarrow~&amp;\\lim_{y \\rightarrow 0}\\frac{f(x+y)-f(x)}{y}=\\lim_{y \\rightarrow 0}\\frac{f(y)-f(0)}{y-0}+2x\\\\\\\\\n\\Rightarrow~&amp; f&#039;(x)=f&#039;(0)+2x\\\\\n\\end{align*}\n편미분\n\ny에 대하여 미분한다.\n\nf&#039;(x+y)=f&#039;(y)+2x\n\ny에 0을 대입한다.\n\nf&#039;(x)=f&#039;(0)+2x\n함수의 성질\n(x+y)^2=x^2+y^2+2xy을 만족하므로, f(x)를 이차함수라 추측하는 것도 좋은 방법이다.\n\n\n                  \n                  다양한 함수의 성질 \n                  \n                \n\n\n\nf(x)=ax : f(x+y)=f(x)+f(y)\nf(x)=a^{x}:f(x+y)=f(x)f(y)\nf(x)=\\log x : f(xy)=f(x)+f(y)\nf(x)=\\sin x : f(x+y)=f(x)f&#039;(y)+f&#039;(x)f(y)\nf(x)=\\cos x : f(x+y)=f(x)f(y)-f&#039;(x)f&#039;(y)\n\n\n\n\n예제\n\n\n미분 가능한 함수 f(x)에 대하여 f(x+y)=f(x)f(y)+4f(x)+4f(y)+12을 만족하고, f(2)=0, f&#039;(0)=3일 때, f&#039;(2)의 값은?\n\n\n미분 가능한 함수 f(x)에 대하여 f(x+y) = f(x) + f(y) + 2xy-1을 만족하고 \\lim_{{x \\to 1}} \\frac{f(x) - f&#039;(x)}{x^2 - 1} = 9일 때, f&#039;(0)의 값은?\n\n\n모든 실수 x,~y에 대하여 다항함수 f(x+y) = f(x) + f(y) + (x+y)xy를 만족시킬 때, \\sum_{k=1}^{10} (f&#039;(k) - f&#039;(0))의 값을 구하시오.\n\n\n모든 실수 x,~y에 대하여 미분 가능한 함수 f(x)가 f(x+y) = f(x) + f(y) + xy(x+y) - 3을 만족하고 f&#039;(1) = 2일 때, f(3)의 값은?\n\n\n미분 가능한 함수 f(x)에 대하여 f(x-y) = f(x) - f(y) + xy(x-y)를 만족하고 f&#039;(0) = 8, f&#039;(a) = f&#039;(b) = 0일 때, a^2 + b^2의 값은?\n\n\n두 다항함수 f(x),~g(x)가 일의의 실수 x,~y에 대하여 x\\{f(x+y) - f(x-y)\\} = 4y\\{(f(x) + g(y)\\}을 만족시킨다. f(1) = 4, g(0) = 1일 때, f&#039;(2)의 값은?\n\n"},"Class/미적/함수-OX":{"slug":"Class/미적/함수-OX","filePath":"Class/미적/함수 OX.md","title":"일대일 함수","links":[],"tags":["함수"],"content":"x_1 \\not= x_2 \\Rightarrow f(x_1) \\not= f(x_2)을 만족하면 일대일(one to one)이라 한다.\nf(X) = Y을 만족하면 전사(onto)라 한다.\n일대일 함수 중 f(X) = Y 조건을 만족하는 함수를 일대일 대응(one to one, onto)이라 부른다.\n예제 1\n\nf와 g가 일대일 함수이면 g \\circ f도 일대일 함수이다.1\ng \\circ f가 일대일 함수이면 f는 일대일 함수이다.2\ng \\circ f가 일대일 함수이면 g는 일대일 함수이다.3\nf와 g가 전사 함수이면 g \\circ f도 전사 함수이다.4\ng \\circ f가 전사 함수이면 f는 전사 함수이다.5\ng \\circ f가 전사 함수이면 g는 전사 함수이다.6\nf가 함수이면, |X| = |f(X)|이다.7\nf가 일대일 함수이면, |X| = |f(X)|이다.8\nf가 전사 함수이면, |X| = |f(X)|이다.9\n\n예제 2\nf : A \\rightarrow B, A_i \\subset A, B_i \\subset B 일 때,  (f^{-1} 를 역상(preimage)이라 하자.)\n\n\nA_0 = f^{-1}(f(A_0)) 10\n\n\nB_0 = f(f^{-1}(B_0)) 11\n\n\n10, 11은 어떤 조건에서 성립하는가?\n\n\nB_0 \\subseteq B_1 \\Rightarrow f^{-1}(B_0) \\subseteq f^{-1}(B_1) 12\n\n\nf^{-1}(B_0 \\cup B_1) = f^{-1}(B_0) \\cup f^{-1}(B_1) 13\n\n\nf^{-1}(B_0 \\cap B_1) = f^{-1}(B_0) \\cap f^{-1}(B_1) 14\n\n\nf^{-1}(B_0 - B_1) = f^{-1}(B_0) - f^{-1}(B_1) 15\n\n\nA_0 \\subseteq A_1 \\Rightarrow f(A_0) \\subseteq f(A_1) 16\n\n\nf(A_0 \\cup A_1) = f(A_0) \\cup f(A_1) 17\n\n\nf(A_0 \\cap A_1) = f(A_0) \\cap f(A_1) 18\n\n\nf(A_0 - A_1) \\supseteq f(A_0) - f(A_1) 19\n\n\n14, 15, 18은 임의의 합집합, 교집합에도 성립하는가? 20\n\n\nFootnotes\n\n\nTrue, g(f(x_1)) = g(f(x_2)) \\Rightarrow f(x_1) = f(x_2) \\Rightarrow x_1 = x_2 ↩\n\n\nTrue, g(f(x_1)) = g(f(x_2)) \\Rightarrow x_1 = x_2 ↩\n\n\nFalse, f(1)=1, g(1)=1, g(2)=1이면 g \\circ f는 일대일 함수이지만 g는 일대일 함수가 아니다. ↩\n\n\nTrue, g(f(X))=Z ↩\n\n\nFalse, 3번과 같은 예시 ↩\n\n\nTrue, g(f(X))=Z ↩\n\n\nFalse, |X| \\ge |f(X)| ↩\n\n\nTrue ↩\n\n\nFalse, |X| \\ge |f(X)| ↩\n\n\nFalse, A_0 \\subseteq f^{-1}(f(A_0)), 단, 등호는 f가 단사일 때만 성립한다. A = \\{1, 2\\}, B = \\{a\\}, f(1) = a, f(2) = a, A_0 = \\{1\\} 라고 하자. 이때 f(A_0) = \\{a\\}, f^{-1}(f(A_0)) = f^{-1}(\\{a\\}) = \\{1, 2\\} 이므로 A_0 = \\{1\\} \\subsetneq \\{1, 2\\} = f^{-1}(f(A_0))이다. 임의의 x \\in A_0 를 고르면, f(x) \\in f(A_0) 이므로 x \\in f^{-1}(f(A_0)). 따라서 A_0 \\subseteq f^{-1}(f(A_0))이다. 하지만 f가 단사가 아니라면, f(x) = f(y) 이면서 x \\in A_0, y \\notin A_0 인 경우가 가능하므로 f^{-1}(f(A_0)) 에 A_0 이외의 원소가 포함될 수 있다. 이 경우 포함은 성립하지만 동치는 성립하지 않는다. 반대로 f가 단사이면, f(x) = f(y) \\Rightarrow x = y 이므로 f^{-1}(f(A_0)) = A_0 가 된다. ↩\n\n\nFalse, f(f^{-1}(B_0)) \\subseteq B_0, 단, 등호는 f가 전사일 때만 성립한다. A = \\{1\\}, B = \\{a, b\\}, f(1) = a, B_0 = \\{a, b\\} 라고 하자. 이때 f^{-1}(B_0) = \\{x \\in A \\mid f(x) \\in \\{a, b\\}\\} = \\{1\\}, 따라서 f(f^{-1}(B_0)) = \\{f(1)\\} = \\{a\\}, 그런데 B_0 = \\{a, b\\} 이므로 f(f^{-1}(B_0)) = \\{a\\} \\subsetneq \\{a, b\\} = B_0이다. 임의의 y \\in f(f^{-1}(B_0)) 라고 하면, 어떤 x \\in f^{-1}(B_0) 에 대해 y = f(x) 인데, x \\in f^{-1}(B_0) 이므로 f(x) \\in B_0, 따라서 y \\in B_0. 즉, 항상 f(f^{-1}(B_0)) \\subseteq B_0이다. 하지만 f가 전사가 아니라면 B_0 의 어떤 원소는 f(x) 형태로 표현되지 않을 수 있으므로, 그 원소는 f(f^{-1}(B_0)) 에 포함되지 않는다. 반대로 f가 전사이면, B_0 \\subseteq \\operatorname{Im}(f) 이고 모든 y \\in B_0 에 대해 f(x) = y 인 x \\in A 가 존재하므로 y \\in f(f^{-1}(B_0)) 가 되어 등호가 성립한다. ↩\n\n\nTrue, 임의의 x \\in f^{-1}(B_0) 이면 f(x) \\in B_0 \\subseteq B_1 이므로 x \\in f^{-1}(B_1). 따라서 포함관계 성립한다. ↩\n\n\nTrue, 임의의 x \\in f^{-1}(B_0 \\cup B_1) 이면 f(x) \\in B_0 \\cup B_1 이므로 f(x) \\in B_0 또는 f(x) \\in B_1, 따라서 x \\in f^{-1}(B_0) \\cup f^{-1}(B_1)한다. 반대로, x \\in f^{-1}(B_0) \\cup f^{-1}(B_1) 이면 f(x) \\in B_0 \\cup B_1, 즉 x \\in f^{-1}(B_0 \\cup B_1). 양쪽 포함이므로 등호가 성립한다. ↩\n\n\nTrue, x \\in f^{-1}(B_0 \\cap B_1) 이면 f(x) \\in B_0 \\cap B_1, 즉 동시에 B_0 와 B_1 에 속하므로 x \\in f^{-1}(B_0) \\cap f^{-1}(B_1), 역도 성립하므로 등호가 성립한다. ↩\n\n\nTrue, x \\in f^{-1}(B_0 - B_1) 이면 f(x) \\in B_0 이고 f(x) \\notin B_1, 즉 x \\in f^{-1}(B_0) 이고 x \\notin f^{-1}(B_1), 따라서 x \\in f^{-1}(B_0) - f^{-1}(B_1), 역도 마찬가지다. ↩\n\n\nTrue, 임의의 y \\in f(A_0) 라면 \\exists x \\in A_0 \\subseteq A_1 이므로 y = f(x) \\in f(A_1). 따라서 포함관계 성립한다. ↩\n\n\nTrue, 임의의 y \\in f(A_0 \\cup A_1) 이면 \\exists x \\in A_0 \\cup A_1 이고 f(x) = y, 즉 x \\in A_0 또는 A_1, 따라서 y \\in f(A_0) \\cup f(A_1). 역도 성립하므로 등호가 성립한다. ↩\n\n\nFalse, f(A_0 \\cap A_1) \\subseteq f(A_0) \\cap f(A_1)이다. 등호는 f가 단사일 때만 성립한다. 임의의 y \\in f(A_0 \\cap A_1) 이면 \\exists x \\in A_0 \\cap A_1 이고 f(x) = y, 따라서 y \\in f(A_0) \\cap f(A_1). 그러나 f가 단사가 아니면, y \\in f(A_0) \\cap f(A_1) 이더라도 이를 만드는 x_0 \\in A_0, x_1 \\in A_1 에 대해 x_0 \\ne x_1 이면 x \\in A_0 \\cap A_1 인 x 가 존재하지 않을 수 있음. f가 단사이면 f(x_0) = f(x_1) \\Rightarrow x_0 = x_1 이므로 동치 성립한다. ↩\n\n\nFalse, f(A_0 - A_1) \\subseteq f(A_0) - f(A_1) 이다. 등호는 f가 단사일 때만 성립한다. 임의의 y \\in f(A_0) - f(A_1) 라면 \\exists x \\in A_0 such that f(x) = y 이고, f(x) \\notin f(A_1). 그런데 x \\in A_1 일 수도 있으므로 x \\in A_0 - A_1 인지는 알 수 없다. 그러나 f가 단사이면 f(x) \\notin f(A_1) \\Rightarrow x \\notin A_1, 따라서 x \\in A_0 - A_1, 즉 y \\in f(A_0 - A_1) 가 되어 동치 성립한다. ↩\n\n\nTrue, 14, 15, 18 의 증명에서 사용한 방법은 임의의 집합에 대해 성립한다. ↩\n\n\n"},"Class/영재/나머지-정리":{"slug":"Class/영재/나머지-정리","filePath":"Class/영재/나머지 정리.md","title":"나머지 정리","links":[],"tags":[],"content":"나머지 정리\n두 정수 a (a &gt; 0) 에 대해, 임의의 정수 b 는\nb = qa + r, \\quad 0 \\leq r &lt; a\n를 만족하는 정수 q, r 이 유일하게 존재한다.\n증명\n집합 S = \\{ na - b \\mid n \\in \\mathbb{N} \\} 를 고려하자. b \\geq 0 이면, b = 0a + b 이므로 성립한다. b &lt; 0 이면, S 는 양의 정수들로 이루어진 집합이므로, 자연수의 최소 원소 정리에 의해 가장 작은 원소를 가지며 이를 (q+1)a - b 라 하자.\n이때, qa - b 는\n(q+1)a - b &lt; (q+1)a - b\n보다 작으므로 S 의 원소가 아니고, 따라서\nqa - b \\leq 0\n이 성립한다. 따라서 나머지를 r = b - qa 라 하면,\nr \\geq 0, \\quad r = b - (q+1)a + a &lt; 0 + a = a\n이제 존재성은 증명되었고, 유일성만 증명하면 된다.\nb = qa + r = q&#039;a + r&#039; 이고,\n0 \\leq r, r&#039; &lt; a\n라고 하면,\n(q - q&#039;)a = r&#039; - r\n인데, -a &lt; r&#039; - r &lt; a 이므로 r&#039; - r 은 a 의 배수이므로 r&#039; - r = 0, 즉\nr = r&#039;, \\quad q = q&#039;\n가 성립한다. 따라서 q, r 은 유일하게 존재함이 증명되었다.\n나머지 정리의 여러 가지 성질\n정수의 생성 원리\na, b \\in \\mathbb{Z} 에 대해,\na\\mathbb{Z} + b\\mathbb{Z} = d\\mathbb{Z} \\quad (\\text{단, } d \\in \\mathbb{Z})\n인 d 가 존재한다.\n이때,\na\\mathbb{Z} + b\\mathbb{Z} = ax + by \\quad (x, y \\in \\mathbb{Z})\n로 나타낼 수 있다.\n\nd = ax + by 로 가정.\nd 는 a, b 의 공약수여야 함.\nd 가 가장 작은 자연수라고 가정하면, 유클리드 호제법을 이용하여 d 가 존재함을 증명할 수 있다.\n\n최대공약수와 생성 원리\na\\mathbb{Z} + b\\mathbb{Z} = d\\mathbb{Z} \\quad \\Rightarrow \\quad d = (a, b)\n즉, 두 정수의 최대공약수는 생성되는 정수의 가장 작은 양수이다.\n\nd 는 a, b 의 공약수이므로, d 가 a 와 b 를 나눌 수 있음.\n만약 c 가 a, b 의 공약수이면, c 는 ax + by 의 공약수이므로 c \\leq d 이다.\n따라서, 최대공약수는 d 와 같음을 보일 수 있다.\n\n최대공약수와 베주 정리(Bézout’s Identity)\n(a, b) = 1 \\quad \\Leftrightarrow \\quad ax + by = 1 \\text{ 인 정수 } x, y \\text{ 가 존재한다.}\n\n두 수가 서로소일 때, 정수 계수로 1을 표현할 수 있다.\n즉, 서로소 정수는 정수 계수의 선형 결합으로 1을 만들 수 있음을 의미한다.\n\n최대공약수 표현식\n\\gcd(a, b) = sa + tb\\,\\text{를 만족시키는 정수 } s, t \\text{ 가 존재한다.}\n이는 확장된 유클리드 알고리즘을 통해 s, t 를 찾을 수 있음을 의미한다.\n예제\n\n\na = 4, b = 6 에 대해, 생성되는 정수의 집합 4\\mathbb{Z} + 6\\mathbb{Z} 를 구하고, 이 집합이 어떤 수의 배수로 표현되는지 확인하시오.1\n\n\n15 와 25의 최대공약수를 구하고, 이를 이용하여 15\\mathbb{Z} + 25\\mathbb{Z}을 간단히 표현하시오.2\n\n\n13 과 17 이 서로소임을 확인하고, 베주 항등식 13x + 17y = 1 을 만족하는 정수해 (x, y) 중 하나를 구하시오.3\n\n\n\\gcd(18, 30)를 구하고, \\gcd(18, 30) = sa + tb를 만족하는 정수 s, t를 찾아라.4\n\n\nFootnotes\n\n\n생성되는 정수의 집합은 4\\mathbb{Z} + 6\\mathbb{Z} = \\{ 4m + 6n \\mid m, n \\in \\mathbb{Z} \\}이며, 이 집합은 최대공약수인 2 의 배수들로 이루어진다. 즉, 4\\mathbb{Z} + 6\\mathbb{Z} = 2\\mathbb{Z} 이다. ↩\n\n\n최대공약수는 \\gcd(15, 25) = 5 이므로, 15\\mathbb{Z} + 25\\mathbb{Z} = 5\\mathbb{Z} 이다. ↩\n\n\n13 과 17 의 최대공약수는 1 이므로, 베주 항등식을 풀면 13(-4) + 17(3) = 1 이다. 따라서, 한 해는 x = -4, y = 3 이다. ↩\n\n\n\\gcd(18, 30) = 6 이므로, 베주 항등식을 풀면 18(2) + 30(-1) = 6 이다. 따라서, s = 2, t = -1 이다. ↩\n\n\n"},"Class/영재/소수(Prime-Numbers)":{"slug":"Class/영재/소수(Prime-Numbers)","filePath":"Class/영재/소수(Prime Numbers).md","title":"소수(Prime Numbers)","links":[],"tags":[],"content":"1보다 큰 자연수 p 의 양의 약수가 1과 p 밖에 없을 때, 정수 p 를 소수라고 한다.\n그리고 어떤 정수 n 이 \\pm1 과 \\pm p 이외의 약수를 가지면, 이 정수 n 을 합성수라고 한다.\n예를 들어, 18 = 2 \\times 9 이므로 2와 9는 18의 약수이다. 이때, 2와 9를 18의 인수(factors) 라고도 한다. 특히, 2는 소수이면서 18의 인수이다. 이러한 소수인 인수를 소인수(prime factors) 라고 한다.\n특히,\n18 = 2 \\times 3^2\n와 같이 자연수를 소수들만의 곱으로 표현하는 것을 소인수분해(prime factorization) 라고 한다.\n약수와 배수 (Divisors and Multiples)\n정수 a (\\neq 0), b \\in \\mathbb{Z} 에 대해, 어떤 정수 c 가 존재하여\nb = a c\n이면, “b는 a로 나누어진다” 라고 말하며, a 를 b 의 약수(divisor) 라고 한다.\n또한, b 를 a 의 배수(multiple) 라고 한다.\n만약 b = a c 를 만족하는 c 가 없을 때, ” a 는 b 를 나누지 못한다” 라고 하며, a \\not\\mid b 로 표시한다.\n소수의 개수가 무한히 많음을 증명하라\n소수의 개수가 n 개로 유한하다고 가정하자. 그러면 소수는 다음과 같이 n 개로 나타낼 수 있다.\np_1, p_2, p_3, \\cdots, p_n\n이제 새로운 수를 정의하면\nq = p_1 p_2 p_3 \\cdots p_n + 1\nn개의 소수 중에 적어도 하나는 q를 나눈다. 그 수를 p_i 라고 하면\np_i \\mid q\n이고,\np_i \\mid p_1 p_2 p_3 \\cdots p_n\n이므로, p_i 는 1을 나누어야 한다.\np\\mid q - p_1 p_2 p_3 \\cdots p_n = 1\n이는 모순이 된다. 따라서 처음 가정이 틀렸으므로 소수의 개수는 무한히 많다.\n소수의 성질\n만약 p 가 소수이고 p \\mid ab 이면,\np \\mid a \\quad \\text{또는} \\quad p \\mid b\n증명\np \\mid ab 라고 가정하자. 그러면 p 와 a 가 서로소인 경우, 반드시\np \\mid b\n이어야 한다.  즉, 소수는 곱셈에서 하나의 인수에만 영향을 미친다.\n산술의 기본정리\n1을 제외한 모든 자연수는 소수들의 곱으로 표현되며, 그 표현 방법은 순서를 제외하면 유일하다. 즉, 각 수는 소수의 곱으로 나타낼 수 있으며, 이는 유일하다.\nn = p_1^{e_1} \\cdot p_2^{e_2} \\cdot p_3^{e_3} \\cdots p_i^{e_i}\n증명\n수학적 귀납법을 이용하여 정리의 앞부분을 증명하자. S = \\{ n \\in \\mathbb{N} \\mid n \\geq 2 \\text{인 소수들의 곱} \\}이라고 놓으면, 2 \\in S 이다.\nk \\geq 2 인 정수에 대하여 2, \\dots, k \\in S 라는 가정 하에 k+1 \\in S 임을 보이면 된다.\n\nk+1 이 소수이면, k+1 \\in S\nk+1 이 소수가 아니면, k+1 = rs (2 \\leq r, s \\leq k) 를 만족하는 정수 r, s 가 존재하는데, 이들은 가정에 의해 S 의 원소이므로 각각 소수들의 곱으로 표시된다.\n\n따라서 k+1 도 소수들의 곱으로서 k+1 \\in S 이다.\n그러므로 수학적 귀납법에 의하여 S 는 2 이상의 모든 자연수의 집합이다.\n표시 방법의 유일성의 증명을 위하여\nn = p_1 \\cdot p_2 \\cdot p_3 \\cdots p_h = q_1 \\cdot q_2 \\cdot q_3 \\cdots q_k\n라고 하자.\n단, p_1, p_2, p_3, \\dots, p_h, q_1, q_2, q_3, \\dots, q_k 는 모두 소수이다. 위의 정리 1에 의해서, p_1 \\mid q_1 \\cdot q_2 \\cdot q_3 \\cdots q_k 로부터 q_1, q_2, q_3, \\dots, q_k 중 적어도 하나는 p_1 의 배수임을 알 수 있다.\nq_1, q_2, q_3, \\dots, q_k 의 순서를 적당히 바꾸어서 q_1 이 p_1 의 배수라고 하자. 그런데 이런 경우 q_1 도 소수이므로 사실은 p_1 = q_1 이다.\n이제 n 을 p_1 로 나누면,\np_2 \\cdot p_3 \\cdots p_h = q_2 \\cdot q_3 \\cdots q_k\n가 되고, 위와 같은 방법으로 p_2 = q_2 를 얻는다. 이렇게 계속하면 h = k 이고, 모든 i = 1, 2, \\dots, h 에 대하여 p_i = q_i 임을 알 수 있다.\n소수 판별법\n양의 정수 m 에 대해 \\sqrt{m} 보다 작거나 같은 최대 정수를 I 라고 하자. 만약 m 이 I 보다 작거나 같은 소인수를 가지지 않으면, m 은 소수이다. (x^2 = m (m \\geq 0) 를 만족하는 x 값 중 하나는 \\sqrt{m} 이며, 이를 m의 양의 제곱근이라고 한다.)\n증명\nm 이 합성수라고 하면, 가정에 의하여 m 은 I 보다 큰 소인수 p 를 가진다. 이때, m = p q 로 소인수분해된다면 q 도 m 의 소인수이므로, 가정에 의해 q &gt; I 이다.\n따라서,\np \\geq I+1, \\quad q \\geq I+1\n이므로,\nm = p q \\geq (I+1)^2\n그러나, 가정에 의해 m \\leq I^2, 즉\nm &lt; (I+1)^2\n이므로 모순이 발생한다. 따라서, m 은 소수이다.\n예제\n\n\n16을 소인수분해하라.1\n\n\n108을 소인수분해하라.2\n\n\n4k+3꼴의 소수가 무한히 많음을 증명하라.3\n\n\n120을 소인수분해하고, 양의 약수를 모두 구하여라.4\n\n\n2023은 소수인가? 소수가 아니라면, 소인수분해하라.5\n\n\nFootnotes\n\n\n16 = 2^4 ↩\n\n\n108 = 2^2 \\times 3^3 ↩\n\n\n4k+3꼴의 소수가 유한 개뿐이라고 가정하고, 그러한 소수를 p_1, p_2, p_3, \\dots, p_n 이라고 하자. 이제 새로운 수 m = 4 p_1 p_2 p_3 \\cdots p_n - 1 을 고려한다. 이 수는 m = 4 (p_1 p_2 p_3 \\cdots p_n - 1) + 3 의 형태로 나타낼 수 있으므로, m은 홀수이다. 따라서 m을 나누는 소수들도 모두 4k+1 또는 4k+3꼴이다. 그런데 기존의 p_1, p_2, \\dots, p_n이 모두 4k+1 꼴이라면, m 역시 4k+1꼴이어야만 한다. 그러나 m 은 적어도 하나의 4k+3 꼴 소수의 약수를 가져야 한다. 이 약수를 p 라 하면, p 는 p_1, p_2, p_3, \\dots, p_n 중 하나이어야 한다. 즉, p \\mid 4 p_1 p_2 p_3 \\cdots p_n 이어야 한다. 그러나 p \\mid m = 4 p_1 p_2 p_3 \\cdots p_n - 1 이므로, p \\mid 1 이 되어 모순이 발생한다. 따라서, 4k+3꼴의 소수는 무한히 많다. ↩\n\n\n120 = 2^3 \\times 3 \\times 5 이므로, 양의 약수는 1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 20, 24, 30, 40, 60, 120 이다. ↩\n\n\n2023이 소수인지 확인하려면 \\sqrt{2023} 보다 작거나 같은 최대 정수를 구해야 한다. \\sqrt{2023} \\approx 44.98 즉, 44보다 작거나 같은 소수인 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43를 이용하여 2023이 이들로 나누어지는지 조사하면 된다. 2023 = 17 \\times 119 이므로 2023은 소수가 아니다. ↩\n\n\n"},"Class/영재/수학적-귀납법":{"slug":"Class/영재/수학적-귀납법","filePath":"Class/영재/수학적 귀납법.md","title":"수학적 귀납법","links":[],"tags":[],"content":"수학적 귀납법은 자연수 n 에 대해 어떤 명제 P(n) 이 참임을 보이는 중요한 증명 기법입니다. 우리가 귀납적으로 사고하는 방식과 연관이 깊으며, 특히 자연수 전체에 대해 명제를 증명할 때 강력한 도구가 됩니다. 왜냐하면, 자연수는 무한히 많기 때문에 개별적으로 증명할 수 없기 때문입니다.\n“귀납”이라는 단어는 일상적인 언어에서 개별적인 사례를 관찰한 후, 이를 바탕으로 일반적인 결론을 내리는 방식을 의미합니다. 예를 들어,\n\n여러 마리의 백조를 관찰했더니 모두 흰색이었다.\n그러므로 모든 백조는 흰색일 것이다. (이것은 귀납적 추론이지만 반드시 참은 아님)\n\n예를 들어, P(n) 이 1부터 100까지 참이라고 해서, P(101) 도 참이라고 보장할 수는 없습니다.  따라서, 우리는 논리적 연결 고리를 만들어서 n 에 대한 명제를 확장할 수 있어야 합니다.\n수학적 귀납법의 증명 구조\n어떤 명제 P(n) 이 모든 자연수 n 에 대해 참임을 보이려면 다음을 증명하면 충분합니다.\n\n\n기초 단계 (Base Case):\n\nn = 1 일 때 명제 P(1) 이 성립함을 보인다.\n\n\n\n귀납 단계 (Inductive Step):\n\nn = k 일 때 명제 P(k) 가 성립한다고 가정한다. (귀납 가정)\n이때 n = k+1 에 대해서도 명제 P(k+1) 이 성립함을 보인다.\n\n\n\n이 두 가지가 성립하면, 모든 자연수 n 에 대해 명제가 참임을 보일 수 있습니다.\n즉, 첫 번째 칸이 도미노처럼 쓰러지면 그다음 칸도 연쇄적으로 쓰러지는 것과 같은 원리입니다.\n홀수의 합 공식 증명\n자연수 n 에 대해, 다음 등식이 성립함을 수학적 귀납법으로 증명해 보겠습니다.\n1 + 3 + 5 + 7 + \\cdots + (2n - 1) = n^2\n이 공식은 “연속된 홀수의 합이 제곱수와 같다”는 것을 나타냅니다.\n기초 단계\nn = 1 일 때 등식이 성립하는지 확인합니다.\n1 = 1^2\n좌변과 우변이 같으므로, n = 1 일 때 등식이 성립합니다.\n귀납 단계\nn = k 일 때 등식이 성립한다고 가정합니다. 즉,\n1 + 3 + 5 + \\cdots + (2k - 1) = k^2\n이제 n = k+1 일 때도 등식이 성립함을 보이면 됩니다.\n\n양변에 다음 홀수 2k + 1 을 더합니다.\n\n1 + 3 + 5 + \\cdots + (2k - 1) + (2k + 1) = k^2 + (2k + 1)\n\n우변을 정리하면,\n\nk^2 + 2k + 1 = (k+1)^2\n즉,\n1 + 3 + 5 + \\cdots + (2(k+1) - 1) = (k+1)^2\n이로써 n = k+1 일 때도 등식이 성립함을 보였습니다.\n결론\n귀납법의 두 조건을 만족하므로, 모든 자연수 n 에 대해 다음 공식이 성립합니다.\n1 + 3 + 5 + \\cdots + (2n - 1) = n^2\n예제\n\n1부터 n 까지의 합 공식\n자연수 n 에 대해 다음 등식이 성립함을 증명하시오.\n\n   1 + 2 + 3 + \\cdots + n = \\frac{n(n+1)}{2}\n\n홀수의 합 공식\n자연수 n 에 대해 다음 등식이 성립함을 증명하시오.\n\n1 + 3 + 5 + \\cdots + (2n - 1) = n^2\n\n거듭제곱의 합 공식\n자연수 n 에 대해 다음 등식이 성립함을 증명하시오.\n\n   1^2 + 2^2 + 3^2 + \\cdots + n^2 = \\frac{n(n+1)(2n+1)}{6}\n\n세제곱의 합 공식\n자연수 n 에 대해 다음 등식이 성립함을 증명하시오.\n\n   1^3 + 2^3 + 3^3 + \\cdots + n^3 = \\left( \\frac{n(n+1)}{2} \\right)^2\n\n거듭제곱 수열의 성질\n자연수 n 에 대해 다음 부등식이 성립함을 증명하시오.\n\n   2^n &gt; n^2 \\quad \\text{(단, $n \\geq 5$ )} \n\n피보나치 수열의 성질\n피보나치 수열 F_n 이 다음 성질을 만족함을 증명하시오.\n\n   F_1 + F_2 + F_3 + \\cdots + F_n = F_{n+2} - 1"},"Class/영재/약수(divisor)와-배수(multiple)":{"slug":"Class/영재/약수(divisor)와-배수(multiple)","filePath":"Class/영재/약수(divisor)와 배수(multiple).md","title":"약수(divisor)와 배수(multiple)","links":["Class/영재/합동식"],"tags":[],"content":"정수 a (\\neq 0), b \\in \\mathbb{Z} 에 대해, 어떤 정수 c 가 존재하여\nb = a c\n이면, “b는 a로 나누어진다” 라고 말하며, a 를 b 의 약수(divisor) 라고 한다.\n또한, b 를 a 의 배수(multiple) 라고 한다.\n이를 기호로 표시하면\n a \\mid b\n라고 하며, “a는 b를 나눈다” 라고 읽는다. 만약 b = a c 를 만족하는 c 가 없을 때, ” a 는 b 를 나누지 못한다” 라고 하며,\na \\not\\mid b\n로 표시한다.\n약수와 배수의 성질\n임의의 a, b, c, x, y \\in \\mathbb{Z} 에 대하여 다음이 성립한다.\n\na \\mid 0 1\n1 \\mid a 2\na \\mid a 3\na \\mid 1 \\Rightarrow a = \\pm 1 4\na \\mid b, c \\mid d \\Rightarrow ac \\mid bd 5\na \\mid b, b \\mid c \\Rightarrow a \\mid c 6\na \\mid b, b \\mid a \\Rightarrow a = \\pm b 7\na \\mid b, b \\neq 0 \\Rightarrow |a| \\leq |b| 8\na \\mid b, a \\mid c \\Rightarrow a \\mid (bx + cy) 9\n\n배수 판정법\n정수의 배수들이 갖는 특징을 이용하여 배수를 판정할 수 있다.\n\n\n                  \n                  Note\n                  \n                \n\n\n\n2, 5의 배수 : 일의 자리 수가 0 이거나 2, 5의 배수인 수\n3, 9의 배수 : 각 자리수의 합이 3, 9의 배수인 수\n4의 배수 : 끝 두 자리 수가 00 이거나 4의 배수인 수\n6의 배수 : 2와 3의 배수인 수\n7의 배수 : 일의 자리 수에 5를 곱한 후, 앞의 숫자들과 더해서 7의 배수인 수\n8의 배수 : 끝 세 자리 수가 000 이거나 8의 배수인 수\n11의 배수 : 홀수 자리에 있는 숫자의 합과 짝수 자리에 있는 숫자의 합의 차가 11의 배수인 수\n\n\n\n\n합동식의 성질을 이용하여 위의 성질을 증명할 수 있다. 자연수 a = a_n 10^n + a_{n-1} 10^{n-1} + \\cdots + a_1 10 + a_0 (0 \\leq a_i \\leq 9, i = 0, 1, 2, \\cdots, n, a_n \\not= 0)에 대하여,\n2, 5의 배수\n10 \\equiv 0 \\pmod{2}, \\quad 10 \\equiv 0 \\pmod{5}\n이므로 모든 자연수 k에 대하여\n10^k \\equiv 0 \\pmod{2}, \\quad 10^k \\equiv 0 \\pmod{5}\n\n이다.\n\\begin{align*}\na &amp;= a_n \\cdot 10^n + \\cdots + a_1 \\cdot10 + a_0 \\\\\n&amp;\\equiv a_n \\cdot 0 + \\cdots + a_1 \\cdot 0 + a_0 \\\\\n&amp;\\equiv a_0 \\pmod{2}, \\pmod{5}\n\\end{align*}\n그러므로 a를 2로 나누었을 때의 나머지는 a의 끝자리수 a_0를 2로 나누었을 때와 같다.\n3, 9의 배수\n10 \\equiv 1 \\pmod{3}, \\quad 10 \\equiv 1 \\pmod{9}\n이므로 모든 자연수 k에 대하여\n10^k \\equiv 1 \\pmod{3}, \\quad 10^k \\equiv 1 \\pmod{9}\n이다.\n\\begin{align*}\na &amp;= a_n \\cdot 10^n + \\cdots + a_1 \\cdot 10 + a_0 \\\\\n&amp;\\equiv a_n \\cdot 1 + \\cdots + a_1 \\cdot 1 + a_0 \\\\\n&amp;= a_n + \\cdots + a_1 + a_0 \\pmod{3}, \\pmod{9}\n\\end{align*}\n그러므로 a를 3으로 나누었을 때의 나머지와 각 자리수를 더해서 3으로 나누었을 때의 나머지는 같다.\n7의 배수\n10 \\equiv 3 \\pmod{7}, \\quad 15 \\equiv 1 \\pmod{7}\n이므로\n\\begin{align*}\n&amp; 10 (a_n \\cdot 10^{n-1} + \\cdots + a_1) + a_0 \\\\\n\\equiv \\quad &amp; 3(a_n \\cdot 10^{n-1} + \\cdots + a_1) + a_0 \\pmod{7} \\\\\n\\equiv \\quad &amp; (a_n \\cdot 10^{n-1} + \\cdots + a_1) + 5a_0 \\pmod{7} \\\\\n\\end{align*}\n그러므로 a를 7로 나누었을 때의 나머지는 a의 일의 자리수에 5를 곱한 후, 나머지 자리수들과 더한 것을 7로 나누었을 때의 나머지와 같다.\n11의 배수\n10 \\equiv -1 \\pmod{11}\n이므로 자연수 k에 대하여\n10^k \\equiv (-1)^k \\pmod{11}\n이다.\n\\begin{align*}\na &amp;= a_n \\cdot 10^n + \\cdots + a_2 \\cdot 10^2 + a_1 \\cdot 10 + a_0 \\\\\n&amp;\\equiv a_n \\cdot (-1)^n + \\cdots + a_2 \\cdot (-1)^2 + a_1 \\cdot(-1) + a_0 \\pmod{11} \\\\\n&amp;\\equiv a_n (-1)^n + \\cdots + a_1 (-1) + a_0 \\pmod{11} \\\\\n&amp;= (a_0 + a_2 + a_4 + \\cdots) - (a_{1} + a_{3} + a_{5} + \\cdots) \\pmod{11}\n\\end{align*}\n그러므로 홀수자리수의 합에서 짝수자리수의 합을 뺀 것을 11로 나누었을 때의 나머지와 같다.\n1001의 배수\n10^3 \\equiv -1 \\pmod{7}, \\pmod{11}, \\pmod{13}\n이므로\n\\begin{align*}\na &amp;= A_0 + A_1 \\cdot 10^3 + A_2 \\cdot 10^6 + \\cdots \\\\\n&amp;\\equiv A_0 - A_1 + A_2 - \\cdots \\pmod{7}, \\pmod{11}, \\pmod{13}\n\\end{align*}\n일의 자리에서 부터 세 자리마다 교차하여 더하고 뺀 것을 7, 11, 13으로 나누었을 때의 나머지와 같다.\n예제\n\n\n위의 정리를 증명하여라.\n\n\na 가 정수일 때, 0 \\mid a 이면 a = 0 임을 증명하여라. 10\n\n\na, b, c 가 모두 0이 아닌 정수일 때, ac \\mid bc 이면 a \\mid b 임을 증명하라. 11\n\n\na \\mid b 이면 ac \\mid bc 임을 증명하여라. 12\n\n\n7,574 은 7의 배수인가? 13\n\n\n2,405,013 은 13의 배수인가? 14\n\n\n다섯 자리의 자연수 a7bcd가 225의 배수가 되는 가장 큰 수를 구하여라. 15\n\n\n832의 뒤에 세 자리의 수를 붙여서 여섯 자리의 수를 만들려고 한다. 이 수가 3, 4, 5로 나누어 떨어지는 최소의 자연수가 되도록 하고 싶다. 이 여섯 자리의 수를 구하여라. 16\n\n\n임의의 다섯자리의 자연수를 적고, 이 숫자의 배열만 바꾼 후 두 수의 차이를 구하면 항상 9의 배수임을 증명하여라. 이 성질은 임의의 n자리 자연수에 대해서도 성립하는가? 17\n\n\nFootnotes\n\n\na \\times 0 = 0 이므로 a \\mid 0이다. ↩\n\n\na \\times 1 = a 이므로 1 \\mid a이다. ↩\n\n\na \\times 1 = a 이므로 a \\mid a이다. ↩\n\n\n어떤 정수 k 에 대해 1 = a \\cdot k 라고 하자. a 와 k 는 정수이므로, 가능한 값은 (a, k) = (1, 1) 또는 (-1, -1) 뿐이다. 따라서, a = \\pm1이다. ↩\n\n\n어떤 정수 k, m 에 대해 b = ak, d = cm 이라고 하자. 그러면, bd = (ak)(cm) = ac(km) 이므로, ac \\mid bd 이 성립한다. ↩\n\n\n어떤 정수 k 에 대해 b = ak 이고, c = bl 이라고 하자. 그러면, c = bl = akl 이므로, a \\mid c 이 성립한다. ↩\n\n\n어떤 정수 k, m 에 대해 b = ak, a = bm 이라고 하자. 그러면, a = bm = akm 이므로, 1 = km 이 되어 k = m = 1 또는 k = m = -1 이다. 따라서, a = \\pm b 이 성립한다. ↩\n\n\n어떤 정수 k 에 대해 b = ak 이고, b \\neq 0 이라고 하자. 그러면, |a||k| = |b| 이다. k \\neq 0 이므로 |k| \\geq 1이고 따라서 |a| \\leq |b| 이 성립한다. ↩\n\n\n어떤 정수 k, m 에 대해 b = ak, c = am 이라고 하자. 그러면, bx + cy = a(kx + my) 이므로, a \\mid (bx + cy) 이 성립한다. ↩\n\n\n0 = a \\cdot k 이므로 a = 0 이다. ↩\n\n\nac \\mid bc 라면, bc = kac을 만족하는 어떤 정수 k 가 존재한다. c \\not= 0 이므로, 양변을 c 로 나누면 b = ka가 성립한다. 따라서, b 는 a 의 배수가 된다. ↩\n\n\na \\mid b 라면, b = ka를 만족하는 어떤 정수 k 가 존재한다. 양변에 c \\not= 0를 곱하면 bc = kac 이므로, ac \\mid bc 이다. ↩\n\n\n757 + 4 \\times 5 = 777이고, 777은 7의 배수이다. 따라서, 7,574는 7의 배수이다. ↩\n\n\n013 - 405 + 2 = -390이고, -390은 13의 배수이다. 따라서, 2,405,013은 13의 배수이다. ↩\n\n\n225 \\mid a7bcd이기 위해서는 25 \\mid a7bcd이고, 9 \\mid a7bcd이어야 한다. 25 \\mid a7bcd 이려면, cd가 25의 배수이어야 하는데, 가장 큰 값은 75이므로 c = 7, d = 5이다. 9 \\mid a7bcd 이기 위해서는 9 \\mid (a + 7 + b + c + d)이다. 여기에서 2 \\leq a + b \\leq 18이므로, a + b + 19 = 27 이거나 a + b + 19 = 36이다. 따라서 최대의 값은 a + b + 19 = 36, 즉 a + b = 17을 만족하는 a=9, b=8이다. 따라서, 가장 큰 수는 97875이다. ↩\n\n\n4, 5의 배수가 되는 최소의 끝자리 수는 00이다. 그러므로 구하고자 하는 수는 832a00의 형태이다. 이 수가 3의 배수가 되기 위해서는 8 + 3 + 2 + a + 0 + 0 = 13 +a \\equiv 0 \\pmod{3}이므로 a=2 이다. 따라서 구하고자 하는 수는 832200이다. ↩\n\n\n임의의 n자리 수 a를 10진법의 전개식으로 표현하면 a_n \\cdot 10^n + a_{n-1} \\cdot 10^{n-1} + \\cdots + a_1 \\cdot 10 + a_0이다. 이것을 배열을 바꾼 수와의 차이를 구하면 모든 항이 a_j \\cdot 10^i - a_j \\cdot 10^k \\Rightarrow a_j \\cdot (10^i - 10^k)꼴인데, 이 값은 항상 10^i - 10^k = 10^k(10^{i-k} - 1) \\equiv 0 \\pmod{9}이므로, 9의 배수이다. 따라서, 임의의 n자리 수에 대해서도 성립한다. ↩\n\n\n"},"Class/영재/양의-약수의-성질":{"slug":"Class/영재/양의-약수의-성질","filePath":"Class/영재/양의 약수의 성질.md","title":"양의 약수의 성질","links":[],"tags":[],"content":"양의 정수 N을 소인수분해하여\nN = p_1^{e_1} p_2^{e_2} \\cdots p_n^{e_n}\n의 꼴로 쓸 수 있다고 하자. 여기서 p_i는 서로 다른 소수이고, e_i \\geq 0이다. 이때 다음이 성립한다\n양의 약수의 개수\n먼저, N = p_1^{e_1} p_2^{e_2} \\cdots p_n^{e_n}의 양의 약수는 각 소인수 p_i에 대해 0 \\leq k_i \\leq e_i인 지수들을 선택하여\np_1^{k_1} p_2^{k_2} \\cdots p_n^{k_n}\n의 꼴로 만들 수 있다. 가능한 지수의 경우의 수는 각각 e_i + 1개이므로, 곱의 법칙에 의해 전체 약수의 개수는\n(e_1 + 1)(e_2 + 1) \\cdots (e_n + 1)\n이다.\n예를 들어 24 = 2^3 \\cdot 3^1의 경우, 약수의 개수는 (3 + 1)(1 + 1) = 4 \\cdot 2 = 8이다.\n\\begin{array}{|c|c|c|c|c|}\n\\hline\n&amp; 2^0 &amp; 2^1 &amp; 2^2 &amp; 2^2 \\\\\n\\hline\n3^0 &amp; 1 &amp; 2 &amp; 4 &amp; 8 \\\\\n\\hline\n3^1 &amp; 3 &amp; 6 &amp; 12 &amp; 24 \\\\\n\\hline\n\\end{array}\n양의 약수의 합\n\\frac{p_1^{e_1 + 1} - 1}{p_1 - 1} \\cdot \\frac{p_2^{e_2 + 1} - 1}{p_2 - 1} \\cdots \\frac{p_n^{e_n + 1} - 1}{p_n - 1}\n양의 약수의 합 \\sigma(N)은 모든 약수를 더한 값이다. 위에서 본 약수의 표현을 이용하여, 약수들을 지수 조합으로 분류하면 다음과 같다.\n\\sigma(N) = \\sum_{0 \\leq k_1 \\leq e_1} \\sum_{0 \\leq k_2 \\leq e_2} \\cdots \\sum_{0 \\leq k_n \\leq e_n} p_1^{k_1} p_2^{k_2} \\cdots p_n^{k_n}\n이것은 곱의 분배법칙을 사용하면 다음과 같은 곱의 형태로 바뀐다.\n\\sigma(N) = \\left( \\sum_{k_1 = 0}^{e_1} p_1^{k_1} \\right)\n\\left( \\sum_{k_2 = 0}^{e_2} p_2^{k_2} \\right)\n\\cdots\n\\left( \\sum_{k_n = 0}^{e_n} p_n^{k_n} \\right)\n각 항은 등비수열의 합이므로 다음과 같다.\n\\sum_{k_i = 0}^{e_i} p_i^{k_i} = \\frac{p_i^{e_i + 1} - 1}{p_i - 1}\n따라서 모든 약수의 합은\n\\sigma(N) = \\prod_{i=1}^n \\left( \\frac{p_i^{e_i + 1} - 1}{p_i - 1} \\right)\n이다.\n예를 들어 24 = 2^3 \\cdot 3^1의 경우, 약수의 합은 \\left( \\frac{2^4 - 1}{2 - 1} \\right) \\left( \\frac{3^2 - 1}{3 - 1} \\right) = 15 \\cdot 4 = 60이다.\n예제\n\n\n2020의 양의 약수의 개수와 합을 구하여라. 1\n\n\n2021의 양의 약수의 \b개수와 합을 구하여라. 2\n\n\n2022의 양의 약수의 개수와 합을 구하여라. 3\n\n\n2023의 양의 약수의 개수와 합을 구하여라. 4\n\n\n2024의 양의 약수의 개수와 합을 구하여라. 5\n\n\n2025의 양의 약수의 개수와 합을 구하여라. 6\n\n\nFootnotes\n\n\n2020 = 2^2 \\cdot 5 \\cdot 101이므로, 양의 약수의 개수는 12개이고, 양의 약수의 총합은 \\frac{2^3 - 1}{2 - 1} \\cdot \\frac{5^2 - 1}{5 - 1} \\cdot \\frac{101^2 - 1}{101 - 1} = 4284이다. ↩\n\n\n2021 = 43 \\cdot 47이므로, 양의 약수의 개수는 4개이고, 양의 약수의 총합은 \\frac{43^2 - 1}{43 - 1} \\cdot \\frac{47^2 - 1}{47 - 1} = 2112이다. ↩\n\n\n2022 = 2 \\cdot 3 \\cdot 337이므로, 양의 약수의 개수는 8개이고, 양의 약수의 총합은 \\frac{2^2 - 1}{2 - 1} \\cdot \\frac{3^2 - 1}{3 - 1} \\cdot \\frac{337^2 - 1}{337 - 1} = 4056이다. ↩\n\n\n2023 = 7 \\cdot 17^2이므로, 양의 약수의 개수는 6개이고, 양의 약수의 총합은 \\frac{7^2 - 1}{7 - 1} \\cdot \\frac{17^3 - 1}{17 - 1} = 3480이다. ↩\n\n\n2024 = 2^3 \\cdot 11 \\cdot 23이므로, 양의 약수의 개수는 16개이고, 양의 약수의 총합은 \\frac{2^4 - 1}{2 - 1} \\cdot \\frac{11^2 - 1}{11 - 1} \\cdot \\frac{23^2 - 1}{23 - 1} = 4320이다. ↩\n\n\n2025 = 5^2 \\cdot 3^4이므로, 양의 약수의 개수는 15개이고, 양의 약수의 총합은 \\frac{5^3 - 1}{5 - 1} \\cdot \\frac{3^5 - 1}{3 - 1} = 3751이다. ↩\n\n\n"},"Class/영재/오일러-함수와-오일러-정리":{"slug":"Class/영재/오일러-함수와-오일러-정리","filePath":"Class/영재/오일러 함수와 오일러 정리.md","title":"오일러 함수와 오일러 정리","links":[],"tags":[],"content":"오일러 \\varphi 함수\n양의 정수 m에 대하여, m 이하의 양의 정수 중에서 m과 서로 소인 수의 개수를 오일러의 \\varphi-함수라 하며 \\varphi(m)으로 나타낸다.\n\\varphi(m) = m \\left(1 - \\frac{1}{p_1} \\right) \\left(1 - \\frac{1}{p_2} \\right) \\cdots \\left(1 - \\frac{1}{p_n} \\right)\n여기서 p_1, p_2, \\dots, p_n은 m의 서로 다른 소인수이다.\n예를 들어 \\varphi(12) = 12 \\left(1 - \\frac{1}{2} \\right) \\left(1 - \\frac{1}{3} \\right) = 4, \\varphi(100) = 100 \\left(1 - \\frac{1}{2} \\right) \\left(1 - \\frac{1}{5} \\right) = 40, \\varphi(1000) = 1000 \\left(1 - \\frac{1}{2} \\right) \\left(1 - \\frac{1}{5} \\right) = 400이다.\na, b가 서로 소인 양의 정수이고, p가 소수이며 m이 양의 정수일 때\n\n\\varphi(ab) = \\varphi(a) \\cdot \\varphi(b) 1\n\\varphi(p^m) = p^m - p^{m-1} 2\n\n오일러 정리\n양의 정수 n에 대하여, \\gcd(a, n) = 1이면\na^{\\varphi(n)} \\equiv 1 \\pmod{n}\n예를 들어 \\varphi(40) = 16이고, \\gcd(9, 40) = 1이므로 9^{16} \\equiv 1 \\pmod{40}이다.\n증명\n\\varphi(n) = r라고 하고, \\{a_1, a_2, \\dots, a_r\\}을 법 n에 대한 기약 잉여계라 하자. a와 n이 서로 소이므로, 곱해진 집합 \\{aa_1, aa_2, \\dots, aa_r\\}도 법 n에 대한 기약 잉여계이다.\n따라서 곱셈한 전체값은\n(aa_1)(aa_2)\\cdots(aa_r) \\equiv a_1 a_2 \\cdots a_r \\pmod{n}\n즉,\na^r \\cdot (a_1 a_2 \\cdots a_r) \\equiv a_1 a_2 \\cdots a_r \\pmod{n}\n이다. a_1 a_2 \\cdots a_r와 n은 서로소이므로 약분 가능하고,\na^r \\equiv 1 \\pmod{n}\n가 된다.\n예제\n\n\n33^{100}을 40으로 나눈 나머지를 구하여라. 3\n\n\n2009^{1002}를 100으로 나눈 나머지를 구하여라. 4\n\n\nn^{1998} - 4가 17의 배수가 되는 n의 최소값을 구하여라. 5\n\n\nFootnotes\n\n\na = p_1^{e_1} \\cdot p_2^{e_2 }\\cdots p_n^{e_n}, b = q_1^{f_1} \\cdot q_2^{f_2} \\cdots q_m^{f_m} 이면, ab = p_1^{e_1} \\cdot p_2^{e_2} \\cdots p_n^{e_n} \\cdot q_1^{f_1} \\cdot q_2^{f_2} \\cdots q_m^{f_m} 이고, \\varphi(ab) = ab \\left(1 - \\frac{1}{p_1} \\right) \\left(1 - \\frac{1}{p_2} \\right) \\cdots \\left(1 - \\frac{1}{p_n} \\right) \\left(1 - \\frac{1}{q_1} \\right) \\left(1 - \\frac{1}{q_2} \\right) \\cdots \\left(1 - \\frac{1}{q_m} \\right) = \\varphi(a) \\cdot \\varphi(b)이다. ↩\n\n\n\\varphi(p^m) = p^m \\left (1 - \\frac{1}{p} \\right) = p^m - p^{m-1}이다. ↩\n\n\n오일러 정리에 의해 33^{16} \\equiv 1 \\pmod{40}이므로 33^{100} = (33^{16})^6 \\cdot 33^4 \\equiv 1 \\cdot 33^4 이다. 33^4 \\equiv (-7)^4 \\equiv 9^2 \\equiv 81 \\equiv 1 \\pmod {40} 이므로 33^{100} \\equiv 1 \\pmod{40}이다. ↩\n\n\n\\gcd (2009, 100) = 1이므로 오일러 정리에 의해 2009^{40} \\equiv 1 \\pmod{100}이다. 2009^{1002} = (2009^{40})^{25} \\cdot 2009^2 \\equiv 1^{25} \\cdot 2009^2 \\equiv 9^2 \\pmod{100}이다. 따라서 2009^1002를 100으로 나눈 나머지는 81이다. ↩\n\n\nn은 17의 배수가 아니므로, \\gcd(n, 17) = 1이다. 오일러 정리에 의해 \\varphi(17) = 16이므로 n^{16} \\equiv 1 \\pmod{17}이다. 1998 \\equiv 14 \\pmod{16} \\Rightarrow n^{14} \\equiv 4 \\pmod{17} 즉, 이 문제는 결국 n^{14} \\equiv 4 \\pmod{17}을 만족하는 최소 자연수 n을 찾는 문제이다. n^{16} \\equiv 4n^2 \\equiv 1 \\pmod{17}이므로, n^2 \\equiv -4 \\pmod{17}이다. 따라서 구하는 최솟값 n=8이다. ↩\n\n\n"},"Class/영재/유클리드-호제법(Euclidean-Algorithm)":{"slug":"Class/영재/유클리드-호제법(Euclidean-Algorithm)","filePath":"Class/영재/유클리드 호제법(Euclidean Algorithm).md","title":"유클리드 호제법(Euclidean Algorithm)","links":[],"tags":[],"content":"가로가 33, 세로가 12인 직사각형을 한 변의 길이가 a (a는 자연수)인 정사각형의 타일로 빈틈없이 채우려면 가로와 세로가 모두 a의 배수이므로 a는 33과 12의 공약수여야 한다. 이때, 33과 12의 최대공약수는 a의 최대값이므로, 직사각형을 같은 크기의 정사각형으로 나누었을 때 얻을 수 있는 정사각형의 변의 길이의 최대값이다.\n\n그림에서 33을 12로 나누면\n33 = 12 \\times 2 + 9\n이므로 □ABCD 에 내접하는 정사각형의 최대 변의 길이는 12보다 작으므로 나머지 부분인 가로 9 (33 을 12로 나눈 나머지)와 세로 12인 직사각형 A_1 B_1 C D_1 에 내접하는 정사각형의 최대 변의 길이와 같다.\n다시, 12를 9로 나누면\n12 = 9 \\times 1 + 3\n이므로 정사각형의 최대 변의 길이는 9보다 작으며 나머지 부분인 세로가 3 (12를 9로 나눈 나머지), 가로가 9인 직사각형 A_1 B_1 C D_1 에 내접하는 최대 변의 길이와 같다.\n그런데\n9 = 3 \\times 3 + 0\n이므로 □A_1 B_1 C D_1 에 내접하는 정사각형의 최대 변의 길이는 3이다. 즉, 33과 12의 최대공약수는 3이다. 위의 과정을 정리하면 다음과 같다.\n\\begin{align*}\n(33 \\text{과 } 12 \\text{의 최대공약수}) &amp;= (12 \\text{와 } 33 \\text{을 12로 나눈 나머지 } 9 \\text{ 와의 최대공약수}) \\\\\n&amp;= (9 \\text{와 } 12 \\text{를 9로 나눈 나머지 } 3 \\text{의 최대공약수}) \\\\\n&amp;= 3\n\\end{align*}\n정리\na = bg + r \\quad (0 \\leq r &lt; b), \\quad (a \\text{와 } b \\text{의 최대공약수}) = (b \\text{와 } r \\text{의 최대공약수})\n증명\na 를 b 로 나누었을 때 몫을 q, 나머지를 r 라 하면\na = bq + r \\quad (0 \\leq r &lt; b)\n이때, a, b 의 최대공약수를 G, b, r 의 최대공약수를 G&#039; 이라 하자.\n\n\na = a&#039; G, \\quad b = b&#039; G에서 r = a - bq = (a&#039; - b&#039; q) G이므로 G 는 r 의 약수이다. G 는 b, r 의 공약수 이므로, G 는 b, r 의 최대공약수인 G&#039; 의 약수이다.\n\n\nb = b&#039;&#039; G&#039;, \\quad r = r&#039; G&#039;이라 하면 a = bq + r = (b&#039;&#039; q + r&#039;) G&#039;이므로 G&#039; 는 a 의 약수이다. G&#039; 는 a, b 의 공약수 이므로, G&#039; 는 a, b 의 최대공약수인 G 의 약수이다.\n\n\n1, 2에서 G 와 G&#039;은 서로 약수이므로 G = G&#039;이다. 즉, a, b 의 최대공약수와 b, r의 최대공약수는 서로 같다.\n유클리드 호제법(Euclidean Algorithm)\na, b \\in \\mathbb{Z}, a \\geq b &gt; 0 일 때, 다음과 같이 나머지를 반복적으로 구한다.\n\\begin{aligned}\na &amp;= bq_1 + r_1, \\quad (0 \\leq r_1 &lt; b) \\\\\nb &amp;= r_1 q_2 + r_2, \\quad (0 \\leq r_2 &lt; r_1) \\\\\nr_1 &amp;= r_2 q_3 + r_3, \\quad (0 \\leq r_3 &lt; r_2) \\\\\n&amp;\\vdots \\\\\nr_{n-2} &amp;= r_{n-1} q_n + r_n, \\quad (0 \\leq r_n &lt; r_{n-1}) \\\\\nr_{n-1} &amp;= r_n q_{n+1} + 0\n\\end{aligned}\n\n예시 1\n두 자연수 2465, 3132의 최대공약수를 구하여라.\n\\begin{array}{c|c|c|c}\n\\quad 3 \\quad &amp; \\quad 2465 \\quad &amp; \\quad 3132 \\quad &amp; \\quad 1 \\quad \\\\\n\\quad  \\quad &amp; \\quad 1901 \\quad &amp; \\quad 2465 \\quad &amp; \\quad \\quad \\\\\n\\hline\n\\quad 5 \\quad &amp; \\quad 564 \\quad &amp; \\quad 667 \\quad &amp; \\quad 1 \\quad \\\\\n\\quad  \\quad &amp; \\quad 515 \\quad &amp; \\quad 564 \\quad &amp; \\quad \\quad \\\\\n\\hline\n\\quad 9 \\quad &amp; \\quad 49 \\quad &amp; \\quad 103 \\quad &amp; \\quad 2 \\quad \\\\\n\\quad  \\quad &amp; \\quad 45 \\quad &amp; \\quad 98 \\quad &amp; \\quad \\quad \\\\\n\\hline\n\\quad 4 \\quad &amp; \\quad 4 \\quad &amp; \\quad 5 \\quad &amp; \\quad 1 \\quad \\\\\n\\quad  \\quad &amp; \\quad 4 \\quad &amp; \\quad 4 \\quad &amp; \\quad \\quad \\\\\n\\hline\n\\quad \\quad &amp; \\quad 0 \\quad &amp; \\quad 1 \\quad &amp; \\quad \\quad \\\\\n\\end{array}\n따라서 \\gcd(2465, 3132) = 1이다.\n베주 항등식(Bézout’s identity)\n유클리드 호제법을 이용하여 주어진 두 정수 a, b의 최대공약수 d를 구할 수 있을 뿐만 아니라 ax + by = d를 만족시키는 정수 쌍 x, y도 얻을 수 있다. 그 방법은 다음과 같다.\nd = \\gcd(a, b) = r_n = r_{n-2} - q_n r_{n-1}\n에\nr_{n-1} = r_{n-3} - q_{n-1} r_{n-2}\n를 대입하면\nr_n = r_{n-2} - q_n (r_{n-3} - q_{n-1} r_{n-2}) = (1 + q_n q_{n-1}) r_{n-2} - q_n r_{n-3}\n여기에\nr_{n-2} = r_{n-4} - q_{n-2} r_{n-3}\n를 대입하면\nr_n = (1 + q_n q_{n-1}) (r_{n-4} - q_{n-2} r_{n-3}) - q_n r_{n-3} = (1 + q_n q_{n-1}) r_{n-4} - [q_n + q_{n-2}(1 + q_n q_{n-1})] r_{n-3}\n다시 여기에\nr_{n-3} = r_{n-5} - q_{n-3} r_{n-4}\n를 대입한다. 이와 같은 과정을 되풀이하면 ax + by = d를 만족시키는 정수 쌍 x, y를 구할 수 있다.\n예시 2\n다음 식을 만족하는 정수 x, y 중 하나를 구하여라.\n78 = 1482x + 1326y\n유클리드 호제법에 의해\n\\begin{array}{c|c|c|c}\n\\quad 1 \\quad &amp; \\quad 1482 \\quad &amp; \\quad 1326 \\quad &amp; \\quad 8 \\quad\\\\\n        &amp; 1326 &amp; 1248 &amp; \\\\\n\\hline\n\\quad 2 \\quad &amp; 156 &amp; 78 &amp; \\\\\n\t\t&amp; 156 &amp;     &amp; \\\\\n\\hline\n        &amp; 0   &amp;     &amp; \\\\\n\\end{array}\n\\gcd(1482, 1326) = 78이다. 이제 유클리드 호제법을 역추적하여 78 = 1482x + 1326y를 만족하는 정수 x, y를 구하면\n\\begin{aligned}\n78 &amp;= 1326 - (156 \\times 8) \\\\\n   &amp;= 1326 - 8 \\cdot (1482 - 1326) \\\\\n   &amp;= 1326 - 8 \\cdot 1482 + 8 \\cdot 1326 \\\\\n   &amp;= -8 \\cdot 1482 + 9 \\cdot 1326\n\\end{aligned}\nx = -8, y = 9이다.\n유클리드 호제법 표를 이용하면\n\\begin{array}{c|c|c|c}\n\\quad 1 \\quad &amp; \\quad  a \\quad &amp; \\quad b \\quad &amp; \\quad 8 \\quad\\\\\n&amp; b &amp; 8a-8b &amp; \\\\\n\\hline\n\\quad &amp; a-b &amp; 9b-8a &amp; \\\\\n\n\\end{array}\n78 = 1482 \\times (-8) + 1326 \\times 9 이므로 x = -8, y = 9이다.\n서로소의 성질\n정수 a, b가 a \\neq 0, b \\neq 0일 때, a와 b가 서로소(relatively prime)이기 위한 필요충분조건은 다음과 같다.\n\\gcd(a, b) = 1 \\quad \\Longleftrightarrow \\quad \\exists\\, x, y \\in \\mathbb{Z} \\text{ such that } ax + by = 1\n증명\n(⇐ 방향)\n정수 x, y \\in \\mathbb{Z}가 존재하여 ax + by = 1 이면, 모든 a, b의 공약수 d는 ax + by를 나누어야 하므로 d \\mid 1 이다. 따라서 d = \\pm 1이므로 \\gcd(a, b) = 1\n(⇒ 방향)\n\\gcd(a, b) = 1이라면, 유클리드 호제법을 통해 \\gcd(a, b)를 구하는 과정을 역추적하여\n항상 ax + by = 1의 꼴로 표현할 수 있다.\n유일한가?\na, b \\in \\mathbb{Z}에 대해\n\nax + by = 1\n\n을 만족하는 어떤 하나의 정수 해 (x_0, y_0)가 존재한다고 하자. 그러면 이 방정식의 모든 해는 다음과 같이 일반해의 형태로 표현된다.\n\nx = x_0 + bt, \\quad y = y_0 - at \\quad \\text{(단, } t \\in \\mathbb{Z})\n\n즉, t에 정수 값을 마음대로 넣으면 무한히 많은 (x, y)쌍이 나온다.\n예시 3\n\n\\gcd(5, 3) = 1 \\Rightarrow 5x + 3y = 1\n\n한 해는 x = 2, y = -3이다.\n하지만 이외에도\n\nx = 2 + 3 = 5, \\quad y = -3 - 5 = -8\nx = 2 - 3 = -1, \\quad y = -3 + 5 = 2\nx = 2 + 3t, \\quad y = -3 - 5t\n\n처럼 무수히 많은 정수해가 존재한다.\n예제\n\n\n\\gcd(120, 45)를 구하시오.1\n\n\n\\gcd(252, 105)를 구하시오.2\n\n\n\\gcd(19278, 7497)를 구하시오.3\n\n\n두 자연수 a=1111과 b = 11\\cdots111(1이 2025개)의 최대 공약수를 구하시오.4\n\n\n임의의 자연수 n에 대하여 \\frac{21n+5}{14n+3}이 기약분수임을 증명하시오. 5\n\n\n임의의 자연수 n에 대하여 \\frac{5n^2 + 15n + 7}{3n^2 + 9n + 4} 가 기약분수임을 증명하시오.6\n\n\n\\gcd(19278, 7497) = 1071 = 19278x + 7497y 를 만족하는 정수 x, y를 하나만 구하여라. 7\n\n\nFootnotes\n\n\n120 = 45 \\times 2 + 30, 45 = 30 \\times 1 + 15, 30 = 15 \\times 2 + 0이므로, 최대공약수는 15이다. ↩\n\n\n252 = 105 \\times 2 + 42, 105 = 42 \\times 2 + 21, 42 = 21 \\times 2 + 0이므로, 최대공약수는 21이다. ↩\n\n\n19278 = 7497 \\times 2 + 4284, 7497 = 4284 \\times 1 + 3213, 4284 = 3213 \\times 1 + 1071, 3213 = 1071 \\times 3 + 0이므로, 최대공약수는 1071이다. ↩\n\n\na = 1111 = 101 \\times 11, b = 11\\cdots111 = 10101 \\cdots 01 = 10101 \\times 11\\cdots11 + 1이므로, 최대공약수는 1이다. ↩\n\n\n2(21n + 5) - 3(14n + 3) = 1이므로, 21n + 5와 14n + 3은 서로소이다. 따라서 \\frac{21n+5}{14n+3}은 기약분수이다. ↩\n\n\n기약분수란 분자와 분모의 최대공약수가 1인 분수를 의미하므로, 최대공약수를 구하여 1인지 확인하자. (5n^2 + 15n + 7) - (3n^2 + 9n + 4) = 2n^2 + 6n + 3, (3n^2 + 9n + 4) - (2n^2 + 6n + 3) = n^2 +3n +1, (2n^2 + 6n + 3) - 2(n^2 + 3n + 1) = 1이므로, 최대공약수는 1이다. ↩\n\n\n1071 = 4284 - 3213 = 4284 - (7497 - 4284) = 2 \\cdot 4284 - 7497 = 2 \\cdot (19278 - 2 \\cdot 7497) - 7497 = 2 \\cdot 19278 - 5 \\cdot 7497 이므로 x = 2, y = -5이다. ↩\n\n\n"},"Class/영재/정수론(Number-Theory)":{"slug":"Class/영재/정수론(Number-Theory)","filePath":"Class/영재/정수론(Number Theory).md","title":"정수론(Number Theory)","links":["Class/영재/소수(Prime-Numbers)","Class/영재/약수(divisor)와-배수(multiple)","Class/영재/최대공약수와-최소공배수","Class/영재/나머지-정리","Class/영재/유클리드-호제법(Euclidean-Algorithm)","Class/영재/합동식","Class/영재/수학적-귀납법","Class/영재/양의-약수의-성질","Class/영재/오일러-함수와-오일러-정리"],"tags":[],"content":"정수론은 수학의 여러 분야 중에서도 가장 오랜 역사를 지닌 분야로, 최근에는 정보과학, 암호론, 통신이론 등에서 널리 활용되며 주목받고 있습니다. 천재적인 수학자 카를 프리드리히 가우스(Karl Friedrich Gauss)는 “수학은 모든 과학의 여왕이며, 정수론은 수학의 여왕이다.”라고 말한 바 있습니다. 이처럼 정수론에는 수학적 사고력을 키울 수 있는 유용한 개념과 기법이 풍부하게 담겨 있습니다.\n정수론에서 다루는 문제들이 직관적으로 이해하기 쉽고 간단한 설명으로 제시될 수 있기 때문입니다. 실제로 많은 정수론 문제들은 수학을 전공하지 않은 사람들이 고안했으며, 이러한 점이 정수론의 접근성을 높이는 데 기여했습니다.\n정수론의 주요 학습 주제\n\n소수(Prime Numbers)\n약수(divisor)와 배수(multiple)\n최대공약수와 최소공배수\n나머지 정리\n유클리드 호제법(Euclidean Algorithm)\n합동식\n수학적 귀납법\n양의 약수의 성질\n오일러 함수와 오일러 정리\n\n예제\n\n\n빨간색 카드가 7장, 파란색 카드가 10강, 노란색 카드가 15장 있다. 빨간색 카드에는 1, 2, \\cdots, 7, 파란색 카드에는 1, 2, \\cdots, 10, 노란색 카드에는 1, 2, \\cdots, 15 중 하나의 숫자가 적혀 있고, 같은 색 카드에 적혀 있는 숫자는 서로 다르다. 빨간색, 파란 색, 노란색의 카드를 각각 한 장씩 고를 때 세장의 카드에 적혀 있는 수의 합이 11의 배수가 되도록 하는 방법의 수를 구하여라. 1\n\n\n양의 정수 n을 100으로 나눈 몫을 q, 나머지를 r이라 하자. q^2 + r + 1을 74로 나눈 몫이 r + 1이고, 나머지는 q일 때, n을 1000으로 나눈 나머지를 구하여라. 2\n\n\n\\frac{23}{9} = a + \\frac{1}{b + \\frac{1}{c + \\frac{1}{d}}} 를 만족하는 자연수 a, b, c, d를 구하여라. 3\n\n\n양의 정수 a, b가 a^2 + b^2 + \\gcd(a, b) = 582와 ab + \\text{lcm}(a, b) = 432을 만족할 때, a + b의 값을 구하여라. 4\n\n\n예제 1.49 (KMO, 2018)\n풀이:\n조건 (i)는\n\n조건 (ii)는\n\n따라서  각 경우를 따져보면,\n따라서 유일하게 조건을 만족하는 경우는 이다. \\square\n다른 예제도 원하시면 인라인 수식 형태로 계속 정리해드릴 수 있습니다.\nFootnotes\n\n\n(2011 KMO) 빨간색, 파란색, 노란색에 적혀있는 수를 각각 r, 6, y 라 하면, 1 \\leq r \\leq 7, 1 \\leq b \\leq 10, 1 \\leq y \\leq 15 이다. 3 \\leq r + b + y \\leq 32 이므로 r + b + y =11 또는 22 이다. r + b + 3 = 11 일 경우, r = 1, 2, 3, 4, 5, 6, 7 에 대하여, 각각 9개, 8개, 7개, 6개, 5개, 4개, 3개의 경우가 나오므로, 모두 42개이다. r + b + 3 = 22 일 경우, r = 1, 2, 3, 4, 5, 6, 7 에 대하여, 각각 5개, 6개, 7개, 8개, 9개, 10개, 10개의 경우가 나오므로, 모두 55개이다. 따라서 모두 97개이다. ↩\n\n\n(2016 KMO)조건에 따라 식을 정리하면 q^2 + r + 1 = 74(r + 1) + q, (0 \\leq q &lt; 74) 즉, q(q - 1) = 73(r + 1)이 된다. 좌변은 73의 배수이고, q - 1 &lt; 73이므로 q = 73이다. 이를 위 식에 대입하면 r = 71이다. 따라서 n = 100 \\times 73 + 71 = 7371이므로 n을 1000으로 나눈 나머지는 371이다. ↩\n\n\n23 = 2 \\cdot 9 + 5 \\Rightarrow a = 2, 9 = 1 \\cdot 5 + 4 \\Rightarrow b = 1, 5 = 1 \\cdot 4 + 1 \\Rightarrow c = 1, 4 = 4 \\cdot 1 \\Rightarrow d = 4이므로  a = 2, b = 1, c = 1, d = 4이다. 유클리드 호제법과 비교해보자. ↩\n\n\n편의상 a &lt; b라 가정하고, \\gcd(a, b) = d라 하면 a = dx, b = dy, \\gcd(x, y) = 1인 양의 정수 x, y가 존재한다. a^2 + b^2 + \\gcd(a, b) = d^2x^2 + d^2y^2 + d = d(dx^2 + dy^2 + 1) = 582, ab + \\text{lcm}(a, b) = d^2xy + dxy = dxy(d + 1) = 432 이므로 d는 \\gcd(582, 432) = 6의 약수이다. d = 2일 때만, xy = 72, x = 8, y = 9이면 a = 16, b = 18을 만족한다. 따라서 a + b = 16 + 18 = 34 ↩\n\n\n"},"Class/영재/최대공약수와-최소공배수":{"slug":"Class/영재/최대공약수와-최소공배수","filePath":"Class/영재/최대공약수와 최소공배수.md","title":"최대공약수와 최소공배수","links":[],"tags":[],"content":"정수 a, b 에 대해, d 가 a \\mid d 와 b \\mid d 를 동시에 만족하는 (양의) 정수 중 가장 큰 값을 a 와 b 의 최대공약수라고 한다. 이 최대공약수를 기호로는\n(a, b) \\quad \\text{또는} \\quad \\gcd(a, b)\n로 쓴다.\n또한, a \\mid c 와 b \\mid c 를 동시에 만족하는 양의 정수 c 중 가장 작은 값을 a 와 b 의 최소공배수라고 하며,\n기호로는\n[a, b] \\quad \\text{또는} \\quad \\operatorname{lcm}(a, b)\n로 쓴다.\n최대공약수가 1일 때, 즉\n(a, b) = 1\n이면, a 와 b 가 서로소(relatively prime) 라고 한다.\n참고\n\n최대공약수는 greatest common divisor (GCD)\n최소공배수는 least common multiple (LCM)\n\n최대공약수와 최소공배수의 곱\nab = (a, b) [a, b]\n증명\na = d a&#039;, b = d b&#039; 이라고 두자. 여기서, (a&#039;, b&#039;) = 1 (즉, 서로소)라고 하자. 그러면,\n(a, b) = d\n이고\n  [a, b] = d a&#039; b&#039;\n이므로\n  ab = d \\cdot d a&#039; b&#039; = (a, b) [a, b]\n가 성립한다.\n예제\n\n\n12와 30의 최대공약수와 최소공배수를 구하여라. 1\n\n\n자연수 1, 2, 3, \\cdots , 30의 최소공배수를 구하여라. 2\n\n\n모든 홀수의 제곱은 8q+1 꼴임을 보여라. (q 는 정수) 3\n\n\n\\gcd(a, b) = 1 이고 c \\mid (a+b) 이면, \\gcd(a, c) = \\gcd(b, c) = 1 임을 증명하여라. 4\n\n\n5개의 자연수 a, b, c, d, e 에서 a 와 b 의 곱은 72, b 와 c 의 곱은 108, c 와 d 의 곱은 60, d 와 e 의 곱은 500을 만족시키는 자연수의 순서쌍 (a, b, c, d, e) 를 모두 구하여라. 5\n\n\nFootnotes\n\n\n12 = 2^2 \\times 3, 30 = 2 \\times 3 \\times 5 이므로, (12, 30) = 2 \\times 3 = 6, [12, 30] = 2^2 \\times 3 \\times 5 = 60 이다. ↩\n\n\n2^4 \\times 3^2 \\times 5^2 \\times 7 \\times 11 \\times 13 \\times 17 \\times 19 \\times 23 \\times 29 이다. ↩\n\n\n모든 홀수는 2k+1 꼴이므로, (2k+1)^2 = 4k^2 + 4k + 1 = 4k(k+1) + 1 이다. k 와 k+1 중 하나는 짝수이므로 q = \\frac{k(k+1)}{2} 로 놓으면, (2k+1)^2 = 8q + 1 이 성립한다. ↩\n\n\nd = \\gcd(a, c) 라 하자. d \\mid a 이므로 d \\mid (a+b). 그런데 \\gcd(a, b) = 1 이므로 d \\mid b 도 성립한다. 따라서 d = 1 이 된다. 동일한 방법으로 \\gcd(b, c) = 1 임을 알 수 있다. ↩\n\n\nab = 72 = 2^3 \\cdot 3^2, bc = 108 = 2^2 \\cdot 3^3, cd = 60 = 2^2 \\cdot 3 \\cdot 5, de = 500 = 2^2 \\cdot 5^3 이므로, b = 2^2 \\cdot 3^2, c = 2^2 \\cdot 3, d = 2^2 \\cdot 5를 최대로 가진다.  3 \\mid cd 이고 3^2 \\mid cd 이므로 3^2 \\mid b 이다. 3 \\nmid de 이고 3 \\nmid d 이므로 3 \\mid c 이다. 5 \\nmid bc 이므로 5 \\nmid c, 따라서 5 \\mid d 이다. 따라서 가능한 조합은 (2^3, 3^2, 2^2 \\cdot 3, 5, 2^2 \\cdot 5^2), (2^2 \\cdot 3^2, 3, 2^2 \\cdot 5, 5, 2^2 \\cdot 5^2), (2^2 \\cdot 3^2, 2, 3, 2^2 \\cdot 5, 5^2)이다. ↩\n\n\n"},"Class/영재/합동식":{"slug":"Class/영재/합동식","filePath":"Class/영재/합동식.md","title":"합동식","links":[],"tags":[],"content":"양의 정수 m과 두 정수 a, b 사이에 m \\mid (a - b)인 관계가 있을 때, “a와 b는 법 m에 관하여 합동이다”라고 하고, 이것을\na \\equiv b \\pmod{m}\n으로 나타낸다. 이 식을 합동식이라 한다. a와 b가 법 m에 관하여 합동이 아닌 경우에는\na \\not\\equiv b \\pmod{m}\n으로 나타낸다.\n예를들어 a가 b의 배수이면, b \\mid a, 즉 b \\mid (a - 0)이므로\na \\equiv 0 \\pmod{b}\n라고 할 수 있다.\n합동식의 성질\n임의의 정수 a에 대하여\n\na \\equiv a \\pmod{m} 1\na \\equiv b \\pmod{m} \\Rightarrow b \\equiv a \\pmod{m} 2\na \\equiv b \\pmod{m},\\ b \\equiv c \\pmod{m} \\Rightarrow a \\equiv c \\pmod{m} 3\n\n임의의 정수 c에 대하여 a \\equiv b \\pmod{m},\\ c \\equiv d \\pmod{m}일 때\n\na \\pm c \\equiv b \\pm d \\pmod{m} (복호동순) 4\na + c \\equiv b + c \\pmod{m} 5\nac \\equiv bd \\pmod{m} 6\n임의의 양의 정수 n에 대하여 a^n \\equiv b^n \\pmod{m} 7\n\n완전 잉여계(Total Residue System)\n자연수 m에 대해, 정수 a_1, a_2, \\ldots, a_m가 다음 조건을 만족할 때 이 수들을 법 m에 대한 완전 잉여계라고 한다.\n\n각각의 a_i는 서로 다른 m개의 수이다.\n각각의 a_i는 어떤 정수 b와 합동이다. 즉, 모든 정수는 a_i 중 하나와 \\pmod{m}에서 합동이다.\n\n\\{a_1, a_2, \\ldots, a_m\\}\n은 정수 전체를 m으로 나누었을 때 나올 수 있는 모든 나머지를 정확히 하나씩 포함한다.\n예를 들어\n\n\\{0, 1, 2, 3, 4\\}는 법 5에 대한 완전 잉여계다.\n\\{-2, -1, 0, 1, 2\\}도 법 5에 대한 완전 잉여계다.\n\n\\{0, 1, 2, 3, 4\\}와 \\{-2, -1, 0, 1, 2\\}가 법 5에 대한 두 완전잉여계라 하면, 다음과 같이 일대일 대응이 이루어진다.\n\\begin{align*}\n-2 &amp;\\equiv 3 \\pmod{5},\\\\\n-1 &amp;\\equiv 4 \\pmod{5},\\\\\n\\quad 0 &amp;\\equiv 0 \\pmod{5},\\\\\n1 &amp;\\equiv 1 \\pmod{5},\\\\\n\\quad 2 &amp;\\equiv 2 \\pmod{5}\n\\end{align*}\n완전 잉여계는 여러 가지로 구성할 수 있다. 어떤 수를 기준으로 대칭을 만들거나, 음수를 포함하는 것도 가능하다. 단, 완전 잉여계의 원소는 법 m에 대해 중복 없이 하나씩만 나와야 한다.\n기약 잉여계(Reduced Residue System)\n자연수 m에 대해, 정수 b_1, b_2, \\ldots, b_r가 다음 조건을 만족할 때 이 수들을 법 m에 대한 기약 잉여계라고 한다.\n\n1 \\le b_i &lt; m 또는 0 \\le b_i &lt; m 사이의 수들 중에서\n각각의 b_i는 m과 서로소이다. 즉, \\gcd(b_i, m) = 1\n서로 다른 \\phi(m)개의 수로 이루어진다. (\\phi(m)은 오일러 함수, 즉 m보다 작고 서로소인 수의 개수)\n\n\\{b_1, b_2, \\ldots, b_{\\phi(m)}\\}\n는 법 m에 대한 기약 잉여계다.\n예를 들어\n\nm = 10일 때, \\phi(10) = 4이고, \\{1, 3, 7, 9\\}는 \\gcd(b_i, 10) = 1이므로 기약 잉여계입니다.\nm = 7일 때, \\phi(7) = 6, \\{1, 2, 3, 4, 5, 6\\}는 모두 7과 서로소이므로 기약 잉여계입니다.\n\n기약 잉여계의 각 원소는 m보다 작은 자연수이며, m과 서로소인 수들로만 이루어져야 한다. 기약 잉여계는 \\phi(m)개의 원소를 가져야 하며, 이 조건을 만족하는 수라면 다양한 조합이 가능하다. 기약 잉여계는 (법 m에 대한)곱셈에 대해 군 구조를 가진다.\n소약법칙\n정수에서 ab = ac이고 a \\ne 0이면 b = c가 성립한다. 이러한 것을 소약법칙이라 하는데, 합동식에서도 소약법칙이 성립할까?\n예를 들어\n2 \\cdot 3 \\equiv 2 \\cdot 5 \\pmod{4}\n가 성립한다. 그러나\n3 \\not\\equiv 5 \\pmod{4}\n이므로 소약법칙이 성립하지 않는다.\n하지만 다음과 같은 경우에는 소약법칙이 성립한다.\nab \\equiv ac \\pmod{m}\n이고, a가 m과 서로소(\\gcd(a, m) = 1) 이면\nb \\equiv c \\pmod{m}\n이다.\n증명\n\\begin{align*}\n&amp; ab \\equiv ac \\pmod{m} \\\\\n\\Rightarrow \\quad &amp; m \\mid (ab - ac) \\\\\n\\Rightarrow \\quad &amp;m \\mid a(b - c)\n\\end{align*}\n\\gcd(a, m) = 1 이므로 m \\mid (b - c)이어야 한다. 따라서\nb \\equiv c \\pmod{m}\n예제\n\n\n17을 5로 나눈 나머지를 구하여라. 8\n\n\n36을 6으로 나눈 나머지를 구하여라. 9\n\n\n2^{10}을 11로 나눈 나머지를 구하여라.10\n\n\n11^n \\equiv 1 \\pmod{5}임을 보여라. 11\n\n\n2^{20} - 1이 41로 나누어 떨어짐을 보여라. 12\n\n\n2^{10} \\cdot 14^{40} - 1은 11의 배수임을 보여라. 13\n\n\n3^{2002}를 7로 나눈 나머지를 구하여라. 14\n\n\nx^2 + y^2 = 1003을 만족하는 정수 x, y는 없음을 증명하여라. 15\n\n\nFootnotes\n\n\n(반사성) a - a = 0 \\Rightarrow m \\mid 0 ↩\n\n\n(대칭성) a - b \\equiv 0 \\pmod{m} \\Rightarrow b - a = -(a - b) \\equiv 0 \\pmod{m} ↩\n\n\n(추이성) a - b \\equiv 0,\\ b - c \\equiv 0 \\Rightarrow a - c = (a - b) + (b - c) \\equiv 0 \\pmod{m} ↩\n\n\n(복호동순) a - b \\equiv 0,\\ c - d \\equiv 0 \\Rightarrow (a \\pm c) - (b \\pm d) = (a - b) \\pm (c - d) \\equiv 0 \\pmod{m} ↩\n\n\n(덧셈보존) a - b \\equiv 0 \\Rightarrow (a + c) - (b + c) = a - b \\equiv 0 ↩\n\n\n(곱셈보존) ac = (b + km)(d + lm) = bd + m(kd + klm + bl) \\Rightarrow ac \\equiv bd \\pmod{m} ↩\n\n\n(거듭제곱보존) a - b = km이면, 귀납법으로 a^n - b^n = (a - b)q꼴이 되어 m \\mid (a^n - b^n) ↩\n\n\n17 = 5 \\cdot 3 + 2이므로, 17 \\equiv 2 \\pmod{5}이다. ↩\n\n\n36 = 6 \\cdot 6 + 0이므로, 36 \\equiv 0 \\pmod{6}이다. ↩\n\n\n2^{10} = 1024 = 11 \\cdot 93 + 1이므로, 2^{10} \\equiv 1 \\pmod{11}이다. ↩\n\n\n11 \\equiv 1 \\pmod{5}이므로, 11^n \\equiv 1^n \\equiv 1 \\pmod{5}이다. ↩\n\n\n2^5 \\equiv -9 \\pmod{41}이므로 2^{20} \\equiv 81 \\equiv -1 \\pmod{41}이다. 따라서 2^{20} - 1 \\equiv 0 \\pmod{41}이다. ↩\n\n\n2^5 \\equiv -1 \\pmod{11}이므로 2^{10} \\equiv 1 \\pmod{11}이다. 또한 14 \\equiv 3 \\pmod{11}이므로 14^{40} \\equiv 3^{40} \\equiv 1 \\pmod{11}이다. 따라서 2^{10} \\cdot 14^{40} \\equiv 1 \\cdot 1 \\equiv 1 \\pmod{11}이다. 따라서 2^{10} \\cdot 14^{40} - 1 \\equiv 0 \\pmod{11}이다. ↩\n\n\n3^3 \\equiv -1 \\pmod{7}이므로 3^{2001} \\equiv (-1)^{667} \\equiv -1 \\pmod{7}이다. 따라서 3^{2002} \\equiv -3 \\equiv 4 \\pmod{7}이다. ↩\n\n\nx^2 + y^2 = 1003을 만족하는 정수 x, y가 존재하면, x^2 + y^2 \\equiv 1003 \\pmod{4}이어야 한다. x^2, y^2는 각각 0 또는 1로 나누어 떨어져야 하므로, x^2 + y^2는 0, 1, 2 중 하나가 되어야 한다. 그러나 1003 \\equiv 3 \\pmod{4}이므로, x^2 + y^2 = 1003을 만족하는 정수 x, y는 존재하지 않는다. ↩\n\n\n"},"Class/확률과-통계/여러가지-순열":{"slug":"Class/확률과-통계/여러가지-순열","filePath":"Class/확률과 통계/여러가지 순열.md","title":"여러가지 순열","links":[],"tags":[],"content":"순열\n서로 다른 n개에서 r (0 &lt; r \\leq n)개를 택하여 일렬로 나열하는 것을 n개에서 r개를 택하는 순열이라고 하며, 이 순열의 수를 기호로 {}_n P_r와 같이 나타냅니다.\n\n{}_n P_n = n!, {}_n P_0 = 1, 0! = 1\n일반적으로 {}_n P_r = \\dfrac{n!}{(n-r)!} (단, 0 \\leq r \\leq n)\n\n조합\n서로 다른 n개에서 순서를 생각하지 않고 r (0 &lt; r \\leq n)개를 택하는 것을 조합이라고 합니다. 조합의 수는 기호로 {}_n C_r로 나타냅니다.\n\n{}_n C_n = 1, \\quad {}_n C_0 = 1\n{}_n C_r = \\frac{{}_n P_r}{r!} = \\frac{n!}{r!(n-r)!} \\quad (\\text{단, } 0 \\leq r \\leq n)\n{}_n C_r = {}_n C_{n-r} \\quad (\\text{단, } 0 \\leq r \\leq n)\n{}_n C_r = {}_{n-1} C_{r-1} + {}_{n-1} C_r \\quad (\\text{단, } 1 \\leq r &lt; n)\n\n원순열\n서로 다른 것을 원형으로 배열하는 순열을 원순열이라고 합니다. 서로 다른 n개를 원형으로 배열하는 원순열의 수는 다음과 같습니다.\n\\frac{n!}{n} = (n-1)!\n원순열에서 회전하여 일치하는 것은 모두 같은 것으로 봅니다.\n다각형으로 배열하는 경우의 수\n(n-1)! \\times \\text{(회전시켰을 때 겹치지 않는 자리의 수)}\n\n중복순열\n중복을 허용하여 만든 순열을 중복순열이라 합니다. 서로 다른 n개에서 중복을 허용하여 r개를 택하는 중복순열의 수를 기호로 {}_n \\Pi_r로 나타냅니다.\n{}_n \\Pi_r = n^r\n일반 순열에서 0 \\leq r \\leq n이지만, 중복순열에서는 중복이 가능하므로 r &gt; n일 수 있습니다. {}_n \\Pi_r의 \\Pi는 Product의 첫 글자를 딴 것입니다.\n같은 것이 있는 순열\nn개 중에서 같은 것이 각각 p개, q개, \\cdots, r개 있을 때, n개를 일렬로 나열하는 경우의 수는 다음과 같습니다.\n\\frac{n!}{p!q!...r!} \\quad (\\text{단, } p + q + ... + r = n)\n중복조합\n중복을 허용하여 만든 조합을 중복조합이라 하며, 서로 다른 n개에서 중복을 허용하여 r개를 택하는 경우의 수를 기호로 {}_n H_r로 나타냅니다.\n{}_n H_r = {}_{n+r-1} C_r\n조합에서는 0 \\leq r \\leq n이지만, 중복조합에서는 r &gt; n일 수 있습니다. {}_n H_r의 H는 Homogeneous의 첫 글자를 딴 것입니다."},"Class/확률과-통계/연속-확률-변수와-정규-분포":{"slug":"Class/확률과-통계/연속-확률-변수와-정규-분포","filePath":"Class/확률과 통계/연속 확률 변수와 정규 분포.md","title":"연속 확률 변수와 정규 분포","links":[],"tags":[],"content":"연속확률변수와 확률밀도함수\n어떤 범위에 속하는 모든 실수의 값을 가질 수 있는 확률변수를 연속확률변수라고 합니다. a \\leq X \\leq b에서 모든 실수의 값을 가지는 연속확률변수 X에 대해 정의된 함수 f(x)가 아래 세 가지 조건을 만족하면 이를 확률밀도함수라 합니다.\n\nf(x) \\geq 0\ny = f(x)의 그래프와 x-축 및 두 직선 x = a, x = b로 둘러싸인 도형의 넓이는 1입니다.\n\n\\int_{-\\infty}^{\\infty} f(x) dx = 1\n\n특정 구간에서의 확률은 다음과 같이 계산됩니다.\n\nP(a \\leq X \\leq b) = \\int_a^b f(x) dx\n정규분포\n실수 전체의 집합에서 정의된 연속확률변수 X의 확률밀도함수 f(x)가 아래 식으로 주어질 때, 이를 정규분포라고 합니다. 이때 m은 평균, \\sigma는 표준편차를 나타냅니다.\nf(x) = \\frac{1}{\\sqrt{2\\pi\\sigma}} e^{-\\frac{(x-m)^2}{2\\sigma^2}}\n확률밀도함수 f(x)의 그래프는 종 모양의 곡선이며, 이를 정규분포 곡선이라고 합니다. 평균이 m, 표준편차가 \\sigma인 정규분포는 기호로 N(m, \\sigma^2)로 나타냅니다. e는 자연상수로 e \\approx 2.71828이며, N(m, \\sigma^2)에서 N은 Normal Distribution을 의미합니다.\n정규분포의 성질\n정규분포 N(m, \\sigma^2)를 따르는 확률변수 X의 정규분포 곡선은 다음 성질을 가집니다.\n\n직선 x = m에 대해 대칭이고 x-축이 점근선인 종 모양의 곡선입니다.\n곡선과 x-축 사이의 전체 넓이는 1입니다.\n\\sigma의 값이 일정할 때, m의 값이 달라지면 대칭축의 위치는 바뀌지만 곡선의 모양은 변하지 않습니다.\nm의 값이 일정할 때, \\sigma의 값이 클수록 가운데 부분의 높이는 낮아지고 곡선은 옆으로 퍼집니다.\n\n\n표준정규분포\n평균이 0, 분산이 1인 정규분포 N(0, 1)을 표준정규분포라 합니다. 확률변수 Z가 표준정규분포 N(0, 1)를 따를 때, 확률밀도함수는 다음과 같습니다.\nf(z) = \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{z^2}{2}}\n정규분포의 표준화\n정규분포를 따르는 확률변수 X를 표준정규분포로 변환하기 위해 다음과 같이 표준화합니다.\nZ = \\frac{X - m}{\\sigma}\n이를 통해 다음 관계가 성립합니다.\nP(a \\leq X \\leq b) = P\\left(\\frac{a - m}{\\sigma} \\leq Z \\leq \\frac{b - m}{\\sigma}\\right)\n이항분포와 정규분포의 관계\n확률변수 X가 이항분포 B(n, p)를 따를 때, n이 충분히 크면 X는 근사적으로 정규분포 N(np, npq)를 따릅니다. 여기서 q = 1 - p입니다. 일반적으로 np \\geq 5, nq \\geq 5일 때 이 근사가 유효합니다.\n\n예제\n\n연속확률변수 X가 가지는 값의 범위는 0 \\leq X \\leq 4이고, 확률변수 X의 확률밀도함수 f(x)가 f(x) = \\frac{x + a}{16} (0 \\leq x \\leq 4)이다. P(0 \\leq X \\leq b) = \\frac{3}{8}일 때, a + b의 값은? (단, a, b는 상수이다.)\n\n\n\n\n\n\n2. 확률변수 $X$가 평균이 $m$인 정규분포를 따르고 $P(m - 1 \\leq X \\leq m + 2) = 0.7$, $P(X \\leq m + 1) = 0.8$일 때, $P(|X - m| \\geq 2)$의 값은?\n\n\n\n\n3. 확률변수 $X$가 정규분포 $N(30, 4^2)$을 따를 때, $P(|X - 29| \\leq 2)$의 값을 표준정규분포표를 이용하여 구한 것은?\n\n\n\n\n4. 확률변수 $X$가 이항분포 $B(192, p)$를 따르고 $E(X) &lt; 50$, $V(X) = 36$일 때, $P(51 \\leq X \\leq 54)$의 값을 표준정규분포표를 이용하여 구한 것은?\n\n\n\n\n5. 어느 고등학교의 수학 시험에 응시한 수험생의 시험 점수는 평균이 $m$점, 표준편차가 $10$점인 정규분포를 따른다고 한다. 이 수학 시험에 응시한 수험생 중 임의로 선택한 수험생 한 명의 점수가 $65$점 이상일 확률이 $0.9032$일 때, $m$의 값을 오른쪽 표준정규분포표를 이용하여 구한 것은?"},"Class/확률과-통계/완전-순열":{"slug":"Class/확률과-통계/완전-순열","filePath":"Class/확률과 통계/완전 순열.md","title":"교란(Derangement)","links":[],"tags":["이산수학","함수","치환","완전순열"],"content":"학생이 시험을 치른 후 자신의 시험지가 아닌 서로의 시험지를 채점해 주는 경우의 수는 어떻게 될까? 이는 앞선 그림과 같이 일대일 대응 함수 중 고정점이 없는 함수의 개수와 같다. 즉, f:X \\rightarrow X, f(x) \\not= x인 일대일 대응 함수이다. 이는 모든 원소의 위치를 바꾸는 순열과 같아 ‘완전 순열’ 또는 ‘교란’이라 부른다. 기호는 !n라 적고, n subfactorial이라 읽는다.\n\n\n\n우선 f(1)=x라 하면, x \\not= 1이다. 따라서 x가 될 수 있는 원소의 수는 총 n-1이다.\n\n\n\nf(x) \\not=1이라면 1을 제외한 n-1개의 원소들이 완전순열을 이루어야 하므로 경우의 수는 !(n-1)이다.(남은 정의역의 원소는 2부터 x까지 n-1개이고, 치역의 원소는 1부터 n까지 중에 x를 뺀 n-1개다. 이때, x는 1을 선택하지 못하고 나머지 원소도 자신을 선택하지 못하므로 결국 원소의 개수가 n-1인 완전순열을 이룬다.)\n\n\n\nf(x)=1이라 하면 1과 x를 제외한 남은 n-2개의 원소들의 완전순열은 !(n-2)이다.\n\n\n따라서 교란은 아래와 같이 귀납적으로 정의할 수 있다. 또는 포함배제의 원리에 의해 같은 값을 유도하는 식을 얻을 수도 있다.\n{!n} = (n - 1) \\times \\left( !(n - 1) + !(n - 2) \\right) = n! \\sum_{i=0}^{n} \\frac{(-1)^i}{i!}\n일반적인 고등학교 수준의 문제에서는 고정점이 5개 이상이 나오는 경우는 거의 없어 위의 식보다는 차라리 !0부터 !4까지의 값을 외우고 있는 것이 좋다.\n\\begin{array}{cccccccc}\n!0=1 &amp; !1=0 &amp; !2=1 &amp; !3 = 2 &amp; !4 =9 &amp; !5=44 &amp; !6=265 &amp; !7 = 1854\n\\end{array}\n"},"Class/확률과-통계/이산-확률-변수와-이항분포":{"slug":"Class/확률과-통계/이산-확률-변수와-이항분포","filePath":"Class/확률과 통계/이산 확률 변수와 이항분포.md","title":"이산 확률 변수와 이항분포","links":[],"tags":[],"content":"이산확률변수와 확률질량함수\n\n확률변수가 가질 수 있는 값들이 유한개이거나 자연수와 같이 셀 수 있을 때, 이 확률변수를 이산확률변수라고 합니다.\n이산확률변수 가 가질 수 있는 모든 값 에 각각 대응하는 확률을 나타내는 함수를 이산확률변수 X의 확률질량함수라고 합니다.\n\nP(X = x_i) = p_i \\quad (i = 1, 2, 3, \\dots, n)\n확률질량함수의 성질\n\n확률은 항상 0 이상 1 이하의 값을 가집니다. 0 \\leq p_i \\leq 1\n확률의 총합은 항상 1입니다: p_1 + p_2 + \\cdots + p_n = 1\n\n이산확률변수의 기댓값(평균)\n확률질량함수 P(X = x_i) = p_i일 때, 확률변수 X의 기댓값 또는 평균은 다음과 같이 정의 됩니다. E(X)의 E는 기댓값을 뜻하는 Expectation의 첫 글자입니다. E(X)는 평균을 나타내는 m으로 표기되기도 합니다.\nE(X) = x_1p_1 + x_2p_2 + x_3p_3 + \\cdots + x_np_n\n이산확률변수의 분산과 표준편차\nX의 기댓값을 E(X) = m이라 할 때, 확률변수 X의 분산은 다음과 같이 정의됩니다.\nV(X) = E((X - m)^2)\n분산 V(X)의 양의 제곱근을 X의 표준편차라 하며, 다음과 같이 나타냅니다:\n\\sigma(X) = \\sqrt{V(X)}\nV(X)의 V는 분산을 뜻하는 Variance의 첫 글자입니다. \\sigma(X)는 표준편차를 뜻하는 standard deviation의 첫 글자에 해당하는 그리스 문자입니다.\n\nX의 분산 V(X)은 다음 식으로 계산할 수 있습니다.\nV(X) = E(X^2) - \\{E(X)\\}^2\n확률변수 의 평균, 분산, 표준편차\n확률변수 X와 두 상수 a, b \\, (a \\neq 0)에 대해 다음이 성립합니다.\n\n평균: E(aX + b) = aE(X) + b\n분산: V(aX + b) = a^2V(X)\n표준편차:\\sigma(aX + b) = |a| \\sigma(X)\n\n이항분포\n한 번의 시행에서 사건 A가 일어날 확률이 p로 일정할 때, n번의 독립시행에서 사건 A가 일어나는 횟수를 확률변수 X라고 정의합니다. 이 확률변수 X의 확률질량함수는 다음과 같습니다.\nP(X = x) = {}_nC_x \\cdot p^x \\cdot q^{n-x} \\quad (x = 0, 1, 2, \\dots, n, \\, q = 1 - p)\n확률변수 X의 확률분포를 표로 나타내면 다음과 같습니다.\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline\nX &amp; 0 &amp; 1 &amp; 2 &amp; \\dots &amp; n \\\\\n\\hline\nP(X = x) &amp; {}_nC_0 \\cdot q^n &amp; {}_nC_1 \\cdot p^1 \\cdot q^{n-1} &amp; {}_nC_2 \\cdot p^2 \\cdot q^{n-2} &amp; \\dots &amp; {}_nC_n \\cdot p^n \\\\\n\\hline\n\\end{array}\n이와 같은 확률분포를 이항분포라고 하며, 기호로 B(n, p)로 나타냅니다. 확률변수 X는 이항분포 B(n, p)를 따른다고 합니다. 이항정리에 의해 확률질량함수의 모든 확률의 합은 1이 됩니다. {}_nC_0 q^n + {}_nC_1 p^1 q^{n-1} + \\cdots + {}_nC_n p^n = (p + q)^n = 1\n이항분포의 평균, 분산, 표준편차\n확률변수 X가 이항분포 B(n, p)를 따를 때, 평균, 분산, 표준편차는 다음과 같습니다:\n\n평균: E(X) = np\n분산: V(X) = npq\n표준편차: \\sigma(X) = \\sqrt{npq} \\quad (\\text{단, } q = 1 - p)\n\n\n큰 수의 법칙\n어떤 시행에서 사건 A가 일어날 수학적 확률이 p이고, n번의 독립시행에서 사건 A가 일어나는 횟수를 X라고 할 때, n이 한없이 커질수록 상대도수 \\frac{X}{n}는 이론적 확률 p에 수렴합니다. 이를 큰 수의 법칙이라고 합니다.\n\\lim_{n \\to \\infty} P\\left(\\left| \\frac{X}{n} - p \\right| &lt; h \\right) = 1 \\quad (\\text{충분히 작은 } h &gt; 0)\n\n예제\n\n숫자 1, 1, 2, 2, 4가 하나씩 적힌 5개의 공이 들어 있는 주머니가 있다. 이 주머니에서 임의로 2개의 공을 동시에 꺼낼 때, 꺼낸 2개의 공에 적혀 있는 두 수의 합을 확률변수 X라 하자. P(X \\geq 4)의 값은?\n\n\n\n\n\n\n2. 흰 공 $3$개, 검은 공 $3$개가 들어 있는 주머니에서 임의로 3개의 공을 동시에 꺼낼 때, 꺼낸 공 중 흰 공의 개수를 $a$, 검은 공의 개수를 $b$라 하자. $ab$의 값을 확률변수 $X$라 할 때, $E(X)$의 값은?\n\n\n\n\n3. 이산확률변수 $X$에 대하여 $E(X) = 4$, $E((X - 4)^2) = 9$일 때, $E(X^2) - \\sigma(X)$의 값은?\n\n\n\n\n4. 이산확률변수 $X$에 대하여 $E(4X + 1) = E(X^2) + 1 = 5$일 때, $\\sigma(\\sqrt{3}X - \\sqrt{3})$의 값은?\n\n\n\n\n5. 확률변수 $X$가 이항분포 $B(n, \\frac{1}{3})$를 따르고 $E(X^2) = 40$일 때, 자연수 $n$의 값은?"},"Class/확률과-통계/이항정리":{"slug":"Class/확률과-통계/이항정리","filePath":"Class/확률과 통계/이항정리.md","title":"이항정리(Binomial theorem)","links":[],"tags":["이항정리","조합","파스칼"],"content":"이항정리\n(a+b)^n의 전개식에서 각 항의 계수 {}_nC_0, {}_nC_1, \\cdots, {}_nC_r, \\cdots, {}_nC_n을 이항계수라고 하며, 일반항은 다음과 같다.\n{}_nC_r a^{n-r}b^r\n\na^0 = 1, b^0 = 1로 정의한다. (a \\neq 0, b \\neq 0)\n{}_nC_r = {}_nC_{n-r}1이므로, (a+b)^n의 전개식에서 a^{n-r}b^r의 계수와 a^r b^{n-r}의 계수는 같다.\n\n여러가지 항등식\n(1+x)^n = {{}_n C_0} + {{}_n C_1}x + {{}_n C_2}x^2 + \\cdots + {{}_n C_n}x^n를 정의할 수 있고, 이는 항등식이므로 x에 적당한 수를 대입하여 다양한 성질을 유도할 수 있다.\n\\begin{align*}\n2^n &amp;= {{}_n C_0} + {{}_n C_1} + {{}_n C_2} + \\cdots + {{}_n C_n} &amp; (x=1) \\\\\n0 &amp;= {{}_n C_0} - {{}_n C_1} + {{}_n C_2} - \\cdots + (-1)^n {{}_n C_n} &amp; (x=-1) \\\\\n2^{n-1} &amp;= {{}_n C_0} + {{}_n C_2} + {{}_n C_4} + \\cdots \\\\\n2^{n-1} &amp;= {{}_n C_1} + {{}_n C_3} + {{}_n C_5} + \\cdots \\\\\n3^n &amp;= {{}_n C_0} + 2 \\cdot {{}_n C_1} + 2^2 \\cdot {{}_n C_2} + \\cdots + 2^n \\cdot {{}_n C_n} &amp; (x=2) \n\\end{align*}\n파스칼 삼각형\n\n파스칼 삼각형의 각 항은 조합으로 표현될 수 있으며, 이웃하는 항들의 관계를 나타내는 식은 다음과 같다.\n\\begin{align*}\n2^{n-1} &amp;= {{}_n C_0} + {{}_n C_1} + {{}_n C_2} + \\cdots + {}_n C_{\\frac{n-1}{2}} &amp;\\text{(if $n$ odd)}\\\\\n\\\\\n{{}_{n+1} C_r} &amp;= {{}_n C_{r-1}} + {{}_n C_r} \\\\\n{{}_{n+k+1} C_k} &amp;= {{}_n C_0} + {{}_{n+1} C_1} + {{}_{n+2} C_2} + \\cdots + {{}_{n+k} C_k} \\\\\n{{}_{n+k+1} C_{n+1}} &amp;= {{}_n C_n} + {{}_{n+1} C_n} + {{}_{n+2} C_n} + \\cdots +  {{}_{n+k} C_n}\\\\\n\\\\\n_{n-1} C_{r} \\cdot _{n} C_{r-1} \\cdot _{n+1} C_{r+1} &amp;= _{n-1} C_{r-1} \\cdot _{n} C_{r+1} \\cdot _{n+1} C_{r}  \n\\end{align*}\n여러가지 항등식(고급)2\n\\begin{align*}\n{}_{2n}C_n &amp;= \\left( {}_{n}C_0 \\right)^2+\\left( {}_{n}C_1 \\right)^2+\\left( {}_{n}C_2 \\right)^2+\\cdots +\\left( {}_{n}C_n \\right)^2 \\\\\n{}_{n+m}C_r &amp;= {}_{n}C_0 \\cdot {}_{m}C_r + {}_{n}C_1 \\cdot {}_{m}C_{r-1} + \\cdots + {}_{n}C_{r} \\cdot {}_{m}C_{0}\\\\\n\\end{align*}\n\\sum_{k=0}^{n} (-1)^k \\binom{n}{k}^2 =\n\\begin{cases}\n(-1)^{n/2}\\binom{n}{n/2} &amp; \\text{(if $n$ even)} \\\\\n0 &amp; \\text{(if $n$ odd)}\n\\end{cases}\n여러가지 항등식(심화)3\n\\begin{align*}\n(-4)^{n} &amp;= {{}_{4n} C_{0}} - {{}_{4n} C_{2}} + {{}_{4n} C_{4}} - \\cdots + {{}_{4n} C_{4n}} &amp; (x=i)\\\\\n0 &amp;= {{}_{4n} C_{1}} - {{}_{4n} C_{3}} + {{}_{4n} C_{5}} - \\cdots -{{}_{4n} C_{4n-1}} &amp;(x=i)\\\\\n\\\\\n n \\cdot 2^{n-1} &amp;= \\sum_{k=0}^{n} k \\cdot {}_{n}C_{k} \\\\\n0 &amp;= \\sum_{k=0}^{n}(-1)^k \\cdot k \\cdot {}_{n}C_{k} \\\\\nn\\cdot (n+1) \\cdot 2^{n-2} &amp;= \\sum_{k=0}^{n} k^2 \\cdot {}_{n}C_{k} \\\\\n\\frac{2^{n+1}-1}{n+1} &amp;= \\sum_{k=0}^{n} \\frac{1}{k+1} \\cdot {}_{n}C_{k} \\\\\n\\\\\n(x_1 + x_2 + x_3)^n &amp;= \\sum \\frac{n!}{p! \\cdot q! \\cdot r!} x_1^{p} x_2^{q} x_3^{r}\\\\\n\\\\\n\n\\end{align*}\n예제 1\n\n{}_{5} C _{0} + _{5} C _{1} + _{5} C _{2} + _{5} C _{3} + _{5} C _{4} + _{5} C _{5}\n{}_{6} C _{1} - _{6} C _{2} + _{6} C _{3} - _{6} C _{4} + _{6} C _{5} - _{6} C _{6}\n{}_{8} C _{1} + {}_{8} C _{3} + {}_{8} C _{5} +{}_{8} C _{7}\n{}_{4} C _{0} +2 \\cdot{} _{4} C _{1} +2 ^{2} \\cdot {}_{4} C _{2} +2 ^{3} \\cdot {}_{4} C _{3} +2 ^{4} \\cdot {}_{4} C _{4}\n{}_{3} C _{0} + {}_{4} C _{1} + {}_{5} C _{2} + {}_{6} C _{3} + {}_{7} C _{4}\n{}_{4} C _{4} + {}_{5} C_{4} + {}_{6} C _{4} + {}_{7} C _{4} + {}_{8} C _{4}\n\n예제 2\n\n{}_{9} C _{0} + {}_{9} C_{1} + {}_{9} C _{2} + {}_{9} C _{3} + {}_{9} C _{4}\n{}_{6} C _{0} + {}_{6} C _{1} + {}_{6} C _{2} +{}_{6} C _{3}\n\\left( {}_{3}C_0 \\right)^2 - \\left( {}_{3}C_1 \\right)^2+\\left( {}_{3}C_2 \\right)^2 - \\left( {}_{3}C_3 \\right)^2\n\\left( {}_{3}C_0 \\right)^2+\\left( {}_{3}C_1 \\right)^2+\\left( {}_{3}C_2 \\right)^2+\\left( {}_{3}C_3 \\right)^2\n1+x+x ^{2} + \\cdots +x^{8} =a _{0} +a _{1} (x-1)+a _{2} (x-1)^{2} + \\cdots +a _{8} (x-1) ^{8}일 때, a_4의 값은?4\n(2+3x)^{20}을 전개한 식에서 가장 큰 계수를 갖는 항의 차수는?5\n\n예제 3\n\n{}_{20} C _{0} - {}_{20} C _{2} + {}_{20} C _{4} - {}_{20} C _{6} + \\cdots + {}_{20} C _{20}\n{}_{20} C _{1} - {}_{20} C _{3} + {}_{20} C _{5} - {}_{20} C _{7} + \\cdots - {}_{20} C _{19}\n{}_{5} C _{1} + 2 \\cdot _{5} C _{2} + 3 \\cdot _{5} C _{3} + 4 \\cdot _{5} C _{4} + 5 \\cdot _{5} C _{5}\n(x+2y+3z)^4의 전개식에서 xy^2z의 계수는?\n\nFootnotes\n\n\n(1+x)^n = \\sum_{k=0}^{n} \\binom{n}{k} x^k에서, x = \\frac{1}{x}로 바꾸면, (1+\\frac{1}{x})^n = \\sum_{k=0}^{n} \\binom{n}{k} \\left( \\frac{1}{x} \\right)^k이다. 양변에 x^n을 곱하면 (1+x)^n x^n = \\sum_{k=0}^{n} \\binom{n}{k} x^{n-k}이므로, 계수를 비교하면, \\binom{n}{k} = \\binom{n}{n-k}이다. ↩\n\n\n(1+x)^n (1+x)^n = \\sum_{k=0}^{n} \\binom{n}{k} x^k \\cdot \\sum_{m=0}^{n} \\binom{n}{m} x^m 이므로, x=1을 대입하면 2^{2n} = \\sum_{k=0}^{n} \\sum_{m=0}^{n} \\binom{n}{k} \\binom{n}{m}이다. k=m일 때, \\binom{n}{k} \\binom{n}{m} = \\binom{n}{k}^2이므로, 2^{2n} = \\sum_{k=0}^{n} \\binom{n}{k}^2이다. 따라서, \\sum_{k=0}^{n} \\binom{n}{k}^2 = \\binom{2n}{n}이다. ↩\n\n\n(1+i)^4=(2i)^2=-4이므로, i에 대입하여 다양한 항등식을 유도할 수 있다. (1+i)^{4n} = {}_{4n}C_{0} + {}_{4n}C_{1}i + {}_{4n}C_{2}i^2 + {}_{4n}C_{3}i^3+ \\cdots + {}_{4n}C_{4n}i^{4n}이다. i^2=-1, i^3=-i, i^4=1이므로, (1+i)^{4n} = {}_{4n}C_{0} + {}_{4n}C_{1}i - {}_{4n}C_{2} - {}_{4n}C_{3}i+ {}_{4n}C_{4} + {}_{4n}C_{5}i -{}_{4n}C_{6} - {}_{4n}C_{7}i + {}_{4n}C_{8} + \\cdots이다. 실수부와 허수부를 나누어 정리하면, (-4)^{n} = ({}_{4n} C _{0} - {}_{4n} C _{2} + {}_{4n} C _{4} - \\cdots + {}_{4n} C _{4n}) + i({}_{4n} C _{1} - {}_{4n} C _{3} + {}_{4n} C _{5} - \\cdots -{}_{4n} C _{4n-1})이다. 따라서, (-4)^{n}의 실수부와 허수부를 각각 구하면, 위의 항등식을 유도할 수 있다. ↩\n\n\nx-1 = t로 치환하면, 1+(t+1)+(t+1)^2+(t+1)^3+\\cdots+(t+1)^8 = a_0+a_1t+a_2t^2+\\cdots+a_8t^8이다. a_4의 계수는 (t+1)^4부터 (t+1)^8까지의 t^4의 계수의 합이므로, {}_{4}C_4 + {}_{5}C_4 + {}_{6}C_4 + {}_{7}C_4 + {}_{8}C_4 = {}_{9}C_4 = 126이다. ↩\n\n\n이항정리를 이용해 전개하면 (2 + 3x)^{20} = \\sum_{r=0}^{20} {}_{20}C_{r} \\cdot 2^{20 - r} \\cdot (3x)^r 이고, 여기서 x^r의 계수를 a_r이라 하면 a_r = {}_{20}C_{r} \\cdot 2^{20 - r} \\cdot 3^r 이다. 최댓값을 갖는 a_r을 찾기 위해 \\dfrac{a_{r+1}}{a_r} = \\dfrac{{}_{20}C_{r+1} \\cdot 2^{20 - (r+1)} \\cdot 3^{r+1}}{{}_{20}C_{r} \\cdot 2^{20 - r} \\cdot 3^r} 를 계산하면, \\dfrac{a_{r+1}}{a_r} = \\dfrac{{}_{20}C_{r+1}}{{}_{20}C_{r}} \\cdot \\dfrac{1}{2} \\cdot 3 이고, \\dfrac{{}_{20}C_{r+1}}{{}_{20}C_{r}} = \\dfrac{20 - r}{r + 1} 이므로 \\dfrac{a_{r+1}}{a_r} = \\dfrac{20 - r}{r + 1} \\cdot \\dfrac{3}{2} 이다. 이 비가 1보다 클 때는 증가, 1보다 작을 때는 감소하므로, 최댓값을 가지는 r은 \\dfrac{20 - r}{r + 1} \\cdot \\dfrac{3}{2} \\leq 1 을 만족하는 최소의 정수이다. 양변에 2(r + 1)을 곱하면 (20 - r) \\cdot 3 \\leq 2(r + 1), 즉 r \\geq \\dfrac{58}{5} = 11.6 이므로, 정수 중 최소는 r = 12이고, 이때 a_r이 최대이다. ↩\n\n\n"},"Class/확률과-통계/조건부-확률":{"slug":"Class/확률과-통계/조건부-확률","filePath":"Class/확률과 통계/조건부 확률.md","title":"조건부 확률","links":[],"tags":[],"content":"조건부 확률\n확률이 0이 아닌 사건 A가 일어났다고 가정할 때 사건 B가 일어날 확률을 조건부확률이라고 하며, 기호로 P(B|A)로 나타냅니다.\nP(B|A) = \\frac{P(A \\cap B)}{P(A)} \\quad (\\text{단, } P(A) \\neq 0)\n확률의 곱셈정리\n두 사건 A, B에 대하여 다음이 성립합니다.\nP(A \\cap B) = P(A) P(B|A) \\quad (\\text{단, } P(A) \\neq 0)\n사건의 독립과 종속\n사건 A, B에 대하여 사건 A가 일어나는 것이 사건 B가 일어날 확률에 영향을 주지 않을 때 두 사건 A, B는 서로 독립이라고 합니다.\nP(B|A) = P(B)\n사건 A, B가 독립이면 P(B|A^c) = P(B|A) = P(B)가 성립합니다. 반면에 사건 A, B가 서로 독립이 아닐 때 두 사건 A, B는 종속이라고 합니다.\n두 사건이 독립일 조건\n두 사건 A, B가 서로 독립이기 위한 필요충분조건은 다음과 같습니다.\nP(A \\cap B) = P(A) P(B) \\quad (\\text{단, } P(A) \\neq 0, P(B) \\neq 0)\n두 사건 A, B가 독립인지 종속인지 판별할 때는 독립과 종속의 정의보다 위의 등식을 이용하는 것이 편리합니다.\n\n독립시행의 확률\n동일한 시행을 반복하는 경우, 각 시행에서 일어나는 사건이 서로 독립이면 이를 독립시행이라고 합니다. 어떤 시행에서 사건 A가 일어날 확률이 p (0 &lt; p &lt; 1)일 때, 이 시행을 n회 반복하는 독립시행에서 사건 A가 r회 일어날 확률은 다음과 같습니다.\n{}_nC_r \\cdot p^r \\cdot (1-p)^{n-r} \\quad (\\text{단, } r = 0, 1, 2, \\cdots, n)"},"Class/확률과-통계/통계적-추정":{"slug":"Class/확률과-통계/통계적-추정","filePath":"Class/확률과 통계/통계적 추정.md","title":"통계적 추정","links":[],"tags":[],"content":"모집단과 표본\n\n통계 조사에서 조사하고자 하는 대상 전체를 모집단이라 하며, 모집단 전체를 조사하는 것을 전수조사라고 합니다.\n모집단에서 뽑은 일부를 표본이라 하고, 표본을 뽑아 조사하는 것을 표본조사라고 합니다. 또한, 표본조사에서 뽑은 표본의 개수를 표본의 크기라고 합니다.\n모집단에 속하는 각 대상이 같은 확률로 추출되도록 표본을 추출하는 방법을 임의추출이라 합니다. 한 개의 자료를 뽑은 후 다시 넣고 반복하여 뽑는 것을 복원추출이라 하며, 넣지 않고 뽑는 것을 비복원추출이라 합니다.\n\n모평균과 표본평균\n모집단에서 조사하고자 하는 특성을 나타내는 확률변수를 X라 할 때, X의 평균, 분산, 표준편차를 각각 모평균, 모분산, 모표준편차라 하고, 이를 기호로 다음과 같이 나타냅니다.\nm, \\, \\sigma^2, \\, \\sigma\n표본평균, 표본분산, 표본표준편차\n-모집단에서 임의추출한 크기가 n인 표본을 X_1, X_2, \\dots, X_n이라 할 때, 표본평균, 표본분산, 표본표준편차를 기호로 다음과 같이 나타냅니다.\n\\overline{X}, \\, S^2, \\, S\n\n표본평균:\n\\overline{X} = \\frac{1}{n} (X_1 + X_2 + \\cdots + X_n)\n\n표본분산:\nS^2 = \\frac{1}{n-1} \\left\\{ (X_1 - \\overline{X})^2 + (X_2 - \\overline{X})^2 + \\cdots + (X_n - \\overline{X})^2 \\right\\}\n\n\n표본평균을 정의할 때와 달리 표본분산의 정의에서 n-1로 나누는 이유는 표본분산과 모분산의 차이를 줄이기 위함입니다.\n\n\n표본표준편차:\nS = \\sqrt{S^2}\n\n\n표본평균의 평균, 분산, 표준편차\n모평균이 m, 모표준편차가 \\sigma인 모집단에서 임의추출한 크기가 n인 표본의 표본평균 \\overline{X}에 대해 다음 성질이 성립합니다:\nE(\\overline{X}) = m, \\quad V(\\overline{X}) = \\frac{\\sigma^2}{n}, \\quad \\sigma(\\overline{X}) = \\frac{\\sigma}{\\sqrt{n}}\n표본평균의 분포\n모평균이 m, 모표준편차가 \\sigma인 모집단에서 임의추출한 크기가 n인 표본의 표본평균 \\overline{X}에 대해\n\n\n모집단이 정규분포를 따르면 n의 크기에 관계없이 표본평균 \\overline{X}는 정규분포를 따릅니다.\nN\\left(m, \\frac{\\sigma^2}{n}\\right)\n\n\n모집단이 정규분포를 따르지 않아도 n이 충분히 크면 표본평균 \\overline{X}는 근사적으로 정규분포를 따릅니다.\nN\\left(m, \\frac{\\sigma^2}{n}\\right)\n보통 n \\geq 30이면 충분히 큰 표본으로 간주합니다.\n\n\n\n모평균의 추정\n\n표본을 조사해 얻은 정보를 이용하여 모평균, 모표준편차와 같이 모집단의 특성을 나타내는 값을 추측하는 것을 추정이라고 합니다.\n정규분포 를 따르는 모집단에서 임의추출한 크기가 인 표본의 표본평균의 값이 주어질 때, 신뢰도에 따른 모평균 에 대한 신뢰구간은 다음과 같습니다.\n\n\n(1) 신뢰도 95%의 신뢰구간:\n\n\\overline{X} - 1.96 \\frac{\\sigma}{\\sqrt{n}} \\leq m \\leq \\overline{X} + 1.96 \\frac{\\sigma}{\\sqrt{n}}\n\n(2) 신뢰도 99%의 신뢰구간:\n\n\\overline{X} - 2.58 \\frac{\\sigma}{\\sqrt{n}} \\leq m \\leq \\overline{X} + 2.58 \\frac{\\sigma}{\\sqrt{n}}\n표본의 크기 n이 충분히 크면 표본표준편차 S의 값을 \\sigma대신 사용하여 모평균에 대한 신뢰구간을 구할 수도 있습니다."},"Class/확률과-통계/함수의-개수":{"slug":"Class/확률과-통계/함수의-개수","filePath":"Class/확률과 통계/함수의 개수.md","title":"함수의 개수","links":["Class/미적/함수-OX","Class/공통-수학/분할과-분배"],"tags":["함수","경우의수"],"content":"함수 OX\n임의의 원소 x \\in X에 대해, 그에 대응하는 y \\in Y가 유일하게 존재하면, 함수라고 한다.\nx_1 \\not= x_2 \\Rightarrow f(x_1) \\not= f(x_2) 조건을 만족하면 일대일(1 to 1)이라 부르며,\nf(X) = Y 조건을 만족하면 전사(onto)라 부른다.\n일대일 함수 중 f(X) = Y 조건을 만족하면 일대일 대응(1 to 1, onto)이라 부른다.\nx_1 &lt; x_2 \\Rightarrow f(x_1) &lt; f(x_2)을 만족하면 (순)증가 함수,\nx_1 &lt; x_2 \\Rightarrow f(x_1) \\leq f(x_2)을 만족하면 단조 증가 함수라 부른다.\n함수의 개수\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n유형공식함수1{}_{\\lvert Y\\rvert} \\Pi_{\\lvert X\\rvert}일대일 함수2{}_{\\lvert Y\\rvert} P_{\\lvert X\\rvert}일대일 대응 함수3\\lvert Y\\rvert !증가 함수45{}_{\\lvert Y\\rvert} C_{\\lvert X\\rvert}단조 증가 함수67{}_{\\lvert Y\\rvert} H_{\\lvert X\\rvert}전사 함수8S(\\lvert X\\rvert, \\lvert Y\\rvert) \\times \\lvert Y\\rvert !치역의 원소 개수가 n인 함수9S(\\lvert X\\rvert, n) \\times n!\n집합의 분할\n분할과 분배라는 개념을 확장한 해보자.\nn개의 원소를 가진 집합을 \u001d공집합이 아닌 k개의 부분집합으로 분할하는 경우의 수를 S(n, ~k)(제 2종 스털링 수)라 한다.\n예를들어 S(4, ~2)를 보자. 4개의 원소를 2개로 분할하는 방법은 \\{3, ~1\\}또는 \\{2, ~2\\}로 나눌 수 있다. \\{3, ~1\\}로 나누는 경우의 수는 {}_{4} C_3 \\times {}_{1} C_1이고, \\{2, ~2\\}로 나누는 경우의 수는 {}_{4} C_2 \\times {}_{2} C_2 \\times \\frac{1}{2!}이므로 S(4, ~2) = 4+3=7이다.\n같은 방법으로 S(6, ~3)의 경우를 구해보자. 6개의 원소를 3개로 분할하는 방법은 \\{4, ~1, ~1\\} 또는 \\{3, ~2, ~1\\} 또는 \\{2, ~2, ~2\\}로 나눌 수 있다. 각각의 경우의 수는 {}_{6} C _{4} \\times _{2} C _{1} \\times _{1} C _{1} \\times \\frac{1}{2!}, {}_{6} C _{3} \\times _{3} C _{2} \\times _{1} C _{1}, {}_{6} C _{2} \\times _{4} C _{2} \\times _{2} C _{2} \\times \\frac{1}{3!}이므로 S(6, ~3)=15+60+15=90이다.\n\n\nFootnotes\n\n\nX의 임의의 원소 x가 선택할 수 있는 원소의 개수는 |Y|개이므로(중복 순열), 함수의 개수는 {}_{\\lvert Y\\rvert} \\Pi_{\\lvert X \\rvert}이다. ↩\n\n\nX의 한 원소 x_1가 선택할 수 있는 원소의 개수는 |Y|개다. 일대일 함수의 성질에 의해 x_2가 선택할 수 있는 원소의 개수는 x_1이 선택하지 않은 나머지 원소이므로 |Y|-1이다. 이를 반복하면 일대일 함수의 개수는 {}_{\\lvert Y\\rvert} {\\rm P}_{\\lvert X \\rvert}이다. ↩\n\n\n일대일 대응함수는 일대일 함수 중에서 정의역의 원소와 치역의 원소가 같으므로 |X|=|Y|이다. 따라서 {}_{\\lvert Y\\rvert} {\\rm P}_{\\lvert X \\rvert} = {}_{\\lvert Y\\rvert} {\\rm P}_{\\lvert Y \\rvert} = |Y| ! 이다. ↩\n\n\n증가 함수는 자명하게 일대일 함수이다. 일대일 함수 중에서 x_1 &lt; x_2일 때, f(x_1) &lt; f(x_2)을 만족 하므로 |X| !만큼 중복이 생긴다. 그러므로 \\frac{{}_{| Y|} {\\rm P}_{| X |}}{|X| !}={}_{| Y|} {\\rm C}_{| X |}이다. ↩\n\n\nY에서 |X|개의 원소를 선택하면 X의 원소에서 작은 순서대로 Y의 원소를 선택해야만 한다. 따라서 {}_{| Y|} {\\rm C}_{| X |}이다. ↩\n\n\n집합 X의 원소는 집합 Y에서 같은 원소를 선택할 수 있으므로, X의 원소를 같은 공이라 생각하고 Y의 원소를 서로 다른 바구니라고 생각하자. 그렇다면 서로 다른 바구니에 같은 공을 집어넣는 상황과 같다. 같은 공은 순서가 정해져 있으므로 x_1 &lt; x_2일 때, f(x_1) \\le f(x_2)을 만족하므로 {}_{| Y|} {\\rm H}_{| X |}이다. ↩\n\n\n증가함수(조합)에서 집합 Y원소의 중복을 허용하므로 중복조합 공식을 사용하면 {}_{| Y|} {\\rm H}_{| X |}이다. ↩\n\n\n앞서 설명에서 n=|Y|이므로 S({\\lvert X\\rvert},~|Y|) \\times |Y|!이다. 전사함수에서 |Y| \\le |X|여야 함을 주의하자. ↩\n\n\n포함배제의 원리로 구해도 상관없지만 생각을 조금 바꾸어보자. X의 원소를 치역의 개수 n개만큼 덩어리로 묶어주는 경우의 수와 덩어리로 묶인 것을 Y로 보내는 일대일 대응함수의 개수를 생각하면 서로다른 원소를 n개로 묶는 경우의 수인 S(|X|,~n)와 일대일 함수의 개수인 n!로 부터 치역의 개수가 정해진 함수의 개수는 S({\\lvert X\\rvert},~n) \\times n!임이 유도된다. ↩\n\n\n"},"Class/확률과-통계/확률":{"slug":"Class/확률과-통계/확률","filePath":"Class/확률과 통계/확률.md","title":"확률","links":[],"tags":[],"content":"시행과 사건\n\n같은 조건에서 반복할 수 있고, 그 결과가 우연에 의하여 결정되는 실험이나 관찰을 시행이라고 합니다.\n어떤 시행에서 일어날 수 있는 모든 결과의 집합을 표본공간이라고 합니다.\n표본공간의 부분집합을 사건이라고 합니다.\n한 개의 원소로 이루어진 사건을 근원사건이라고 합니다.\n어떤 시행에서 반드시 일어나는 사건을 전사건이라고 합니다.\n어떤 시행에서 절대로 일어나지 않는 사건을 공사건이라고 합니다.\n\n일반적으로 사건과 그 사건을 나타내는 집합은 구별하지 않습니다. 표본공간은 공집합이 아닙니다.\n합사건, 곱사건, 배반사건, 여사건\n\n합사건 (A \\cup B): A 또는 B가 일어나는 사건.\n곱사건 (A \\cap B): A와 B가 동시에 일어나는 사건.\n배반사건: A \\cap B = \\varnothing일 때, A와 B는 서로 배반사건.\n여사건 (A^c): A가 일어나지 않는 사건.\n\n수학적 확률\n어떤 시행에서 사건 A가 일어날 확률을 기호로 P(A)로 나타냅니다. 확률은 영어 Probability의 첫 글자인 P를 딴 것입니다. 표본공간 S에서 각 근원사건의 일어날 가능성이 모두 같을 때, 사건 A가 일어날 확률 P(A)는 다음과 같이 정의됩니다.\nP(A) = \\frac{n(A)}{n(S)}\n여기서 n(A)는 사건 A에 속하는 경우의 수이며, n(S)는 표본공간의 경우의 수입니다.\n통계적 확률\n같은 시행을 n번 반복할 때 사건 A가 일어난 횟수를 r_n이라 하면, n이 충분히 커짐에 따라 상대도수 \\frac{r_n}{n}이 일정한 값 p에 가까워집니다. 이때 p를 사건 A의 통계적 확률이라고 합니다. 실제로 통계적 확률을 구할 때는 n을 한없이 크게 할 수 없으므로 충분히 큰 값에서의 상대도수를 사용합니다.\n\n확률의 기본 성질\n표본공간이 S인 어떤 시행에서 확률의 기본 성질은 다음과 같습니다.\n\n임의의 사건 A에 대하여 0 \\leq P(A) \\leq 1\n반드시 일어나는 사건 S에 대하여 P(S) = 1\n절대로 일어나지 않는 사건 \\varnothing에 대하여 P(\\varnothing) = 0\n\n확률의 덧셈정리\n확률의 덧셈정리는 두 사건 A, B에 대하여 합사건의 확률은\nP(A \\cup B) = P(A) + P(B) - P(A \\cap B)\n이며, 두 사건 A, B가 서로 배반사건인 경우\nP(A \\cup B) = P(A) + P(B)\n입니다.\n여사건의 확률\n표본공간 S의 사건 A와 그 여사건 A^c에 대하여 다음이 성립합니다.\nP(A^c) = 1 - P(A)\nA^c를 이용하면 ‘~이 아닌’, ‘적어도 인’, ‘ 이하인’과 같은 사건의 확률을 쉽게 구할 수 있습니다."},"Ray-math/Script/0으로-나눌-수-없다.":{"slug":"Ray-math/Script/0으로-나눌-수-없다.","filePath":"Ray math/Script/0으로 나눌 수 없다..md","title":"0으로 나눌 수 없다.","links":["Ray-math/Script/0으로-나눌-수-있다."],"tags":["엿","나눗셈","수렴"],"content":"어떤 수를 0으로 나누는 것은 가능할까요? 왜 인지 명확하게 설명은 하지 못하더라도 아마 초등학교 때 나눗셈을 배웠을 때부터 꾸준히 암기했기 때문에 안된다는 사실은 알고 계실 것입니다. 그렇다면 왜 0으로 나누는 것은 안되는걸까요?\n1. 나눗셈의 개념\n우리가 0으로 나누는 방법을 알아보기 위해서는 먼저 나눗셈에 대해 알아야 합니다. 처음 나누기에 대해 배울 때, 주로 공유나 나눔의 맥락에서 배웁니다. 예를 들어, 제가 엿을 10개 가지고 있다고 해보겠습니다. 그리고 여러분 중 다섯명에게 공평하게 엿을 나누어 드린다고 하겠습니다. 그러면 각 사람은 2개의 엿을 받게 됩니다. 즉, 10\\div 5=2입니다. 이처럼 나눗셈은 공유나 나눔의 개념으로서 가지고 있는 것을 몇 명에게 몇 개씩 나누어줄 수 있는지로 도입합니다. 그런데 만약 10개의 엿을 아무에게도 나누어 주지 않으면 다른말로 10\\div 0 어떻게 될까요? 사실 이 질문 자체가 의미가 없습니다. 공유하거나 나누지 않는 것을 굳이 나눗셈으로 설명할 필요가 없기 때문이죠. 말 그대로 엿 먹으라는 상황이 되어버립니다.\n2. 곱셈과의 관계\n이는 수식으로 보면 더 명확해집니다. 나눗셈은 곱셈의 역연산으로 정의됩니다. 예를 들어 6 \\div 2=3이므로 2를 이항해 6=3 \\times 2라 할 수 있습니다. 그런데 3 \\div 0=x라 하면 3 = x \\times 0이므로 모순이 생깁니다. 일반화 해보죠. 나누기는 두 수 a와 b의 비 {a\\over b}=r을 찾는 것을 의미합니다. 이때, 비 r은 a = r \\times b를 만족하는 숫자입니다. 그런데 만약 b가 0이라면, 즉 우리가 0으로 나누려고 한다면, r \\times 0 = a를 만족하는 숫자 r을 찾아야 합니다. 그러나 모든 숫자 r에 대해 r \\times 0 = 0이므로, a가 0이 아닌 경우 이 방정식을 만족하는 해가 없습니다. 따라서 0으로 나눈다는 것은 안됩니다.\n3. 정의의 부재\n앞서 본 곱셉과의 관계에서 어떤 수를 0으로 나누는 것은 정의하지 못하더라도 모든 숫자 r에 대해 r \\times 0 = 0이므로, 0 \\div 0=r 즉, ‘모든 수’라 하면 안될까요? 안타깝지만 이것도 조금 어려움이 있습니다. 우리가 다루는 두 수에 대한 ‘대수적’ 연산은 항상 하나의 값이 정의됩니다. 1 +1=2가 성립하면서 동시에 1+1=1이 성립하지는 않죠. 그렇다면 0 \\div 0은 어떻게 정의해야할까요? 0에는 0이 몇 개 들어 있을까요? 0개 인가요? 아니면 1개인가요? 이러한 물음에 대해 모두가 합리적인 합의점에 동의할 수 없기에 0으로 나누는 것은 그 어떤 경우에도 정의되지 않는 것으로 남겨둡니다.\n4. 극한의 문제\n0으로 나누는 다른 접근법을 시도하기 위해 다시 엿을 가져오도록 하겠습니다. 엿 10개를 1\\over2개씩 나누어주면 몇 명이 받게 될까요? 분수의 개념에 대해 알고 있다면 바로 10\\div\\frac{1}{2}=20이므로 20명이 받을 수 있다고 답하실 수 있습니다. 그 이유는 앞서 보았던 ‘뒤집고 곱한다’라는 규칙때문이죠. 그렇다면 같은 방법으로 다음 식들을 보겠습니다.\n\\begin{align*}\n1\\div {1 \\over 10} &amp;= 10\\\\\n1\\div {1 \\over100} &amp;= 100\\\\\n1\\div {1 \\over1000} &amp;= 1000\\\\\n\\vdots\n\\end{align*}\n피제수가 1일때, 제수들이 점점 작아지면 몫은 점점 커져가는 것을 볼 수 있습니다. 그렇다면 이 과정을 계속해 나간다면 어떻게 될까요? 제수들은 {1 \\over10^n}이고 몫은 10^n이므로 제수는 0으로 수렴하고, 몫은 양의 무한대로 발산할 것입니다. 따라서\n1 \\div 0 = \\infty\n입니다. 그렇다면 0으로 나눈 몫은 무한대라고 하면 안될까요? 우선 결론부터 말하면 안됩니다. 왜냐하면 무한대는 한 없이 커져가는 상태를 지칭하는 ‘개념’이지 ‘수’가 아닙니다. 따라서 ‘수’를 연산한 결과가 언어로 된 ‘개념’으로 나온다는 것은 옳지 않죠. 백번 양보해서 \\infty가 가능하다고 해도 문제가 생깁니다. 만약 제수가 - {1 \\over10^n}이라면 어떻게 될까요? 아래 식들은 양수를 음수로 나누었으므로 몫이 모두 음수가 될 것 입니다. 이 과정을 반복하면 -{1 \\over10^n} \\rightarrow 0이지만 몫은 음의 무한대로 발산합니다.\n\\begin{align*}\n1\\div -{1 \\over 10} &amp;= -10\\\\\n1\\div -{1 \\over100} &amp;= -100\\\\\n1\\div -{1 \\over1000} &amp;= -1000\\\\\n\\vdots\\\\\n1 \\div 0 &amp;= -\\infty\n\\end{align*}\n결과적으로 \\infty = - \\infty인 상황이 되면서 모순이 생기죠. 이 문제는 y= {1 \\over x}이 x=0에서 극한값을 갖지 않는 것과 같은 개념입니다. 나눗셈은 연속적인 과정으로 확장할 수 있습니다. 그래서 극한 개념을 배울 때 0을 다루는데 있어 굉장히 조심스럽게 접근합니다. {0 \\over 0}, 0 \\times \\infty, \\infty - \\infty 꼴과 같은 부정형 문제들은 정확히 0과 \\infty를 연산하는 것이 아닙니다. 비율관계를 풀어내는 방식으로 접근하죠.\n5. 모순적 상황의 반복\n예를들어 극한에서 함수 f, g에 대하여 f와 g를 어떻게 선택하고 작게 만드느냐에 따라 다양한 결과가 나올 수 있습니다.  예를 들어 f(x)=\\sin x, g(x)=e^x-1라 해보겠습니다. f와 g 모두 x \\rightarrow 0일 때, 0으로 수렴합니다. 이 때 두 함수의 비율을 보면\n\\lim_{x \\rightarrow 0} {f(x) \\over g(x)} = \\lim_{x \\rightarrow 0} {\\sin x \\over e^x-1} = \\lim_{x \\rightarrow 0} {{\\frac{\\sin x}{x}} \\over {\\frac{e^x-1}{x}}}= {\\frac{1}{1}}=1\n1로 수렴하죠. 그렇다고해서 {0 \\over 0} =1이어야 한다고 보면 안됩니다. 만약 f(x)=\\sin 2x, g(x)=e^x-1인 경우에도 마찬가지로 f와 g 모두 x \\rightarrow 0일 때, 0으로 수렴하지만\n\\lim_{x \\rightarrow 0} {f(x) \\over g(x)} = \\lim_{x \\rightarrow 0} {\\sin 2x \\over e^{x}-1} = \\lim_{x \\rightarrow 0} {{\\frac{\\sin 2x}{x}} \\over {\\frac{e^x-1}{x}}}= {\\frac{2}{1}}=2\n그 비율은 2이므로, {0 \\over 0}=2가 되기 때문이죠.\n심지어 함수가 모두 0으로 수렴하더라도\n\\lim_{x \\rightarrow 0} {\\frac{\\sin x}{x}}=1\n\\lim_{x \\rightarrow 0} {\\frac{1-\\cos x}{x}}=0\n\\lim_{x \\rightarrow 0}{\\frac{x}{\\tan x-\\sin x}}=\\infty\n0으로 수렴하는 속도에 따라 수렴할 수도 또는 발산할 수도 있죠. 따라서 0으로 나누는 것뿐만 아니라 0으로 수렴하는 것으로 나누는 것도 매우 조심스럽게 접근해야합니다.\n그런데 말입니다.\n앞서 소개한 이유들로 인해, 0으로 나누는 것은 수학에서 허용되지 않습니다. 수학의 기본적인 규칙과 원칙을 유지하기 위하여 금지해 놓은 것이죠. 그런다면 규칙과 원칙만 유지할 수 있다면 0으로 나누어도 괜찮을까요? 사실 앞서 이러한 뻔한 내용을 설명한 이유는 다음 주제를 설명하기 위한 기초 설명이었습니다. 비밀이지만 수학의 기본적인 규칙과 원칙을 유지하면서 0으로 나눌 수 있는 방법이 몇 가지 있기 때문이죠. 과연 수학의 기본적인 규칙과 원칙을 유지하면서 0으로 나누면 어떤일이 발생할까요?\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\n0으로 나눌 수 있다.\n\n\n\n"},"Ray-math/Script/0으로-나눌-수-있다.":{"slug":"Ray-math/Script/0으로-나눌-수-있다.","filePath":"Ray math/Script/0으로 나눌 수 있다..md","title":"0으로 나눌 수 있다.","links":["Ray-math/Script/0으로-나눌-수-없다."],"tags":["연산","곱셈","집합","역원","덧셈","군","항등원","원소","점","체","의미","원","무한소"],"content":"이전 글에서 0으로 나누는 것은 정의되지 않는다고 했습니다. 수학의 기본적인 규칙과 원칙을 유지하기 위하여 금지해 놓은 것이죠. 그런다면 규칙과 원칙만 유지할 수 있다면 0으로 나누어도 괜찮을까요? 결론부터 말씀드리면 일반적이지 않지만 가능하게할 수 있습니다. 왜 이렇게 애매하게 말하냐면 이 영상을 다 보시면 이해가 되시겠지만 정말 특수한 경우에만 성립하기 때문입니다. 제목만 보고 0으로 나누는게 가능하다고 생각하시면 절대 안된다는 점을 미리 말씀드리겠습니다. 우선 0으로 나누기 위해서는 0으로 나눌 수 없었던 상황에서 출발해야합니다. 0으로 나눌 수 없었던 이유를 적절히 제거하기 위해서죠. 따라서 이전 글을 안보신 분이 있다면 꼭 먼저 보고 이 글을 보시기 추천드립니다.\n연산을 보기 전에\n0으로 나누기 전에 먼저 나눗셈이라는 연산에 대해 명확히 정의할 필요가 있습니다. 따라서 연산에 대한 대수적 구조를 이해해기 위해 대수학의 기본적인 구조인 군(Group), 환(Ring), 체(Field)에 대해 먼저 알아보겠습니다.\n군(Group)\n군은 연속적인 대칭성을 연구하는 데 있어 기본적인 구조입니다. 군은 여러 가지 수학적 대상들의 대칭성을 공통적인 관점에서 바라볼 수 있게 해주므로, 복잡한 구조나 대상을 단순화하여 연구할 수 있는 도구가 됩니다.\n\n군의 정의\n군  &lt;G, *&gt; 는 이항연산 *  아래에 닫혀있고, 다음 공리를 만족하는 집합 G를 의미합니다.\n\n결합 법칙: 모든 a, b, c \\in G에 대하여 (a * b) \\cdot c = a * (b * c)이다.\n항등원 존재: 어떤 원소 e \\in G가 존재하여, 모든 a \\in G에 대하여 e * a = a * e = a이다.\n역원 존재: 모든 a \\in G에 대하여, a의 역원이라는 원소 a^{-1} \\in G가 존재하여 a * a^{-1} = a^{-1} * a = e이다.\n\n\n쉽게 말해 집합 G와 이항연산 *에 대해 연산한 결과가 다시 집합에 있을 때 결합법칙을 만족하고 모든 원소에 대해 항등원, 역원이 존재하면 군이라 부릅니다. 각 조건들에 대해 자세히 알아보죠.\n닫혀 있다.(closed under)\n닫혀 있다이란 집합 내의 원소들 간의 연산 결과가 그 집합 내에 포함되어 있는 것을 의미합니다.\n\\forall a, b \\in G, a * b \\in G\n그리고 이항 연산은 두 개의 입력을 받아 하나의 결과를 출력하는 연산을 의미합니다. 일반적으로 두 수의 덧셈이나 곱셈이 이에 해당하죠.\n *: S \\times S \\rightarrow S\n수식으로 보면 이해가 잘 되지 않으므로 예를 들어보겠습니다. 자연수 집합 \\mathbb{N}은 덧셈 연산에 대해 닫혀있을까요?\n\\begin{align*}\n3 + 5 &amp;= 8\\\\\n10 + 20 &amp;= 30\\\\\n123 + 654 &amp;= 777\\\\\n\\end{align*}\n위의 예시에서 볼 수 있듯이, 두 자연수의 덧셈 결과는 항상 자연수입니다. 따라서 자연수 집합 \\mathbb{N}은 덧셈 연산에 대해 닫혀있습니다. 그렇다면 뺄셈 연산에 대해서는 어떨까요?\n\\begin{align*}\n5-3 &amp;=2 \\\\ \n3-5 &amp;=-2 \\\\\n\\end{align*}\n\\begin{align*}\n5-3 &amp;=2 \\in \\mathbb{N}\\\\ \n3-5 &amp;=-2 \\notin \\mathbb{N}\\\\\n\\end{align*}\n두 번째 예시에서 볼 수 있듯이, 두 자연수의 뺄셈 결과가 음수가 될 수 있으므로 자연수 집합에서의 뺄셈 연산의 결과가 항상 자연수 집합에 포함되는 것은 아닙니다. 따라서 자연수 집합은 뺄셈 연산에 대해 닫혀있지 않습니다.\n결합법칙(associative property)\n결합법칙은 이항 연산*에 대하여 세 개 이상의 수를 연산할 때 괄호는 어떤 형태로든 삽입될 수 있으며 그러한 계산의 결과는 항상 같다는 것을 의미합니다. 수학적으로 표현하면, 다음과 같이 표현할 수 있습니다.\n(a \\ast b) \\ast c = a \\ast (b \\ast c)\n일반적으로 덧셈과 곱셈은 결합법칙이 잘 성립합니다.\n\\begin{align*}\\\\\n(a + b) + c &amp;= (2 + 3) + 4 = 5 + 4 = 9 \\\\\na + (b + c) &amp;= 2 + (3 + 4) = 2 + 7 = 9 \\\\\n\\\\\n(a \\times b) \\times c &amp;= (2 \\times 3) \\times 4 = 6 \\times 4 = 24\\\\\na \\times (b \\times c) &amp;= 2 \\times (3 \\times 4) = 2 \\times 12 = 24\\\\\n\\end{align*}\n고등학교 과정에서는 잘 다루지 않지만 벡터의 외적이나 테트레이션 등은 일반적으로 결합법칙이 성립하지 않습니다.\n\n\\vec{a} = (1, 2, 3)\n\\vec{b} = (4, 5, 6)\n\\vec{c} = (7, 8, 9)\n\n\\begin{align*} (\\vec{a} \\times \\vec{b}) \\times \\vec{c} = (-3, 6, -3) \\times (7, 8, 9) = (78, 6, -66)\\\\\n\\\\\n\\vec{a} \\times (\\vec{b} \\times \\vec{c}) = (1, 2, 3) \\times (-3, 6, -3) = (-24, -6, 12)\n\\end{align*}\n항등원(Identity Element)\n항등원은 어떤 집합에서 주어진 이항 연산을 수행했을 때, 그 원소의 값을 변화시키지 않는 것을 의미합니다.\n\\forall a \\in G , a \\ast e = e \\ast a =  a\n요새는 항등원과 역원을 학교에서 가르치지 않아 생소한 개념일 수 있습니다. 예를 들어보죠. 정수 집합에 대해 덧셈 \\langle\\mathbb{Z},+\\rangle의 항등원은 무엇일까요? 예를들어 3에 몇을 더해야 다시 3이 나올까요? 당연하게 0입니다. 이는 3이 아니라 다른 수로 바꿔보아도 항상 성립하는 성질입니다.\n\\begin{align*}\n3 + e = e + 3 =  3 \\\\\nn + 0 = 0 + n =  n\n\\end{align*}\n따라서 정수에서 덧셈의 항등원은 0입니다. 그렇다면 정수에서 곱셈\\langle\\mathbb{Z},\\times\\rangle의 항등원은 무엇일까요? 쉽게 생각해 3에 얼마를 곱해야 다시 3이 나올까요? 너무 쉽죠? 1입니다. 다른 수로 바꿔도 항상 같죠.\n\\begin{align*}\n3 \\times e = e \\times 3 =  3\\\\\nn \\times 1 = 1 \\times n =  n\n\\end{align*}\n이처럼 0과 1은 각각 덧셈과 곱셈의 항등원입니다.\n역원(Inverse)\n역원은 어떤 집합에서 주어진 이항 연산을 수행했을 때, 그 원소와 항등원을 만드는 원소를 의미합니다.\n\\forall a \\in G, \\exists x \\in G , a \\ast x = x \\ast a =  e\n여기서 e는 해당 연산의 항등원입니다. 예를 들어 덧셈에서의 역원은 어떤 수에 더해 항등원인 0을 만드는 수를 의미합니다. 정수 집합에 대해 덧셈 \\langle\\mathbb{Z},+\\rangle의 역원을 살펴보겠습니다.\n3에 어떤 수를 더해야 0이 나올까요? -3입니다. 수에서 덧셈의 역원은 그 수의 음의 값을 의미합니다.\n\\begin{align*}\n3 + x &amp;= x + 3 =  0\\\\\nn + (-n) &amp;= (-n) + n =  0\n\\end{align*}\n그렇다면 곱셈의 역원을 어떨까요? 곱셈에서의 역원은 어떤 수에 곱해 항등원인 1을 만드는 수를 의미합니다. 실수 집합에 대해 곱셈 \\langle\\mathbb{R},\\times\\rangle의 역원을 살펴보겠습니다.\n\\begin{align*}\n3 \\times x &amp;= x \\times 3 =  1\\\\\na \\times \\frac{1}{a} &amp;= \\frac{1}{a} \\times a =  1\n\\end{align*}\n3에 어떤 수를 곱해야 1이 나올까요? \\frac{1}{3}입니다. 3을 임의의 수 a로 바꾸면 어떻게 될까요? \\frac{1}{a}이 역원이 될 것입니다. 따라서 덧셈에서의 역원은 그 수의 음의 값이고, 곱셈에서의 역원은 그 수의 역수라고 생각하면 편합니다.\n군의 예시\n이제 군의 성질을 배웠으니 군이 되는 수 체계를 찾아보겠습니다.\n정수 집합에서의 덧셈 연산은 \\langle\\mathbb{Z},+\\rangle 군을 만족할까요? 정수는 덧셈에 대해 닫혀있으며, 결합법칙이 성립합니다. 그리고 덧셈에서 항등원인 0과 역원인 음수가 존재하므로 **군(group)**이라할 수 있습니다.\n\\begin{align*}\n&amp; a + b \\in \\mathbb{Z} \\\\\n&amp; (a + b) + c = a + (b + c)\\\\\n&amp; a + 0 = 0 + a = a\\\\\n&amp; a + (-a) = (-a) + a = 0 \n\\end{align*}\n그렇다면 정수 집합에서의 곱셈 연산은 \\langle\\mathbb{Z},\\times\\rangle을 만족할까요? 정수는 곱셈에 대해 닫혀있으며, 결합법칙이 성립합니다. 그리고 곱셈에서 항등원인 1도 존재하죠. 그러나 곱셈의 역원인 역수가 항상 다시 정수가 되는 것은 아닙니다. 따라서 정수 집합에서의 곱셈 연산은 **군(group)**이 아닙니다.\n\\begin{align*}\n&amp; a \\times b \\in \\mathbb{Z} \\\\\n&amp; (a \\times b) \\times c = a \\times (b \\times c)\\\\\n&amp; a \\times 1 = 1 \\times a = a\\\\\n&amp; a \\times \\frac{1}{a} = 1, \\frac{1}{a} \\notin \\mathbb{Z} \n\\end{align*}\n가환군(Abelian group) \\dagger\n앞서 말한 성질을 만족하는 것을 군이라고 했습니다. 하지만 군의 성질 중에 결합법칙은 있지만 교환법칙은 없습니다. 군을 정의할 때 교환법칙까지 만족할 필요는 없죠. 만약 군이 교환법칙까지 만족하면 **가환군(Abelian group)**이라 합니다.\na \\cdot b = b \\cdot a\n앞서 본 덧셈과 곱셈은 교환법칙이 잘 정의되어 가환군이라 할 수 있습니다. 하지만 행렬곱셈 아래 모든 가역 n \\times n 행렬들로 이루어진, \\langle M_n(\\mathbb{R}),~ \\cdot \\rangle은 군을 이루지만\n\n\n\n&amp; \\text{det}(A \\cdot B) = \\text{det}(A) \\cdot \\text{det}(B)\\\n&amp; (A \\cdot B) \\cdot C = A \\cdot (B \\cdot C)\\\n&amp; A \\cdot I = I \\cdot A = A\\\n&amp; AA^{-1} = A^{-1}A = I\\\n\\end{align*}$$\n행렬의 곱셈은 일반적으로 교환법칙이 성립하지 않으므로 가환군이라 할 수 없습니다.\n\nA = \\begin{bmatrix} 1 &amp; 2 \\\\ 0 &amp; 1 \\end{bmatrix},  B = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\nAB = \\begin{bmatrix} 1 &amp; 2 \\\\ 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}= \\begin{bmatrix} 2 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\not= \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 2 \\end{bmatrix}= \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 2 \\\\ 0 &amp; 1 \\end{bmatrix} = BA\n\n환(Ring)과 체(Field)\n군은 하나의 연산에서만 정의하지만 우리는 초등학교 이후로 계속 덧셈과 곱셈의 두 개의 연산을 주로 사용하였습니다. 그리고 이러한 연산에 대해 정리한 것을 보고 **환(Ring)**이라 합니다.\n\n환의 정의\n환 \\langle R, +, \\cdot \\rangle은 두 이항연산 +와 \\times 아래에 닫혀있고, 다음 공리를 만족하는 집합 R을 의미합니다.\n\n덧셈에 대한 가환군 : \\langle R, +\\rangle은 아벨군(abelian group)이다.\n곱셈에 대한 반군 : 곱셈은 결합법칙을 만족한다.\n분배법칙 : \\forall a, b, c \\in R에 대하여, a \\cdot (b + c) = (a \\cdot b) + (a \\cdot c), (a + b) \\cdot c = (a \\cdot c) + (b \\cdot c)\n\n\n환에서 특별한 점은 곱셈에 대해서는 반군(Semi Group)이므로 항등원과 역원이 존재하지 않아도 됩니다. 만약 환에서 곱셈에 대해 항등원과 역원이 존재하면 **체(Field)**라고 부릅니다.\n\n체의 정의\n체 \\langle F, +, \\cdot \\rangle는 환 \\langle R, +, \\cdot \\rangle이면서 추가적인  성질을 만족하는 대수적 구조입니다.\n\n곱셈에 대한 항등원 존재: 어떤 원소 1 \\in F가 존재하여, 모든 a \\in F에 대하여 1 \\cdot a = a \\cdot 1 = a이다.\n곱셈에 대한 역원 존재: 0이 아닌 모든 a \\in F에 대하여, a의 곱셈 역원이라는 원소 a^{-1} \\in F가 존재하여 a \\cdot a^{-1} = a^{-1} \\cdot a = 1이다.\n\n\n체는 덧셈에 대해 아벨 군을 형성하고, 0을 제외한 원소들은 곱셈에 대해서도 역시 아벨 군을 형성하는 구조입니다. 체가 조건이 많아 복잡해보이긴 하지만 생각해보면 우리가 일상적으로 제일 많이 쓰는 숫자 체계입니다. 예를들어 유리수나 실수, 복소수 모두 덧셈과 곱셈에 대해 연산이 자유롭고 분배법칙도 성립하므로 체입니다.\n\n유리수의 집합 \\mathbb{Q}는 체다.\n\n덧셈에 대한 가환군\n\n\n닫힘: \\forall a, b, c, d \\in \\mathbb{Z}, b \\neq 0, d \\neq 0, \\exists x, y \\in \\mathbb{Z}, y \\neq 0: \\frac{a}{b} + \\frac{c}{d} = \\frac{x}{y}\n교환법칙: \\forall a, b \\in \\mathbb{Q}: a + b = b + a\n결합법칙: \\forall a, b, c \\in \\mathbb{Q}: (a + b) + c = a + (b + c)\n항등원 존재: \\exists 0 \\in \\mathbb{Q}: \\forall a \\in \\mathbb{Q}, a + 0 = a\n역원 존재: \\forall a \\in \\mathbb{Q}, \\exists b \\in \\mathbb{Q}: a + b = 0\n\n\n곱셈에 대한 반군\n\n\n닫힘: \\forall a, b, c, d \\in \\mathbb{Z}, b \\neq 0, d \\neq 0, \\exists x, y \\in \\mathbb{Z}, y \\neq 0: \\frac{a}{b} \\cdot \\frac{c}{d} = \\frac{x}{y}\n결합법칙: \\forall a, b, c \\in \\mathbb{Q}: (a \\cdot b) \\cdot c = a \\cdot (b \\cdot c)\n\n\n분배법칙\n\n\n\\forall a, b, c \\in \\mathbb{Q}: a \\cdot (b + c) = (a \\cdot b) + (a \\cdot c)\n\\forall a, b, c \\in \\mathbb{Q}: (a + b) \\cdot c = (a \\cdot c) + (b \\cdot c)\n\n\n곱셈에 대한 항등원 존재\n\n\n\\exists 1 \\in \\mathbb{Q}: \\forall a \\in \\mathbb{Q}, 1 \\cdot a = a\n\n\n곱셈에 대한 역원 존재\n\n\n\\forall a \\in \\mathbb{Q}, a \\neq 0, \\exists b \\in \\mathbb{Q}: a \\cdot b = 1\n\n\n\n실수의 집합 \\mathbb{R}는 체다.\n\n덧셈에 대한 가환군\n\n\n닫힘: \\forall a, b \\in \\mathbb{R}, \\exists c \\in \\mathbb{R}: a + b = c\n교환법칙: \\forall a, b \\in \\mathbb{R}: a + b = b + a\n결합법칙: \\forall a, b, c \\in \\mathbb{R}: (a + b) + c = a + (b + c)\n항등원 존재: \\exists 0 \\in \\mathbb{R}: \\forall a \\in \\mathbb{R}, a + 0 = a\n역원 존재: \\forall a \\in \\mathbb{R}, \\exists b \\in \\mathbb{R}: a + b = 0\n\n\n곱셈에 대한 반군\n\n\n닫힘: \\forall a, b \\in \\mathbb{R}, \\exists c \\in \\mathbb{R}: a \\cdot b = c\n결합법칙: \\forall a, b, c \\in \\mathbb{R}: (a \\cdot b) \\cdot c = a \\cdot (b \\cdot c)\n\n\n분배법칙\n\n\n\\forall a, b, c \\in \\mathbb{R}: a \\cdot (b + c) = (a \\cdot b) + (a \\cdot c)\n\\forall a, b, c \\in \\mathbb{R}: (a + b) \\cdot c = (a \\cdot c) + (b \\cdot c)\n\n\n곱셈에 대한 항등원 존재\n\n\n\\exists 1 \\in \\mathbb{R}: \\forall a \\in \\mathbb{R}, 1 \\cdot a = a\n\n\n곱셈에 대한 역원 존재\n\n\n\\forall a \\in \\mathbb{R}, a \\neq 0, \\exists b \\in \\mathbb{R}: a \\cdot b = 1\n\n\n사칙연산\n여기서 나눗셈이란 연산에 대해 생각할 필요가 있습니다. 앞서 대수 연산을 보면 환과 체는 모두 덧셈과 곱셈에서만 정의했습니다. 우리는 기본적인 연산이 사칙연산이라고 생각하는데 왜 덧셈과 곱셈만으로 연산을 한정해두었을까요? 앞서 보았듯이 뺄셈과 나눗셈은 집합의 원소로 대체할 수 있기 때문입니다. 뺄셈은 덧셈의 역원을 이용하여 표현될 수 있고, 나눗셈은 곱셈의 역원을 이용하여 표현될 수 있습니다.\n\\begin{align*}\n&amp; \\forall a, b \\in \\mathbb{Q}, \\exists c \\in \\mathbb{Q}: c + b = a\\\\\n&amp; \\therefore a - b = c\\\\\n\\\\&amp; \\forall a, b \\in \\mathbb{Q}, b \\neq 0, \\exists c \\in \\mathbb{Q}: c \\cdot b = a\\\\\n&amp; \\therefore \\frac{a}{b} = c \n\\end{align*}\n이렇게 함으로써 덧셈과 곱셈의 성질만을 이용하여 뺄셈과 나눗셈의 성질을 파악할 수 있으므로 굳이 뺄셈과 나눗셈을 정의할 필요는 없죠. 이는 대수학의 효율성과 일관성을 높입니다. 그러므로 덧셈과 곱셈이 정의된 환에서 나눈다는 개념은 보면 곱셈에 대한 역원이 존재하는가를 묻는 질문으로 바뀌게 됩니다.\n예를 들어 보죠. 4 \\div 2=2라는 식은 나눗셈 연산을 곱셈 연산으로 바꾸면서 역수 다른말로 곱셈에 대한 2의 역원을 이용해 식을 바꿀 수 있습니다.\n4 \\times \\frac{1}{2}=2\n이때, 2의 역원은 즉 2^{-1}는 우리가 흔히 1을 2로 나눈 수라고 볼 수 있죠. 일반화하면 다음과 같이 적을 수 있습니다.\n\\begin{align*}\na \\times \\frac{1}{a}=1\\\\\na \\times a^{-1}=1\\\\\n\\therefore a^{-1}=\\frac{1}{a}\n\\end{align*}\n1을 곱셈에 대한 항등원이라할 때, a라는 원소에 같은 연산을 한 결과가 서로 같으므로 두 값이 같다고 보는거죠. 이러한 논리라면 \\frac{1}{0}은 곱셈에 대한 0의 역원을 찾는 것이라 할 수 있습니다. 물론 앞서 환과 체에 대해 설명할 때, 0이 아닌 원소에 대해서만 역원을 정의했지만 그래도 백번 양보해서 찾아보면 어떻게 될까요?\n영환(Zero Ring)\n대부분의 환은 곱셈의 항등원으로 1을 가지고 있지만, 원소가 0 하나뿐인 집합 \\{0\\}은 조금 색다릅니다. 0으로만 이루어진 집합\\{0\\}에 다음과 같이 연산을 정의하면 덧셈에 대해 아벨군을 이루고 곱셈에 대해 반군을 이루므로 환의 조건을 만족합니다.\n\\begin{align*}\n&amp; 0+0=0\\\\\n&amp; 0\\times0=0\\\\\n\\end{align*}\n이를 영환(zero ring)이라 부릅니다. 영환의 유일한 원소 0은 덧셈의 항등원이자 곱셈의 항등원입니다. 그리고 이 환은 덧셈의 항등원이 곱셈의 항등원이 되는 유일한 경우죠. 이 환의 특별한 점은 1이 아니라 0이 곱셈의 항등원이라는 것입니다. 따라서 앞서 정의한 논리로 비추어 보아 0의 곱셈의 대한 역원 즉, 0^{-1}=0이 되죠. 굳이 앞선 표현을 빌려와 적자면 \\frac{0}{0}=0이라 할 수 있습니다.\n영환은 매우 특별한 경우로  0으로 나누는 것을 강제로 정의할 수 있지만, 이는 일반적인 수학적 문제를 해결하는 데 도움이 되지 않습니다. 왜냐하면 우리가 일반적으로 연산에서 사용하는 체에서는 0의 역원이 정의되지 않으며, 어떤 특정한 값을 갖지 못하기 때문입니다. 따라서 이러한 정의는 수학적으로 영환이 갖는 특징 이외에는 별다른 큰 의미가 없습니다.\n0으로 나누면 무한대?\n앞선 설명에서 어떤 수를 0으로 나누는 것을 무한대로 정의하는 것도 한계가 있다고 했습니다. 왜냐하면, 극한의 개념으로 보았을 때, 무한대라는 개념이 수라고 가정한다해도 두 값의 부호차이가 생기기 때문이죠.\n\\begin{align*}\n1\\div {1 \\over 10} &amp;= 10\\\\\n1\\div {1 \\over100} &amp;= 100\\\\\n1\\div {1 \\over1000} &amp;= 1000\\\\\n\\vdots\\\\\n1 \\div 0 &amp;= \\infty\n\\end{align*}\n\\begin{align*}\n1\\div -{1 \\over 10} &amp;= -10\\\\\n1\\div -{1 \\over100} &amp;= -100\\\\\n1\\div -{1 \\over1000} &amp;= -1000\\\\\n\\vdots\\\\\n1 \\div 0 &amp;= -\\infty\n\\end{align*}\n양의 무한대와 음의 무한대가 같지는 않으니까요.\n\\infty \\not= -\\infty\n그런데, 강한 부정은 강한 긍정이라하고 극과 극은 만난다고 하던데 어차피 발산한다는 개념은 같으니까 양의 무한대와 음의 무한대를 그냥 같다고 하면 안될까요?\nOne Point Compactification\n우리가 살고 있는 세계는 끝이 없는 공간처럼 느껴질 수 있습니다. 하지만 수학에서는 이 무한한 공간을 한정된 형태로 다루는 것을 통해 복잡한 문제를 단순화할 수 있습니다. 여기서 일대일 대응을 이용해보겠습니다. 일대일 대응은 두 집합 사이의 원소들이 정확히 하나씩 대응하는 것을 의미하며 이 관계를 이용하면 ‘수’라는 개념을 이용하지 않고도 ‘같다’라는 개념을 수학적으로 정의할 수 있죠. 그리고 이러한 개념은 유한집합뿐만 아니라 무한에서도 사용할 수 있습니다.\n먼저, 실수 집합을 무한한 길이를 가진 직선으로 생각해보겠습니다. 이 직선은 양 끝이 열려 있으므로 유한하지 않습니다. 이 선을 쉽게 x축이라 하겠습니다. 이제 (0,0)를 중심으로 하고 반지름이 1인 원을 그려보겠습니다. 그 후에 원의 가장 위에 있는 점(0,1)에서 레이저가 있다고 생각하고, 원 위의 임의의 점을 쏴보겠습니다. 레이저가 원 위의 한 점을 비출 때 레이저는 반드시 x축에 만나게 됩니다. 그리고 레이저는 일직선으로 나아가기 때문에 원 위의 한 점과 x축 위의 한 점은 일대일 대응이 됩니다. 따라서 원에서 레이저 포인트를 쏘는 곳을 제외한 것은 수직선과 모양만 다를뿐 같다고 할 수 있죠.\n\\mathbb{R} \\cong S^1 -{P(0,~1)}\nGeogebra - One point compactification\n\n직선의 방정식을 찾는 과정\n원 위의 점 A는 매개변수 방정식을 이용하여 A(\\cos \\theta, \\sin \\theta) 나타낼 수 있습니다. A와 P(0,1)을 지나는 방향벡터는 \\overrightarrow{PA}(\\cos \\theta, \\sin\\theta-1)이므로 손쉽게 \\overrightarrow{PA}의 법선 벡터를 \\vec{n}(1-\\sin\\theta,\\cos\\theta)라 두겠습니다. 직선 위의 임의의 한 점을 Q(x,y)라 두면, 법선벡터\\vec{n}와 \\overrightarrow{PQ}는 수직이므로 직선의 방정식은\n\\begin{align*}\\vec{n} \\cdot \\overrightarrow{PQ}&amp;=(1-\\sin\\theta,\\cos\\theta)\\cdot(x,y-1)\\\\\n&amp;=(1-\\sin\\theta)x+\\cos\\theta(y-1)=0\n\\end{align*}\n라 할 수 있습니다. 마지막으로 수직선 위의 점 t는 이 x축 위의 점이므로 y=0을 대입한 후 x좌표를 찾으면 t=\\frac{\\cos\\theta}{1-\\sin\\theta}입니다. 처음에 A(\\cos \\theta, \\sin \\theta)라 했으므로 x=\\cos\\theta, y=\\sin\\theta로 바꾸어 식을 정리하면 t=\\frac{x}{1-y}라는 식을 얻을 수 있습니다.\n\n이 방법을 이용하면 무한한 직선을 평면에 있는 원 안에 가둘 수 있습니다. 여기서 한 발 더 나가보죠. 원에서 한 점을 뺀 이 집합은 유계이지만 닫혀있다고 할 수 는 없습니다. 우리가 편하게 이 대상을 조작하고 싶은데 구멍이 나있으면 사용하기 불편하죠. 따라서 두 집합에 각각 한 점씩을 추가하여 이 원을 닫아보겠습니다. 원에서는 구멍을 막기 위해 P(0,1)을 추가하고 수직선에서는 더 이상 추가할 만한 점이 없으니 편의상 P에 대응되는 점으로 \\{\\infty\\}이렇게 생긴 점을 추가하겠습니다. 그렇다면 대응관계를 유지한채 수직선에 한 점을 추가하여 원을 만들 수 있습니다.\n\\mathbb{R} \\cup \\{\\infty \\}\\cong S^1\nWheel Theory\n무한대라는 한 점을 추가하여 원을 만드는 방식으로 실수체를 확장하면 0으로 나누는 것이 가능할까요? 한 점 컴팩트화까지 보면 “0으로 나누면 \\infty“겠네 라고 생각하기 쉽지만 아직은 아닙니다. 1 \\div 0 = \\infty라고 마구잡이로 설정하는 것은 연산이라 할 수 없습니다. 우리가 처음 군, 환, 체에서 보았듯이 0으로 나눈다는 것을 연산이라 정의한다면 그 연산이 군, 환, 체 중 어떤 것에 해당되는지 또 연산이 잘 정의되어 있는지 확인해야하죠. 이러한 논의를 담아 다음과 같이 연산을 정의해보겠습니다.\n\\begin{align*}\n0&amp;=(0,1)\\\\\n1&amp;=(1,1)\\\\\n(a,b)+(c,d)&amp;=(ad+bc,bd)\\\\\n(a,b)(c,d)&amp;=(ac,bd)\\\\\n/(x,y)&amp;=(y,x)\n\\end{align*}\n0으로 나누기에 앞서 나눈다는 개념을 분수가 아니라 순서쌍을 이용해 바꾸어 본 것입니다. 분모가 아니라 순서쌍의 두번째 원소로 바꾼거죠.  쉽게말해 \\frac{1}{0}=(1,0)으로 두어 거부감을 줄이면서 우회하는 것입니다. 이렇게 두면 우리가 흔히 사용하는 유리수에서의 연산을 표현할 수 있습니다. 하지만 이 연산에서 다음과 같은 문제가 하나 생깁니다.\n\\begin{align*}\n/(1,0)=(0,1)&amp;=0\\\\\n/(0,0)=(0,0)&amp;\\not=0\\\\\n\\end{align*}\n우리 마음 속에서는 0으로 나눈 것을 \\infty라 하자고 몰래 다짐을 해보겠습니다. 그렇다면 (1,0)에서 흔히 역수 연산이라 불리는 연산으로 순서쌍의 위치를 바꾸어 \\frac{1}{\\infty}=0이 나오지만, (0,0)은 역수 연산을 해도 그대로죠. 결과적으로 (1,0)과 (0,0)을 같다라고 둘 수 없는 상황이 생깁니다. 따라서 특별히 (0,0)이라는 원소를 확장된 실수집합에 더 추가할 필요성을 느껴 다시 한 번 실수를 확장하면 그림과 같이 원과 가운데 한 점을 그린 모양이 생기게 됩니다.\nH =S^1 \\cup {(0,0)}\n이 모양이 마치 바퀴 같이 생겼다고 해서 흔히 이 개념을 wheel이라 부릅니다. 이 집합이 어떻게 구성되어있는지 자세히 알아보도록 하겠습니다. 우선 H는 교환법칙이 성립하는 모노이드(monoid) 입니다.  모노이드란 군이 만족해야할 4가지 성질 중 역원이 없어도 되는 애들을 의미합니다. 반군 보다는 조건이 강하지만 군보다 조건을 더 완화한 개념이죠. 또한 곱셈에 대해서도 교환법칙이 성립하는 모노이드이며 전치 치환자를 갖습니다. involution은 생김새와 같이 역수와 같은 역할을 하는데 여기서 굳이 전치치환자라는 용어를 쓰는 이유는 한 원소에 대해 두 번 연산하면 다시 자기자신이 나오게 하는 역할을 하기 때문입니다. 이렇게 덧셈과 곱셈을 정의할 때 분배법칙은 다음과 같이 나타낼 수 있고 0을 포함하는 식은 다음과 같은 규칙에 의해 계산할 수 있습니다.\n\n이렇게 연산의 구조를 정의하면 0으로 나누는 것이 형식적으로 가능하게 됩니다. 다만 0이 아닌 원소를 0으로 나누는 것과, 0을 0으로 나누는 것을 다르게 정의해야 하지만요. 이해하기 쉽게 1/0=\\infty라 하고, 0/0=\\bot(\\text{Bottom Symbol})이라 하겠습니다. 이 기호는 흔히 ‘하한 기호’라고 불리는 기호로 순서위상에서 가장 작은 원소를 나타내거나 논리학에서 거짓을 나타내는 논리 상수입니다. 0/0은 ‘부정’이라 정의되어 있지 않고, 실수체에 포함되어있지 않은 독립적인 개체이므로 이러한 기호를 쓰는 것이 적절하다고 생각합니다.\n이제 바퀴모양의 집합을 H라 할 때, 각 원소들의 연산결과는 다음과 같습니다.\n덧셈 연산 표\n\\begin{array}{c|cccc}\n+ &amp; a &amp; 0 &amp; \\infty &amp; \\bot \\\\\n\\hline\na &amp; a+a &amp; a &amp; \\infty &amp; \\bot \\\\\n0 &amp; a &amp; 0 &amp; \\infty &amp; \\bot \\\\\n\\infty &amp; \\infty &amp; \\infty &amp; \\bot &amp; \\bot \\\\\n\\bot &amp; \\bot &amp; \\bot &amp; \\bot &amp; \\bot \\\\\n\\end{array}\n\\begin{align*}\na + a &amp; = (a,1) + (a,1) = (a \\cdot 1 + 1 \\cdot a, 1 \\cdot 1) = (2a, 1) = 2a \\\\\na + 0 &amp; = (a,1) + (0,1) = (a \\cdot 1 + 1 \\cdot 0, 1 \\cdot 1) = (a, 1) = a \\\\\na + \\infty &amp; = (a,1) + (1,0) = (a \\cdot 0 + 1 \\cdot 1, 1 \\cdot 0) = (1, 0) = \\infty \\\\\na + \\bot &amp; = (a,1) + (0,0) = (a \\cdot 0 + 1 \\cdot 0, 1 \\cdot 0) = (0, 0) = \\bot \\\\\n0 + a &amp; = (0,1) + (a,1) = (0 \\cdot 1 + 1 \\cdot a, 1 \\cdot 1) = (a, 1) = a \\\\\n0 + \\infty &amp; = (0,1) + (1,0) = (0 \\cdot 0 + 1 \\cdot 1, 1 \\cdot 0) = (1, 0) = \\infty \\\\\n0 + \\bot &amp; = (0,1) + (0,0) = (0 \\cdot 0 + 1 \\cdot 0, 1 \\cdot 0) = (0, 0) = \\bot \\\\\n\\infty + \\infty &amp; = (1,0) + (1,0) = (1 \\cdot 0 + 0 \\cdot 1, 0 \\cdot 0) = (0, 0) = \\bot \\\\\n\\infty + \\bot &amp; = (1,0) + (0,0) = (1 \\cdot 0 + 0 \\cdot 0, 0 \\cdot 0) = (0, 0) = \\bot \\\\\n\\bot + \\bot &amp; = (0,0) + (0,0) = (0 \\cdot 0 + 0 \\cdot 0, 0 \\cdot 0) = (0, 0) = \\bot \\\\\n\\end{align*}\n곱셈 연산 표\n\\begin{array}{c|cccc}\n\\cdot &amp; a &amp; 0 &amp; \\infty &amp; \\bot \\\\\n\\hline\na &amp; a \\cdot a &amp; 0 &amp; \\infty &amp; \\bot \\\\\n0 &amp; 0 &amp; 0 &amp; \\bot &amp; \\bot \\\\\n\\infty &amp; \\infty &amp; \\bot &amp; \\infty &amp; \\bot \\\\\n\\bot &amp; \\bot &amp; \\bot &amp; \\bot &amp; \\bot \\\\\n\\end{array}\n\\begin{align*}\na \\cdot a &amp; = (a,1) \\cdot (a,1) = (a \\cdot a, 1 \\cdot 1) = (a^2,1) = a^2 \\\\\na \\cdot 0 &amp; = (a,1) \\cdot (0,1) = (a \\cdot 0, 1 \\cdot 1) = (0,1) = 0 \\\\\na \\cdot \\infty &amp; = (a,1) \\cdot (1,0) = (a \\cdot 1, 1 \\cdot 0) = (a,0) = \\infty \\\\\na \\cdot \\bot &amp; = (a,1) \\cdot (0,0) = (a \\cdot 0, 1 \\cdot 0) = (0,0) = \\bot \\\\\n0 \\cdot a &amp; = (0,1) \\cdot (a,1) = (0 \\cdot a, 1 \\cdot 1) = (0,1) = 0 \\\\\n0 \\cdot \\infty &amp; = (0,1) \\cdot (1,0) = (0 \\cdot 1, 1 \\cdot 0) = (0,0) = \\bot \\\\\n0 \\cdot \\bot &amp; = (0,1) \\cdot (0,0) = (0 \\cdot 0, 1 \\cdot 0) = (0,0) = \\bot \\\\\n\\infty \\cdot \\infty &amp; = (1,0) \\cdot (1,0) = (1 \\cdot 1, 0 \\cdot 0) = (1,0) = \\infty \\\\\n\\infty \\cdot \\bot &amp; = (1,0) \\cdot (0,0) = (1 \\cdot 0, 0 \\cdot 0) = (0,0) = \\bot \\\\\n\\bot \\cdot \\bot &amp; = (0,0) \\cdot (0,0) = (0 \\cdot 0, 0 \\cdot 0) = (0,0) = \\bot \\\\\n\\end{align*}\n이렇게 연산을 정의하면 우리가 평소 생각하는 무한대를 이용한 연산과 생각보다 잘 맞아 떨어집니다. 물론 몇가지 이상한 점도 있습니다. 예를 들어 \\infty + \\infty=\\bot이지만, \\infty \\cdot \\infty= \\infty인 것처럼 말이죠. \\infty + \\infty= 2\\cdot\\infty 이고, \\infty \\cdot \\infty= \\infty^2라 생각하면 2\\cdot \\infty보다 \\infty^2이 더 이상한데 말이죠. 여기서 우리는 편견을 극복해야합니다.\n2라는 수는 수의 의미보다는 여기서 두 번 연산을 수행했다는 의미로서 작용합니다. 따라서 a+a=2a라고 쓰는 것은 우리들의 약속인 것이죠. 앞서 보았듯 이 연산체계는 형식적으로 정의되어 있으며 부정형을 도입함으로써, 연산의 완결성을 달성할 수 있습니다. 즉, 모든 가능한 입력에 대해 연산의 결과를 정의할 수 있게된거죠.\n따라서 이는 수학적 일관성을 유지하면서 일반적인 수학에서 다루기 어려운 문제를 분석하는데 응용하기 위한 정의로 부터 얻어낸 성질이라 해석하시면 좋을 것 같습니다.\n에필로그\n앞서 보았듯 원소를 제한하거나 추가하는 방식으로 0으로 나누는 과정을 보았습니다. 이러한 논의는 우리가 일상생활에서 사용하는 실수체에서는 당연히 성립하지 않는 결과입니다. 그래서 대수를 공부하는 상황이 아니라면 굳이 0으로 나누는 상황을 고려하지 않아도 됩니다. 관련 논문은 블로그에 첨부해두었습니다. 관련 논문을 다 이해하신게 아니라면 괜히 어디가서 0으로 나눌 수 있다고 말하고 다니시지 말기를 간곡히 부탁드립니다. 다만 이 글을 읽으시고 이렇게 연산을 엄밀하게 정의하는 과정에서 수학이 한 단계 더 발전될 수 있구나 정도만 알아주셨으면 좋겠습니다. 저는 간만에 대수 공부를 했더니 더 이상은 0으로 나누기 싫어지네요.\n\n\n                  \n                  참고자료 \n                  \n                \n\n\n\nWheels On Division by Zero\nExact real arithmetic using Mobius transformations\nA New Representation for Exact Real Numbers\n\n\n\n"},"Ray-math/Script/142857":{"slug":"Ray-math/Script/142857","filePath":"Ray math/Script/142857.md","title":"순환수 142857","links":["Ray-math/Script/소수를-분모로-갖는-분수의-반복되는-특별한-성질"],"tags":["순환","숫자","마디","배열","소수","에너그램"],"content":"애너그램(Anagram)은 원래 단어나 문구의 문자를 재배열하여 새로운 단어나 문구를 만드는 것을 말합니다. “Listen”과 “Silent”, “Eleven plus two”와 “Twelve plus one” 등 문자의 재배열을 통해 새로운 의미를 창출하는 매력적인 언어적 특성을 보여줍니다. 가장 유명한 예로는 해리 포터 시리즈에서 나오는 에너그램으로 ‘톰 마볼로 리들(Tom Marvolo Riddle)‘의 이름을 재배열하면 ‘나는 볼드모트 경(I am Lord Voldemort)‘이라는 문구가 되는게 유명하지요.(요새는 LE SSERAFIM \\leftrightarrow IM FEARLESS이 더 유명한 거 같긴 하지만) 이는 캐릭터의 진정한 정체성을 숨기는 데 사용됩니다. 그런데 수학에서도 이러한 성질을 만족하는 수가 있다는 것을 아시나요?1\n순환수(cyclic number)\n순환수는 애너그램과 같이 그 자릿수의 순환 순열이 숫자 자신의 정수배가 되는 정수를 말합니다. 가장 유명한 순환수인 142857을 예로 보겠습니다.\n\\begin{align*}\n142857 \\times 1 = 142857\\\\\n142857 \\times 2 = 285714\\\\\n142857 \\times 3 = 428571\\\\\n142857 \\times 4 = 571428\\\\\n142857 \\times 5 = 714285\\\\\n142857 \\times 6 = 857142\\\\\n142857 \\times 7 = 999999\n\\end{align*}\n이 수에 1부터 6까지 차례대로 곱한 결과를 보면 단지 숫자 배열이 바뀔 뿐이며, 7을 곱하면 9가 연속된 숫자를 얻을 수 있습니다. 그리고 999999가 7로 나누어 떨어진다는 것을 이용하면\n1 = \\frac{7}{7} = 0.9999\\cdots\n1을 7로 나눈 분수의 소수 부분에서도 142857이 반복되며 이 순환 소수는 142857을 순환 마디로 갖는 다는 것을 알 수 있습니다.\n\\begin{align*}\n\\frac{1}{7} &amp;= 0.\\,142857\\,142857\\,\\cdots \\\\\n&amp;=0.\\overline{142857}\\\\\n\\end{align*}\n일반적인 증명보다 왜 이러한 현상이 일어나는지 나눗셈으로 먼저 알아보겠습니다. 7은 소수이므로 7로 나눈 나머지는 7-1=6개가 가능합니다. 나눗셈 과정을 보면 생길 수 있는 모든 나머지 6개가 모두 생성됩니다.\n여기서 중요한 점은, \\frac{2}{7}에 대한 나눗셈이 \\frac{1}{7}을 나눌 때의 세 번째 단계에서 시작한다는 것을 관찰하는 것입니다.\n이것은 왜 우리가 같은 여섯 자리 숫자를 얻지만 다른 순서로 배열되어 있는지를 자명하게 설명해줍니다. 중요한건 순환마디의 수들이 아니라 나눗셈을 할 때 생기는 나머지들이죠. 분모가 7인 분수는 분자가 7의 배수가 아닌 이상 나누어 떨어지지 않습니다. 따라서 7로 나눈 나머지는 7보다 작은 자연수인 1,2, \\cdots, 6만 가능하며 이들이 번갈아가며 나온 후 다시 같은 배열을 만들게 됩니다.\ncyclic primes\n그렇다면 이러한 배열은 7만이 갖는 특별한 성질일까요? 우선 이러한 현상을 자세히 알아보기 위해서는 유리수의 소수 표현이 갖는 성질에 대해 알아야합니다.\n모든 유리수는 소수로 표현할 때, 반복되거나 끝나는 성질을 가지고 있습니다. 예를 들어,  \\frac{1}{3} = 0.\\overline{3}은 3이 반복되는 경우이며, \\frac{1}{4} = 0.25은 끝나는 경우입니다.\n\\begin{gather*}\n\\frac{1}{3}= 0.3333\\cdots = 0.\\overline{3}\\\\\n\\frac{1}{4}= 0.25\n\\end{gather*}\n이 둘을 분류할 때 후자처럼 끝나는 경우는 오직 분수 \\frac{m}{n}이 기약 분수이고 분모 n이 2와 5의 거듭제곱 형태(2^r \\cdot 5^s)일 때만 발생합니다.(물론, 역도 사실입니다.) 그렇다면 순환하는 숫자를 만드는 유리수는 그렇지 않은 경우이므로 분모인 소수 p는 2나 5가 아닙니다. 이제 k가 1, 2, \\cdots, p-1 중 하나인 분수 \\frac{k}{p}를 보도록 하겠습니다.\n\\frac{k}{p}와 같이 소수 p를 분모로 갖는 소수표현에서는 (p \\not=7이어도) 순환 마디를 이루는 숫자가 반드시 순환합니다. 예를 들어 p = 13을 보겠습니다. \\frac{k}{13}에서 k가 변화할 때 순환주기를 관찰해보겠습니다. 순환마디를 보면 보면 아무런 규칙없이 수가 나열된 것처럼 보일 수 있습니다.\n\\begin{array}{cc} k &amp; \\text{repetend} \\\\ \\hline 1 &amp; 076923 \\\\ 2 &amp; 153846 \\\\ 3 &amp; 230769 \\\\ 4 &amp; 307692 \\\\ 5 &amp; 384615 \\\\ 6 &amp; 461538 \\\\ 7 &amp; 538461 \\\\ 8 &amp; 615384 \\\\ 9 &amp; 692307 \\\\ 10 &amp; 769230 \\\\ 11 &amp; 846153 \\\\ 12 &amp; 923076 \\\\ \\end{array}\n하지만, 이 수들을 두 부분으로 나누어 보면 앞서 본 것과 같이 숫자가 재배열 됩니다. 그리고 정확하게 p-1=12를 순환마디의 길이인 6으로 나눈 2가지로 같은 패턴이 반복되는 것을 발견할 수 있습니다.\n\\begin{array}{c|c|c}\nk &amp; \\text{first cyclic number class} &amp; \\text{second class}\\\\ \\hline\n1 &amp; 076923 &amp; \\\\\n2 &amp; &amp; 153846 \\\\\n3 &amp; 230769 &amp; \\\\\n4 &amp; 307692 &amp; \\\\\n5 &amp; &amp; 384615 \\\\\n6 &amp; &amp; 461538 \\\\\n7 &amp; &amp; 538461 \\\\\n8 &amp; &amp; 615384 \\\\\n9 &amp; 692307 &amp; \\\\\n10 &amp; 769230 &amp; \\\\\n11 &amp; &amp; 846513 \\\\\n12 &amp; 923076 &amp; \\\\\n\\end{array}\n여기서 잠깐, 순환마디의 길이는 p-1의 약수만 가능한데 999,999가 13의 배수이므로 6자리의 순환마디를 만들게 된 것 뿐입니다. 왜 이러한 성질이 반드시 생기는지 궁금하신 분들은 이전 영상을 참고해주시기 바랍니다.\n\\frac{r}{p} = \\frac{rc}{10^{p-1} - 1}\n아마 여기까지만 보신다면 이러한 성질이 7과 13에서만 성립한다고 의심하실 수도 있지만 python코드로 많은 소수들을 테스트해보아도 배열만 바뀔 뿐 같은 수들이 반복되는 사실을 알 수 있습니다.\np = 17에서의 순환마디\n\\begin{array}{c|c}\nk&amp;\\text{repetend}\\\\ \\hline\n1&amp; 0588235294117647\\\\\n2&amp; 1176470588235294\\\\\n3&amp; 1764705882352941\\\\\n4&amp; 2352941176470588\\\\\n5&amp; 2941176470588235\\\\\n6&amp; 3529411764705882\\\\\n7&amp; 4117647058823529\\\\\n8&amp; 4705882352941176\\\\\n9&amp; 5294117647058823\\\\\n10&amp; 5882352941176470\\\\\n11&amp; 6470588235294117\\\\\n12&amp; 7058823529411764\\\\\n13&amp; 7647058823529411\\\\\n14&amp; 8235294117647058\\\\\n15&amp; 8823529411764705\\\\\n16&amp; 9411764705882352\\\\\n\\end{array}\n왜 순환할까?\n이러한 성질이 우연이 아니라면 증명해볼 수 있지 않을까요? 사실 순환하는 이유는 이미 나눗셈에서 보았습니다. 증명은 나눗셈을 수학적으로 다시 적는 것 뿐이죠.2\n\\frac{k}{p} = 0.\\overline{a_1a_2a_3 \\cdots a_\\lambda}라 하겠습니다. 분자인 k를 수열이라 생각하고 귀납적 관계를 나타내면 다음과 같습니다.\n10k_{n} = p \\cdot a_n + k_{n+1}, \\quad n= 1, 2, \\cdots, \\lambda\n여기서  \\lambda는 순환주기의 길이k_{\\lambda+1} = k_1이고, 앞서 정한 것처럼 0 &lt; k_n &lt; p입니다. 이 식은 (어려워보일 수 있으나) 나머지 정리를 수식으로 적은 것 뿐입니다. 다시 p=7을 이용해 이 식을 보도록 하죠. k_1=1이라 할 때, \\frac{1}{7}=0.\\overline{142857}이므로, a_1=1입니다.\n10 \\times 1 = 1 \\times 7 + k_2\n따라서 k_2=3입니다. 이를 이용해 k_3을 구해보면,\n10 \\times3=4\\times7+k_3\nk_3=2입니다. 같은 방법으로 수열을 나열하면, k_n =\\{1, 3,2,6,4,5\\}이 반복됩니다.\n\\begin{align*}\n&amp;10 \\times 1 = 1 \\times 7 +3\\\\\n\\Rightarrow \\quad &amp; 10 \\times 3 = 4 \\times 7 +2\\\\\n\\Rightarrow \\quad &amp; 10 \\times 2 = 2 \\times 7 +6\\\\\n\\Rightarrow \\quad &amp; 10 \\times 6 = 8 \\times 7 +4\\\\\n\\Rightarrow \\quad &amp; 10 \\times 4 = 5 \\times 7 +5\\\\\n\\Rightarrow \\quad &amp; 10 \\times 5 = 7 \\times 7 +1\\\\\n\\end{align*}\n이때 나오는 k_n들은 앞선 나눗셈에서 나머지들인 셈이죠. 이 식이 성립함을 아셨다면 다시 식으로 돌아오겠습니다. 이 식에서 잠시 순환마디를 이루는 숫자a_n을 고려하지 않기 위해 p에 대한 합동식으로 나타내면 다음과 같습니다.\n\\begin{align*}\n&amp;10k_{n} = p \\cdot a_n + k_{n+1}\\\\\n\\Rightarrow \\quad &amp; k_{n+1} \\equiv 10k_n \\equiv 10^n k_1 \\pmod p \n\\end{align*}\n결국 10이 곱해짐에 따라 p에 대하여 k의 값이 변한다는 것이죠. 예를 들어, k_2=3이므로, \\frac{3}{7}은 \\frac{1}{7}에 10을 곱한 수, 즉 4부터 소수부분이 생성됨을 알 수 있습니다. 반대로 \\frac{2}{7}가 어떤 수로 시작하는지 알고 싶다면, 수열 k_n의 세번째 항이 k_3=2이므로, 142857의 세번째 수인 2라고 찾을 수 있습니다.\n\\begin{align*}\n\\frac{1}{7} = 0.\\overline{142857}\\\\\n\\frac{2}{7} = 0.\\overline{285714}\\\\\n\\frac{3}{7} = 0.\\overline{428571}\\\\\n\\frac{4}{7} = 0.\\overline{571428}\\\\\n\\frac{5}{7} = 0.\\overline{714285}\\\\\n\\frac{6}{7} = 0.\\overline{857142}\n\\end{align*}\n만약 p가 13이라면 순환마디의 길이가 \\lambda=6이므로, 앞선 식에 의해 순환하는 나머지 수열이 2개가 생기게 되고,\n\\begin{gather*}\n\\{ 1, 10, 9, 12, 3, 4 \\}\n\\\\\\\\\n\\{ 2, 7, 5, 11, 6, 8 \\}\n\\end{gather*}\n각각의 순서에 따라 소수가 순환하는 것을 알 수 있습니다.\n\\begin{array}{c|c|c}\nk &amp; \\text{first cyclic number class} &amp; \\text{second class}\\\\ \\hline\n1 &amp; 076923 &amp; \\\\\n2 &amp; &amp; 153846 \\\\\n3 &amp; 230769 &amp; \\\\\n4 &amp; 307692 &amp; \\\\\n5 &amp; &amp; 384615 \\\\\n6 &amp; &amp; 461538 \\\\\n7 &amp; &amp; 538461 \\\\\n8 &amp; &amp; 615384 \\\\\n9 &amp; 692307 &amp; \\\\\n10 &amp; 769230 &amp; \\\\\n11 &amp; &amp; 846513 \\\\\n12 &amp; 923076 &amp; \\\\\n\\end{array}\n대칭성\n우리는 앞선 예시에서 한 가지 성질을 더 볼 수 있습니다. 표를 자세히 보면 순환하는 숫자들은 대칭성을 가집니다.\n\\begin{array}{cc}\nk &amp; \\text{repetend} \\\\ \\hline\n1 &amp; 142857 \\\\\n2 &amp; 285714 \\\\\n3&amp; 428571 \\\\\n4 &amp; 571428 \\\\\n5 &amp; 714285 \\\\\n6 &amp; 857142\n\\end{array}\n이것 또한 우연일까요? 7과 13의 순환주기의 길이는 모두 짝수입니다. 따라서 일반적으로 \\frac{k}{p}를 다음과 같이 두 부분으로 나누어 표현할 수 있습니다.\n\\frac{k}{p} = \\overline{a_1a_2 \\cdots a_q \\, b_1b_2 \\cdots b_j}\n여기서 우리는 모두 0.\\overline{9}=1이라는 것을 알고 있습니다.(0.\\overline{9}=1임을 믿지 않는 분들은 이 성질을 어떤 방법으로 증명할지 궁금합니다.) 그리고 저번 영상에서 보았듯 소수 p를 분모로 갖는 분수의 순환마디는 두 부분으로 나누어 더하면 항상 9가 반복적으로 나온다는 사실도 알고 있습니다.\n\\begin{align*}\n\\frac{1}{7} \\quad &amp;; \\quad 142+857=999\\\\\n\\frac{1}{13} \\quad &amp;; \\quad 076+923=999\\\\\n\\frac{1}{17} \\quad &amp;; \\quad 05882352+94117647=99999999\\\\\n\\frac{1}{19} \\quad &amp;; \\quad 052631578+947368421=999999999\n\\end{align*}\n따라서 \\frac{1}{7}과 \\frac{6}{7}과 같이 더해서 1이 되고 순환마디의 길이가 짝수인 두 수는 다음식에 의해 반드시 대칭적일 수 밖에 없습니다.\n\\begin{align*}\n\\frac{p - k}{p} &amp;= 1 - \\frac{k}{p}\\\\\n&amp;= 0.9999\\cdots - 0.\\overline{a_1a_2 \\cdots a_q \\,b_1 \\cdots b_j}\\\\\n&amp;= \\overline{b_jb_{j-1} \\cdots b_1 \\, a_q \\cdots a_1}\n\\end{align*}\n같은 방법으로 만약 순환마디의 길이가 홀수라면 다른 배열과 쌍대칭을 이루게 됩니다.\n\\begin{array}{c|c|c|c|c|c|c|c|c}\nk &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 \\\\\n\\hline\n1 &amp; 02439 &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n2 &amp; &amp; 04878 &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n3 &amp; &amp; &amp; 07317 &amp; &amp; &amp; &amp; &amp; \\\\\n4 &amp; &amp; &amp; &amp; 09756 &amp; &amp; &amp; &amp; \\\\\n5 &amp; &amp; &amp; &amp; &amp; 12195 &amp; &amp; &amp; \\\\\n6 &amp; &amp; &amp; &amp; &amp; &amp; 14634 &amp; &amp; \\\\\n7 &amp; &amp; &amp; 17073 &amp; &amp; &amp; &amp; &amp; \\\\\n8 &amp; &amp; &amp; &amp; &amp; 19512 &amp; &amp; &amp; \\\\\n9 &amp; &amp; &amp; &amp; &amp; 21951 &amp; &amp; &amp; \\\\\n10 &amp; 24390 &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n11 &amp; &amp; &amp; &amp; &amp; &amp; &amp; 26829 &amp; \\\\\n12 &amp; &amp; &amp; &amp; &amp; &amp; &amp; 29268 &amp; \\\\\n13 &amp; &amp; &amp; 31707 &amp; &amp; &amp; &amp; &amp; \\\\\n14 &amp; &amp; &amp; &amp; &amp; &amp; 34146 &amp; &amp; \\\\\n15 &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 36585 \\\\\n16 &amp; 39024 &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n17 &amp; &amp; &amp; &amp; &amp; &amp; 41463 &amp; &amp; \\\\\n18 &amp; 43902 &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n19 &amp; &amp; &amp; &amp; &amp; &amp; 46341 &amp; &amp; \\\\\n20 &amp; &amp; 48780 &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n21 &amp; &amp; &amp; &amp; &amp; 51219 &amp; &amp; &amp; \\\\\n22 &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 53658 \\\\\n23 &amp; &amp; &amp; &amp; 56097 &amp; &amp; &amp; &amp; \\\\\n24 &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 58536 \\\\\n25 &amp; &amp; &amp; &amp; 60975 &amp; &amp; &amp; &amp; \\\\\n26 &amp; &amp; &amp; &amp; &amp; &amp; 63414 &amp; &amp; \\\\\n27 &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 65853 \\\\\n28 &amp; &amp; &amp; &amp; &amp; &amp; &amp; 68292 &amp; \\\\\n29 &amp; &amp; &amp; 70731 &amp; &amp; &amp; &amp; &amp; \\\\\n30 &amp; &amp; &amp; 73170 &amp; &amp; &amp; &amp; &amp; \\\\\n31 &amp; &amp; &amp; &amp; 75609 &amp; &amp; &amp; &amp; \\\\\n32 &amp; &amp; 78048 &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n33 &amp; &amp; 80487 &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n34 &amp; &amp; &amp; &amp; &amp; &amp; &amp; 82926 &amp; \\\\\n35 &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; 85365 \\\\\n36 &amp; &amp; 87804 &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n37 &amp; 90243 &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n38 &amp; &amp; &amp; &amp; &amp; &amp; &amp; 92682 &amp; \\\\\n39 &amp; &amp; &amp; &amp; &amp; 95121 &amp; &amp; &amp; \\\\\n40 &amp; &amp; &amp; &amp; 97560 &amp; &amp; &amp; &amp; \\\\\n\\end{array}\n우리는 숫자가 단순한 수치를 넘어서 애너그램과 같이 자유롭게 변화하고 숨겨진 의미를 담을 수 있다는 것을 발견했습니다. 숫자들은 단순히 계산을 위한 도구가 아니라, 그 자체로 하나의 아름다운 대칭을 만들죠. 여러분들도 무심코 지나치는 다양한 패턴에서 더 깊은 의미를 찾아보시는 것은 어떨까요?\n142857에 1부터 6을 곱한 결과를 보면, 배열만 바뀔 뿐 같은 숫자가 순환해서 나옵니다.\n이 수들은 각 자리를 더하면 9의 배수이고, 두자리씩 나누어 더하면 99의 배수, 세자리씩 나누어 더하면 999의 배수입니다.\n가운데를 나누어 양 끝에 생기는 수를 더하면 항상 999,999가 나오며\n제곱한 후 적당히 나눠서 더하면 다시 자기 자신이 됩니다. 왜 이러한 성질이 성립하는 것일까요?\nFootnotes\n\n\nThe Alluring Lore of Cyclic Numbers ↩\n\n\nSome Properties of Pure Recurring Decimals ↩\n\n\n"},"Ray-math/Script/감정은-전염되는가":{"slug":"Ray-math/Script/감정은-전염되는가","filePath":"Ray math/Script/감정은 전염되는가.md","title":"감정은 전염되는가","links":[],"tags":["범죄","사람","전파","감염","개체","미디어","모방","노출"],"content":"최근 뉴스를 보면 극단적 선택, 무차별 테러, 마약 등 마음 아픈 기사들이 많이 보입니다. 요즘에는 미디어나 SNS를 통해 기사나 정보가 예전보다 더 빠르게 퍼지고 있습니다. 그런데 저는 이러한 기사들이 오히려 악영향을 끼치지 않을까 우려하여 제가 알고있는 수학적 정보를 공유하고 해결책에 대해 서로 의견을 나누는 시간을 가져보았으면 합니다.\n모방범죄는 전염된다\n범죄자가 미디어를 통해 노출된 범죄의 기법과 방법을 복사하는 범죄를 ‘모방 범죄’라고 정의합니다. 모방 범죄는 지속적인 사회 현상이며, 범죄 기법에 영향을 주는 것으로 전체 범죄 상황에 영향을 미칩니다.\n\n“Crimes whose techniques and methods copy crimes to which the perpetrators have been exposed in the media are know as “copycat” crimes. This study indicates that copycat crime is a persistent social phenomena, common enough to influence the total crime picture mostly by influencing crime techniques rather than the motivation to commit a crime or the development of criminal tendencies. A copycat criminal is likely to be a career criminal involved in property offenses rather than a first-time violent offender.” 1\n\n실제로 574명의 수감자를 대상으로 범죄 행동에 대한 설문 조사를 진행한 결과, 수감자 중 22%가 모방 범죄를 저질렀다고 인정했으며, 이 중 1/5는 폭력 범죄였습니다. 그들은 대체로 범죄 경력 초기에 이러한 모방 행위를 보였의며 그들은 친구나 친척과 같은 실제 범죄 모델의 범죄 행동을 본따는 것이 가장 일반적이었습니다.\n\n“Professor Ray Surette decided to try and answer that question by surveying 574 male and female inmates about their criminal behavior. These prisoners were pretty evenly split between white and black (close to 40%) and 15% were Latino. The majority (75%) were male and a third were under age 27. Most had lengthy rap sheets (5+ arrests), with only 8% in jail on their first charge. Professor Surette also asked questions about each inmate’s exposure to real-world crime via his or her neighborhood, friends, and family members and collected data about each inmate’s exposure and reaction to crime-related media.\nTwenty-two percent of the inmates admitted having committed a copycat crime; one out of five of these crimes were violent. Men were more likely than women to copy someone else’s crime and they were most likely to do it early in their criminal career. Not surprisingly, they were also most likely to copy the criminal behavior of a real-world crime model, such as a friend or a relative.”2\n\n이는 모방 범죄가 범죄자에게서 범죄자로, 그리고 그룹에서 그룹으로 전파될 수 있다는 점을 강조하고 있습니다. 그리고 이렇게 전파될 수 있다는 것은 전염병과 같은 매커니즘을 가졌다고 할 수 있습니다.\nSEIR  모형\n전염병은 흔히 SEIR모형이라 불리는 수학적 모델로 이해할 수 있습니다.\n\n\nS (Susceptible): 감염에 취약한 개체. 이들은 아직 감염되지 않았지만, 감염될 가능성이 있는 개체를 의미합니다.\nE (Exposed): 감염에 노출되었지만 아직 감염이 발병하지 않은 개체. 이 단계의 개체는 바이러스를 가지고 있지만, 아직은 전염성이 없습니다. 이 단계는 잠복기를 나타냅니다.\nI (Infectious): 감염이 발병하여 다른 개체에게 감염을 전파할 수 있는 상태. 이 단계의 개체는 바이러스를 가지고 있고, 그 바이러스를 다른 개체에게 전파할 수 있습니다.\nR (Recovered/Removed): 감염에서 회복되거나 사망하여 더 이상 전파자가 아닌 개체. 이 단계의 개체는 더 이상 감염을 전파하지 않습니다.\n\n\nSEIR 모형은 미분 방정식으로 표현할 수 있으며 각 상태 간의 전환을 수학적으로 모델링하여 전파를 측정하고 예측할 수 있습니다.\n\nSusceptible:\n\n\\frac{dS}{dt} = -\\beta S I\n이 방정식은 취약한 개체가 감염되는 속도를 나타냅니다. 여기서 β는 감염률을 나타내며, S와 I는 각각 취약한 개체와 감염된 개체의 수입니다.\n\nExposed:\n\n\\frac{dE}{dt} = \\beta S I - \\sigma E\n이 방정식은 취약한 개체가 노출되어 감염되는 속도와 노출된 개체가 실제로 감염되는 속도를 나타냅니다. 여기서 σ는 노출된 개체가 감염되는 비율을 나타냅니다.\n\nInfectious:\n\n\\frac{dI}{dt} = \\sigma E - \\gamma I\n이 방정식은 노출된 개체가 감염되는 속도와 감염된 개체가 회복되는 속도를 나타냅니다. 여기서 γ는 감염된 개체가 회복되는 비율을 나타냅니다.\n\nRecovered/Removed:\n\n\\frac{dR}{dt} = \\gamma I\n이 방정식은 감염된 개체가 회복되는 속도를 나타냅니다.\n그리고 이러한 모델을 범죄의 전염 과정에 적용하면, 각 상태를 범죄와 관련된 상황으로 재해석할 수 있습니다.\n\n\nS (Susceptible): 범죄에 취약한 사람들 (예: 범죄를 저지를 수 있는 상황에 노출된 사람들)\nE (Exposed): 범죄에 노출되었지만 아직 범죄를 저지르지 않은 사람들 (예: 범죄에 대한 뉴스를 보거나 들은 사람들)\nI (Infectious): 범죄를 저지르고 다른 사람들에게 범죄를 저지르는 아이디어를 전파하는 사람들\nR (Recovered/Removed): 범죄에서 벗어나거나 사회에서 제거된 사람들 (예: 감옥에 가거나 범죄 생활을 그만둔 사람들)\n\n\n범죄의 전파는 ‘일반화된 모방’이라는 현상을 통해 이러한 영향력이 작용합니다.  앞서 본 연구 결과들은 미디어가 범죄 기법의 전파에 어떤 역할을 하는지에 대한 중요한 정보를 제공하죠. 일반화된 모방이란 한 사람의 행동이 다른 사람이 유사한 행동을 하는 데 영향을 미치는 현상을 말합니다. 이는 사람들이 자신과 유사한 모델을 보고 그 행동을 모방하는 경향이 있기 때문에 발생합니다. 이때 미디어는 이러한 전파를 나르는 매개체의 역할을 할 수 있습니다.\n미디어를 통한 범죄의 전파\n우리나라에서는 집단 테러에 대한 사례가 부족하지만 미국에 경우에는 이와 관련된 연구가 있습니다. 애리조나 주립대학의 연구자들은 집단 살인과 학교 총격 사건이 모방 범죄의 결과일 수 있는지에 대해 연구했으며, 이들은 이러한 사건들을 조사한 결과, 초기 사건 이후 2주 내에 두 번째 집단 살인이 발생할 확률이 크게 증가했다는 것을 발견했습니다. 또한 대량 총격 사건의 20-30%가 미디어에서 대대적으로 보도된 과거의 사건에 영감을 받았다고 발견한거죠.  이는 모방범죄가 미디어를 통해 전파 또는 감염될 수 있다는 중요한 증거입니다.\n\n“Researchers at Arizona State University have studied whether mass killings and school shootings are in the United States may be the product of the copycat effect. They examined a database of these events and concluded that there is indeed “significant evidence of contagion.” They found a dramatically increased likelihood of a second mass killing occurring within two weeks of the initial one. They further found that 20-30% of mass shootings were inspired by past events that were heavily publicised in the media. This led on of the authors to label the media as a “vector that reaches people who are vulnerable.” 3\n\n그렇다면 이러한 악순환의 고리를 끊는 방법은 없을까요?\n악순환의 고리를 끊는 방법\n해결책을 내기 위해서는 복잡한 사회, 경제, 심리적 요인을 고려해야 하며, 모든 상황에 적합한 일관된 해결책은 아직 없습니다. 이 분야의 전문가도 아닌 제가 왈가왈부 제시하는게 우스운 일일 수도 있지만 그래도  개인적인 의견을 공유해보려 합니다.\n미디어의 영향 줄이기\n앞서 말했지만 이러한 모방범죄는 미디어를 통해 전염되는 양상을 보입니다. 그리고 범죄는 앞서말했듯이 SEIR모형을 따라 설명할 수 있죠. 미디어에서 범죄 기사를 줄이는 것은 “E (Exposed)” 단계에 가장 큰 영향을 미칠 것입니다. 미디어는 범죄에 대한 정보를 널리 전파하는 주요 수단이므로, 범죄 기사를 줄이면 사람들이 범죄에 노출되는 기회가 줄어들게 됩니다. 이는 결국 “E”에서 “I”로의 전환을 줄이는 효과가 있을 것입니다. 이렇게 하면 범죄를 저지르는 사람들의 수가 줄어들고, 전반적인 범죄율이 감소할 수 있습니다.\n따라서 저는 언론이 범죄에 대해 보도할 때는 세심한 언어 선택과 비감성적인 언어를 사용하는 것이 중요하다 생각합니다. 범죄의 방법이나 용의자의 이름을 공개하는 것을 피하고, 범죄자에 대한 고정관념과 편견을 반복하지 않는 것이 필요하죠.\n\n\n                  \n                  가이드라인 \n                  \n                \n\n\n\n극단적 선택을 선정적으로 묘사하지 않기\n극단적 선택을 우울증과 같은 단일 요인에 의한것이라고 암시하지 않기\n눈에 띄는 헤드라인 피하기\n이야기를 너무 자주 반복하지 않기\n방법에 대한 단계별 설명을 제공하지 않기\n사진 및 동영상 사용 제한하기\n유명인의 사건에 대해 특히 주의하기\n\n\n\n\n마음 같아서는 범죄자의 인권은 중요하지 않으니 얼굴이랑 이름을 공개하고 조리돌림 해야한다고 생각하지만 대량 살인을 저지른 사람들의 이름과 사진을 공개하는 것이 다른 사람들이 자신들의 이름을 알리기 위해 범죄를 저지르는 행동을 증가시킨다는 사실4을 알게되면 너른 마음으로 범죄자에 대한 분노를 멈추고 오히려 무시하는 것이 더 좋다고 생각합니다. 그리고 피해자들이나 그들의 가족이 겪는 피해에 초점이 맞춰지지 않고 자극적인 기사를 반복하기 위한 수단으로 미디어가 소비되는 것을 보면 이러한 기사가 계속 재생산되는 것은 나쁘다고 생각합니다.\n긍정의 전파\n인식을 변화한다 하더라도 우리는 미디어의 소비자로서 바꿀 수 있는 것이 없다고 생각할 수 있습니다. 하지만 우리가 쉽게 할 수 있는 일다고 생각합니다. 2014년 페이스북에서 사용자들의 감정 상태가 SNS를 통해 어떻게 전파되는지 실험5한 연구결과가 나왔습니다. 이 실험에서는 뉴스 피드에서 긍정적 또는 부정적인 단어를 포함하는 게시물의 수를 조절하고, 이에 따른 사용자들의 반응을 관찰했죠.\n이 연구의 결과는 매우 흥미로웠습니다. 긍정적인 표현이 감소된 뉴스 피드를 본 사용자들은 자신의 글에서 긍정적인 표현을 덜 사용하였고, 부정적인 표현이 감소된 뉴스 피드를 본 사용자들은 자신의 글에서 부정적인 표현을 덜 사용하였습니다. 감정 상태가 SNS를 통해 전파될 수 있음을 보여준거죠. 특히, 긍정적인 감정 상태는 부정적인 감정 상태보다 더 강력하게 전파되었습니다.\n별거 아닌 것 같지만 전 이것이 어떻게보면 하나의 해결방안이 될 수 있다고 믿습니다. 우리의 긍정적인 언어는 우리 주변 사람들의 감정 상태와 행동에도 영향을 미칠 수 있습니다. 모든 사람들이 범죄에 노출되었다고 해서 범죄를 저지르지는 않습니다. 극단적 선택, 무차별 테러, 마약 등은 우리 사회에서 가장 약한 부분에서 발현됩니다. 따라서  긍정적인 감정 전파를 통해 사람들 사이의 관계가 개선되고, 사회적 연결망을 강화할 필요성이 있다고 생각합니다.\n저도 일을 하면서 하나도 힘들지 않았다고 말할 수는 없습니다. 오히려 정반대죠. 그래도 일상생활을 하면서 마주하는 소소한 행복으로 하루를 견뎌내곤 합니다. 여러분들은 어떤가요? 범죄에 노출되거나 아니면 범죄로 피해를 입은 사람들은 너무나 힘들어 주변에서 소외되어가고 있을 수 있습니다. 여러분들이 따뜻한 위로를 건내줄 수 있는 사람이 되어주시는 것이 어떨까요?\nFootnotes\n\n\nEstimating the Magnitude and Mechanisms of Copycat Crime ↩\n\n\nThe Psychology of “Copycat Killers” ↩\n\n\nThe Influence of the Media on Copycat Crimes ↩\n\n\nAJPH201618074_Meindl 368..370 ↩\n\n\nExperimental evidence of massive-scale emotional contagion through social networks | PNAS ↩\n\n\n"},"Ray-math/Script/거리와-원":{"slug":"Ray-math/Script/거리와-원","filePath":"Ray math/Script/거리와 원.md","title":"거리와 원","links":[],"tags":["거리","점","이동","측정","택시","절댓값"],"content":"혹시 절댓값의 정의를 기억하시나요? 절댓값이라는 단어를 들으면 대부분의 사람들은 양수나 0을 떠올립니다. 하지만 이것은 그저 언어적인 해석일 뿐, 수학적으로는 더 깊은 의미를 갖고 있습니다.\n절댓값의 기호는 \\vert A \\vert이며, 이것은 원점에서 얼마나 떨어져 있는지를 나타내는 거리라고 할 수 있습니다. 여기서 재미있는 점은, 절댓값은 \\vert A - 0 \\vert로 표현될 수 있다는 것입니다. 이렇게 표현하면 절댓값이 0으로부터의 거리라는 것이 명확해집니다.\n한 발짝 더 나아가보죠. 절댓값은 거리를 나타내는 개념이므로 방향이 없습니다. 즉, \\vert 5 - 0 \\vert와 \\vert -5 - 0 \\vert는 동일한 값을 가지게 됩니다. 왜냐하면 둘 다 원점으로부터 5만큼 떨어져 있기 때문이죠. 따라서 우리는 절댓값을 그저 부호를 없앤다고 생각하지만 사실 절댓값은 그 자체로 순수한 거리를 나타내는 개념입니다.\n유클리드 거리\n거리란 두 개의 물건, 장소 등이 공간적으로 떨어진 길이를 의미합니다. 친구의 집에서 여러분의 집까지의 거리, 학교에서 도서관까지의 거리, 이 모든 것들이 거리라는 개념 없이는 상상도 할 수 없습니다. 그렇다면, 이런 실생활 속 거리 개념을 좌표평면 위에서 어떻게 표현할 수 있을까요? 좌표평면은 숫자와 선으로 이루어져 있어 거리를 계산하기에 아주 적합한 공간입니다. 직관적인 예를 들어 좌표 평면상에 점들의 길이를 구해보도록 하죠.\n다음과 같이 네 점 A(0,~0), B(0,~0), C(4,~0), D(4,~3)이 있다고 해보겠습니다. 이때, 점 A와 점 B 사이의 거리는 얼마인가요? 점 A와 점 B는 같은 점이므로 떨어져 있는 양, 즉 거리가 없다고 할 수 있습니다. 이것을 기호로 나타내면 \\vert A-B \\vert=0이라고 표현하죠. 따라서 거리는 0입니다.\n다음은 점 A와 점 C사이의 거리를 보겠습니다. 점 A와 점 C는 y축 방향으로는 차이가 없고 x축 방향으로만 4만큼 차이가 납니다. 따라서 거리는 \\vert A - C \\vert = 4라고 할 수 있습니다. 그렇다면 반대로 점 C 와 점 A 사이의 거리는 얼마일까요? 순서만 바뀌었을 뿐 두 점 사이의 공간이 변한 것은 아니므로 거리는 똑같이 \\vert C - A \\vert=4입니다. 같은 방법으로 점 C와 점 D의 거리는 \\vert C - D \\vert = 3이라는 것도 어렵지 않게 구할 수 있습니다.\n마지막으로 점 A와 점 D사이의 거리는 얼마일까요? 점 C에서 점 A와 점D를 잇는 선분을 각각 그린다면 \\triangle ACD는 직각삼각형입니다. 그렇다면 피타고라스의 정리에 의해 어렵지 않게 \\overline{AD}의 길이를 \\sqrt{3^2 + 4^2}=5라고 구할 수 있습니다. 여기서 한 가지 관찰할 수 있는 재밌는 사실이 있습니다. 점 A에서 점 D로 갈 때 점 A에서 점 C를 거쳐 점 D로 가려면 3 + 4 = 7이란 길이가 필요한데 반해 점 A에서 바로 점 D로 가면 5라는 거리로 충분합니다. 상식적으로 점 A에서 점 C로 일직선으로 가는 것이 아니라 우회해서 간다면 당연히 길이가 길어지겠죠. 이 성질을 삼각 부등식이라 부릅니다. 한 점에서 다른 점으로 이동할 때, 그 외의 점을 거쳐간다고 해서 더 빠르게 갈 수 없다는 거죠.\n\n삼각형을 그렸을 때 볼 수 있듯 가장 긴 변의 길이 \\overline {AD}는 다른 두 변의 길이의 합 \\overline{AC} + \\overline{DC} 보다 작거나 같습니다. 이처럼 직관적인 3가지 성질을 만족하는 것으로부터 우리는 ‘거리’라는 개념을 정의할 수 있습니다.\nd(x,~y)=|x-y|\n\n반사성(Reflexivity) d(x,~y)=0 \\Leftrightarrow x=y\n대칭성(Symmetry) d(x,~y)=d(y,~x)\n삼각 부등식(Triangle Inequality) d(x,~y)+d(y,~z) \\ge d(x,~z)\n\n현실에서의 거리\n거리에 관한 일반적인 관념을 생각해봅시다. 우리는 종종 거리를 직선으로 측정하지만, 실생활에서 거리의 개념은 조금 다르게 나타납니다. 예를 들어, 서울과 부산은 지도상의 좌표로는 325\\text{km} 정도 떨어져 있지만, 실제로 차로 이동하면 390\\text{km}를 이동해야합니다. 훨씬 더 멀죠. 왜냐하면, 도로는 직선이 아니라 여러 방향으로 굽이쳐 있기 때문입니다. 이러한 생각을 학교 교실로 옮겨와 보겠습니다. 교실에서 맨 뒤 왼쪽 자리에서 맨 앞 오른쪽 자리까지의 이동한다고 해보겠습니다. 맨 뒤 왼쪽 자리에서 맨 앞 오른쪽 자리까지 갈 때, 직선 거리를 따라 책상을 밟고 이동하면 어떻게 될까요? 보나마나 반에 있는 모든 학생들이 저를 쳐다볼 것입니다. 실제로 그 거리를 걸어가기 위해서는 책상과 의자를 피해야 하므로 훨씬 더 많이 걸어야 합니다. 이처럼 직선거리는 가장 짧은 거리를 나타내지만 이상적인 거리일 뿐 실생활에서 사용하기에는 어려움이 있습니다. 따라서 이렇게 실제로 이동하는 현상을 더 잘 이해하기 위해서 새로운 거리개념을 도입할 필요가 있는데 그 중 하나가 ‘택시 거리(taxicab metric)‘입니다.\n택시 거리는 도시 환경에서 택시가 이동하는 방식에 기초합니다. 도시에서 택시는 대부분의 경우 직선으로 이동할 수 없고, 대신 길이 나있는 가로나 세로 방향의 도로를 따라 이동해야 합니다. 이를 수식으로 나타내면 두 점 x = (x_1,~x_2)와 y = (y_1,~y_2)가 평면 상에 주어졌다고 할 때, 다음과 같이 표현됩니다.\nd(x,~y) = \\vert x_1 - y_1 \\vert + \\vert x_2 - y_2\\vert\n예를 들어 앞선 예시와 같은 점이 주어졌을 때, \\overline{AC}=\\vert0 - 0\\vert + \\vert4 - 0\\vert=4이며, \\overline{AD} = \\vert4 - 0\\vert + \\vert3 - 0\\vert = 7이 됩니다. A에서 x축 또는 y축 방향과 평행하게 이동하여 다른 점으로 이동할 수 있는 최단거리를 나타내죠. 그렇다면 이러한 이동 방식도 거리라고 할 수 있을까요? 앞서 거리라는 개념은 흔히 ‘반사, 대칭, 삼각 부등식’이라는 3가지 성질을 만족하는 것으로 정의할 수 있습니다. 그리고 택시거리는 다음과 같이 거리의 정의를 잘 만족합니다.\n\n반사성(Reflexivity)\n\nd(x,~x) = |x_1 - x_1| + |x_2 - x_2| = 0 + 0 = 0\n\n대칭성(Symmetry)\n\n\\begin{align*}\nd(x,~y) &amp;= |x_1 - y_1| + |x_2 - y_2| \\\\\n&amp;= |y_1 - x_1| + |y_2 - x_2| =d(y,x)\n\\end{align*}\n\n삼각 부등식(Triangle Inequality)\n\n\\begin{align*}\nd(x,~y) + d(y,~z) &amp;= |x_1 - y_1| + |x_2 - y_2| + |y_1 - z_1| + |y_2 - z_2|\\\\\n&amp;\\ge |x_1 - z_1| + |x_2 - z_2| = d(x,~z)\n\\end{align*}\n원의 정의\n원은 주어진 중심으로 부터 일정한 거리에 있는 점들의 집합으로 정의합니다. 예를들어 단위원 즉, 원점을 중심으로 하고 반지름의 길이가 1인 원을 본다면 (x,~y)와 O(0,~0)사이의 거리가 1임을 이용해서 피타고라스의정리로 부터 원의 방정식을 표현할 수 있습니다.\n\\sqrt{(x-0)^2 + (y-0^2)}=1 \\quad \\Rightarrow \\quad  x^2+y^2=1\n그러나 원의 정의에서 거리 개념을 택시 거리로 바꾼다면, 원의 모양은 달라집니다. 원점에서 어떤 점 (x, y)까지의 택시 거리는 |x| + |y|가 됩니다. 따라서, 택시 거리에 기반한 단위원은 다음과 같은 방정식으로 나타낼 수 있습니다.\n\\vert x - 0 \\vert + \\vert y - 0 \\vert = 1 \\quad \\Rightarrow \\quad \\vert x \\vert + \\vert y \\vert = 1\n이 방정식에 따른 도형은 좌표평면 상에서 다이아몬드 형태를 띕니다. 이는 x축과 y축에 평행한 선들을 따라 이동하는 것을 고려하기 때문이죠. 결과적으로, 전통적인 유클리드 기하학에서의 원과는 완전히 다른 모양이 형성됩니다.\n다양한 거리들\n직관과는 다른 모양이지만 이러한 기하학적 도형들은 도시 계획이나 건축 등 다양한 분야에서 보다 현실적인 모델을 제공할 수 있습니다. 여기서는 몇가지 거리를 더 소개해보도록 하겠습니다.\n체스보드 거리(Chessboard Distance)\n체스보드 거리는 그 이름에서 알 수 있듯이 체스판의 말들이 이동하는 방식에서 영감을 받은 거리 측정 방법입니다. 이 거리는 두 점 사이의 거리를 가로 또는 세로 이동 중 가장 큰 단일 이동으로 측정합니다.\nd(x,~y) = \\max(|x_1 - y_1|,~|x_2 - y_2|)\n체스보드 거리에서의 단위원은 \\max(|x|, |y|) = 1으로 나타낼 수 있으며, 축에 평행한 정사각형 모양을 띕니다. 그리고 이러한 모양과 같이 픽셀 또는 격자 기반의 시스템에서 매우 유용하게 사용됩니다.\n민코프스키 거리(Minkowski Distance)\n민코프스키 거리는 거리 측정의 일반화된 형태로, 여러 다른 거리 측정 방법들을 포괄합니다. 이 거리는 ‘p-노름(norm)‘이라는 개념을 사용하여 다양한 형태의 거리 측정을 가능하게 합니다.\nd(x,~y) = \\left( \\sum_{i=1}^{n} |x_i - y_i|^p \\right)^{1/p}\n표현이 어려워 보이지만 이는 유클리드 거리, 택시 거리, 체스보드 거리 등을 특정한 &#039;p&#039; 값에 따라 표현할 수 있게 해줍니다. 예를 들어, p = 1때는 택시 거리, p = 2는 유클리드 거리, p = \\infty은 체스보드 거리가 됩니다. 이처럼 민코프스키 거리는 다양한 거리 측정 방식을 모델링할 수 있어 데이터 포인트 간의 유사성을 측정하는 데 중요한 역할을 합니다.\n이산 거리(Discrete Distance)\n이산 거리는 두 점 사이의 거리가 연속적인 값을 갖는 유클리드 거리나 택시 거리와는 다르게 기본적으로 이진 관계를 나타냅니다. 즉, 두 점이 동일하면 거리가 0이고, 그렇지 않으면 거리는 1입니다.\nd(x,~y) = \n\\begin{cases} \n0 &amp; (x = y),\\\\\n1 &amp; ( x \\neq y)\n\\end{cases}\n이렇게 정의한 이산 거리도 반사성, 대칭성, 삼각 부등식을 모두 만족합니다.\n\n반사성(Reflexivity)\n\nd(x,~x) = 0\n\n대칭성(Symmetry)\n\nd(x,~y) = d(y,~x)\n\n삼각 부등식(Triangle Inequality)\n\nd(x,~y) + d(y,~z) \\geq d(x,~z)\n위와 같은 이산거리에서 중심점을 O(0,~0)라고 할 때, 이산 거리에서의 원은 O를 제외한 O 주변의 모든 점들을 포함합니다. 왜냐하면 이산 거리의 정의에 따라, 중심점에서 자신을 제외한 모든 다른 점들과의 거리는 1이고, 따라서 중심점을 둘러싼 모든 인접한 점들을 포함하게 되기 때문입니다. 이처럼 이산 거리는 매우 단순하고 명확한 거리 측정 방식으로, 두 점이 동일한지 여부만을 고려합니다.\n우리는 일상적인 유클리드 거리에서부터 이산 거리에 이르기까지, 거리를 어떻게 정의하고 측정할 수 있는지에 대해 알아보았습니다. 각각의 거리 측정 방법은 그것이 적용되는 상황에 따라 다르게 적용됩니다. 거리란 우리가 세상과 어떻게 연결되어 있는지, 우리가 서로 얼마나 가까이 또는 멀리 있는지를 보여주는 중요한 척도입니다. 다양한 거리를 통해 서로를 관계를 더 잘 이해하고, 새로운 관점을 얻으셨기를 바랍니다."},"Ray-math/Script/로그":{"slug":"Ray-math/Script/로그","filePath":"Ray math/Script/로그.md","title":"세상을 바꾼 방정식 2 - 로그","links":[],"tags":["로그","계산","덧셈","사용","지수","곱셈","밑","네이피어","척도","차이","연산"],"content":"로그의 역사\n우리가 수학을 공부하면서 반드시 접하게 되는 개념 중 하나가 바로 로그(logarithm)입니다. 로그는 1614년에 존 네이피어(John Napier)에 의해 처음 소개되었습니다. 로그는 로가리듬(logarithm)의 줄임말로 각각 ‘비율’과 ‘수’를 의미하는 그리스어 ‘λόγος’와 ‘ἀριθμός’에서 유래되었습니다.\n로그가 발명된 16세기에는 항해와 천문학이 큰 발전을 이루고 있었습니다. 항해사들은 새로운 땅을 발견하고, 천문학자들은 별들의 움직임을 예측하기 위해 복잡한 계산을 해야 했습니다. 그러나 당시의 계산 도구는 매우 제한적이었고, 이들이 필요로 하는 복잡한 계산을 수행하는 것은 매우 어려운 일이었죠. 이런 상황에서 네이피어는 곱셈을 덧셈으로 바꾸는 개념을 도입함으로써 이 문제를 해결하였습니다. 그렇다면 로그가 왜 이렇게 중요한지, 그리고 로그는 어떻게 동작하는지에 대해 알아보도록 하겠습니다.\n로그의 성질과 그 효과성\n로그의 정의\n2^1=2 이고 2^2=4입니다. 그렇다면 2^x=3이 나올까요? 어떤 수인지는 정확히 몰라도 1보다는 크고 2보다는 작은 수일 것이라 생각할 수 있습니다. 이 수는 계산하기 어려우므로 우리는 이 식을 만족하는 수를 정확하게 찾는 것이 아닌 \\log_2 3이라고 부르기로 합니다. 일반화하여 밑에 a인 수에 대하여 a^x=b를 만족할 때, x=log_a b라고 합니다. 로그는 쉽게 생각하여 밑이 a인 지수에 대해 원하는 수를 나오게 하는 역할을 수행합니다. 따라서 로그는 지수의 역연산이며, 지수법칙으로 부터 다양한 성질을 유도할 수 있습니다. 이제 로그의 중요성을 이해하기 위해서는 로그의 기본적인 성질을 알아야 합니다.\n로그는 곱셈을 덧셈으로 변환한다.\n로그의 기본적인 성질 중 하나는 로그는 곱셈을 덧셈으로 변환한다는 것입니다. 이 성질은 로그의 정의에서부터 유도할 수 있습니다. 로그 함수 \\log_a(x)는 밑이 a이고, 진수가 x인 로그 함수를 의미합니다. 이는 다음과 같은 식으로 표현할 수 있습니다.\na^{\\log_a(x)} = x\n이제 이 식에 x=xy를 대입하면 다음과 같습니다.\na^{\\log_a(xy)} = xy\na를 밑으로 하는 지수법칙을 이용해 같은 밑의 지수끼리 곱하면 지수가 더해지기 때문에 이렇게 다시쓸 수 있습니다.\na^{\\log_a(x)} \\cdot a^{\\log_a(y)} = xy\n따라서,\na^{\\log_a(x) + \\log_a(y)} = xy\n이므로, 우리는 다음과 같이 결론지을 수 있습니다.\n\\log_a(xy) = \\log_a(x) + \\log_a(y)\n이렇게 로그는 곱셈을 덧셈으로 변환하는 성질이 가집니다.\n그런데 왜 덧셈이 곱셈보다 간단하다고 할까요? 덧셈이 곱셈보다 간단하다고 주장하는 이유는 계산의 복잡성과 연관이 있습니다. 이는 계산을 수행하는 데 필요한 단계의 수를 고려할 때 특히 명확해집니다. 우선, 덧셈을 생각해보겠습니다. 덧셈은 매우 직관적인 연산입니다. 예를 들어, 7과 3을 더하려면 우리는 단순히 두 숫자를 함께 더하면 됩니다. 이는 한 단계의 연산만이 필요하죠. 반면에, 곱셈은 좀 더 복잡한 연산입니다. 7과 3을 곱하려면, 우리는 7을 세 번 더하는 연산을 해야합니다. 이는 세 단계의 연산이 필요하므로 덧셈보다 복잡합니다. 물론, 우리는 구구단을 암기함으로써 이 복잡성을 줄일 수 있지만, 이것은 사실상 우리가 미리 계산을 수행하고 그 결과를 기억하는 것에 불과합니다.\n더 큰 숫자에 대해 생각해봅시다. 예를 들어, 70000과 30000을 더하는 것은 여전히 한 단계의 연산이 필요합니다. 하지만 70000과 30000을 곱하는 것은 7과 3을 곱하는 과정과 자리수를 곱하는 과정 그리고 그 수를 같이 적는 과정이 필요하므로 훨씬 더 많은 단계의 연산을 필요로 합니다. 따라서, 로그가 곱셈을 덧셈으로 바꿔주는 성질은 계산의 효율성을 크게 높여주는 역할을 합니다.\n로그는 지수를 계수로 변환한다.\n로그의 또 다른 중요한 성질은 지수를 계수로 변환하는 능력입니다. 이는 \\log_a(x^n) = n \\cdot \\log_a(x)라는 공식을 통해 나타납니다. 이 공식은 로그의 정의와 속성에서 직접 유도할 수 있습니다.\nx^n을 x를 n번 곱한 것으로 표현해보겠습니다.\nx^n = x \\times x \\times \\cdots \\times x\n이것을 로그로 변환하면 다음과 같이 됩니다.\n\\log_a(x^n) = \\log_a(x \\times x \\times \\cdots \\times x)\n그런데 로그의 성질에 따르면, 로그 안의 곱셈은 덧셈으로 바뀌므로\n\\log_a(x^n) = \\log_a(x) + \\log_a(x) + \\cdots + \\log_a(x)\n즉,\n\\log_a(x^n) = n \\cdot \\log_a(x)\n가 성립함을 알 수 있습니다.\nn이 실수로 확장되어도 지수 함수와 로그 함수의 연속성과 중간값 정리를 이용하면 log_a(x^n) = n \\cdot log_a(x)라는 성질이 잘 작동합니다.\n이 성질은 지수함수를 선형함수로 바꿀 있다는 장점이 있습니다. 실생활에서 다루는 정보들은 지수적 변화 즉, 자신의 현재 상태에 비례한 경우가 많은데 이를 간단한 일차함수꼴로 바꿔버릴 수 있는거죠. 따라서 이러한 정보를 로그 변환하면 선형적인 관계 더 쉽게 파악하고 분석할 수 있습니다.\n로그의 활용\n로그는 단순히 수학시간에 배우는 개념이 아니라 실생활의 다양한 과학적 분야에서 활용되고 있습니다. 예를 들어 지진의 리히터 규모, 소리의 데시벨, 별의 밝기 등급, pH척도 등이 있죠.\n리히터 규모\n리히터 규모는 1935년에 찰스 F. 리히터에 의해 개발되었으며, 지진의 에너지를 측정하는 척도입니다. 이 척도는 로그를 기반으로 하며, 각 단위가 10배 차이가 납니다. 즉, 리히터 규모 5의 지진은 리히터 규모 4의 지진보다 10배, 리히터 규모 3의 지진보다는 100배의 에너지를 가지고 있습니다. 이러한 척도는 지진의 에너지 차이가 굉장히 크기 때문에, 그 차이를 효과적으로 표현하기 위해 사용됩니다.\nM_L = \\log_{10}\\left(\\frac{A}{T}\\right) + c\nM_L은 리히터 규모, A 는 지진의 최대 진폭(amplitude), T는 관측 시간, c는 보정 상수\n데시벨\n데시벨(db)는 소리의 강도를 측정하는 척도입니다. 데시벨 척도는 로그를 기반으로 하며, 사람의 귀가 소리를 인지하는 방식을 반영하고 있습니다. 사람의 귀는 소리의 크기를 로그로 인지하기 때문에, 로그 척도를 사용하면 사람이 느끼는 소리의 크기를 정확하게 표현할 수 있습니다. 예를 들어, 20db의 소리는 10db의 소리보다 10배 강하며, 30db의 소리는 10db의 소리보다 100배 강한 것입니다.\nL = 10 \\cdot \\log_{10}\\left(\\frac{P}{P_0}\\right)\nL은 데시벨, P는 소리의 압력, P_0는 기준 압력\n별의 밝기 등급\n별의 밝기 등급은 별의 밝기를 측정하는 척도입니다. 이는 로그를 기반으로 하며, 밝기 등급이 1 차이나면 밝기가 약 2.5배 차이납니다. 즉, 밝기 등급이 5 차이나면 밝기가 약 100배 차이납니다. 이러한 척도는 별의 밝기 차이가 엄청나게 크기 때문에, 그 차이를 효과적으로 표현하기 위해 사용됩니다.\nm = -2.5 \\cdot \\log_{10}\\left(\\frac{F}{F_0}\\right)\nm은 별의 밝기등급, F는 별의 빛의 흐름(flux), F_0는 기준 흐름\npH 척도\npH 척도는 용액의 산성 또는 알칼성을 측정하는 척도입니다. 이는 로그를 기반으로 하며, pH 값이 1 차이나면 수소 이온 농도가 10배 차이납니다. 즉, pH 6의 용액은 pH 7의 용액보다 10배 더 산성이고, pH 5의 용액은 pH 7의 용액보다 100배 더 산성입니다. 이러한 척도는 미세한 농도 변화가 큰 차이를 만들기 때문에, 그 차이를 효과적으로 표현하기 위해 사용됩니다.\n\\text{pH} = -\\log_{10}[H^+]\n\n[H^+]는 수소 이온 농도\n\n왜 모두 상용로그를 사용할까?\n그렇다면 왜 리히터 규모, 데시벨, 별의 밝기 등급, pH 척도에서 상용로그를 사용할까요? 우선 로그를 사용하는 이유는 로그가 ‘비례적인 관계’를 ‘선형적인 관계’로 변환하기 때문입니다. 만약 로그를 사용하지 않고 원래의 에너지 값을 그대로 사용한다면, 그 차이가 너무 크거나 작아서 차이를 제대로 이해하기 어렵죠. 그리고 밑을 10으로 사용하는 이유는 우리가 일반적으로 10진법을 사용하므로 에너지의 차이를 직관적으로 이해하고 비교할 수 있기 때문입니다.\n로그의 발전\n로그의 밑\n우리는 학교에서 로그를 처음배울 때 밑이 10인 상용로그를 우선 배우고 심화 미적분에 가서야 밑을 자연상수 e로 배웁니다. 하지만 네이피어가 처음 도입한 로그는 자연로그에 더 가까웠다는 사실을 아시나요?\n네이피어는 이때 로그의 밑을 1\\over10^7로 설정하죠. 왜냐하면 네이피어는 로그를 ‘지수의 역함수’로 정의하지 않았습니다. 대신 그는 로그를 두 점 사이의 거리로 정의했는데, 이 두 점은 원의 경로를 따라 움직입니다. 이때 이 원의 반지름이 10^7이었고, 이것이 로그의 밑이 된 이유입니다. 이러한 방식으로, 네이피어의 로그는 지수 함수와는 다르게, 각도와 관련된 삼각함수와 연결되어있습니다. 결국 네이피어는 1614년에 0^\\circ에서 90^\\circ까지의 사인값에 대한 로그표를 제시합니다.\n네이피어의 로그를 현대식으로 재해석하면 다음과 같이 정의됩니다.\nNapLog(θ) = -10^7 \\ln(\\sin(θ))\nNapLog(x) = -10^7 \\ln({x \\over 10^7})\n이는 네이피어가 로그를 처음 개발했을 때 사용한 방식이며, 이 방식은 현대의 로그와는 약간 다릅니다. 네이피어 로그는 기본적으로 소수점을 7자리 오른쪽으로 이동시키고 부호를 반전시킨 자연 로그와 가깝죠.\nNapLog(5000000) = 6931472\nNapLog(3333333) = 10986124\n\\ln(0.5000000) = -0.6931471806\n\\ln(0.3333333) = -1.0986123887\n네이피어가 처음 사용한 로그는 복잡한 계산을 단순화하는 데는 매우 유용했지만, 바로 적용하기에는 그 계산 자체가 복잡하고 이해하기 어렵다는 단점이 있었습니다.\n그래서 영국의 수학자 헨리 브리그스는 로그 밑을 10으로 바꾸는 개념을 제안하였습니다. 우리가 지금 알고 있는 ‘상용 로그’의 시작이죠. 이는 당시의 사람들이 일상적으로 사용하던 10진법에 기반한 수치 시스템과 더 잘 어울렸습니다. 브리그스는 이 상용로그의 개발을 위해 엄청난 노력을 기울였습니다. 그는 로그의 값들을 정확하게 계산하기 위해 30,000개 이상의 자연수에 대한 로그의 값을 손으로 계산하여 표로 남기게되죠. 이것이 오늘날 우리가 사용하고 있는 상용로그표입니다. 그렇다면 이런 노력은 왜 필요한걸까요?\n로그의 계산\n예를 들어, 123과 789의 곱을 계산하고 싶다고 가정해보겠습니다. 바로 곱하는 것은 연산이 복잡하므로 이 식 전체를 로그에 넣어보겠습니다.\n\\log(123 \\times 789) = \\log(123) +\\log(789)\n로그는 곱셈을 덧셈으로 바꾸므로 다음과 같이 식을 쓸 수 있습니다. 이렇게 곱셈을 덧셈으로 바꾼 후 두 수에 대한 로그 값을 찾습니다. 상용로그표를 참조하면, \\log(123)은 대략 2.0899\\cdots이고, \\log(789)은 대략 2.8971\\cdots입니다. 이제 두 값을 더하면 2.0899\\cdots + 2.8971\\cdots \\approx 4.9870\\cdots입니다. 이제 반대로 어떤 값을 로그에 넣으면 4.9870\\cdots가 나오는지 보겠습니다. \\log 10^4 =4이고, \\log_{10}(9.7051) \\approx 0.9870\\cdots이므로\n\\log (123 \\times 789) \\approx \\log 10^4 + \\log (9.7051)\n다음 처럼 바꿔쓸 수 있습니다. 우변의 덧셈을 다시 곱셈으로 합치면\n\\log (123 \\times 789) \\approx \\log (9.7051 \\times 10^4)\n123 \\times 789 \\approx 97051 이라고 할 수 있습니다. 123 \\times 789 = 97047이므로 소수점 아래 넷째 자리까지 이용해 대략적으로 계산해도 꽤 정확히 값을 예측해내죠.\n로그의 의의\n오늘날에는 이러한 연산은 컴퓨터를 사용하면 정확하고 빠르게 처리할 수 있음에도 로그가 세상을 바꾼 17가지 방정식 중 하나로 꼽히는 이유는 로그의 강력한 계산 간소화 능력과 함께, 로그표를 통해 미리 계산된 결과를 활용하는 아이디어 때문입니다. 곱셈을 덧셈의 반복작업이 아니라 구구단을 외우는 것과 마찬가지로 말이죠. 몇몇 수학자들이 자신의 일생에 걸쳐 미리 계산해놓은 결과를 이용해 모두가 계산을 편하게 할 수 있게 되었고, 이로 인해 수학 뿐만 아니라 항해, 천문학, 공학 등 여러 분야에서 발전할 수 있게 되었다는 것이 로그가 세상을 바꾼 이유가 아닐까 생각합니다."},"Ray-math/Script/만유인력의-법칙":{"slug":"Ray-math/Script/만유인력의-법칙","filePath":"Ray math/Script/만유인력의 법칙.md","title":"세상을 바꾼 방정식 4 - 만유인력의 법칙","links":[],"tags":["물체","중력","궤도","행성","힘","지구","뉴턴","질량","거리","제곱","비례","작용","중심","사이","타원","주기"],"content":"케플러의 세번째 법칙\n\\begin{array}{|c|c|c|}  \n\\hline\n\\text{구분} &amp; A &amp; B \\\\ \\hline\n1 &amp; 6.655 \\times 10^{10} &amp; 87.6 \\\\ \\hline\n2 &amp; 1.089 \\times 10^{11} &amp; 226.3 \\\\ \\hline\n3 &amp; 1.496 \\times 10^{11} &amp; 365.25 \\\\ \\hline\n4 &amp; 2.279 \\times 10^{11} &amp; 687.0 \\\\ \\hline\n5 &amp; 7.784 \\times 10^{11} &amp; 4332.59 \\\\ \\hline\n6 &amp; 1.419 \\times 10^{12} &amp; 10759.22 \\\\ \\hline\n\\end{array}\n여러분은 이 데이터들만 보고 숫자들 사이의 관계를 찾을 수 있나요? 사실 숫자들만 보고 규칙을 찾는 것은 거의 불가능에 가깝습니다. 이 숫자들은 인터넷에서 흔히 보는 그런 간단한 수열 문제가 아니죠. 그래서 힌트를 하나 드리겠습니다. 이 표는 태양계의 행성의 궤도 반경과 공전 주기를 나타낸 표입니다.\n\\begin{array}{|c|c|c|}\n\\hline\n\\text{행성} &amp; \\text{궤도 반경 (m)} &amp; \\text{공전 주기 (일)} \\\\ \\hline\n\\text{수성} &amp; 6.655 \\times 10^{10} &amp; 87.6 \\\\ \\hline\n\\text{금성} &amp; 1.089 \\times 10^{11} &amp; 226.3 \\\\ \\hline\n\\text{지구} &amp; 1.496 \\times 10^{11} &amp; 365.25 \\\\ \\hline\n\\text{화성} &amp; 2.279 \\times 10^{11} &amp; 687.0 \\\\ \\hline\n\\text{목성} &amp; 7.784 \\times 10^{11} &amp; 4332.59 \\\\ \\hline\n\\text{토성} &amp; 1.419 \\times 10^{12} &amp; 10759.22 \\\\ \\hline\n\\end{array}\n그렇다면 이제 규칙을 찾을 수 있나요? 숫자가 너무 크기에 규칙이 보이지 않을 수 있습니다. 그래서 지구를 기준으로 이 값들을 정리해보겠습니다. 흔히 지구와 태양 사이의 평균 거리를 Astronomical Unit (AU)나타냅니다. 1 AU는 약 1억 4960만km죠.\n\\begin{array}{|c|c|c|}\n\\hline\n\\text{행성} &amp; \\text{궤도 반경 (AU)} &amp; \\text{공전 주기 (년)} \\\\ \\hline\n\\text{수성} &amp; 0.39 &amp; 0.24 \\\\ \\hline\n\\text{금성} &amp; 0.72 &amp; 0.62 \\\\ \\hline\n\\text{지구} &amp; 1.00 &amp; 1.00 \\\\ \\hline\n\\text{화성} &amp; 1.52 &amp; 1.88 \\\\ \\hline\n\\text{목성} &amp; 5.20 &amp; 11.86 \\\\ \\hline\n\\text{토성} &amp; 9.58 &amp; 29.46 \\\\ \\hline\n\\end{array}\n이렇게 바꾸어 놓고 보면 이제 규칙이 보이시나요? 궤도 반경이 증가할 수록 공전 주기가 증가하는 것 정도는 알 수 있습니다. 두 값이 비례 한다는 것은 알겠는데 그렇다고 무작정 나누어 비율을 비교한다고 해도 규칙성이 있는 것 같지 않습니다. 천문학과 같은 큰 값들을 다루고 비율 사이의 관계를 잘 나타내기 위해서는 어떤 방법을 쓰는 것이 좋을까요?\n\\begin{array}{|c|c|c|c|}\n\\hline\n\\text{행성} &amp; \\text{궤도 반경 (AU)} &amp; \\text{공전 주기 (년)} &amp; \\text{궤도 반경} \\div\\text{공전 주기} \\\\\n\\hline\n\\text{수성} &amp; 0.39 &amp; 0.24 &amp; 1.625 \\\\\n\\hline\n\\text{금성} &amp; 0.72 &amp; 0.62 &amp; 1.161 \\\\\n\\hline\n\\text{지구} &amp; 1.00 &amp; 1.00 &amp; 1.000 \\\\\n\\hline\n\\text{화성} &amp; 1.52 &amp; 1.88 &amp; 0.809 \\\\\n\\hline\n\\text{목성} &amp; 5.20 &amp; 11.86 &amp; 0.438 \\\\\n\\hline\n\\text{토성} &amp; 9.58 &amp; 29.46 &amp; 0.325 \\\\\n\\hline\n\\end{array}\n바로 로그(logarithm) 입니다. 로그는 복잡한 수학적 관계를 단순화하고, 큰 숫자를 다루기 쉽게 만들어 줍니다. 궤도 반경과 공전 주기에 모두 로그를 취한 뒤 값을 나누어보면 일정한 비율이 반복된다는 사실을 발견할 수 있습니다. 약 0.\\dot6 바로 2\\over3 이죠.\n두 번째 표는 행성의 궤도 반경과 공전 주기의 로그 값, 그리고 두 값의 비율을 나타냅니다.\n\\begin{array}{|c|c|c|c|}\n\\hline\n\\text{행성} &amp; \\text{궤도 반경의 로그 (AU)} &amp; \\text{공전 주기의 로그 (년)} &amp; \\text{비율 (거리/주기)} \\\\\n\\hline\n\\text{수성} &amp; -0.4089 &amp; -0.6198 &amp; 0.6598 \\\\\n\\hline\n\\text{금성} &amp; -0.1427 &amp; -0.2076 &amp; 0.6872 \\\\\n\\hline\n\\text{지구} &amp; 0.0000 &amp; 0.0000 &amp; \\text{- (정의되지 않음)} \\\\\n\\hline\n\\text{화성} &amp; 0.1818 &amp; 0.2742 &amp; 0.6633 \\\\\n\\hline\n\\text{목성} &amp; 0.7160 &amp; 1.0741 &amp; 0.6666 \\\\\n\\hline\n\\text{토성} &amp; 0.9814 &amp; 1.4692 &amp; 0.6679 \\\\\n\\hline\n\\end{array}\n다른 말로 바꾸어 말해 R을 타원 궤도의 장반경, T 는 행성의 궤도 주기라 할때, 2 \\log T=3 \\log R입니다. 로그의 성질을 이용하여 계수를 지수로 바꾸어 원래 수식으로 돌아가면\nT^2 \\propto R^3\n행성의 공전주기의 제곱은 태양으로부터 행성까지의 평균거리 즉 궤도 반경의 세제곱과 비례한다것을 알 수 있습니다. 케플러는 스승인 티코 브라헤의 천체 관측 데이터를 기반으로 행성의 궤도가 원형이 아닌 타원형임을 깨닫고 여러 행성의 공전 주기와 궤도 반경 데이터를 분석한 결과 케플러의 제 3법칙을 도출해냈습니다. 그러나 케플러 자신은 이 법칙의 원리나 이유를 수학적으로 증명하지는 못했습니다. 케플러의 법칙들이 수학적으로 증명되기 시작한 것은 약 50년 후, 뉴턴이 ‘프린키피아’에서 중력의 법칙을 소개하면서 부터죠.\n갈릴레오의 자유낙하실험\n중력의 법칙을 소개하기에 앞서 중력이 어떻게 작용하는지 알고 갈 필요가 있습니다. 갈릴레오의 자유낙하 실험을 보죠. 아리스토텔레스는 무거운 물체가 가벼운 물체보다 빠르게 떨어진다고 주장하였습니다. 갈릴레오는 이 주장에 의문을 가지게 되었고, 이를 검증하기 위한 사고실험을 시작하게 되었습니다.\n두 개의 다른 무게의 공 A와 B가 있다고 해보겠습니다. A는 B보다 무겁다고 가정해보죠. A와 B를 따로 떨어뜨릴 경우 아리스토텔레스의 주장대로라면 A는 B보다 빠르게 떨어져야 합니다. 이제 이 두 공을 하나의 줄로 연결해보면 A와 B는 하나의 물체로 간주됩니다. 연결된 물체는 A의 무게와 B의 무게를 합하였으므로 각각 보다 무겁습니다. 따라서 아리스토텔레스의 주장대로라면 이 연결된 물체는 A나 B를 각각을 따로 떨어뜨렸을 때보다 더 빠르게 떨어져야 합니다. 하지만 여기서 모순이 발생합니다. A는 B보다 빠르게 떨어져야 하므로 A와 B가 연결되었을 때는 B 때문에 A의 낙하 속도가 느려져야 합니다. 예를 들어 중력이 아니라 달리기라 생각해보겠습니다. A가 B보다 빨리 달릴때, A가 B를 끌면서 더 빠른 속도로 앞으로 나아갈 수 있을까요? 불가능합니다. 따라서 모순이 발생하기에 초기 가정이 틀렸다는 사실로 부터 두 물체 중 어느 하나가 빠르게 떨어질 수는 없다는 것을 알 수 있습니다. 무게와 낙하 속도 사이에는 관계가 없다. 즉, 무거운 물체와 가벼운 물체는 동일한 가속도로 자유낙하한다는 것입니다.\n갈릴레오의 발견은 뉴턴에게 중요한 영감을 주었습니다. 모든 물체가 동일한 가속도로 낙하한다는 것은 중력이 모든 물체에 동일하게 작용한다는 것을 의미하는 것이죠. 뉴턴은 중력이 단순히 지구와 그 주변 물체 사이에만 작용하는 것이 아니라, 우주 전체의 모든 물체 사이에도 작용한다는 아이디어에 도달했습니다. 단순히 물체의 낙하 속도에 대한 이론이 아니라, 중력이라는 보이지 않는 힘에 대한 근본적인 이해로 이어져\u001d우주의 동작 원리를 풀어내는 열쇠를 제공한거죠.\n만유인력의 법칙\n만유인력의 법칙은 질량을 가진 물체 사이의 중력 끌림을 기술하는 물리학 법칙입니다. 이 법칙에 따르면, 모든 점질량은 두 점을 가로지르는 선을 따라 다른 모든 점질량을 힘으로 끌어 당깁니다. 이 힘은 두 상호작용하는 점질량 사이의 질량의 곱에 비례하며, 두 점질량 사이의 거리에는 제곱에 반비례합니다.\nF = \\frac{G \\times m_1 \\times m_2}{r^2}\n\nF : 두 점질량 간의 중력의 크기\nG : 중력 상수\nm_1 : 첫 번째 점질량의 질량\nm_2 : 두 번째 점질량의 질량\nr : 두 점질량의 거리\n\n뉴턴은 이 공식을 어떻게 발견하게 되었을까요?\n왜 질량에 비례하는가?\n우리는 일상에서 중력의 영향을 늘 느끼고 있습니다. 하지만 그 영향이 어떻게 작용하는지, 그리고 그것이 왜 그렇게 작용하는지에 대해서는 잘 모르는 경우가 많습니다. 여러분이 친구와 함께 있을 때, 서로가 서로를 끌어당기는 힘을 느낄 수 있을까요? 아마 대부분의 사람들은 그렇지 않다고 답할 것입니다. 왜냐하면 지구의 질량이 우리와 비교할 수 없을 정도로 매우 크기 때문에 그렇습니다. 우리의 질량은 무시하고 먼저, 지구의 중력만 생각해보겠습니다. 우리가 뛸 때나 높은 곳에서 물체를 떨어뜨릴 때, 그 물체는 항상 지구 쪽으로 떨어집니다. 이 떨어지는 힘을 F라 하고 뉴턴의 제 2법칙을 바탕으로 중력 가속도를 살펴보면, a=\\frac{F}{m}이 됩니다. 갈릴레오의 실험에서 지구의 중력 가속도 a는 항상 일정하다고 했습니다. 따라서, 질량이 2배 커지면 힘도 2배 커진다는 것을 알 수 있습니다.\nG = 6.67430 \\times 10^{-11} \\, \\text{m}^3/\\text{kg s}^2\n이 때, 중력상수 G는 매우 작은 값입니다. 이 작은 값 때문에 일상에서 중력을 느끼지만 그 작용 원리를 정확히 알기는 어렵습니다. 그러므로 중력의 작용 원리를 보다 정확하게 파악하기 위해서는 비록 멀리 떨어져 있지만 질량이 매우 큰 물체들 다름 아닌 천체를 관찰하는 것이 효과적 입니다.\n왜 거리 제곱에 반비례하는가?\n그렇다면 중력의 크기는 같은 질량만 가진다면 거리에 상관없이 항상 같다고 할 수 있을까요? 비가 내리고 있다고 가정해보겠습니다. 이 빗방울들은 중력에 영향을 받아 지구 중심을 향해 쏟아집니다. 이제 지구를 둘러싼 가상의 구를 상상해보겠습니다. 이러한 구들은 이해하기 쉽게 각각 반지름이 지구 반지름의 2배, 3배라고 하죠. 이 가상의 구에도 중력이 작용한다면 구의 표면에서 빗방울과 같이 중력이 지구의 중심을 향할 것입니다. 그리고 구가 커질 수록, 즉 지구로 부터 멀어질수록 구의 표면 면적이 커지기 때문에 빗방울들 즉 중력 벡터들의 개수는 증가할 것입니다.\n그렇다면, 구가 커질수록 각 중력 벡터의 크기는 어떻게 변할까요? 답은 간단합니다. 구가 커질수록 각 중력 벡터의 크기는 줄어들어야 합니다. 수식으로 보죠. 구의 반지름이 두 배가 된다면, 표면적은 기존 4\\pi r^2에서 4\\pi (2r)^2 = 16\\pi r^2로 4배, 반지름이 세 배가 된다면, 4 \\pi(3r)^{2}=36\\pi r^2이므로 9배 늘어납니다. 따라서 중력 벡터의 개수도 4배, 9배 많아지죠. 하지만 각 구에 대해 중력의 총량은 동일해야 하므로, 각 중력 벡터의 크기는 \\frac{1}{4}, \\frac{1}{9}로 줄어들어야 합니다. 이렇게 되면 거리가 증가함에 따라 중력은 제곱에 비례해 감소하는 것을 알 수 있습니다. 이것이 흔히 역제곱의 법칙이라 불리는 원리입니다. 이러한 역제곱의 법칙은 만유인력의 법칙 뿐만 아니라 3차원 상의 균일한 공간을 퍼져나가는 현상을 설명하는 곳에 다양하게 적용할 수 있습니다.\n쿨롱의 법칙(전기력)\nF = k \\frac{{q_1 \\times q_2}}{{r^2}}\n\nF 전기력\nk 쿨롱 상수\nq_1,~ q_2 전하의 크기\nr 전하 사이의 거리\n\n광선의 강도\nI = \\frac{{P}}{{4\\pi r^2}}\n\nI 광선의 강도\nP 광원의 전체 출력\nr 광원으로부터의 거리\n\n역제곱의 법칙1\n사실 역제곱의 법칙은 뉴턴 이전부터 알려져 있던 개념이었습니다. 물리학자 로버트 훅은 1666년에 “On gravity”라는 강의를 통해 역제곱의 법칙을 소개했죠.2 그래서 훅은 뉴턴이 자신의 아이디어를 훔쳤다고 주장했습니다. 훅은 뉴턴에게 역제곱의 법칙과 행성의 운동에 대한 아이디어를 제안했고, 뉴턴은 이 제안이 행성 운동에 대한 연구를 촉발 했다고 인정했죠.3 그러나 훅은 이론적인 부분에만 머물렀고, 그 이론을 증명하지도 천문학적 현상에 적용하는데도 실패했습니다. 반면에 뉴턴은 이 아이디어를 증명하기 위해 미적분이라는 완전히 새로운 수학을 개발했고, “프린키피아”에서 중력을 이용해 케플러의 법칙을 증명하고, 일반적인 운동이론까지 정립해내죠.4\n\n케플러의 첫 번째 법칙 (타원 궤도의 법칙)\n모든 행성은 태양을 한 개의 초점으로 하는 타원 궤도를 따라 움직인다.\n케플러의 두 번째 법칙 (등면적의 법칙)\n행성이 태양 주위를 돌 때, 태양과 행성을 잇는 선분이 같은 시간 동안 같은 면적을 덮는다. 즉, 행성이 태양에 가까워질 때 빠르게, 멀어질 때 느리게 움직인다는 것을 의미한다.\n케플러의 세 번째 법칙 (조화의 법칙)\n행성의 궤도 주기의 제곱은 그 궤도의 장반경의 세제곱에 비례한다.  T^2 \\propto a^3\n\n프린키피아를 보겠습니다. 프린키피아의 명제 11, 12, 13번은 각각 타원, 쌍곡선, 포물선 궤도를 도는 물체에서 구심렴이 초점을 향해 작용할때, 구심력이 만족하는 비례식을 구하는 문제입니다. 그 풀이는 비례식과 미적분의 아이디어를 이용해 모두 구심력은 거리의 제곱에 반비례함을 증명합니다. 그리고 이를 이용해 4장에서는 초점이 주어진 타원, 포물선, 쌍곡선의 궤도를 계산하는 방법을 소개하고, 5장에서는 초점이 주어지지 않았더라도 5개의 점을 지나는 원뿔 곡선을 작도하는 방법을 설명합니다.\n나아가 6장에서는 주어진 궤적을 따라가는 물체의 운동을 설명합니다. 행성이 주어진 궤도를 따라갈때, 임의의 시간이나 특정 시간에서의 위치를 찾는 방법을 제시한거죠. 여기서 중요한 것은 구심력이 거리의 제곱에 반비례한다는 사실을 증명함에 있어, 역제곱의 법칙에 따라 힘이 작용하면 물체는 이차곡선을 따라 움직인다는 아이디어입니다.\n\n\nProp. X. Prob. V.\nGyretur corpus in Ellipsi: requiritur lex vis centripetæ tendentis ad centrum Ellipseos \\cdots Est ergo (per Corol. Theor. V.) vis centripeta reciproce ut 2BCq.×CAq. P C , id est (ob datum 2BCq. × CAq.) ut 1 P C , hoc est, directe ut distantia P C. Q. E. I.\n\n물체가 타원에서 움직인다고 가정하면, 타원의 중심을 향한 구심력의 법칙을 찾아야 합니다.  \\cdots  따라서 (Theorem V의 Corollary에 의해), 구심력은 2BC^2 \\times CA^2 / PC에 반비례하며, 이는 1/PC에 반비례하므로, 거리 PC에 비례합니다. Q.E.I.\n\n이는 명제 10과 그 부가설명을 보면 나와 있습니다. 물체의 궤도 형태는 그 물체의 에너지에 의존합니다. 물체가 타원 궤도를 따른다는 것은 물체가 중력장 내에서 어느 정도로 묶여있다는 것을 의미하죠. 원이나 타원에서의 구심력은 중심을 향해 일정하게 작용합니다. 만약 물체가 중심으로 부터 멀어지면 중심을 향한 힘이 한 없이 작아지면서 물체는 포물선 궤도를 따라가게 된다는 거죠.\n\n\nScholium.\nSi Ellipsis, centro in infinitum abeunte, vertatur in Parabolam, corpus move\u0002bitur in hac Parabola, &amp; vis ad centrum infinite distans jam tendens, evadet æquabilis. Hoc est Theorema Galilei. Et si Conisectio Parabolica, inclinatione plani ad conum sectum mutata, vertatur in Hyperbolam, movebitur corpus in hujus perimetro, vi centripeta in centrifugam versa.\n\n타원의 중심이 무한대로 멀어지면, 그 타원은 포물선이 됩니다. 물체는 이 포물선에서 움직이며, 중심으로부터의 힘이 무한대로 멀어지면 일정해집니다. 이것은 갈릴레오의 이론입니다. 포물선이 쌍곡선으로 변하면, 물체는 쌍곡선 주변에서 움직입니다. 중심으로부터 물체를 끌어당기는 힘이, 물체를 밀어내는 힘으로 바뀝니다.\n\n이어 11장 서로 잡아당기는 물체의 이동에 명제 58의 부가 정리 1번을 통해 인력이 작용하는 두 물체가 서로의 무게중심을 공통으로하는 힘에 끌리게 되면서 타원 궤도를 따라 움직임을 밝힙니다.\n\n\nCorol. 1.\nHinc corpora duo viribus distantiæ suæ proportionalibus se mu\u0002tuo trahentia, describunt (per Prop. X.) &amp; circum commune gravitatis cen\u0002trum, &amp; circum se mutuo, Ellipses concentricas: &amp; vice versa, si tales figuræ describuntur, sunt vires distantiæ proportionales. Corol. 2. Et corpora duo viribus quadrato dist\n\n따라서 두 물체가 서로를 향한 힘이 그들 사이의 거리에 비례한다면 (명제 10에 따라), 그 물체들은 공통의 중력 중심을 중심으로 하거나 서로를 중심으로 동심원의 타원을 따라 움직일 것입니다. 그리고 반대로, 만약 이러한 형태의 궤도를 따른다면, 그 힘은 거리에 비례하게 됩니다.\n\n뉴턴보다 43년 전 먼저 발표된 프린키피아\n데카르트는 1644년에 발표한 ‘Principia Philosophiae’에서 볼텍스(vortex) 이론을 제시했습니다. 데카르트 뿐만 아니라 그 당시 사람들은 물리적 현상은 반드시 ‘접촉’을 통해서만 전달되어야 한다고 믿었습니다. 그래서 우주는 에테르(aether) 라는 물리적으로 측정할 수 없는, 가상의 물질로 채워져 있다고 생각한거죠. 왜냐하면 천체가 공전이나 자전으로 움직이면서 에테르라는 물질에 볼텍스 즉, 난류의 회전을 일으키면 그 주변의 행성들은 그 난류에 휩싸여 움직이고 있다고 생각했기 때문이죠. 볼텍스 이론은 복잡한 천체 운동을 단순한 회전 운동으로 설명했고, 천체가 하나의 큰 회전체의 일부로 움직인다는 것은 신의 창조를 설명하는 하나의 방법으로 볼 수 있어 당시의 사람들에게 쉽게 받아들여졌습니다.\n하지만 볼텍스 이론은 수학적으로 정확한 모델을 제공하지 못했습니다. 단적으로 에테르가 힘을 전달하는 매개체로서 점성을 갖고 있다면 유체의 저항 때문에 에너지가 지속적으로 소멸해야 합니다. 언젠가는 멈춰야하죠. 그렇다면 먼 거리에서 이러한 유체의 소용돌이를 가로질러 오는 혜성의 존재를 설명할 수 없습니다. 또 볼텍스 이론은 실험적으로 검증되지 못했습니다. 만약 세숫대야 가운데에 원통을 넣고 돌린다고 해보겠습니다. 그렇다면 원통의 회전에 의해 그 주변의 물이 회전하고 물의 점성에 의해 그 주변으로 회전이 퍼져나갈 것입니다. 이 때 이 전달은 선형적으로 전달됩니다. 중심에서 멀어질 수록 느려지는 것이죠. 이는 케플러의 법칙과 언뜻보면 비슷해보입니다. 하지만 케플러의 법칙에서는 행성의 속도가 태양과의 거리에 따라 제곱근의 역비례로 변하는 반면 유체에서는 선형적으로 감소하기에 수학적으로 일치하지 않습니다.\n반면 뉴턴은 중력을 이용해 천체 운동을 설명했습니다. 뉴턴은 중력이 원격으로 작용한다고 주장했고, 이는 데카르트의 ‘접촉해야 한다’는 주장을 정면으로 반박했습니다. 그 의미로 책 이름도 같은 이름인 프린키피아로 지었죠. 이 보편적인 중력 법칙이 천상과 지상, 심지어 왕과 귀족까지도 동일하게 적용된다고 주장했습니다. 이는 당시 사회 구조와도 깊은 연관이 있으며, 뉴턴은 이를 ‘보편 타당한 법칙’이라고 명명했습니다. 프린키피아의 제 3권의 가설들을 보겠습니다.5\n\nHYPOTHESES.\nHypoth. I. Causas rerum naturalium non plures admitti debere, qu’am quæ &amp; vera sint &amp; earum Phænomenis explicandis sufficiunt. Natura enim simplex est &amp; rerum causis superfluis non luxuriat.\nHypoth. II. Ideoque effectuum naturalium ejusdem generis eædem sunt causæ. Uti respirationis in Homine &amp; in Bestia; descensus lapidum in Europa &amp; in America; Lucis in Igne culinari &amp; in Sole; reflexionis lucis in Terra &amp; in Planetis.\nHypoth. III. Corpus omne in alterius cujuscunque generis corpus transfor\u0002mari posse, &amp; qualitatum gradus omnes intermedios sucessiv’e induere.\nHypoth. I. 자연 현상을 설명하는 원인은 참이면서 현상을 설명하기에 충분한 것만을 받아들여야 한다. 자연은 단순하며 불필요한 원인으로 화려하게 표현되지 않는다.\nHypoth. II. 따라서 같은 종류의 자연 현상의 원인은 동일하다. 인간과 동물의 호흡, 유럽과 아메리카의 돌의 하강, 주방 불과 태양에서의 빛, 지구와 행성에서의 빛의 반사에서도 똑같이 적용된다.\nHypoth. III. 도달할 수 있는 실험의 범위 내에서 모든 물체에 속하는 특성 중에서도, 그 정도가 증가하거나 감소할 수 없는 특성은, 모든 물체가 가지는 보편적인 특성으로 여겨져야 한다.\n\n첫번째 가설은 ‘오컴의 면도날’ 원칙을 따르고 있는 것처럼 보입니다. 불필요한 복잡성을 피하고, 가장 간단하면서도 설명력 있는 원인만을 고려해야 한다는 것이죠. 두번째 가설을 통해 일관성과 보편성의 원칙을 강조합니다. 세번째 가설은 물체의 특성이 실험을 통해서만 알 수 있으며, 실험을 통해 발견된 보편적인 특성은 모든 물체에 적용될 것이라는 뉴턴의 생각을 반영합니다. 다시 말해, 만약 어떤 특성이 실험을 통해 모든 물체에 공통적으로 발견되고, 그 특성의 정도가 증가하거나 감소할 수 없다면, 그 특성은 모든 물체에 보편적으로 존재한다고 볼 수 있습니다. 이어서 3권의 명제 4번을 보죠.\n\nfactis pendulorum experimentis &amp; computo inde inito, demonstravit: &amp; propterea vis qua Luna in orbe suo retinetur, illa ipsa est quam nos gravitatem dicere solemus. Nam si gravitas ab ea diversa est, corpora viribus utrisque conjunctis Terram petendo duplo velocius descendent, &amp; spatio minuti unius secundi cadendo describent pedes Parisienses 301/6: omnino contra experientiam.\n따라서 달이 그 궤도에 머무르게 하는 힘은 우리가 일반적으로 중력이라고 부르는 것과 같습니다. 만약 중력이 다르다면, 두 힘을 합친 결과로 물체는 지구를 향해 두 배 빠른 속도로 떨어지고, 1분의 1초 동안 떨어지면서 30 1/6 파리 피트를 이동할 것입니다. 이것은 전혀 경험과 맞지 않습니다.\n\n뉴턴은 호이겐스의 진자 실험을 인용하여 중력의 힘을 측정하고, 그 결과를 달의 궤도 운동과 비교합니다. 만약 달의 궤도를 유지하는 힘이 중력이 아니라면, 지구에서의 물체의 떨어지는 속도도 달라져야 한다는 점을 지적하며 중력이 모든 곳에서 보편적으로 적용되는 원칙임을 강조합니다. 이는 이전에 가설들과 같이 비교해보면 뉴턴이 중력을 어떻게 바라보고 있는지 보여줍니다.\n에필로그\n여러분들도 프린키피아를 들어는 보셨지만 직접 보신분들은 많지 않을 것이라 생각합니다. 미분과 만유인력편을 제작하는게 아니었다면 저도 프린키피아를 처음부터 끝까지 정독할 기회가 없었을 것입니다. 프린키피아를 읽으면서 그 페이지들 사이에서 느껴진 감동은 이루 말할 수 없었습니다. 이 책을 통해, 제가 지금까지 배웠던 수학과 물리의 원리들이 어떤 엄청난 철학적 생각에서 비롯된 것임을 깨닫게 되었습니다. 영상 제작을 위해 일부 부분은 빠르게 넘겼지만, 나중에 시간이 허락한다면 자세히 정독하고 프린키피아만을 다룬 특별한 영상을 제작하고 싶은 생각이 듭니다. 이 책은 물리학에 관한 것처럼 보이지만, 실제로는 이름과 같이 자연 철학과 수학이 빚어낸 아름다운 조화입니다. 여러분들도 이 영상을 계기로 조금이나마 이런 경험을 함께 나누시는 시간이 되었다면 좋겠습니다.\nFootnotes\n\n\nPhilosophiæ Naturalis Principia Mathematica. (latin) ↩\n\n\nThomas Birch, The History of the Royal Society of London, … (London, England: 1756), vol. 2, pages 68–73; see especially pages 70–72. ↩\n\n\nOfer Gal, Meanest Foundations and Nobler Superstructures: Hooke, Newton and “the Compounding of the Celestiall Motions of the Planetts” ↩\n\n\nHooke and Newton | The Engines of Our Ingenuity ↩\n\n\nNewton’s Principia : the mathematical principles of natural philosophy (english) ↩\n\n\n"},"Ray-math/Script/모든-것을-알기위한-열쇠,-독립":{"slug":"Ray-math/Script/모든-것을-알기위한-열쇠,-독립","filePath":"Ray math/Script/모든 것을 알기위한 열쇠, 독립.md","title":"모든 것을 알기위한 열쇠, 독립","links":[],"tags":["독립","오류","전체","개수","확률","방법","이용","비율","발견","검사"],"content":"독립이라는 단어는 일상적인 언어에서\n\n다른 것에 예속하거나 의존하지 아니하는 상태로 됨.\n\n이라는 의미로 사용되곤 합니다. 하지만 그 의미 때문에 확률과 통계에서 독립의 개념을 배울 때한 사건이 다른 사건과 아무런 관련이 없음을 의미한다고 착각하기 쉽습니다. 하지만 수학에서 독립은 한 사건의 발생이 다른 사건의 발생 확률에 영향을 미치지 않는 것을 의미합니다. 다시 말해, 어떤 조건에서든지 확률이 일정하게 유지되는 성질을 의미하는 것이지 배반사건\n을 의미하는 것이 아닙니다.\n두 사건 A와 B가 독립이라는 개념을 조건부 확률식을 이용해 나타내면\nP(A \\vert B) = P(A)\n라 할 수 있습니다. A가 일어날 확률은 B가 일어난다고 해도 바뀌지 않는다는 거죠. 따라서 A와 B가 독립이라면 증명하지 않아도 아래 식들 또한 자명해집니다.\n\\begin{align*}\nP(A \\vert B^c) = P(A)\\\\\nP(B \\vert A) = P(B)\\\\\nP(B \\vert A^c) = P(B)\\\\ \n\\end{align*}\n이 개념을 처음 접하는 학생들은 문제에 바로 적용하기에는 어려움이 있어 학교에서는 조건부 확률의 성질을 이용해 필요충분조건인 식을 가르치죠.\n\\begin{align*}\n&amp;P(A|B) = P(A) \\\\\n&amp;\\Leftrightarrow \\frac{P(A \\cap B)}{P(B)} = P(A) \\left( \\because P(A|B) = \\frac{P(A \\cap B)}{P(B)} \\right)\\\\\n&amp;\\Leftrightarrow P(A \\cap B) = P(A) \\cdot P(B) \n\\end{align*}\n그래서 독립이란 교집합을 곱셈으로 구할 수 있다 정도로만 생각하고 끝내기 십상입니다. 하지만 이러한 식은 독립이 갖고 있는 의미를 전혀 반영하지 못합니다. 독립은 하나의 변수가 다른 변수에 미치는 영향을 고려하지 않아도 되므로, 분석을 단순화할 수 있다는 큰 장점이 있습니다. 표본들이 독립이라는 가정 하에, 평균, 분산 등의 통계량을 추정하기 용이하여 모집단에 대한 일반화가 가능하죠.\n독립개념을 확장하기\n우선 독립의 필요충분 조건을 다시 보도록 하겠습니다.  이 식 자체로도 굉장히 깔끔하지만 저는 이 식의 변수를 조금 줄여보도록 하겠습니다.\nP(A \\cap B) = P(A) \\cdot P(B)\n확률의 정의를 사용하면 전체 사건 S에 대해 각각의 확률을 집합의 원소의 수를 이용해 정의할 수 있습니다.\n\\begin{align*}\nP(A) &amp;= \\frac{n(A)}{n(S)} \\\\\nP(B) &amp;= \\frac{n(B)}{n(S)} \\\\\nP(A \\cap B) &amp;= \\frac{n(A \\cap B)}{n(S)}\n\\end{align*}\n이제 두 사건 A와 B가 독립이므로 독립의 필요충분조건 식에 확률을 대입한 후에 양변에 전체 사건의 경우의 수n(S)를 곱하여 정리하면 n(S)에 대한 식을 얻을 수 있습니다.\n\\begin{align*}\n&amp;\\frac{n(A \\cap B)}{n(S)} = \\left( \\frac{n(A)}{n(S)} \\right) \\cdot \\left( \\frac{n(B)}{n(S)} \\right) \\\\\n\\\\\n&amp;\\Rightarrow n(A) \\cdot n(B) = n(A \\cap B) \\cdot n(S) \\\\\n\\\\\n&amp;\\Rightarrow n(S) =\\frac{n(A) \\cdot n(B)}{n(A \\cap B)}\n\\end{align*}\n독립성 확인\n예를 들어보죠. 1부터 8까지의 카드가 있을 때, 집합A와 B를 다음과 같이 정의하겠습니다.\n\nS=\\{1,~2,~3,~4,~5,~6,~7,~8\\}\nA=\\{ 1,~2,~3,~4\\}\nB=\\{3,~4,~5,~6\\}\n\n이 두 집합은 독립일까요?\n확률을 이용한 독립성 확인\n가장 일반적인 방법으로 확률을 이용해 독립성을 확인해보겠습니다. 전체에 대해 A와 B의 확률을 계산하면 P(A)는 전체 8개 중 4개이므로 P(A)=\\frac{4}{8}=\\frac{1}{2}이고 P(B)또한 전체 8개 중 4개이므로 P(B)=\\frac{1}{2}입니다. 이제 P(A \\cap B)를 보면 전체 8개 중에서 A와 B에 동시에 포함된 원소는 \\{3,~4\\} 즉, 2개가 있으므로 P(A \\cap B)=\\frac{2}{8}=\\frac{1}{4}입니다. 따라서  P(A)P(B)=P(A \\cap B)를 만족하므로, 독립이라고 할 수 있습니다.\n\\begin{align*}\nP(A) &amp;= \\frac{n(A)}{n(S)} = \\frac{4}{8} = \\frac{1}{2} \\\\\nP(B) &amp;= \\frac{n(B)}{n(S)} = \\frac{4}{8} = \\frac{1}{2} \\\\\nP(A \\cap B) &amp;= \\frac{n(A \\cap B)}{n(S)} = \\frac{2}{8} = \\frac{1}{4}\n\\end{align*}\nP(A)\\times P(B) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4} = P(A \\cap B)\n비율을 이용한 독립성 확인\n독립을 판단하는 방법은 확률 관계뿐만 아니라 비율을 보는 방법도 있습니다. A는 원소의 개수가 4개 이므로 전체에서 절반의 비율을 차지하고 있습니다. 만약 A와 B가 독립이라면 A는 B안에서나 밖에서나 일정하게 그 비율을 유지해야합니다. B의 원소 \\{3,~4,~5,~6\\}에 대해 \\{3,~4\\}는 A의 원소이기도 합니다. 따라서 B를 전체라고 본다면, A는 B안에서도 절반의 비율을 차지하고 있습니다. 그러므로 A는 B에 관계 없이 비율을 항상 일정하게 유지하고 있으므로 독립이라고 할 수 있습니다.\n\\begin{align*}\nP(A) = \\frac{n(A)}{n(S)} = \\frac{4}{8} &amp;= \\frac{1}{2} \\\\\nP(A|B) = \\frac{P(A \\cap B)}{P(B)} = \\frac{n(A \\cap B)}{n(B)} &amp;= \\frac{2}{4}= \\frac{1}{2} = P(A) \\\\\nP(A|B^c) = \\frac{P(A \\cap B^c)}{P(B^c)} =  \\frac{n(A \\cap B^c)}{n(B)} &amp;= \\frac{2}{4}= \\frac{1}{2} = P(A)\n\\end{align*}\n이러한 이유로 독립을 ‘비율 일정의 법칙’이라 부르기도 합니다. 왜 비율이 일정하다고 하는지는 빈도 교차표를 보면 더 눈에 띄게 드러납니다. 1번 표를 보면 남자에서는 미적과 확통의 비율이 3:7인 반면 여자에서는 비율이 5:11로 같지 않은 것을 알 수 있습니다. 따라서 남자와 여자는 미적과 확통에 대해 독립적이지 않다는 것을 알 수 있습니다.\n\\begin{array}{|c|c|c|c|} \n\\hline\n\\text{\\#1} &amp; \\text{미적} &amp; \\text{확통} &amp; \\text{합계} \\\\ \\hline\n\\text{남자} &amp; 3 &amp; 7 &amp; 10 \\\\ \\hline\n\\text{여자} &amp; 5 &amp; 11 &amp; 16 \\\\ \\hline\n\\text{합계} &amp; 8 &amp; 18 &amp; 26 \\\\ \\hline\n\\end{array}\n반면에 2번 표를 보면 남자에서는 미적과 확통의 비율이 1:3이며 이는 여자일 때도 비율이 일정하게 유지 되는 것을 알 수 있습니다. 따라서 남자와 여자는 미적과 확통에 대해 독립적이라고 할 수 있습니다. 이는 미적과 확통을 기준으로 남자와 여자의 비율을 보아도 5:4로 일정하게 유지되는 것을 볼 수 있습니다.\n\\begin{array}{|c|c|c|c|} \\hline\n\\text{\\#2} &amp;\\text{미적} &amp; \\text{확통} &amp; \\text{합계} \\\\ \\hline\n\\text{남자} &amp; 5 &amp; 15 &amp; 20 \\\\ \\hline\n\\text{여자} &amp; 4 &amp; 12 &amp; 16 \\\\ \\hline\n\\text{합계} &amp; 9 &amp; 27 &amp; 36 \\\\ \\hline\n\\end{array}\n이러한 성질을 알고 있다면 A와 B가 독립이라는 정보가 주어졌을 때, 비율을 이용해 미지의 값을 빠르게 구할 수 있습니다. 일반화하여 적용하는 방법은 잠시 후에 자세히 다루도록 하겠습니다.\n\\begin{array}{|c|c|c|c|}\n\\hline\n\\text{\\#3} &amp; \\quad A \\quad &amp; \\quad A^c \\quad  &amp; \\quad  \\text{합계} \\quad  \\\\\n\\hline\nB &amp; 3 &amp; 4 &amp; 7 \\\\\n\\hline\nB^c &amp; 6 &amp; x &amp; 6+x \\\\\n\\hline\n\\text{합계} &amp; 9 &amp; 4+x &amp; 13+2x \\\\\n\\hline\n\\end{array}\n3 : 4 = 6 : x  \\Rightarrow  x = 8\n전체 경우의 수로 확인\n마지막으로 이전에 유도한 공식을 이용할 수도 있습니다. A와 B의 원소의 개수를 곱한 값을 A \\cap B의 경우의 수로 나눈 값이 전체 경우의 수가 되는지 확인하는 방식을 이용하면 이전에 방법과 유사하지만 적은 연산으로도 빠르게 독립성을 판단할 수 있습니다.\n\\frac{n(A) \\cdot n(B)}{n(A \\cap B)} = \\frac{4 \\times 4}{2} = 8 = n(S)\n포획-재포획법\n앞서 보았듯 독립이란 조건을 이용하면 집합 A와 B만으로도 전체 사건의 경우의 수 즉, 전체 집합의 원소의 개수를 구할 수 있습니다. 예를 들어보죠.\nn(S)=\\frac{n(A) \\cdot n(B)}{n(A \\cap B)}\n코드 작성은 어려운 작업 중 하나입니다. 특히 복잡한 프로젝트에서는 수많은 줄의 코드가 얽혀 있으며, 그 중 하나라도 잘못되면 전체 시스템이 작동하지 않을 수 있죠. 이런 상황에서 모든 오류를 찾는 것은 정말 어려운 일입니다. 만약 엄청 복잡한 코드가 실행되지 않는 상황이 발생했다고 해보겠습니다. 두 프로그래머 A와 B가 이 문제를 해결하기 위해 코드 전체를 읽어보며 오류를 찾기로 했습니다. 이때, A와 B는 각자 50개와 40개의 오류를 발견했다고 해보겠습니다. 다행히 두 프로그래머가 분석한 오류 중 중복으로 발견한 오류가 있었고, 그 개수는 10개였습니다. 여기서 두 프로그래머의 작업은 독립적(각자 오류를 찾을 확률이 일정하다고 했을 때)이므로, 전체 오류의 개수   를 찾을 수 있습니다.\nn(S) = \\frac{n(A) \\cdot n(B)}{n(A \\cap B)} = \\frac{50 \\times 40}{10} = 200\nA가 발견한 오류와 B가 발견한 오류를 곱하고, 그 결과를 둘 다 발견한 오류로 나누면 되죠. 결과적으로 전체 코드에서의 오류 개수는 200개로 추정할 수 있습니다. 여기서 한 발 더 나아가 보겠습니다. 현재 발견한 코드의 오류 개수는 중복 영역에서 발견한 오류를 한 번만 세어야 하므로 합집합 개념을 이용해 표현할 수 있습니다.\nn(A \\cup B) = 50 + 40 - 10 = 80\nA와 B가 현재 발견한 오류의 개수는 총 80개이고 따라서 두 프로그래머가 앞으로 전체 코드에서 발견해야 할 오류의 개수가 120개 라는 것을 파악할 수 있습니다.\nn((A \\cup B)^c)=n(S) - n(A \\cup B) = 200 - 80 = 120\n이 과정을 일반화 해보죠. 먼저 전체 오류의 개수와 현재 발견한 오류의 개수를 구하는 식은 다음과 같이 정의했습니다.\nn(S) = \\frac{n(A) \\cdot n(B)}{n(A \\cap B)}\nn(A \\cup B) = n(A) + n(B) - n(A \\cap B)\n앞으로 찾아야 할 오류의 개수는 합집합의 여집합이므로 계산하는 식에 위의 두 식을 대입할 수 있습니다.\n\\begin{align*}\\\\\nn((A \\cup B)^c) &amp;= n(S) - n(A \\cup B)\\\\\n &amp;= \\frac{n(A) \\cdot n(B)}{n(A \\cap B)} - (n(A) + n(B) - n(A \\cap B)) \\end{align*}\n두 프로그래머가 찾은 오류 중 중복되지 않은 오류의 개수를 각각 n(A - B)와 n(B - A)로 표현하고, 둘 다 찾은 오류의 개수를 n(A \\cap B)로 표현하면, 앞으로 찾아야 할 오류의 개수는 다음과 같이 계산됩니다\n\\begin{align*}\nn((A \\cup B)^c) &amp;= \\frac{n(A) \\cdot n(B) - n(A \\cap B) \\cdot (n(A) + n(B) - n(A \\cap B))}{n(A \\cap B)} \\\\\n&amp;= \\frac{n(A) \\cdot n(B) - n(A \\cap B) \\cdot n(A) - n(A \\cap B) \\cdot n(B) + (n(A \\cap B))^2}{n(A \\cap B)} \\\\\n&amp;= \\frac{n(A) \\cdot n(B) - n(A) \\cdot n(A \\cap B) - n(B) \\cdot n(A \\cap B) + n(A \\cap B) \\cdot n(A \\cap B)}{n(A \\cap B)} \\\\\n&amp;= \\frac{(n(A) - n(A \\cap B)) \\cdot (n(B) - n(A \\cap B))}{n(A \\cap B)}\\\\\n&amp;= \\frac{(n(A- B)) \\cdot (n(B-A))}{n(A \\cap B)}\n\\end{align*}\n이렇게 정리된 식은 우리에게 많은 정보를 줍니다. 먼저 이 식을 통해 A와 B가 각각 자신들만 찾은 오류가 많고, 둘 다 찾아낸 오류의 개수가 적다면, 여전히 많은 오류가 남아 있을 것이라는 정보를 줍니다. 그리고 이 식에는 두 프로그래머가 얼마나 오류를 잘 찾아내는지를 나타내는 정확도에 대한 내용이 없습니다. \b따라서 A와 B가 오류를 찾는 정확도가 낮다고 하더라도 독립적이라는 성질만으로 전체를 꽤 정확하게 추측 할 수 있음을 보여줍니다.\nHow many words did Shakespeare know?\n우리가 본 것만으로 보지 못한 것을 추론할 수 있을까요? 이 흥미로운 질문에 통계학자 에프론(Bradley Efron)과 티스티드(Ronald Thisted)는 셰익스피어의 어휘력을 분석하며 답을 찾아 나섰습니다. 그들이 사용한 방법은 마치 생태학자가 숲속 동물의 총개체 수를 추정하는 것과 같았죠.\n먼저 그들은 셰익스피어가 남긴 방대한 데이터와 마주했습니다. 총 884,647개의 단어로 이루어진 작품들 속에서, 중복을 제외한 고유 단어(word type)는 31,534개였습니다. 여기서 n_x를 정확히 x번 등장한 단어의 종류 수라고 할 때, 데이터는 아주 특이한 패턴을 보였습니다. 한 번만 쓰인 단어(n_1)가 14,376개로, 전체의 45\\%를 넘었습니다.\n\\frac{n_1}{\\sum n_x} = \\frac{14,376}{31,534} \\approx 45.6\\%\n이렇게 스치듯 사용된 단어가 많다는 것은, 셰익스피어의 머릿속에는 아직 지면으로 나오지 못한 단어들이 훨씬 더 많았을 것이라는 강력한 암시였죠.\n그렇다면 셰익스피어가 지금과 똑같은 분량의 글을 한 번 더 썼다면(t=1), 새로운 단어는 몇 개나 등장할까요? 이 질문에 답하기 위해, 먼저 각 단어의 등장 확률을 모델링해야 합니다. 셰익스피어가 아는 모든 단어(S개)는 각각 고유의 사용 빈도(\\lambda_s)를 가지며, 특정 작품에서 해당 단어가 등장하는 횟수는 포아송 분포를 따른다고 가정합니다.\n\\Delta(t) = S\\int_{0}^{\\infty}e^{-\\lambda}(1-e^{-\\lambda t})dG(\\lambda)\n여기서 G(\\lambda)는 셰익스피어가 아는 모든 단어의 사용 빈도(\\lambda) 분포로, 우리가 알지 못하는 핵심 정보입니다. 여기서 굿과 툴민(Good &amp; Toulmin)은 이 식의 이론적 기대값(\\eta_x = E(n_x))이 \\Delta(t) = \\eta_1 t - \\eta_2 t^2 + \\eta_3 t^3 - \\cdots 와 같다는 것을 보였고 , 이를 통해 관측값 n_x를 사용한 추정식을 얻을 수 있습니다.\n\\Delta(t) \\approx n_1 t - n_2 t^2 + n_3 t^3 - \\dots = \\sum_{x=1}^{\\infty} (-1)^{x+1} n_x t^x\n\n이 공식에 셰익스피어의 데이터를 넣으면, 한 권의 책을 더 썼을 때, 약 11,430개의 새로운 단어가 나타날 것이라는 추정치를 얻게 됩니다.\n\\hat{\\Delta}(1) = 14376 - 4343 + 2292 - \\cdots \\approx 11,430 \\quad (\\text{표준편차} \\approx 178)\n\n하지만 이 추정식은 t가 1보다 커지면 값이 미친 듯이 널뛰며 발산하기 때문에, 셰익스피어의 ‘전체’ 어휘량(t \\to \\infty)을 알아내는 데는 쓸모가 없습니다.\n\\hat{\\Delta}^{x_{0}}(u)=\\sum_{v=1}^{x_{0}}\\hat{\\xi}_{v}u^{v}\n이 문제를 해결하기 위해 저자들은 오일러 변환(Euler’s transformation)이라는 무기를 꺼내 듭니다. 불안정한 급수의 항들을 특정 가중치로 평균 내어 안정적인 값으로 수렴시키는 기법입니다. 이 변환을 통해 얻은 새로운 추정치는 기존 값과 거의 차이가 없으면서도, 표준편차가 줄어들어 훨씬 안정적인 결과가 되었습니다.\n\\hat{\\Delta}^{9}(1) \\approx 11,441 \\quad (\\text{표준편차} \\approx 147)\n셰익스피어가 알았지만 사용하지 않은 단어의 총 수(\\Delta(\\infty))에 대한 상한선은 정할 수 없습니다. 따라서 저자들은 “아무리 보수적으로 추정해도 최소한 이 정도는 넘을 것이다”라는 하한선(lower bound)을 찾는 데 집중했습니다.\n\\text{Minimize: } \\Delta(\\infty) = S\\int_{0}^{\\infty}e^{-\\lambda}dG(\\lambda)\n아이디어는 이렇습니다. 우리가 만든 추정치 \\hat{\\Delta} = \\sum h_x n_x가 실제 값 \\Delta(t)보다 항상 작거나 같도록 보장하는 제약조건 하에서(E(\\hat{\\Delta}) \\le \\Delta(t)), 추정값을 최대로 만드는 계수(h_x)를 찾아내는 것이죠. 즉, 관측된 데이터와 모순되지 않는 가장 비관적인 시나리오를 상정해 답을 구하는 것입니다.\n\\hat{\\eta}_{x}-c\\sqrt{\\hat{\\eta}}_{x} \\le S\\int_{0}^{\\infty}(\\frac{e^{-\\lambda}\\lambda^{x}}{x!})dG(\\lambda) \\le \\hat{\\eta}_{x}+c\\sqrt{\\hat{\\eta}}_{x} \\quad (x=1, \\cdots ,x_{0})\n결과적으로 셰익스피어가 알고 있었지만 단 한 번도 쓰지 않은 단어가 최소 35,554개는 넘는다는 것을 알 수 있습니다.\n우리가 보지 못한 것을 마주할 때, “그건 안 보여서 몰라요”라고 말하기 전에, 이렇게 다시 묻는 것도 좋겠습니다. “관측된 걸 보면, 보이지 않는 것도 알 수 있지 않을까요?”"},"Ray-math/Script/모든-세자리-수를-만드는-분수":{"slug":"Ray-math/Script/모든-세자리-수를-만드는-분수","filePath":"Ray math/Script/모든 세자리 수를 만드는 분수.md","title":"모든 세자리 수를 만드는 분수","links":[],"tags":["수열","결과","자리","반복","급수","피보나치","생성함수"],"content":"## 특별한 배열을 만드는 분수들\n\n\\frac{1}{998001}은 소수로 나타내면 매우 특별한 결과를 가집니다. 소수점 아래에는 000부터 999까지의 모든 세자리 수를 나열하는데 하필 998만 누락됩니다. 심지어 이 결괏값은 계속 반복되는 순환소수죠.1\n\\begin{align*}\n\\frac{1}{998001} = 0.&amp;000\\,001\\,002\\,003\\,004\\, \\cdots\\,995\\,996\\,997\\,999 \\\\\n&amp;000\\,001\\,002\\,003\\,004\\, \\cdots\\,995\\,996\\,997\\,999\\cdots\n\\end{align*}\n여기서 주목해야 할 점은, 998001 = 999^2이라는 사실입니다. 같은 패턴을 따라, \\frac{1}{9^2}과 \\frac{1}{99^2}을 살펴보면\n\\begin{gather*}\n\\frac{1}{9^2} = 0.0\\,1\\,2\\,3\\,4\\,5\\,6\\,7\\,9\\cdots\\\\\n\\frac{1}{99^2} = 0.00\\,01\\,02\\,03\\,04\\ \\cdots95\\,96\\,97\\,99\\cdots\\\\\n\\frac{1}{999^2} = 0.000\\,001\\,002\\,003\\,004\\, \\cdots\\,995\\,996\\,997\\,999\\cdots\\\\\n\\end{gather*}\n\\frac{1}{9^2}의 경우 8을 제외한 모든 한자리 숫자를 반복해서 생성하고, \\frac{1}{99^2}의 경우 98을 제외한 모든 두자리 숫자를 반복하여 생성합니다. 왜 이러한 현상이 일어날까요?\n우선 나눗셈을 통해 결과를 관찰해보겠습니다. 나눗셈을 하면 소수점 아래에서 규칙적으로 숫자가 유지되다가 9에서 1을 뺀 수에서는 더 이상 자리수가 부족해지지 않게 됩니다. 그러므로 바로 다음 수인 9가 나오게되죠. 이 다음부터는 다시 1이 생기게 되면서 앞선 배열이 반복되는 것을 알 수 있습니다.2\n\\begin{array}{c|ccccccccccccc}\n&amp;0&amp;.&amp;0&amp;1&amp;2&amp;3&amp;4&amp;5&amp;6&amp;7&amp;9&amp;0&amp;\\cdots \\newline\n\\hline\n9^2&amp;1&amp;.&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;\\cdots \\\\\n&amp;&amp;&amp;8&amp;1&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;1&amp;9&amp;0&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;1&amp;6&amp;2&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;2&amp;8&amp;0&amp;&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;2&amp;4&amp;3&amp;&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;3&amp;7&amp;0&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;&amp;3&amp;2&amp;4&amp;&amp;&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;&amp;4&amp;6&amp;0&amp;&amp;&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;&amp;&amp;4&amp;0&amp;5&amp;&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;5&amp;5&amp;0&amp;&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;4&amp;8&amp;6&amp;&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;6&amp;4&amp;0&amp;&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;5&amp;6&amp;7&amp;&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;7&amp;3&amp;0&amp;&amp; \\\\\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;7&amp;2&amp;9&amp;&amp; \\\\\n\\hline\n&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;1&amp;0&amp;\\cdots \\\\\n\\end{array}\n왜 인지는 모르겠지만 1이 더해지고 빼지는 과정에 무엇인가 있는 것 처럼 보이죠.\n 9^2 - 1^2 + 1= (9+1)(9-1) + 1 = 80 + 1\n결과를 미리 알고 본다면 순환하는 무한소수를 만드는 방법을 이용하여 조금 더 쉽게 같은 결과를 얻어낼 수 있습니다.\n0.012345679를 s라 두면 s에 1000000000(십억)을 곱한 수와 s를 빼면 다음과 같습니다.\n\\begin{align*}\n1000000000s - s &amp;= 999999999s\\\\\n&amp;= 12345679\n\\end{align*}\ns의 계수는 각 자리수가 9이고 아홉자리 이므로, 9^2으로 소인수분해할 수 있습니다. 이때,\n9^2 \\times1234579=999999999\n이므로, 결과적으로\ns=\\frac{1}{9^2}\n이 된다는 것을 알 수 있습니다.\n피보나치 수열을 생성하는 신기한 분수\n반대로 8을 이용하여 새로운 수열을 찾는 방법도 있습니다. 예를들어 \\frac{1}{9899}을 보겠습니다.\n\\begin{align*}\n\\frac{1}{9899} = 0.00 \\,01\\,01\\,02\\,03\\,05\\,08\\,13\\,21\\,34\\,55\\,9046\\cdots\n\\end{align*}\n이 수의 소수 부분을 보면 두 자리 마다 반복하며 55까지의 피보나치 수열을 만드는 것을 볼 수 있습니다. 이 규칙에 따라 가운데 8을 적고 8앞에는 9를 두 번, 뒤에는 세 번 적은 수로 1을 나누어 보면 세 자리 마다 반복하며 988까지의 피보나치 수열을 만들게 됩니다.\n\\begin{align*}\n\\frac{1}{998999} = 0.000\\,001\\,001\\,002\\,003\\,005\\,008\\,013\\,021\\,034\\,055\\,089\\,144\\,233\\,377\\,610\\,988\\,5995\\cdots\n\\end{align*}\n이러한 규칙은 더 큰 수로 나눈다면 더 정확한 값을 찾을 수 있습니다.\n\\begin{align*}\n1/999,998,999,999 = 0.&amp; 000000 \\, 000001 \\, 000001\\,000002\\,000003\\, \\\\\n&amp;000005\\,000008\\, 000013\\,000021\\,000034\\\\\n&amp;000055\\,000089\\,000144\\,000233\\,000377\\\\\n&amp;000610\\,000987\\,001597\\,002584\\,004181\\\\\n&amp;006765\\,010946\\,017711\\,028657\\,046368\\\\\n&amp;075025\\,121393\\,196418\\,317811\\,514229\\,832041 \\cdots\n\\end{align*}\n그렇다면 이러한 현상은 단지 우연으로 숫자를 잘 찾은 것 뿐일까요?\n생성함수\n생성함수는 수열을 표현하는 간단하고도 강력한 도구입니다. 복잡한 수열이나 급수를 단순한 함수 형태로 나타내는 방법으로 수열의 일반항을 찾거나, 수열 간의 관계를 파악하는 것이 더 쉬워집니다.\n예를들어 다음과 같이 피보나치 수열을 계수로 하는 다항식이 있다고 해보겠습니다.\n1+z+2z^2+3z^3+5z^4+8z^5+... = \\sum_{n=0}^\\infty F_nz^n\n피보나치 수열의 처음 두 항은 1이며F_0 = F_1 = 1 그 뒤의 모든 항은 바로 앞 두 항의 합인 수열F_{n+2} = F_n + F_{n+1}입니다. 따라서 이 다항식에서 보면 피보나치 수열의 n항일때, 차수가 n이므로 항이 커질때마다 차수가 커지는 것을 알 수 있습니다. 이 성질들을 이용하여 식을 정리하기 위해 (1 - z - z^2)을 \\sum_{n=0}^\\infty F_n z^n에 곱해보겠습니다.\n\\begin{align*}\n(1-z-z^2)\\sum_{n=0}^\\infty F_nz^n &amp;= \\sum_{n=0}^\\infty F_nz^n - \\sum_{n=0}^\\infty F_nz^{n+1} - \\sum_{n=0}^\\infty F_nz^{n+2} \\\\\n&amp;= \\sum_{n=0}^\\infty F_nz^n - \\sum_{n=1}^\\infty F_{n-1}z^n-\\sum_{n=2}^\\infty F_{n-2}z^n \\\\\n&amp;= F_0 + (F_1-F_0)z + \\sum_{n=2}^\\infty (F_n-F_{n-1}-F_{n-2})z^n\n\\end{align*}\n양 변에 (1 - z - z^2)을 곱한 후 급수의 변수를 조정하면 식을 비교적 간단하게 작성할 수 있습니다. 이 때,  F_1 = F_0이고 F_n = F_{n-1} + F_{n-2}이므로 결과적으로 피보나치 수열을 이용한 급수를 간단한 유리함수로 표현할 수 있습니다.\n\\begin{align*}\n(1-z-z^2)\\sum_{n=0}^\\infty F_nz^n &amp;= F_{0 = 1}\\\\\n\\sum_{n=0}^\\infty F_nz^n &amp;= \\frac{1}{1-z-z^2}\n\\end{align*}\n이런 식으로 수학은 복잡한 문제를 단순화시켜 우리에게 새로운 시각을 제공합니다. 이 분수의 성질을 보기 위해 z = 10^{-2}을 대입해보겠습니다.\n\\frac{1}{1 - 10^{-2} - 10^{-4}} = F_0 + 10^{-2}F_1 + 10^{-4}F_2 +\\cdots\\\\\n그 후 좌변을 간단하게 바꾸기 위해 분자와 분모에 10^4를 곱하면, 다음과 같습니다.\n\\frac{10^4}{10^4 - 10^2 - 1} = \\frac{10^4}{9899}\n여기서 분모에 나타나는 9899가 바로 우리가 처음 보았던 분모와 일치합니다. 따라서 앞선 결과에서 소수점 아래에 피보나치 수열의 일반항이 나오는 것을 깔끔하게 구해낼 수 있죠.\n\\begin{align*}\n\\frac{1}{9899} &amp;= \\frac{0}{10^2} + \\frac{F_0}{10^4}+\\frac{F_1}{10^6}+\\frac{F_2}{10^{8}+\\cdots}\\\\\n&amp;=0+0.0001+0.000001+0.00000002 + \\cdots \\\\\n&amp;= 0.00 \\,01\\,01\\,02\\,03\\,05\\,08\\,13\\,21\\,34\\,55\\,9046\\cdots\n\\end{align*}\n테일러 전개와 생성함수\n앞선 결과들을 보면 하나, 둘, 셀 수 있는 이산적인 수열임에도 불구하고 함수와 같이 연속적인 양과 관련이 있어보입니다. 심지어 이러한 급수표현의 함수를 우리는 테일러 급수에서 너무나 자주 볼 수 있었죠. 그래서 이러한 테일러 전개로 생성함수를 찾을 수는 없을까요? 다시 처음에 보았던 분수를 보도록 하겠습니다.\n\\frac{1}{9^2}. \\frac{1}{99^2}, \\frac{1}{999^2} 모두, 10의 거듭제곱에서 1을 뺀 수를 제곱한 후 역수를 취한 형태를 가집니다. 따라서 10을 변수로 바꿔 함수로 표현하면 \\frac{1}{(1-z^n)^2}이라 나타낼 수 있습니다. 우선 간단하게 n=1일 때의 생성 함수를 보겠습니다.\n\\begin{gather*}\nz = 10\\\\\n\\\\\n\\frac{1}{9^2} = \\frac{1}{\\left(1-10 \\right)^2}=\\frac{1}{(1-z)^2}\\\\\n\\frac{1}{99^2} = \\frac{1}{ \\left(1-10^2\\right)^2}=\\frac{1}{(1-z^2)^2}\\\\\n\\frac{1}{999^2} = \\frac{1}{ \\left(1-10^3\\right)^2}=\\frac{1}{(1-z^3)^2}\\\\\n\\\\\n\\vdots\\\\\n\\\\\n\\frac{1}{(1-z^n)^2}\n\\end{gather*}\n테일러 급수는 x=a 주변에서 함수를 다항식으로 근사함으로써 원하는 위치에서 함수의 값을 예측하는 데 사용됩니다. 이러한 다항식은 x=a에 가까워질수록 원래 함수와 비슷한 값을 가지게 됩니다.\nf(x) = \\sum_{n=0}^{\\infty} \\frac{f^{(n)}(a)}{n!}(x-a)^n\n\\frac{1}{(1-z)^2}를 n번 미분한 결과는 다음과 같은 패턴을 가집니다.\n\\frac{d^n}{dz^n} \\left( \\frac{1}{(1-z)^2} \\right) = \\frac{(n+1)!}{(1-z)^{n+2}}\n이제 이 미분한 결과에 z=0을 대입한 후,\n\\left. \\frac{(n+1)!}{(1-z)^{n+2}} \\right|_{z=0} = (n+1)!\n마지막으로 이 값을 n!으로 나누어 계수를 구할 수 있습니다.\na_n = \\frac{(n+1)!}{n!} = n+1\n따라서 생성 함수  \\frac{1}{(1-z)^2}의 테일러 급수는 다음과 같습니다.\n\\frac{1}{(1-z)^2} = \\sum_{n=0}^{\\infty} (n+1)z^n\n이제 이 식에 z=\\frac{1}{10}을 대입해 전개해보겠습니다.\n\\frac{1}{\\left(1-\\frac{1}{10} \\right)^2} = \\sum_{n=0}^{\\infty} (n+1) \\left(\\frac{1}{10} \\right)^n\n좌변에서는 우리가 찾고자했던 분모가 나오고 우변은 규칙적으로 분수의 덧셈이 있는 형태로 정리가 됩니다.\n\\frac{10^2}{9^2} = 1 + \\frac{2}{10} + \\frac{3}{10^2} + \\frac{4}{10^3} + \\cdots\n정확한 값을 계산하기 위해 양변을 10^2으로 나누어 주면 \\frac{1}{9^2}을 다음과 같이 급수의 합으로 나타낼 수 있습니다. 이 급수의 규칙성을 보면 분자는 1씩 커지며 분모의 차수는 분자보다 1 큰 수라는 것을 어렵지 않게 확인할 수 있습니다. 소수 배열의 특징을 관찰하기 위해 우변을 소수로 표현해 결과를 보겠습니다.\n\\frac{1}{9^2} = \\frac{1}{10^2} + \\frac{2}{10^3} + \\frac{3}{10^4} + \\frac{4}{10^5} + \\cdots\n앞서 본 규칙과 같이 소수들로 표현하면 소수점 아래 마지막 수는 1부터 1씩 커지는 수가 나오면서 그 수만큼 앞에 0이 붙게 됩니다. 0 이 너무 많아 눈이 아프지만 소수 표현을 조금 더 자세히 더해보도록 하겠습니다. 급수의 합은 소수들의 합으로도 나타낼 수 있으므로\n\\begin{align*}\n\\frac{1}{10^2} &amp;= 0.01\\\\\n\\frac{2}{10^3} &amp;= 0.002\\\\\n\\frac{3}{10^4} &amp;= 0.0003\\\\\n\\frac{4}{10^5} &amp;= 0.00004\\\\\n\\frac{5}{10^6} &amp;= 0.000005\\\\\n&amp;\\vdots\\\\\n\\end{align*}\n다음과 같이 세로로 더해보도록 하겠습니다. 세로로 더하는 과정을 보면 1부터 7까지는 더해지는 값이 없으므로 그대로 나오는 반면 10번째 항에서는 자리수가 올라가며 앞선 9와 더해지게 됩니다. 이 과정에서 9가 10이 되므로 다시 자리수가 올라가서 8이 9로 바뀌게 됩니다. 이후엔 다시 앞선 결과가 반복되게 되죠.\n\\begin{array}{ccccccccccccccc} \n&amp; 0 &amp; . &amp; 0 &amp; 1 &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  \\\\\n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 2 &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 3 &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 4 &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 5 &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 6 &amp;  &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 7 &amp;  &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 8 &amp;  &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 9 &amp;  &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp;  \\\\ \n&amp; 0 &amp; . &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\\\\n+&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\\vdots&amp;&amp;&amp;&amp;&amp;&amp; \\\\ \n\\hline \n&amp; 0 &amp; . &amp; 0 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 9 &amp; 0 &amp; 1 &amp; \\cdots \\\\\n\\end{array}\n이렇게 \\frac{1}{9^2}이 0부터 9까지의 수 중 8을 제외하며 반복되는 이유를 설명할 수 있으며 같은 방법으로 \\frac{1}{99^2}이나 \\frac{1}{999^2}도 설명할 수 있습니다. 수학은 언제나 우리에게 새로운 놀라움을 선사합니다. 여러분들이 어떤 특정한 숫자배열이 필요하실 때 이러한 성질을 이용해보시는 것은 어떨까요?\n다른 배열들\n9^2인 81로 1을 나누면 소수점 아래 수들은 0부터 9까지의 8을 제외한 모든 자연수를 출력합니다.\n같은 방법으로 99^2으로 1을 나누면 소수점 아래 수들은 0부터 99까지의 98을 제외한 모든 자연수를 순서대로 출력하고\n999^2으로 1을 나누면 소수점 아래 수들은 0부터 999까지의 수 중 998만 제외하고 모든 자연수가 나오죠.\n그리고 이 배열은 계속 순환하는데요. 이는 우연일까요?\n\\begin{align*}\n\\frac{1}{9899} = 0.&amp;00 \\,01\\,01\\,02\\,03\\,05\\\\\n&amp;08\\,13\\,21\\,34\\,55\\,9046\\cdots\n\\end{align*}\n소수 부분을 보면 두 자리 마다 반복하며 55까지의 피보나치 수열을 만드는 것을 볼 수 있습니다. 비슷하게 가운데 8을 적고 8앞에는 9를 두 번, 뒤에는 세 번 적은 수로 1을 나누어 보면 세 자리 마다 반복하며 988까지의 피보나치 수열을 만들게 됩니다.\n\\begin{align*}\n1/998999 = 0.&amp;\\,000\\,001\\,001\\,002\\,003\\\\\n&amp;\\, 005 \\,008\\,013\\,021\\,034\\\\\n&amp;\\,055\\,089 \\,144\\,233\\,377\\\\\n&amp;\\,610\\,988\\,5995\\cdots\n\\end{align*}\n이러한 규칙은 더 큰 수로 나눈다면 더 정확한 값을 찾을 수 있는데요.\n\\begin{align*}\n1/999,998,999,999 =\n&amp;&amp;0.000000 \\, 000001 \\, 000001\\,000002\\,\\\\\n&amp;&amp;000003\\,000005\\,000008\\, 000013\\,\\\\\n&amp;&amp;000021\\,000034\\,000055\\,000089\\,\\\\\n&amp;&amp;000144\\,000233\\,000377\\,000610\\,\\\\\n&amp;&amp;000987\\,001597\\,002584\\,004181\\,\\\\\n&amp;&amp;006765\\,010946\\,017711\\,028657\\,\\\\\n&amp;&amp;046368\\,075025\\,121393\\,196418\\,\\\\\n&amp;&amp;317811\\,514229\\,832041 \\cdots\n\\end{align*}\n이러한 현상은 단지 우연으로 숫자를 잘 찾은 것 뿐일까요?\nFootnotes\n\n\nup to 1000 decimal of 1/998801 ↩\n\n\n1/81의 결과 ↩\n\n\n"},"Ray-math/Script/무리수인데-왜-정수비로-표현되나요":{"slug":"Ray-math/Script/무리수인데-왜-정수비로-표현되나요","filePath":"Ray math/Script/무리수인데 왜 정수비로 표현되나요.md","title":"무리수인데 왜 정수비로 표현되나요","links":[],"tags":["길이","선분","유리수","무리수","비율","연분수","정수","다음","가능","피타고라스","점","기하","도형","테오도로스"],"content":"유리수는 두 정수 a와 b의 비로 표현될 수 있는 수입니다.\nq = \\frac{a}{b} \\quad \\left(a, b \\in \\mathbb{Z}, b \\neq 0 \\right)\n반면에 무리수는 유리수로 표현할 수 없는 실수를 의미하죠. 그래서 무리수는 정수와 관련이 없다고 생각하기 쉽습니다.\n그러나 도형 문제를 풀다보면 피타고라스 정리에 의해 무리수가 빈번하게 나오지만 그 답은 정수비를 이루거나 도형이 어떤 특정한 위치에서 딱 맞아떨어지는 경우를 심심찮게 볼 수 있습니다. 이는 과연 우연일까요? 아니면 필연일까요?\n테오도로스의 나선\n테오도로스는 기원 전 5세기에 살았던 고대 그리스의 수학자로, 명확한 증거로 뒷받침되지는 않지만 프로타고라스의 제자이자 플라톤의 수학 선생님이었다고 알려져 있습니다.1 그는 비제곱수의 제곱근이 무리수임을 증명했다고 알려져있죠. 그의 증명방법은 알려져 있지 않지만 피타고라스의 정리를 이용하여 다음과 같이 길이가 \\sqrt2,  \\sqrt3, \\cdots, \\sqrt17인 선을 이용한 나선을 만들었을 것으로 추정합니다.\n\n이 나선은 높이가 1인 일련의 연속된 직각 삼각형들을 이용하여 구성되며, 각 삼각형의 밑변의 길이는 이전 삼각형의 빗변 길이와 같습니다. 평면 위의 한 점을 기준으로 길이가 1인 직각 이등변 삼각형을 그립니다. 처음 생기는 직각 이등변 삼각형의 빗면의 길이는 피타고라스 정리에 의해 \\sqrt2입니다. 다음으로 처음 만든 직각 이등변 삼각형의 빗변을 밑변으로 하고 높이가 1인 직각 삼각형을 새로 그리면 두번째 생긴 직각삼각형의 빗변의 길이는 \\sqrt3이 됩니다. 이제 이 과정을 반복하면 새로 생기는 직각 삼각형들의 빗변은 자연수의 제곱근 꼴을 가지는 것을 볼 수 있습니다.\n\\sqrt n^2 + 1^2 = \\sqrt{n+1}^2\n이 나선을 구성하는 과정은 매우 간단하여 무리수와 제곱근의 개념을 탐구하기 좋습니다.\n통약가능성(Commensurability)\n고대 그리스에서 수학자들은 통약가능성(commensurability) 이라는 개념을 통해 수학을 탐구하고 발전시켰습니다. 두 선분의 길이가 서로 어떤 정수의 배수로 표현될 수 있는지를 나타내는 것으로, 이를 통해 두 선분이 어떤 공통의 단위로 측정될 수 있는지를 알 수 있었습니다.2 이러한 개념은 유리수와 무리수를 구분짓는 데 중요한 역할을 했습니다.\n\n두 개의 0이 아닌 실수 a와 b에 대하여 ab가 유리수인 경우 어떤 양이 공통 단위의 정수 배수로 표현될 수 있으므로 통약가능(commensurable) 하다고 부릅니다.3 이 개념은 같은 종류의 다른 수량으로 하나의 수량을 전체 수의 비율로 측정할 수 있는 능력에 기반합니다. 기하학의 맥락에서, 특히 선분과 관련하여, 통약가능성는 하나의 선분을 전체 수의 비율로 다른 선분으로 측정할 수 있는 능력을 나타냅니다.\n이러한 주제의 역사적 배경으로서 피타고라스 학파의 그리스 철학자 히파수스(Hippassus of Metapontum)의 이야기가 있습니다. 이 이야기에 따르면, 히파수스는 피타고라스의 정리 a^{2}+b^{2}= c^{2}를 사용하여 단위 정사각형의 대각선의 길이를 찾으려고 했습니다. 그의 노력은 정사각형의 변과 대각선이 통약가능하지 않다는 것을 드러냈으며, 이 길이는 두 정수의 비율로 표현될 수 없다는 것을 보여주었습니다. 이러한 발견은 그 당시에만 유리수가 존재할 수 있다고 믿었던 피타고라스의 신념과 상충했습니다. 히파수스의 통약불가능성 발견을 이해하기 전에, 피타고라스의 수에 대한 깊은 존경심을 이해하는 것이 중요합니다. 그들은 수를 모든 것의 본질로 보았으며, 유리수에 신성하고 철학적인 의미를 부여했습니다. 이러한 신념은 그들의 코스모로지, 윤리학, 영성에 녹아 있었으며, 우주의 모든 것은 유리수를 통해 설명될 수 있음을 주장했습니다. 그러나, 무리수(두 정수의 비율로 표현할 수 없는 수)의 발견은 숫자의 질서있는 세계에서 무의미의 징조로 간주되었습니다. 무리수는 피타고라스의 수학뿐만 아니라 그들의 철학에도 위협을 가했습니다.4\n\n예를 들어 길이가 7과 3인 두 선분을 가지고 통약가능성을 살펴보겠습니다. 먼저 길이가 7인 선분 안에 길이가 3인 선분이 얼마나 들어갈 수 있는지 확인합니다. 길이가 3인 선분이 2개 들어가면, 길이가 1인 선분이 남게 됩니다.\n7 = 3 \\times 2 + 1\n1은 3보다 길이가 작으므로 이제 길이가 1인 선분으로 길이가 3인 선분을 나누어 보겠습니다. 길이가 1인 선분이 길이가 3인 선분 안에 정확히 3개 들어갈 수 있습니다.\n3 = 1 \\times 3\n이처럼 선분의 길이가 7과 3인 경우에 길이가 1인 선분을 공통 단위로 사용하면 나머지가 더 이상 나오지 않고 딱 나누어 떨어지므로 두 선분은 서로 통약가능하다고 할 수 있습니다.\n반면에 a&gt;b 일때, a+b:a=a:b를 만족하는 두 선분은 서로 통약가능하지 않습니다. 길이가 a+b인 선분에 길이가 a인 선분을 빼면 길이가 b인 선분이 남게됩니다. a&gt;b이므로 이제 길이가 b인 선분으로 길이가 a인 선분을 나누어야 합니다. 그런데 a:b=a+b:a=b:a-b이므로 다시 남는 부분이 생깁니다. 이 작업을 반복하면, 각 단계에서 새로운 선분이 생성되며, 이 선분들의 길이는 이전 단계의 선분의 비율을 계속 유지합니다. 따라서 두 선분은 서로 통약 가능하다고 할 수 없습니다.\n아마 이 비율이 익숙하실 것입니다. 만약 b를 1이라 하고 \\frac{a}{b}=\\varphi라 한다면\n\\varphi = \\frac{a}{b} = \\frac{a + b}{a} = \\frac{a}{a} + \\frac{b}{a} = 1 + \\frac{b}{a} = 1 + \\frac{1}{\\varphi}\n가 됩니다. 양 변에 \\varphi를 곱하면,\n\\varphi + 1 = \\varphi^2\n가 되며, 이를 재배열한 후 근의 공식을 이용하면\n\\varphi^2 - \\varphi - 1 = 0\n두 해를 얻을 수 있습니다.\n\\varphi = \\frac{1 \\pm \\sqrt{5}}{2}\n그리고 이 값은 너무나도 유명한 비율인 황금비이며 무리수입니다.\n1 : \\frac{1 + \\sqrt{5}}{2} = 1 : 1.618\\cdots = \\frac{1 - \\sqrt{5}}{2} : 1\n이처럼 두 예시를 통해 두 선분의 길이가 서로 어떻게 관련되어 있는지(두 선분의 길이가 서로를 측정할 수 있다는 것)를 보는 통약가능성을 통해 무리수의 개념을 엿볼 수 있습니다.\n도형에서의 무리수\n이 개념을 조금 확장해서 3:4:5의 비율을 갖는 직각삼각형을 보도록 하겠습니다. 우리는 피타고라스의 정리를 이용해 3:4:5의 비율을 갖는 삼각형이 직각삼각형임을 어렵지 않게 알 수 있습니다.\n3^2+4^2=5^2\n그런데 피타고라스 정리가 알려지지 않았던 시기에는 3:4:5의 비율을 갖는 선분이 직각삼각형을 이룬다는 것을 어떻게 알 수 있었을까요?\n\n먼저 길이가 3인 선분을 그린 후 선분의 한 점을 중심으로 하고 반지름의 길이가 5인 원을 그리겠습니다. 다음으로 길이가 3인 선분에서 고정된 점이 아닌 다른 한 점에서 만날 수 있게 수선의 발을 내려보면 다음과 같은 직각 삼각형을 얻을 수 있습니다. 이때 수선의 발을 내린 선분의 길이는 아직 모르기에 x라 두고 작도를 이용해 길이를 찾아보겠습니다. 직각삼각형을 둘러싼 직사각형을 그린 후 이전에 그린 원의 중심으로 부터 길이가 3인 원을 그리면 만나는 점을 찾습니다. 그렇다면 우리가 구해야 할 길이인 x에서 3을 뺀 값이므로 남은 길이를 y라 하면 y=x-3라 할 수 있습니다. 이제 남은 길이인 y를 이용해 정사각형을 만들어 도형을 채워나가면 반지름이 y인 원을 3개 그렸을 때 정확하게 길이가 3인 원과 일치하는 것을 볼 수 있습니다. 따라서 y=1이고 x=4임을 피타고라스 정리 없이도 찾을 수 있습니다.\n이처럼 정수(유리수)들은 작도를 통해보면 하나의 길이를 다른 길이를 이용해 항상 표현할 수 있습니다. 그렇다면 반대로 무리수는 어떻게 될까요? \\sqrt3을 예로들어 작도 과정을 자세하게 살펴보도록 하겠습니다.\n\n앞서 본 테오도로스의 나선을 보면 1:2:\\sqrt3의 길이비를 가지는 선분이 직각삼각형을 만든다는 사실을 알 수 있습니다. 그러므로 길이의 비가 1:2인 선을 이용하여 \\sqrt3을 작도해보겠습니다. 길이가 a인 선분의 한 점을 고정하고 길이가 2배인 2a선분을 이용하여 원을 그립니다. 원과 a의 길이를 가진 선분이 수직으로 만나는 선을 그리면  a에 비해 \\sqrt3배의 길이를 가지는 선분을 얻을 수 있는데 이 선분의 길이를 쉽게 b라 하겠습니다. 이제 a의 정수배를 이용하여 b를 표현하기 위해 하나의 선분의 길이를 이용해 다른 선분의 길이를 찾아보겠습니다. 반지름의 길이가 a인 원을 그리면 b에서 반지름이 a인 원과 밑변이 만나는 점이 생기는데 이 길이를 c=b-a라 두겠습니다. 그리고  앞서 했던 방법과 마찬가지로 길이가 c인 정사각형을 하나 그리면 더 이상 그림을 채울 수 없으므로 남은길이를 d=a-c라 하고 이를 이용하여 다시 정사각형을 채우면 그림과 같이 됩니다.\n그런데 여기서 특이한 점이 있습니다. 작은 정사각형을 만드는 두 선과 빗변이 정확히 한 점에서 만나는 것처럼 보이죠. 정말 이 점에서 정확히 만날까요? 만나는지 아닌지 찾는 방법은 대수적 방법을 사용하면 간단합니다. c-d=e라 할때, 다음 식을 만족하는지 확인하면 됩니다. 두 직각삼각형의 그 비율이 같다면 닮음이기에 자연스럽게 한 점에서 일치하기 때문이죠.\n\\frac{b}{a}=\\frac{e}{d} \\Leftrightarrow \\frac{b}{a}=\\sqrt3\n앞서 작도에서 길이를 정의했듯\n\\begin{align*}\nc = b - a \\\\\nd = a - c \\\\\ne = c - d\n\\end{align*}\n이므로,  d와 e를 모두 a와 b를 이용해 나타낼 수 있습니다.\n\\begin{align*}\nd &amp;= a-c=a-(b-a)=2a-b\\\\\ne &amp;= c-d=c-(a-c)=2c-a=2(b-a)-a=2b-3a\n\\end{align*}\n그렇다면 다음과 같은 식이 성립하므로\n\\frac{b}{a} = \\frac{e}{d} = \\frac{2b-3a}{2a-b} = \\frac{2\\frac{b}{a}-3}{2-\\frac{b}{a}}\n간단하게 \\frac{b}{a}=x라 두면,\n\\begin{align*}\nx = \\frac{2x-3}{2-x} &amp; \\Leftrightarrow x(2-x)=2x-3\\\\\n&amp;\\Leftrightarrow x^2=3\\\\\n&amp;\\Leftrightarrow x=\\sqrt3\n\\end{align*}\n세 선분이 한 점에서 만난다는 사실을 증명할 수 있죠. 그리고 이렇게 한 점에서 만난다는 별거 아닌 성질이 무리수의 특징을 제일 잘 나타내는 특별한 성질입니다. 왜냐하면 큰 직사각형과 작은 직사각형이 닮음을 이루면서 무리수는 선분이 선분을 나누는 과정이 멈추지 못하고 계속 반복될 수 밖에 없기 때문이죠. 유리수는 통약가능하므로 어느 순간 멈추는 반면 무리수는 프랙탈과 같은 자기유사성에 때문에 (정수만의 비율로)통약가능하지 않았던 것입니다. 그런데 이러한 프랙탈과 같은 성질은 무리수에 대한 다른 시각을 제공합니다. 무리수로 만든 비율이 특정한 지점에서 반복된다는 것을 이용하면 순환하는 무한 소수인 유리수처럼 무리수도 간단하게 표현하는 방법이 있지 않을까요?\n연분수(Continued Fraction)\n연분수란 다음과 같이 꽤나 독특한 형태의 중첩된 분수를 이용해 수를 표현하는 방법을 말합니다. 일반적으로 실수를 나타낼 때, a_0은 정수이며 나머지 a_n은 양의 정수로 표현합니다.\nx=a_{0}+{\\cfrac {1}{a_{1}+{\\cfrac {1}{a_{2}+{\\cfrac {1}{a_{3}+\\,\\ddots }}}}}}\n예를 들어보죠. \\frac{19}{7}를 연분수로 표현해보겠습니다. \\frac{19}{7}의 정수부분을 찾기 위해 나누면 몫이 2가 됩니다. 이것이 연분수의 첫 번째 항 a_0가 됩니다.\n\\frac{19}{7} = 2 + \\frac{5}{7}\n나머지를 이용하여 다음항을 찾기 위해 역수를 취한 후 다시 정수부분을 찾으면 다음과 같이 나타낼 수 있습니다. 이 때 역수의 몫 즉, 정수부분인 1이 a_1이 됩니다.\n\\frac{19}{7} = 2 + \\frac{1}{\\frac{7}{5}} = 2+\\cfrac{1}{1 + \\frac{2}{5}}\n이 작업을 계속 반복하여 각 항을 찾으면 다음과 같이 \\frac{19}{7}를 연분수로 나타낼 수 있습니다.\n\\frac{19}{7} = 2 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{2}}}\n그런데 이러한 표기는 보기 어렵기에 일반적인 연분수 표기법으로 나타내면 다음과 같이 간략하게 나타낼 수 있습니다.\n[2; 1, 2, 2]\n유리수를 연분수로 표현하는 것은 분명히 그 자체로는 복잡해 보일 수 있습니다. 하지만 이렇게 표현함으로써 얻을 수 있는 수학적 통찰이나 계산의 효율성 등은 분명히 있습니다. 예를 들어 두 수 \\frac{7}{5}와 \\frac{11}{8}는 둘 중 어떤 수가 더 클지 바로 비교하기에는 어렵습니다. 그러나 두 수를 연분수 형태로 바꾸어보면\n\n\\frac{7}{5}의 연분수 표현: [1; 2, 2]\n\\frac{11}{8}의 연분수 표현: [1; 2, 1, 2]\n\n\\frac{7}{5}의 세 번째 항은 2이고, \\frac{11}{8}의 세 번째 항은 1이므로, \\frac{7}{5}이 \\frac{11}{8}보다 크다는 것을 직관적으로 비교할 수 있습니다.\n그렇다면 무리수는 연분수로 표현하면 어떻게 될까요? \\sqrt3은 1보다 크고 2보다 작은 수이므로 다음과 같이 적을 수 있습니다. 소수부분인 \\sqrt3-1을 연분수로 나타내기 위해 바꾸어 적으면\n\\sqrt3 = 1+\\sqrt3-1\n\\frac{1}{\\sqrt3-1}은 다음과 같이 바꿀 수 있고,\n\\frac{1}{\\sqrt3-1} = \\frac{\\sqrt3 +1}{2} = 1 + \\frac{\\sqrt3-1}{2}\n\\frac{2}{\\sqrt3-1}은 다음과 같이 나타낼 수 있으므로\n\\frac{2}{\\sqrt3-1} = \\sqrt3 + 1 = 2 + \\sqrt 3 -1\n\\sqrt3을 연분수 표현으로 나타내면 다음과 같이 됩니다.\n\\sqrt{3}=1+\n\\cfrac{1}{\n1+\\cfrac{1}{\n2+ \\sqrt3-1}}\n이때, \\sqrt3-1은 처음 나왔던 소수부분과 같으므로 이 과정을 반복하면 \\sqrt3은 1, 2가 반복되는 연분수로 나타낼 수 있습니다. \\sqrt3은 무리수라 소수점 아래 수들은 규칙적이지 않지만 연분수로 나타내면 반복적인 수의 나열로 표시할 수 있는거죠.\n\\begin{align*}\n\\sqrt{3} &amp;= 1.7320\\,5080\\,\\cdots \\\\\n&amp;=1+\n\\cfrac{1}{1+\\cfrac{1}{\n2+\\cfrac{1}{\n1+\\cfrac{1}{\n2+\\ddots}}}}\\\\\n&amp;= [1;1,2,1,2,\\cdots]\n\\end{align*}\n그리고 계산에 사용했던 값들은 앞서 우리가 도형에서 구했던 길이와 일치하므로 작도를 통해서도 유도할 수 있습니다.\n\\begin{gather*}\n\\sqrt3 = \\frac{b}{a} = 1 + \\frac{c}{a}, \\quad \\frac{c}{a} = 1 + \\frac{d}{c}, \\quad \\frac{c}{d} = 1 + \\frac{e}{d} = 1 + \\frac{b}{a}\n\\\\\n\\\\\nc = b-a = \\sqrt3 - 1\\\\\nd = a-c = 2 - \\sqrt3\\\\\n\\end{gather*}\n이렇게 무리수의 연분수표현을 이용하면 어떤 장점이 있을까요? 가장 큰 장점은 적당히 연분수를 “절단(Convergent)“하여 원하는 만큼 무리수를 근사할 수 있다는 것입니다. 이러한 방법은 복잡한 무리수를 유리수로 근사할 때, 단순한 정수 연산만을 필요로 하므로 계산이 상대적으로 간편합니다. 그리고 그 구조가 직관적이어서 이해하기도 쉽고 무리수가 어떤 유리수에 가깝다면 다른 방법보다 상대적으로 높은 정확도의 근사값을 얻을 수 있다는 장점도 있죠.\n\\begin{array}{|c|c|c|c|} \\hline\n\\text{Convergent} &amp; \\text{Continued Fraction} &amp; \\text{Fraction} &amp; \\text{Decimal}\\\\\n\\hline\nC_1 &amp; 1 &amp; 1 &amp; 1 \\\\\n\\hline\nC_2 &amp; 1 + \\frac{1}{1} &amp; \\frac{2}{1} &amp; 2 \\\\\n\\hline\nC_3 &amp; 1 + \\frac{1}{1 + \\frac{1}{2}} &amp; \\frac{5}{3} &amp; 1.\\dot6 \\\\ \n\\hline\nC_4 &amp; 1 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1}}} &amp; \\frac{7}{4} &amp; 1.75 \\\\\n\\hline \nC_5 &amp; 1 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2}}}} &amp; \\frac{19}{11} &amp; 1.7273 \\\\\n\\hline\nC_6 &amp; 1 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1}}}}} &amp; \\frac{26}{15} &amp; 1.7333 \\\\\n\\hline C_7 &amp; 1 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2}}}}}} &amp; \\frac{71}{41} &amp; 1.7317 \\\\\n\\hline\nC_8 &amp; 1 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1 + \\frac{1}{2 + \\frac{1}{1}}}}}}} &amp; \\frac{97}{56} &amp; 1.7321 \\\\\n\\hline \\end{array}\n무리수는 정수의 비율로 표현할 수는 없지만 정수의 비율로 얼마든지 가깝게 근사할 수 있는 비율입니다. 연분수를 이용하면 무리수를 정수의 연속적인 비율로 근사할 수 있으며, 이 근사값은 도형의 특정 위치나 비율에 대응될 수 있습니다.(모든 제곱근은 연분수로 나타내면 주기적이라는 것이 증명되어있다.) 이러한 성질때문에 전혀 관계 없어보이던 무리수가 정수비로만 이루어져있던 도형에서 정확히 딱 맞아 떨어졌던 것은 아닐까요?\nFootnotes\n\n\nT L Heath, A History of Greek Mathematics I (Oxford, 1921), 203-204, 209-212 ↩\n\n\nCommensurability - Wikipedia ↩\n\n\ncommensurability - Mathematics Stack Exchange ↩\n\n\nThe Pythagoreans and irrational numbers - Britannica ↩\n\n\n"},"Ray-math/Script/미분":{"slug":"Ray-math/Script/미분","filePath":"Ray math/Script/미분.md","title":"세상을 바꾼 방정식 3 - 미분","links":[],"tags":["양","뉴턴","극한","방법","비율","미적분학","물체","프린키피아","라이프니츠","곡선","변화","속도","무한소","표현","방정식","미분","미적분"],"content":"17세기는 운동에 관한 중요한 법칙들이 발견되는 시기였습니다. 갈릴레오 갈릴레이는 물체가 자유낙하 상태에서 일정한 가속도로 움직인다는 것을 발견하였고,\nv=gt\nv는 속도, g는 중력 가속도(지구에서 약 9.8 m/s²), t는 시간\n케플러는 행성이 태양 주위를 어떻게 움직이는지를 설명했죠.\n\n\n제1법칙 (궤도의 법칙): 모든 행성은 태양을 한 초점으로 하는 타원 궤도를 따라 움직인다.\n제2법칙 (면적의 법칙): 행성이 태양과 그 사이의 선분이 그리는 면적은 일정한 시간 동안 일정하다.\n제3법칙 (주기의 법칙): 행성의 궤도 주기의 제곱은 그 궤도의 장반경의 세제곱에 비례한다.\n\n\n갈릴레오의 운동법칙과 케플러의 행성 운동법칙은 각각 특정한 상황에서 물체의 운동을 설명했지만 이 두 법칙은 그 범위가 제한적이며, 모든 상황에서 물체의 운동을 설명할 수는 없었습니다.  이런 한계를 극복하기 위해 뉴턴은 보다 일반적인 운동법칙을 제시하게 되는데 우리가 흔히 알고 있는 뉴턴의 운동법칙입니다.\n\n\n제1법칙 (관성의 법칙): 외부 힘이 작용하지 않는 물체는 휴면 상태를 유지하거나, 일정한 속도로 직선 운동을 계속한다.\n제2법칙 (가속도의 법칙): 물체에 작용하는 힘은 물체의 질량과 가속도의 곱과 같다.\n제3법칙 (반작용의 법칙): 물체 A가 물체 B에 힘을 가하면, 물체 B는 물체 A에 동일한 크기의 힘을 반대 방향으로 가한다.\n\n\n여기서 두 번째 법칙인 가속도의 법칙을 눈여겨 보겠습니다. 가속도의 법칙은 “물체에 작용하는 힘은 그 물체의 질량과 가속도의 곱과 같다.”라고 표현합니다.\nF=ma\n힘은 속도가 아니라 속도의 변화량과 관련이 있다는 거죠. 여기서 반대로 이러한 질문할 수 있습니다. 이 세상에 변화하지 않는게 있을까요? 우리는 그러한 변화를 어떻게 이해하고 표현할 수 있을까요?\n뉴턴과 라이프니츠의 미적분\n뉴턴이 미적분학을 발명하게 된 배경은 그의 과학적인 문제 해결 과정에서 시작되었습니다. 그는 물리학적 현상, 특히 운동에 대한 자연의 법칙을 찾아내려는 노력 속에서 미적분학의 필요성을 느꼈습니다. 당시 그는 물체의 속도나 위치가 시간에 따라 어떻게 변하는지를 정확히 설명하고 계산하는 방법이 필요했지만 그런 방법은 당시에는 존재하지 않았습니다. 이런 문제를 해결하기 위해 뉴턴은 ‘플럭시온(fluXion)‘이라는 방법을 개발하였고, 이는 나중에 우리가 지금 알고 있는 미적분학으로 발전하게 되었습니다.\n반면에 라이프니츠는 사회, 철학, 언어학, 법학, 역사학, 그리고 기술까지 다양한 분야에서 지식을 탐구했습니다. 그의 연구의 주요 목표 중 하나는 모든 학문의 지식을 통합하고 이해하는 보편적인 언어와 방법론을 찾는 것이었죠. 이러한 추구가 그를 수학의 세계로 인도했고, 그는 수학이 이러한 보편적 언어가 될 수 있음을 깨달았습니다. 이 과정에서 그는 미분과 적분을 발견하게 되었고, 미적분학의 기본 이론인 ‘미분과 적분의 기본 정리’를 정리했습니다.\n뉴턴과 라이프니츠가 동시대에 미적분을 발견하게 된 것은 사실 피에르 드 페르마의 미적분학 초기 연구 덕분입니다. 페르마는 최대 최소 문제에 대한 접근법을 통해 접선의 개념을 도입하였고, 이 접선의 개념은 뉴턴과 라이프니츠가 미적분학을 발전시키는데 중요한 역할을 하게된거죠. 우리가 교과서에서 배우듯 페르마는 곡선의 특정 지점에서의 기울기를 찾는 방법으로써 접선의 개념을 도입하였습니다. 이는 곡선 위의 한 점 주변의 작은 부분을 곧은 선으로 근사화하는 것을 의미하며, 그 지점에서의 기울기를  구하는 방법을 제공합니다. 뉴턴과 라이프니츠는 페르마의 이 접선 개념을 받아들이고 확장하였습니다. 뉴턴은 ‘플럭시온’ 이론을 개발하였고, 라이프니츠는 ‘차분’ 방법론을 제안하였습니다. 이들 방법론은 모두 곡선의 점에서의 기울기를 계산하려는 페르마의 원래 접근법을 수학적으로 엄밀하게 만든 결과인거죠.\n뉴턴의 플럭시온\n플럭시온(fluxions)은 아이작 뉴턴이 개발한 수학적 방법으로, 현대의 미분법에 대응되는 개념입니다. 뉴턴은 Fluxion을 어떤 양 x (Fluent라고 불림)의 속도로 정의하고,Fluxion을 변화하는 양의 순간적인 속도 즉, 변화율로 보았습니다. 뉴턴은 Fluent가 “무한히 작은” 시간 o 동안 증가하는 양을 순간이라고 정의했습니다. 따라서 x의 순간은 x + \\dot x\\cdot o가 됩니다. 이 뜻은 어떤 방정식이 시간에 따라 변하지 않는 Fluent 인 x와 y의 관계를 표현한다면 그 방정식은 x + \\dot x\\cdot o와 y + \\dot y\\cdot o관계로 확장 될 수 있다는 것을 의미합니다.\n우선 쉬운 예를 들어 뉴턴의 미분을 설명해보겠습니다. y=x^2에 대해 x가 x+o로 증가할 때 즉, 무한소라는 o 만큼의 짧은 시간 동안의 평균 변화율은 다음과 같이 적을 수 있습니다.\n{ {(x+o)^2-x^2 \\over o} } = {{2xo+o^2} \\over {o} } = 2x+o\n이때 o는 어떤 수인지는 모릅니다. 다만 2x+o라는 변화율은 o가 무한소이므로 0에 한 없이 가까운 수이기에 변화율은 2x에 한 없이 가까울 것입니다. 결론적으로 o가 어떤 값인지 몰라도 순간 변화율인 2x를 구할 수 있는거죠.\n나아가 y=x^2에 대해 x와 y대신 x + \\dot x\\cdot o와 y + \\dot y\\cdot o를 대입해 정리해보겠습니다.\ny=x^2\n이므로 x와 y대신 x + \\dot x\\cdot o와 y + \\dot y\\cdot o를 대입하면\ny + \\dot y\\cdot o=(x + \\dot x\\cdot o)^2\n입니다. 제곱하여 식을 정리하면\ny + \\dot y\\cdot o= x^2 + 2 \\dot x\\cdot o +o^2\n입니다. 이때, y=x^2이므로 소거하고, 무한소 o로 나누어주면\n\\dot y=2x \\dot x +o\n이고, o는 무한소이므로\n\\dot y=2x \\dot x\n라는 식을 얻을 수 있습니다. 오늘날에 \\dot y라는 표현은 y&#039;이라는 표현으로 바뀌었습니다.\n라이프니츠의 dy/dx\n라이프니츠의 미분법도 큰 차이는 없습니다. 다만 무한소를 o대신 dx라는 표현으로 바꾼 것 뿐이죠. x의 작은 변화량을 dx라고 하고, 원래의 공식에 x+dx, y+dy를 대입합니다.\n\\begin{align*}\ny+dy &amp;=(x+dx)^2\\\\\ny+dy &amp;=x^2+2x\\cdot dx+(dx)^2\\\\\ndy &amp;=2x\\cdot dx + (dx)^2\\\\\n&amp;\\Rightarrow{{dy}\\over{dx}} = 2x +dx \\\\\n&amp;\\Rightarrow {{dy}\\over{dx}} = 2x\n\\end{align*}\n이렇게 보면 두 방식은 표기하는 방법만 다를 뿐 같은 연산이고, 그 아이디어마저도 같기에 누가 먼저 미적분을 발견했는가에 대한 논쟁이 있을 수 밖에 없습니다. 어떻게보면 초기 아이디어가 접선을 구한다는 페르마의 아이디어에서 부터 출발했기에 당연한 결과라고 생각합니다.\n그런데 이 증명과정들은 모두 논리적 허점을 갖고 있습니다. 무한소는 그 자체로 정의하기 어려운 개념입니다. ‘아주 작은 양’, ‘더 이상 나눌 수 없는 양’이라는 직관적인 설명 외에 구체적인 수치로 표현하기가 어렵죠. 앞서 설명에서 보면 o나 dx는 0이 아닌 것처럼 연산하다가 0처럼 취급하는 것은 논리적으로 납득하기 어렵습니다. 이런식의 연산은 1 \\times 0 = 2\\times0이므로 1=2라고 하는 것과 같습니다. 이로 인해 무한소를 사용한 초기의 미적분학은 비판의 대상이 되었습니다. 하지만 이 아이디어를 사용해 뉴턴은 다양한 과학적 사실을 합리적으로 설명해나아갔습니다. 100년 뒤에 코시와 바이어스트라스 등의 수학자들에 의해 무한소의 엄밀한 기초가 마련되었고, 현대에는 없어서는 안될 중요한 개념으로 자리매김했습니다.\n프린키피아\n라이프니츠 입장에서는 조금 억울한 측면이 있습니다. 앞서 말했듯 이 시기는 미분에 대한 개념이 싹띄우기 시작한 때라 학자들이라면 이 개념에 대해 어렴풋이 다 알고있었죠. 심지어 라이프니츠는 이 개념을 식으로 정리하고 논문을 발표한 반면 뉴턴은 그렇지 않았습니다. 그럼에도 불구하고 미적분의 창시자라 하면 뉴턴으로 알려진 이유는 프린키피아 라는 책 때문입니다. 프린키피아에는 직접적으로 미적분을 식으로 표현하지 않았지만 여러 기하학적 개념은 기본적으로 미적분학의 원리에 근거하고 있습니다. 그렇다면 왜 프린키피아에 미적분에 대한 아이디어가 있다고 하는지 살펴보겠습니다.12\n1권 1장 1번 보조정리\n프린키피아의 1권 1장 1번 보조정리는 다음과 같습니다.\n\nLEMMA I. Quantitates, ut &amp; quantitatum rationes, quæ ad æqualitatem dato tempore constanter tendunt &amp; eo pacto propius ad invicem accedere possunt quam pro data quavis differentia; fiunt ultimo æquales. Si negas, sit earum ultima differentia D. Ergo nequeunt propius ad æqualitatem accedere quam pro data differenti\n\n영어가 아니라서 좀 당황스럽죠. 17세기 유럽에서 라틴어는 그 시대의 학계에서 권위 있는 언어로 간주되었습니다. 라틴어로 논문을 작성함으로써 연구의 중요성과 권위성을 강조할 수 있었고, 유럽 전역의 학자들이 서로의 연구를 읽고 이해할 수 있었죠. 그래서 프린키피아도 라틴어로 작성되었습니다.\n번역하면 다음과 같습니다.\n\n보조정리 1. 주어진 시간 동안 항상 동등성을 향해 나아가는 수량과 그 비율은, 어떤 주어진 차이보다도 더 가까워질 수 있으며, 결국 같아집니다. 만약 이를 부정한다면, 그 차이를 D라고 가정합시다. 그렇다면 주어진 차이 D보다 동등성에 더 가까워질 수 없게 됩니다. 이는 가정과 상반됩니다.\n\n극한을 배우신 분들이나 수학을 전공한 분들이라면 이 개념은 누가봐도 극한의 개념이라고 생각하실 수 있습니다. 심지어 부정해서 증명하는 방법은 엡실론-델타 논법에서 주로 사용하는 방법이죠. 이 보조정리는 극한의 초기 개념을 반영하고 있습니다. 뉴턴은 이 보조정리를 통해 무한소와 극한에 대한 그의 생각을 표현하고  변화하는 양과 그 변화율 사이의 관계를 설명하려고 했습니다.\n1권 1장 2번 보조정리\n프린키피아의 1권 1장 2번 보조정리는 적분에 관한 내용입니다. 보조정리 1번을 이용해 직사각형을 사용하여 곡선 아래의 영역을 근사하고, 이 직사각형의 너비를 무한히 줄이면서 그 수를 무한대로 늘려서 곡선 아래의 정확한 면적을 구하는 과정을 설명하죠. 우리가 오늘날 보는 정적분과 급수의 관계를 떠올리게 만듭니다.\n\nLemma II. Si in figura quavis AacE rectis Aa, AE, &amp; curva acE comprehensa, inscribantur parallelogramma quotcunq; Ab, Bc, Cd, &amp;c. sub basibus AB, BC, CD, &amp;c. æqualibus, &amp; lateribus Bb, Cc, Dd, &amp;c. figuræ lateri Aa parallelis contenta; &amp; compleantur parallelogramma aKbl, bLcm, cMdn, &amp;c. Dein horum parallelogrammorum latitudo minuatur, &amp; numerus augeatur in infinitum: dico quod ultimæ rationes, quas habent ad se invicem figura inscripta AKbLcMdD, circumscripta AalbmcndoE, &amp; curvilinea AabcdE, sunt rationes æqualitatis. Nam figuræ inscriptæ &amp; circumscriptæ differentia est summa parallelogrammorum Kl + Lm + Mn + Do, hoc est (ob æquales omnium bases) rectangulum sub unius basi Kb &amp; altitudinum summa Aa, id est rectangulum ABla. Sed hoc rectangulum, eo quod latitudo ejus AB in infinitum minuitur, sit minus quovis dato. Ergo, per Lemma I, figura inscripta &amp; circumscripta &amp; multo magis figura curvilinea intermedia fiunt ultimo æquales.   Q. E. D.\n\n\n보조정리 2. 어떤 도형 AacE에서 직선 Aa, AE 및 곡선 acE에 의해 둘러싸인 영역에, 기본선 AB, BC, CD 등이 같고, Bb, Cc, Dd 등의 도형의 변 Aa와 평행한 변을 갖는 평행사변형 Ab, Bc, Cd 등을 그릴 수 있다. 그리고 평행사변형 aKbl, bLcm, cMdn 등을 완성하십시오. 그런 다음 이 평행사변형의 너비를 줄이고 그 수를 무한대로 늘립니다. 그렇다면, 그림 AKbLcMdD, AalbmcndoE 및 곡선 AabcdE 사이의 최종 비율은 동등한 비율입니다. 그림 내부와 외부의 차이는 평행사변형 Kl + Lm + Mn + Do의 합이며, 모든 기본선이 같기 때문에, 이는 기본선 Kb와 높이 Aa의 합인 직사각형의 면적과 같습니다. 그러나 이 직사각형의 너비 AB는 무한히 작아지므로 주어진 어떤 값보다 작습니다. 따라서 보조정리 1에 따라, 내부 도형과 외부 도형, 그리고 중간의 곡선 도형은 결국 같아집니다. Q. E. D.\n\n\n신기한 점은 프린키피아를 읽다보면 아이디어를 수식보다는 논리와 기하학을 이용해 주로 설명합니다. 우리가 오늘날 쓰는 극한 표현과는 사뭇 다르죠. 그 이유는 부가 정리 1권 1장 보조정리 11번의 부가설명들을 보면 좋을 것 같습니다.\n\nQuæ de curvis lineis deq; superficiebus comprehensis demonstrata sunt, facile applicantur ad solidorum superficies curvas &amp; contenta. Præmisi vero hæc Lemmata ut effugerem tædium deducendi perplexas demonstrationes, more veterum Geometrarum, ad absurdum. Contractiores enim redduntur demonstrationes per methodum indivisibilium. Sed quoniam durior est indivisibilium Hypothesis; &amp; propterea Methodus illa minus Geometrica censetur, malui demonstrationes rerum sequentium ad ultimas quantitatum evanescentium summas &amp; rationes, primasq; nascentium, id est, ad limites summarum &amp; rationum deducere, &amp; propterea limitum illorum demonstrationes qua potui breuitate præmittere. His enim idem præstatur quod per methodum indivisibilium, &amp; principiis demonstratis jam tutius utemur. Proinde in sequentibus, siquando quantitates tanquam ex particulis constantes consideravero, vel si pro rectis usurpavero lineolas curvas, nolim indivisibilia sed evanescentia divisibilia, non summas &amp; rationes partium determinatarum, sed summarum &amp; rationum limites semper intelligi, vimq; talium demonstrationum ad methodum præcedentium Lemmatum semper revocari.\n\n\n곡선과 포함된 표면에 대한 설명은 쉽게 곡선의 표면과 내용에 적용됩니다. 그러나 나는 고대 기하학자들의 방식으로 복잡한 증명을 추론하기 위한 지루함을 피하기 위해 이 보조정리를 앞서 제시했습니다. 실제로, 증명은 불가분의 방법을 통해 간결해집니다. 그러나 불가분의 가설이 더 어렵기 때문에 그 방법은 덜 기하학적으로 간주되므로, 나는 다가오는 양의 극한과 비율을 증명하고 싶었습니다. 이를 통해 불가분의 방법을 통해 동일한 것이 제공되며, 이미 증명된 원칙을 더 안전하게 사용할 수 있습니다. 따라서 다음에, 나는 양을 부분으로 구성된 것처럼 고려하거나, 곡선을 직선으로 사용하면 항상 극한을 의미하고, 그러한 증명의 힘을 앞서 제시된 보조정리의 방법으로 되돌리기를 원하지 않습니다.\n\n원문에서 “methodum indivisibilium”은 “불가분의 방법” 또는 “불분리 방법”으로 해석될 수 있습니다. 오늘날 우리가 ‘무한소’라고 부르는 개념이죠.  당시 뉴턴은 미적분학의 기초 개념에 대한 근본적인 도전에 직면했습니다. 특히, 사라지는 양의 극한 비율이나 무한히 증가하는 양의 극한 비율 같은 개념은 명확하게 정의되지 않았죠. 이러한 개념들은 수학의 기초를 흔들며, 다른 사람들로 하여금 그 정당성에 대한 의문을 제기하였습니다. 뉴턴은 이러한 도전을 해결하기 위해 “프린키피아”에서 불가분의 방법을 사용하여 미적분학의 개념을 명확히 설명하려고 하였습니다. 그는 양이 사라지거나 무한히 증가할 때의 극한 비율을 정의한 것이죠. 다음 문단을 보면 이 내용에 대한 이야기가 나와 있습니다.\n\nObjectio est, quod quantitatum evanescentium nulla sit ultima proportio; quippe quæ, antequam evanuerunt, non est ultima, ubi evanuerunt, nulla est. Sed &amp; eodem argumento æque contendi posset nullam esse corporis ad certum locum pergentis velocitatem ultimam. Hanc enim, antequam corpus attingit locum, non esse ultimam, ubi attigit, nullam esse. Et responsio facilis est. Per velocitatem ultimam intelligi eam, qua corpus movetur neq; antequam attingit locum ultimum &amp; motus cessat, neq; postea, sed tunc cum attingit, id est illam ipsam velocitatem quacum corpus attingit locum ultimum &amp; quacum motus cessat. Et similiter per ultimam rationem quantitatum evanescentium intelligendam esse rationem quantitatum non antequam evanescunt, non postea, sed quacum evanescunt. Pariter &amp; ratio prima nascentium est ratio quacum nascuntur. Et summa prima &amp; ultima est quacum esse (vel augeri &amp; minui) incipiunt &amp; cessant. Extat limes quem velocitas in fine motus attingere potest, non autem transgredi. Hæc est velocitas ultima. Et par est ratio limitis quantitatum &amp; proportionum omnium incipientium &amp; cessantium. Cumq; hic limes sit certus &amp; definitus, Problema est vere Geometricum eundem determinare. Geometrica vero omnia in aliis Geometricis determinandis ac demonstrandis legitime usurpantur. Contendi etiam potest, quod si dentur ultimæ quantitatum evanescentium rationes, dabuntur &amp; ultimæ magnitudines; &amp; sic quantitas omnis constabit ex indivisibilibus, contra quam Euclides de incommensurabilibus, in libro decimo Elementorum, demonstravit. Verum hæc Objectio falsæ innititur hypothesi. Ultimæ rationes illæ quibuscum quantitates evanescunt, revera non sunt rationes quantitatum ultimarum, sed limites ad quos quantitatum sine limite decrescentium rationes semper appropinquant, &amp; quas propius assequi possunt quam pro data quavis differentia, nunquam vero transgredi, neq; prius attingere quam quantitates diminuuntur in infinitum. Res clarius intelligetur in infinite magnis. Si quantitates duæ quarum data est differentia augeantur in infinitum, dabitur harum ultima ratio, nimirum ratio æqualitatis, nec tamen ideo dabuntur quantitates ultimæ seu maximæ quarum ista est ratio. Igitur in sequentibus, siquando facili rerum imaginationi consulens, dixero quantitates quam minimas, vel evanescentes vel ultimas, cave intelligas quantitates magnitudine determinatas, sed cogita semper diminuendas sine limite.\n\n\n반대로, 사라지는 양의 극한 비율이 없다는 것입니다. 실제로 그것들이 사라지기 전에는 극한이 아니며, 사라지면   없습니다. 그러나 같은 논리로, 특정 위치로 이동하는 몸의 극한 속도도 없다고 주장할 수 있습니다. 실제로 몸이 위치에 도달하기 전에는 극한이 아니며, 도달하면 없습니다. 그리고 대답은 쉽습니다. 극한 속도는 몸이 움직이는 속도를 의미하며, 위치에 도달하기 전이나 후가 아니라 도달할 때입니다. 마찬가지로, 사라지는 양의 극한 비율은 사라지기 전이나 후가 아니라 사라질 때의 비율로 이해해야 합니다. 마찬가지로, 첫 번째 비율은 그것들이 생길 때의 비율입니다. 그리고 첫 번째와 마지막 합계는 시작하고 멈출 때입니다. 움직임이 끝날 때 속도가 도달할 수 있는 한계가 있지만 넘어서지는 않습니다. 이것이 극한 속도입니다. 그리고 모든 시작과 끝의 양과 비율의 한계에 대한 동일한 이유가 있습니다. 이 한계는 확실하고 명확하므로, 그것을 결정하는 문제는 진정한 기하학적 문제입니다. 그러나 기하학적인 모든 것은 다른 기하학적인 것들을 결정하고 증명하는 데 합법적으로 사용됩니다. 또한 주장할 수 있습니다. 만약 사라지는 양의 극한 비율이 주어진다면, 극한 크기도 주어질 것이며, 따라서 모든 양은 불가분의 부분으로 구성될 것입니다. 이는 유클리드의 “원론” 제10권에서 비측정 가능한 것에 대해 증명한 것과는 반대입니다. 그러나 이 이의는 잘못된 가설에 기반하고 있습니다. 양이 사라질 때의 극한 비율은 실제로 마지막 양의 비율이 아니라, 무한히 감소하는 양의 비율이 항상 접근하는 한계입니다. 이 한계는 주어진 차이보다 더 가까이 접근할 수 있지만, 절대로 넘어서거나 양이 무한히 줄어들기 전에 도달할 수는 없습니다. 이것은 무한히 큰 것에서 더 명확하게 이해될 수 있습니다. 만약 두 양의 차이가 주어지고 이들이 무한히 증가한다면, 이들의 극한 비율, 즉 동등한 비율이 주어질 것입니다. 그러나 이 비율이 최대 또는 극한 크기의 양이라는 것은 아닙니다. 따라서 다음에, 만약 사물의 쉬운 상상을 위해, 나는 최소한의 양, 사라지는 양, 또는 극한 양이라고 말한다면, 항상 크기로 결정된 양을 의미하는 것이 아니라, 항상 무한히 줄어들 수 있다고 생각하십시오.\n\n뉴턴은 사라지는 양의 극한 비율이나 무한히 증가하는 양의 극한 비율이 실제로 마지막 양의 비율이 아니라, 무한히 감소하거나 증가하는 양의 비율이 항상 접근하는 한계라고 주장하였습니다. 이 한계는 양이 무한히 줄어들거나 증가하기 전에 도달할 수 있는 값이며, 이를 통해 미적분학의 기초 개념을 명확히 한거죠.  뉴턴은 당시의 수학자들에게 익숙한 기하학적 접근 방법을 사용하여  미적분학의 중요성을 인식시키게 됩니다. 복잡한 수학적 개념들을 단순화하여 전달한 ‘프린키피아’는 미적분학의 본질적 도전에 대한 그의 답변이자, 미적분학에 대한 깊은 이해와 현대 과학의 기초로 구축하는 데 중요한 역할을 한 작품인거죠.\n프린키피아의 원 제목은 “자연 철학의 수학적 원리”입니다. 자연 현상을 수학적으로 접근하여 설명하려고 했죠. 뉴턴의 방법론은 실험과 관찰을 통한 데이터를 기반으로 수학적 모델을 구축하는 것이었습니다. 현대 과학의 기초를 형성한거죠. 이 때문에 라이프니츠는 미분을 이용하여 거의 아무것도 하지 못한 반면 뉴턴은 자연 현상을 예측하고 설명하는 데 성공했다고 평가합니다. 다음편으로 이어집니다.\nFootnotes\n\n\nPhilosophiæ Naturalis Principia Mathematica ↩\n\n\nPhilosophiae Naturalis Principia Mathematica by Isaac Newton ↩\n\n\n"},"Ray-math/Script/비버가-바쁠만-했네":{"slug":"Ray-math/Script/비버가-바쁠만-했네","filePath":"Ray math/Script/비버가 바쁠만 했네.md","title":"비버가 바쁠만 했네","links":[],"tags":["상태","기계","함수","비버","튜링","계산","가능","이동","기호","테이프","추측"],"content":"결정문제\n‘결정 문제’란 모든 수학적 명제에 대해 참인지 거짓인지를 유한 시간내에 판별할 수 있는 일반적인 절차, 즉 알고리즘이 존재하는지를 묻는 것이었습니다. 이 문제를 처음 제기한 힐베르트는 이러한 알고리즘이 존재할 것이라 기대했습니다. 1920년대에는 수학적 엄밀성에 대한 열정이 고조되어 있었고, 수학적 진리를 탐구하는 강력한 체계들이 속속 등장하고 있었기 때문입니다. 힐베르트는 수학이 충분히 강력하다면, 모든 문제에 대해 확실한 답을 구할 수 있을 것이라 보았던 것입니다.\n하지만 10년이 채 지나지 않은 1936년, 영국의 젊은 수학자 앨런 튜링은 ‘계산 가능한 수와 결정 문제에 관한 적용에 관하여’라는 논문을 통해 모든 수학적 명제를 증명하거나 반증할 수 있는 하나의 보편적인 절차, 즉 알고리즘이 존재하지 않는다는 사실을 증명합니다.\n튜링 기계(Turing Machine)\n튜링의 논증은 매우 독창적이었는데, 그는 ‘튜링 기계’라는 개념적인 장치를 통해 어떤 명제가 주어졌을 때 이 명제를 풀기 위해 필요한 단계별 과정이 존재하는지 검토했습니다. 유한하고 기계적인 절차를 통해 계산 가능한 함수라는 직관적 개념을 형식화하는 데 성공한거죠.\n튜링 기계는 무한히 긴 테이프(tape)를 갖춘 상상의 계산 기계입니다. 이 테이프는 같은 크기의 작은 칸(셀, cell)으로 나누어져 있으며, 각 셀에는 특정 기호가 기록됩니다. 튜링 기계의 헤드(head)는 테이프 위를 이동하며 셀에 기록된 기호를 읽거나 새로운 기호를 써넣을 수 있습니다. 튜링 기계의 현재 상태는 상태 기록기(state register)에 저장되며, 상태에 따라 기계의 동작은 동작 지침(action table)이라는 지침표에 의해 결정됩니다.\n\n\n                  \n                  튜링 기계 \n                  \n                \n\n\n테이프(Tape)는 무한히 긴 종이와 비슷한 것으로, 작은 칸들로 나뉘어 있으며 각각의 칸에는 글자나 숫자(기호, Symbol)가 적혀 있을 수 있고, 비어 있을 수도 있습니다. 테이프는 상징적인 것으로 필요한 만큼 양쪽으로 더 길게 늘어날 수 있습니다. 대부분의 튜링 기계 문제에서 일관된 초기적은 제공하기 위해  테이프가 모두 0으로 채워진 상태에서 시작합니다.\n머리(Head)는 테이프 위에서 이동하며 기호를 읽거나 쓸 수 있는 작은 장치입니다. 머리는 칸을 하나씩 움직이며 현재 위치에 어떤 기호가 적혀 있는지를 읽고, 그에 따라 명령을 실행합니다. 예를 들어, 머리가 0이라는 기호를 읽고 1로 바꾸거나, 테이프를 오른쪽으로 한 칸 이동하는 식입니다. 머리는 한 번에 한 칸씩 움직이며 읽기(read)와 쓰기(write) 작업을 수행하는 역할을 합니다.\n튜링 기계에는 상태(State) 라는 개념이 있습니다. 상태 기록기 (State Register)는 기계가 지금 어떤 상황에 있는지를 기억하는 역할을 합니다. 튜링 기계은 항상 하나의 상태에 있으며, 이 상태가 바뀌면서 수행할 작업도 달라집니다.\n튜링 기계는 기계가 무엇을 해야 할지 미리 정해진 동작 지침(Action Table) 에 따라 작동합니다. 동작 지침은 기계가 특정 상태에 있을 때 특정 기호를 읽으면 어떤 행동을 해야 하는지를 알려줍니다. 예를 들어, 동작 지침에는 다음과 같은 내용이 있을 수 있습니다.\n\n상태가 A이고 0을 읽고 있다면, 1을 쓰고, 오른쪽으로 한 칸 이동하며(R), B라는 상태로 전환(Change State)한다.\n상태가 B이고 1을 읽고 있다면, 그대로 두고, 왼쪽으로 한 칸 이동하며(L), C라는 상태로 전환한다.\n\n\n\n\n이해하기 쉽게 수식으로 정리해보겠습니다. 전이 함수 \\delta는 튜링 기계의 동작을 정의하며 다음과 같은 형식으로 표현됩니다.1\n\\delta(\\text{현재 상태}, \\text{읽은 기호}) = (\\text{쓰는 기호}, \\text{이동 방향}, \\text{다음 상태})\n예를 들어 \\delta(A, 0) = (1, R, H)을 보겠습니다. 이 식을 한 줄로 요약하면, 현재 상태가 A이고 읽은 기호가 0이면, 1을 쓰고, 헤드를 오른쪽으로 이동한 후, 종료 상태 H로 변경하는 것을 의미합니다. 따라서 모든 셀이 0인 빈 테이프에서 시작하여, 첫 번째 셀에서 0을 읽고 1을 쓰고 오른쪽으로 이동한 후 종료합니다.\n다음으로 \\delta(A, 0) = (1, R, A)이라면, 첫 번째 셀에서 0을 읽고 1을 쓰고 오른쪽으로 이동하여 상태 A를 유지합니다. 두 번째 셀에서도 0을 읽고 1을 쓰고 오른쪽으로 이동하여 상태 A를 유지합니다. 그런데 초기 테이프에는 1이 없으므로 기계는 무한히 1을 출력하는 루프에 빠지며 기계는 종료되지 않습니다.\n앨런 튜링는 오늘날 튜링 머신이라 불리는 개념을 정의하며, 정수에 대한 함수가 직관적으로 계산 가능하다는 것이 오직 튜링 머신으로 계산 가능할 때만 해당된다고 주장했습니다. 이와 비슷한 시기에 다른 연구자들도 다양한 계산 모델을 제안했으나, 이들 역시 튜링 머신과 동일한 함수 집합을 계산하는 것으로 판명되었습니다.\n일련의 연구를 통해 계산 가능성에 대한 직관적 개념을 튜링 머신의 형식적 개념으로 포착하여 ‘어떤 함수가 계산 가능하다면, 그 함수는 튜링 머신으로 계산 가능하다.‘는 처치-튜링 논제(Church-Turing Thesis)로 발전했습니다.2 따라서 우리가 직관적으로 계산 가능하다고 여기는 모든 함수는 튜링 머신이라는 형식적 모델을 통해서만 계산될 수 있으며, 다른 어떤 계산 모델로도 이보다 더 많은 함수를 계산할 수 없다고 볼 수 있습니다. 이 논제는 수학적 정리가 아닌 가설로 간주되지만, 아직까지 이 논제를 반박할 만한 계산 모델이 아직 발견되지 않았고, 실용적인 컴퓨팅의 모든 영역에서 튜링 모델은 표준으로 받아들여지고 있습니다.\n계산 가능한 함수와는 달리 어떤 계산 모델이 주어지면, 대각화 방법을 통해 쉽게 계산 불가능한 함수를 정의할 수 있습니다. 대각화 방법이란 모든 계산 가능한 함수들의 목록을 작성한 후, 목록에 있는 각 함수와 구별되는 함수를 정의하는 방법입니다. 이렇게 정의된 함수는 계산 불가능한 함수가 됩니다. 그러나 대각화를 통한 정의는 목록 선택과 마지막 함숫값 선택에 너무 많은 여지를 남깁니다. 따라서 계산 불가능한 함수도 단순하고 자연스러우며 모호함이 없는 정의가 필요했습니다.\n계산할 수 없는 함수\n티보르 라도(Tibor Radó)는 튜링의 연구가 남긴 한계를 더욱 확장하며, 계산할 수 없는 함수의 본질에 초점을 맞췄습니다. 라도는 계산 불가능성을 단순히 추상적인 한계로 두기보다, 한계를 실제로 체감할 수 있는 구체적인 예로 설명하고자 했습니다. 이렇게 탄생한 개념이 바로 **바쁜 비버 함수(Busy Beaver Function)**입니다.\n바쁜 비버 함수는 \\Sigma 함수와 S 함수를 포괄하는 개념으로 사용됩니다.3\n\n\n                  \n                  Note\n                  \n                \n\n\n\n\\Sigma(n,k)는 n개의 상태와 k개의 기호를 가진 튜링 기계들 중에서 멈추기 전까지 테이프에 남길 수 있는 최대 1(또는 특정 기호)의 개수를 나타냅니다. 즉, 최대한 많은 1을 남기는 기계를 찾는 것이 목표입니다.\nS(n,k)는 n개의 상태와 k개의 기호를 가진 튜링 기계들 중에서 멈추기 전까지 수행하는 최대 이동 횟수 즉, 가장 오래 이동하는 기계를 찾는 것을 목표로 합니다.\n\n\n\n\n이 두 함수는 각각 다른 기준으로 튜링 기계의 ‘바쁨’을 측정하는 지표로, 튜링 기계가 계산 가능한 최대한의 작업량을 정의합니다. 자연에서 가장 부지런한 동물로 꼽히는 비버는 항상 일하는 모습으로 잘 알려져 있습니다. 이러한 비유에서 착안하여, 주어진 조건 내에서 최대한 많은 작업을 수행하는 튜링 기계의 특성을 강조하며 이 함수를 ‘바쁜 비버 함수’라고 부르게 되었습니다. 나무 막대기 처럼 생긴 1로 둑을 쌓는 점도 유사점이라 생각합니다.\n바쁜 비버 문제의 고전적인 정의가 기호가 2개인 튜링 기계를 기반으로 했고, 기호 수가 늘어나면 튜링 기계의 복잡성이 크게 증가하기 때문에 일반적으로 \\Sigma(n)이나 S(n)이라 하면 k=2인 경우를 고려한 것입니다.\n\\Sigma(n)=\\Sigma(n,2), \\quad S(n)=S(n,2)\n때에 따라 BB(n)=\\Sigma(n)이나, BB(n)=S(n)으로 나타내긴 하지만 저는 각각 나누어 값을 찾아보도록 하겠습니다.\nBB(1)\n구체적인 예시로 BB(1)의 값을 구해보겠습니다. BB(1)은 상태가 하나인 바쁜 비버가 다음과 같은 조건에서 수행할 수 있는 최대 작업을 의미합니다.\n\n기계가 멈출 때까지 테이프에 남기는 1의 최대 개수인 \\Sigma(1).\n기계가 멈출 때까지 수행하는 최대 이동 횟수인 S(1).\n\n이 값을 찾기 위해 상태가 한 가지인 바쁜 비버가 수행할 수 있는 모든 동작을 고려해보겠습니다. 우선 기계의 동작을 결정하는 전이 함수를 정의해보겠습니다. 4\n상태가 하나이므로, 현재 상태 A에서 읽을 수 있는 기호 0과 1에 대한 전이 함수를 설정해야합니다. 초기 테이프는 모두 0이므로, 첫 번째로 고려해야 할 전이 함수는 \\delta(A, 0)입니다. 다음으로, 최대한 많은 1을 테이프에 남기기 위해 0을 1로 바꿔야 합니다. 마지막으로 바쁜 비버가 멈추기 위해서는 종료 상태 H로 변경해야 합니다.\n\\delta(A, 0) \\rightarrow (1, R, \\textbf{H})\n반면에 상태가 하나뿐인 조건에서, 바쁜 비버가 더 많은 1을 남기기 위해서는 추가적인 상태 변경이 필요합니다. 그러나 상태를 하나 더 추가하면 BB(1)의 조건을 벗어나게 됩니다. 만약 상태 A에서 다시 A로 변경하도록 설정하면,\n\\delta(A, 0) \\rightarrow (1, R, A)\n기계는 무한 루프에 빠져 멈추지 않게 됩니다. 따라서 바쁜 비버가 멈추면서 최대한 많은 1을 남기기 위해서는 \\delta(A, 0) = (1, R, \\textbf{H})가 최선입니다. 결국 상태가 한 가지인 바쁜 비버는 최대 한 개의 1을 테이프에 남기고, 한 번의 이동 후 멈출 수 있다는 것을 알 수 있습니다.\n\\Sigma(1) = S(n) = 1\nBB(2)\n나아가, BB(2)의 값도 구해보겠습니다.5 이 경우에는 앞선 상황에 비해 다양한 전이함수를 다뤄야하므로6\n\\delta = \n\\begin{cases}\n(A, 0) \\rightarrow (1, R, B) \\\\\n(A, 1) \\rightarrow (1, L, B) \\\\\n(B, 0) \\rightarrow (1, L, A) \\\\\n(B, 1) \\rightarrow (1, R, \\textbf{H})\n\\end{cases}\n표로 나타내어 설명하겠습니다.\n\\begin{array}{c|c|c}\n\\delta&amp; A &amp; B \\\\ \\hline\n0 &amp; 1RB &amp; 1LA \\\\ \\hline\n1 &amp; 1LB &amp; 1R \\textbf{H}\n\\end{array}\n전이 함수를 표로 명확하게 나타내기 위해 표의 첫 번째 행에는 현재 상태를, 첫 번째 열에는 읽은 기호를 적습니다. 다음으로 각 행과 열이 교차하는 칸에는 해당 전이 함수의 값을 쓰는 기호(Write symbol), 이동 방향(Move tape), 다음 상태(Next state) 순서로 작성합니다. 예를 들어 상태 A에서 읽은 기호가 0이면, 1을 쓰고, 오른쪽으로 이동하여 상태 B로 변경하라는 것으로 이해할 수 있습니다.\nBB(2)의 값을 찾는 작업은 위의 전이 함수 표를 만드는 것 처럼 단순해 보일 수 있습니다. 하지만 각 상태와 기호의 모든 전이를 고려하면 가능한 조합이 기하급수적으로 많아집니다. (n개의 상태를 가진 바쁜 비버의 총 수는 [4(n+1)]^{2n} 가지이다.) 결국 가능한 바쁜 비버의 수가 급격히 늘어나므로, 모든 경우를 검토해 BB(2)를 찾는 것은 인간의 계산 능력을 넘어섭니다.\n그렇다면 이렇게 많은 조합 중에서 BB(2)의 값을 어떻게 찾아야 할까요? 조합이 많더라도, 중복되거나 무한히 반복되는 조합을 최적화하여 제거할 수 있습니다. 동일한 결과를 내는 전이 조합을 하나의 유형으로 묶거나, 특정 패턴을 통해 무한 반복 여부를 미리 확인하여 계산 시간을 줄일 수 있지요. 그럼에도 불구하고, 두 개의 상태를 갖는 기계는 무려 6,561개이며 이 중에서 가장 오래 실행되는 기계를 식별할 수 있는 일반적인 접근법은 존재하지 않습니다.7\n수 많은 조합 중 가장 긴 실행 시간을 가진 바쁜 비버를 찾는 과정은 단순하지 않지만 모든 경우를 일일이 검토한 결과 앞서 소개한 전이 함수가 BB(2)의 값을 찾는 함수라는 것이 밝혀져있습니다. 앞선 전이 함수를 이용해 시뮬레이션 해보겠습니다.\n바쁜 비버는 초기 상태 A에서 출발합니다. 상태 A에서 0을 읽으면, 1을 기록하고 오른쪽으로 이동하며 다음 상태 B로 변경합니다. 이어서 상태 B에서는 0을 읽으면 1을 적고 왼쪽으로 이동한 후 상태를 A로 변경합니다. 이와 같이 상태와 테이프 값을 분석하며 작업을 계속 수행합니다. 마지막으로 상태 B에서 1을 읽게 되면, 1을 쓰고 오른쪽으로 이동하면서 헤드는 작동을 멈춥니다. 두 개의 상태를 가진 이 튜링 머신은 최대 4개의 1을 기록할 수 있으며, 총 6번 이동하게 됩니다. 따라서  \\Sigma(2) = 4이고, S(2) = 6입니다.\nBB(n)값을 찾는 과정에서 궁금증이 하나 생깁니다. 상태의 개수 n이 1 또는 2 이었을 때, 최대 1의 개수 \\Sigma(n)와 최대 이동 횟수 S(n)를 모두 극대화하는 전이함수가 동일했습니다. 그렇다면 n이 커져가도 \\Sigma(n)과 S(n)를 만들어 내는 전이함수가 같을까요?\nBB(3)\n\\Sigma(n)과 S(n)를 만들어 내는 전이 함수가 언제나 같은 것이 아니라면 서로 다른 전이함수에서 이동 횟수와 1의 개수를 각각 극대화 할 가능성이 생깁니다. BB(3)의 경우를 통해 이 궁금증을 풀어보겠습니다.\n세가지 상태 A, B, C에 대하여 전이 함수 \\delta_1을 다음과 같이 정의한 후 시뮬레이션을 진행해보겠습니다. 이 바쁜 비버는 6개의 1을 적고 14번을 이동한 후 멈추게 됩니다.\n\\begin{array}{c|c|c|c}\n\\delta_{1}&amp; A &amp; B &amp; C\\\\ \\hline\n0 &amp; 1RB &amp; 0RC &amp; 1LC \\\\ \\hline\n1 &amp; 1R\\textbf{H} &amp; 1RB &amp;1LA \n\\end{array}\n반면에 전이 함수 \\delta_2로 작동하는 바쁜 비버는 5개의 1을 쓰지만 무려 21번을 이동한 후 멈추게 됩니다.\n\\begin{array}{c|c|c|c}\n\\delta_{2}&amp; A &amp; B &amp; C\\\\ \\hline\n0 &amp; 1RB &amp; 1LB &amp; 1LC \\\\ \\hline\n1 &amp; 1R\\textbf{H} &amp; 0RC &amp;1LA \n\\end{array}\n\\Sigma(3) = 6, S(3) = 21로 \\delta_1과 \\delta_2는 BB(3)에서 각각 최대 1의 개수와 최대 이동 횟수를 만들어내는 전이 함수입니다. 두 전이 함수는 특정 목표에 따라 최적화된 형태로 작동합니다. 하나의 바쁜 비버로 모든 최댓값을 달성하기는 어렵지요. 이는 바쁜 비버 문제의 다양성을 보여줌과 동시에 계산 가능성 이론에서 다양한 최적화 가능성을 탐구할 수 있는 중요한 기반이 됩니다.\nBB(n)\nBB(4)\nn=4인 경우, \\Sigma(4) = 13이고 S(4) = 107입니다. 이미 알려진 값을 단순히 시뮬레이션하려 해도 이전보다 훨씬 긴 테이프와 많은 시간이 요구됩니다. 바쁜 비버 문제를 처음 제안한 라도조차 BB(4)를 ‘해결 불가능한 문제’로 여겼지요. 그러나 1983년에 이 문제는 마침내 해결되었습니다. 이후의 값들은 과연 어떨까요?\n\\begin{array}{c|c|c|c|c}\n\\delta&amp; A &amp; B &amp; C &amp; D\\\\ \\hline\n0 &amp; 1RB &amp; 1LA &amp; 1R\\textbf{H} &amp; 1RD\\\\ \\hline\n1 &amp; 1LB &amp; 0LC &amp;1LD &amp; 0RA  \n\\end{array}\n다섯 가지 상태를 가진 바쁜 비버의 수는 약 17조 개에 달합니다. 이 모든 머신을 1밀리초마다 하나씩 나열한다고 가정하면, 약 500년이 소요될 정도로 엄청난 양이지요. 1989년, 하이너 막센(Heiner Marxen)과 요헨 분트록(Jochen Buntrock)은 n=5일 때 테이프에 4,098개의 1을 기록하며 47,176,870단계 후에 멈추는 바쁜 비버를 잡았습니다.\n\\begin{array}{c|c|c|c|c|c}\n\\delta&amp; A &amp; B &amp; C &amp; D &amp; E\\\\ \\hline\n0 &amp; 1RB &amp; 1RC &amp; 1RD &amp; 1LA &amp; 1R\\textbf{H} \\\\ \\hline\n1 &amp; 1LC &amp; 1RB &amp; 0LE &amp; 1LD &amp;  0LA\n\\end{array}\n이 발견은 BB(5)의 하한선을 제시했지만, 해당 기계가 실제로 최적의 바쁜 비버인지에 대한 증명은 이루어지지 않았습니다. 이후 2000년대 초반, 연구자들은 43개의 유력한 후보 비버를 추려냈습니다. 이러한 후보들 중 일부는 멈추지 않는다는 것을 증명하기 위해 수십 년간의 노력이 필요했습니다. 마침내 2024년, 수학자들의 대규모 협업 연구를 통해 막센과 분트록이 발견한 바쁜 비버가 BB(5)의 최적 해임을 증명했습니다.\n\\Sigma(5) = 4098를 만족하는 다른 비버\n\\begin{array}{c|c|c|c|c|c}\n\\delta&amp; A &amp; B &amp; C &amp; D &amp; E\\\\ \\hline\n0 &amp; 1RB &amp; 1LC &amp; 1RA &amp; 1RA &amp; 1R\\textbf{H} \\\\ \\hline\n1 &amp; 1RA &amp; 1LB &amp; 1LD &amp; 1LE &amp;  0LC\n\\end{array}\n이 비버는 11,798,826번의 이동 만에 4,098번의 1을 작성한다.\nBB(6)\nn=6일 때, BB(6)은 아직 얼마인지 모릅니다. 다만 현재까지 발견된 가장 바쁜 비버8는 2022년 파벨 크로피츠(Pavel Kropitz)에 의해 발견된 것으로,\n\\begin{array}{c|c|c|c|c|c|c}\n\\delta &amp; A &amp; B &amp; C &amp; D &amp; E &amp;F\\\\ \\hline\n0 &amp; 1RB &amp; 1RC &amp; 1LC &amp; 0LE &amp; 1LF &amp; 0RC \\\\ \\hline\n1 &amp; 0LD &amp; 0RF &amp; 1LA &amp; 1R\\textbf{H}  &amp; 0RB &amp;0RE\n\\end{array}\n이 바쁜 비버는 쓸 수 있는 1의 개수가 무려 10의 거듭 제곱을 15번 반복한 수보다도 큽니다.\nS(6) &gt; \\Sigma(6) &gt; 10 \\uparrow\\uparrow 15 = \\underbrace{10^{10^{10^{\\cdots^{10}}}}}_{15 \\text{번 반복}}\n여기서 위쪽 화살표는 테트레이션(Tetration)을 나타내는 기호로, 거듭제곱을 반복적으로 수행하는 연산입니다. 수학에서 이 표기법은 주로 빠르게 증가하는 함수나 수학적 정의를 단순화할 때 사용됩니다.\n\\begin{align*}\n10 \\uparrow\\uparrow 1 &amp;= 10\\\\\n10 \\uparrow\\uparrow 2 &amp;= 10^{10}\\\\\n  10 \\uparrow\\uparrow 3 &amp;= 10^{10^{10}}\n\\end{align*}\n보시다시피 상태의 개수가 단지 6개 밖에 되지 않았음에도 이동 횟수는 기하급수보다 훨씬 더 빠르게 증가합니다. 비버가 정말 바쁠만 하죠.\n바쁜 비버를 잡는게 중요한 이유\n계산 이론에서는 시간 복잡도와 관련된 문제가 핵심이므로, 기계가 얼마나 많은 이동을 수행할 수 있는지가 특히 중요하게 다뤄집니다.\nS(n) &gt; \\Sigma(n)\n어떤 계산 문제에 대해 ‘계산 가능하지 않다’는 것을 증명하기 위해서는 해당 기계가 멈추지 않고 매우 많은 단계의 작업을 수행하게 만드는 상황을 제시하는 것이 유리하기 때문이죠. 그리고 이러한 성질은 중요한 미해결 수학 문제의 난이도를 측정하거나 무엇이 수학적으로 인식 가능한지를 판단하는 기준으로 사용합니다.\n골드바흐 추측은 2보다 큰 모든 짝수는 두 소수의 합으로 표현될 수 있는지를 묻는 명제입니다. 이 추측은 수학에서 가장 매력적인 미스테리 중 하나로 참 또는 거짓을 수 세기동안 증명하지 못했습니다. 그러던 2015년, ‘Code Golf Addict’라는 익명의 GitHub 사용자가 골드바흐 추측이 거짓일 때만 정지하는 27개의 규칙을 가진 튜링 기계의 코드를 공개했습니다.9\n이 코드는 4보다 큰 모든 짝수를 순차적으로 확인하며, 각 짝수에 대해 두 소수를 더해 해당 짝수를 만들 수 있는 모든 경우를 점검합니다. 적절한 소수 쌍을 찾으면 다음 짝수로 넘어가 과정을 반복하고, 만약 두 소수의 합으로 표현할 수 없는 짝수를 발견하면 정지합니다. 즉, 이 튜링 기계는 골드바흐 추측이 거짓일 경우 멈추고, 참일 경우 끝없이 실행됩니다.\n결국 이 말은 우리가 BB(27)의 값을 알고 있다면, 골드바흐 추측의 참·거짓 여부를 결정할 수 있다는 의미입니다. 왜냐하면 골드바흐의 추측을 증명하는 코드는 27-상태 튜링 기계이므로 기껏해야 BB(27)보다 적은 실행에서 멈추거나 영원히 실행됩니다. 따라서 이 코드를 실행해 BB(27)이후에도 멈추지 않는다는 것을 확인하면 골드바흐의 추측은 참이 되는거지요. BB(27)의 값을 알고 있다는 것은 상태가 27개인 튜링 기계를 모두 확인한 것이므로, 수백 년 동안 풀리지 않은 골드바흐 추측에 대한 직접적인 해결책을 제시하는 셈입니다.\n물론 이 뜻이 골드바흐의 추측을 증명하거나 해결했다는 것은 아닙니다. 27-상태 튜링 기계의 모든 동작 원리를 이해하는 것이 골드바흐의 추측보다 더 어려울 수 있지요. 하지만 골드바흐 추측의 참·거짓을 결정하기 위해 튜링 기계를 구현하고 검증하는 사례는 수학적 명제와 계산 가능성의 관계를 탐구하는 흥미로운 시도를 보여줍니다.\n이러한 결과는 수학문제의 복잡성 척도로 ‘바쁜 비버’를 사용할 수 있다는 가능성을 보여줍니다. 쉽게 말해 드래곤볼의 스카우터 처럼 수학 명제가 얼마나 어려운지 측정할 수 있지요. 예를 들어 에르되시의 ‘2의 거듭제곱 추측(n &gt; 8일 때,  2^n의 3진법 표현에는 반드시 숫자 2가 포함된다는 추측)‘은 15개의 상태를 가진 튜링머신으로 참, 거짓을 판별할 수 있습니다.10 따라서 BB(15)는 적어도 ‘2의 거듭제곱 추측’보다는 어렵습니다. 같은 방법으로 리만 가설을 반증하는 튜링기계는 상태가 무려 744개나 필요합니다.\n\\begin{array}{c|c}\nn &amp; BB(n)\\\\ \\hline\n5 &amp; 47,176,870 \\\\\n6 &amp; &gt; 10 \\uparrow\\uparrow 15\\\\\n15 &amp; \\text{Erdős’ conjecture}\\\\\n25 &amp; \\text{Goldbach conjecture}\\\\\n744 &amp; \\text{Riemann Hypothesis}\\\\\n748 &amp; \\text{independent of ZF}\\\\\n7,910 &amp; \\text{independent of ZFC}\\\\\n\\end{array}\n그나마 다행인 것은 많은 수학자들의 노력으로 골드 바흐의 추측을 반증하는 기계는 현재 n의 수를 25까지11 줄였고, 리만 가설도 초기 5,372개12의 상태를 갖는 코드에서 744개13 까지 줄이는데 성공했습니다. 이 수들은 앞으로 더 낮아질 수 있고, 언젠가는 해결 가능한 영역으로 들어올 수도 있지요.\n물론 BB(6)만 하더라도 우주의 있는 원자 수를 아득히 뛰어넘는 수입니다. 이러한 기계들을 실행하는 것은 물리적으로 불가능할지도 모릅니다. 하지만 수학은 꾸준히 발전하기에 먼 훗날 모든 바쁜 비버 수를 알게 된다면, 튜링 기계로 증명할 수 있는 모든 질문을 해결할 수 있을지도 모릅니다. 가장 바쁜 비버가 멈춘 순간을 기다리며,\nFootnotes\n\n\nHopcroft, John; Ullman, Jeffrey. (1979). Introduction to Automata Theory, Languages, and Computation ↩\n\n\nComputability and Recursion ↩\n\n\nT. RADO. (1962). On Non-Computable Functions ↩\n\n\nMichel, P. (2022). The Busy Beaver Competition: a historical survey ↩\n\n\nLin and Rado. (1965). Computer Studies of Turing Nlachine Problems ↩\n\n\n Busy Beavers, Theoretical Computer Science (2021). ↩\n\n\nHow the Slowest Computer Programs Illuminate Math’s Fundamental Limits ↩\n\n\nBB(6) - BusyBeaverWiki ↩\n\n\nC. G. Addict. No name, 2016. ↩\n\n\nThe Busy Beaver Challenge ↩\n\n\nlengyijun/goldbach_tm25 ↩\n\n\nA Relatively Small Turing Machine Whose Behavior Is Independent of Set Theory ↩\n\n\nmetamath-turing-machines/riemann-matiyasevich-aaronson.nql at master · sorear/metamath-turing-machines ↩\n\n\n"},"Ray-math/Script/샤워할-때-왜-우리의-목소리가-더-좋게-들릴까":{"slug":"Ray-math/Script/샤워할-때-왜-우리의-목소리가-더-좋게-들릴까","filePath":"Ray math/Script/샤워할 때 왜 우리의 목소리가 더 좋게 들릴까.md","title":"샤워할 때 왜 우리의 목소리가 더 좋게 들릴까","links":[],"tags":["목소리","샤워실","공명","음파","반향","주파수"],"content":"여러분들은 샤워실에서 노래를 부르시나요? 아마도 샤워하면서 노래를 부르면 목소리가 원래보다 더 좋게 느끼셨을 것입니다. 왜 샤워를 하면 우리의 목소리가 왜 그렇게 좋게 들리는지 그 비밀을 공개하겠습니다. 우선 그 이유를 알기 위해서는 음향에 대한 기본 개념을 알아야 합니다.\n1. 반향과 음파의 시차\n타일과 유리로 된 샤워실에서 우리의 목소리는 거의 손실 없이 반사되며, 이는 우리가 노래를 부를 때 소리가 커지는 주요 원인 중 하나입니다. 음파가 샤워실 벽면 주위로 여러 번 반사되어 발생하는 반향이 우리의 목소리를 더욱 강화하는거죠. 반향과 음파의 시차는 주로 반향 시간(reverberation time)으로 측정됩니다. 이때 반향 시간은 특정 공간에서 소리가 60dB 감소하는데 걸리는 시간을 의미합니다. 사브린 공식(Sabine’s formula)으로 반향 시간을 계산할 수 있습니다:\nT = 0.1611 \\times {V\\over{S \\times \\alpha}}\n\nT는 반향 시간(초)\nV는 공간의 부피(m³)\nS는 총 표면적(m²)\n\\alpha는 평균 흡음 계수\n\n\\alpha는 재질에 따라 다르며, 예를 들어 타일은 약 0.01, 콘크리트는 약 0.02입니다. 즉, 샤워실처럼 타일이나 유리로 된 공간은 \\alpha가 작아 반향이 많이 발생합니다. 따라서 샤워실은 다른 곳보다 여러 다른 시간대에 생성된 음파가 귀에는 거의 동시에 도착하므로, 우리가 부르는 노래의 각 음은 마치 다양한 버전으로 확장되는 것처럼 들립니다. 이로 인해 음이 부드러워지고 길어지며, 평균적인 음높이를 내지 못한다는 사실은 숨겨지고, 꽉 찬 풍부한 소리의 효과를 만들어내는거죠.\n2. 습도의 역할\n습도는 음파의 전파 속도에 영향을 미칩니다. 이 공식에 따르면, 온도가 높거나 (즉, 샤워실처럼 습도가 높은 공간에서) 음파의 속도는 빨라집니다. 이로 인해 소리는 더 빠르게 이동하여 우리 귀에 도착하므로 우리의 목소리가 더욱 선명하게 들리게 됩니다.또 샤워실에서 물기가 가득한 공기는 성대를 이완시키는 데 도움이 되어, 노력을 덜 하고도 부드럽게 노래를 부를 수 있게 도움을 주기도 하죠.\nc = \\sqrt{\\gamma \\times R \\times T}\n\nc는 음속(m/s)\nT는 절대온도(K)\n\\gamma는 비열비(없음, 일반적으로 공기에서는 1.4)\nR는 특정 가스의 기체상수(J/kg·K, 일반적으로 공기에서는 287 J/kg·K)\n\n3. 공명 효과\n공명 효과는 특정한 주파수에서 물체가 크게 진동하게 만드는 현상을 말합니다. 샤워실에서는 이 공명 효과가 우리의 목소리를 더욱 강조하게 해 줍니다. 샤워실에서 특정 주파수의 소리는 그 에너지가 상호 작용하여 증폭되며, 이는 우리의 귀에게 더 큰 소리로 들리게 합니다. 이러한 현상을 ‘방 공명’이라고 합니다. 방 공명은 방의 크기와 음파의 길이 사이의 관계에 따라 결정됩니다.\nf = \\frac{nV}{2L}\n\nf는 공명이 일어나는 주파수,\nn는 진동 모드 (자연수),\nV는 음속,\nL는 방의 길이\n\n이 수식은 방의 길이와 음파의 길이 사이에 정비례 관계가 있음을 보여줍니다. 즉, 방의 길이가 음파의 길이의 정수 배일 때 공명이 일어나게 됩니다. 만약 샤워실의 높이가 H = 2.5m이고, 음속이 V = 340m/s라고 가정해 봅시다. 그러면, n=1일 때의 공명 주파수는 다음과 같습니다.\nf = \\frac{1 \\times 340}{2 \\times 2.5} \\approx 70Hz\n비슷한 방식으로, n=2,3,4, \\dots일 때의 공명 주파수를 계산하면, 각각 140Hz, 210Hz, 280Hz, \\dots가 됩니다.\n일반적으로, 남성의 목소리는 대략 85Hz에서 180Hz의 범위에 있으며, 여성의 목소리는 대략 165Hz에서 255Hz의 범위에 있습니다. 따라서 평균값과 비교하면 남성의 목소리는 140Hz, 여성의 목소리는 210Hz과 일치하므로 중첩이 잘 일어나게 됩니다. 샤워실에서 공명효과가 발생하면, 우리의 목소리는 여러 가지 방식으로 ‘좋아질’ 수 있습니다. 공명은 특정 주파수의 음파를 증폭시키므로, 우리의 목소리는 더 크게 들릴 수 있고, 주파수가 우리 목소리의 조화음과 일치하면 우리의 목소리가 더욱 풍부하고 음악적으로 들리게 합니다. 마지막으로 목소리의 특정 주파수를 강조하므로, 목소리의 전체적인 음색에 영향을 미쳐 더욱 따뜻하고 풍부하게 들릴 수 있습니다."},"Ray-math/Script/소수를-분모로-갖는-분수의-반복되는-특별한-성질":{"slug":"Ray-math/Script/소수를-분모로-갖는-분수의-반복되는-특별한-성질","filePath":"Ray math/Script/소수를 분모로 갖는 분수의 반복되는 특별한 성질.md","title":"소수를 분모로 갖는 분수의 반복되는 특별한 성질","links":["Ray-math/Script/142857"],"tags":["소수","정수","순환","나머지","주기","반복","표현","마디","순환마디"],"content":"유리수 \\frac{n}{d}(정수 n과 d의 비율)은 소수로 변환될 수 있습니다. 만약 분모 d의 모든 소인수가 10을 나눌 경우, \\frac{n}{d}는 유한하며, 그 외의 경우 \\frac{n}{d}는 반복되는 소수를 생성합니다. 이때, 반복되는 숫자를 순환 주기또는 순환 마디라고 하며, 가장 짧은 반복 숫자 수를 주기의 길이라고 합니다.\n유리수가 주기적인 무한 소수임을 확인하는 가장 쉬운 방법은 긴 나눗셈 과정을 직접 조사하는 것입니다. n을 d로 나눌 때 가능한 나머지는 1, 2, \\cdots, d-1입니다. 따라서 긴 나눗셈에서 최대 d-1단계 후에 이러한 나머지 중 하나가 다시 나타납니다. 이런 일이 발생하면 긴 나눗셈 과정은 이전 단계를 반복하여 동일한 몫과 나머지의 순서를 생성합니다. 긴 나눗셈에서 가능한 나머지의 수는 한정되어 있기 때문에, 어느 시점에서는 이전에 나왔던 나머지가 다시 나타나게 됩니다. 이는 나눗셈 과정이 그 지점에서 반복되기 시작한다는 것을 의미하며, 결과적으로 소수 표현이 주기적으로 되풀이되며 순환주기는 반드시 d-1의 약수가 되죠.\n쉽게 분모가 소수일 때를 예를 들면 다음과 같이 구할 수 있습니다. 이때 순환주기의 길이를 보면 분모에서 1을 뺀 p-1의 약수인 것을 볼 수 있습니다.\n\\begin{gather*}\n\n\\frac{1}{7} = 0.\\,142857\\,142857 \\cdots = 0.\\overline{142857}\\\\\n\n\\frac{1}{13} = 0.\\overline{076923}\\\\\n\n\\frac{1}{17} = 0.\\overline{0588235294117647}\\\\\n\n\\frac{1}{19} = 0.\\overline{052631578947368421}\n\n\\end{gather*}\n소수를 분모로 갖는 분수에서 흥미로운 점은 이것 뿐만이 아닙니다. 가장 짧은 주기를 반으로 나누고 두 부분을 각각 더하면 반드시 9가 반복됩니다.\n\\begin{align*}\n\\frac{1}{7} \\quad &amp;; \\quad 142+857=999\\\\\n\\frac{1}{13} \\quad &amp;; \\quad 076+923=999\\\\\n\\frac{1}{17} \\quad &amp;; \\quad 05882352+94117647=99999999\\\\\n\\frac{1}{19} \\quad &amp;; \\quad 052631578+947368421=999999999\n\\end{align*}\n\\begin{gather*}\n&amp;076 \\\\\n+&amp;923 \\\\\n\\hline\n&amp;999\n\\\\\n\\\\\n&amp;05882352 \\\\\n+ &amp;94117647 \\\\\n\\hline\n&amp;99999999\n\\\\\n\\\\\n&amp;052631578 \\\\\n+&amp;947368421 \\\\\n\\hline\n&amp;999999999\n\\end{gather*}\n이는 우연일까요? 절대 아닙니다. 이는 분모가 소수인 분수 중 어떤 특정한 조건을 만족하면 반드시 성립하는 특별한 성질이죠. 반복되는 소수 확장을 가지는 유리수 \\frac{n}{p}에서 p가 2나 5가 아닌 소수이고 가장 짧은 주기가 짝수 개의 숫자를 포함할 경우, 해당 주기의 첫 번째와 두 번째 절반을 더하면 반드시 9로만 구성됩니다. 왜 이러한 성질이 성립하는지 차근차근 보도록 하겠습니다.\n등비급수를 이용한 순환소수표현\n모든 계수가 1인 n차 다항식에 (1-x)를 곱하면 인수분해를 이용해 식을 간단하게 정리할 수 있습니다.\n(1 + x + x^2 + \\cdots + x^n)(1 - x) = 1 - x^{n+1}\n이를 이용해 초항이 a이고 공비가 b인 등비수열의 합은 b가 1이 아닐 때 다음과 같이 나타낼 수 있습니다.\na + ab + ab^2 + \\cdots + ab^n = \\frac{a(1 - b^{n+1})}{1 - b}\n0 &lt; b &lt; 1이고 n이 무한대로 발산하면, b^{n+1}은 0에 가까워집니다. 따라서 다음과 같은 등비급수 합 공식을 얻을 수 있습니다. 우리는 이 결과를 반복되는 소수점에 적용할 수 있습니다.\na + ab + ab^2 + \\cdots = \\frac{a}{1 - b}\n예를 들어 \\frac{1}{7}의 반복되는 소수표현을 등비수열의 합으로 나타내면 다음과 같습니다.\n\\frac{1}{7} = \\frac{142857}{10^7} + \\frac{142857}{10^{14}} + \\frac{142857}{10^{21}} + \\cdots\n이를 앞 서본 등비급수의 합 공식을 이용해 나타내면 다음과 같습니다.\n\\frac{142857}{10^7} \\left( 1 + \\frac{1}{10^7} + \\frac{1}{10^{14}} + \\cdots \\right) = \\frac{142857}{10^7 \\left(1 - \\frac{1}{10^7}\\right)} = \\frac{142857}{10^7 - 1}\n이 표현을 이용해 조금 더 일반적인 분수들을 나타내보겠습니다. \\frac{n}{d}의 정수부분이 R이고, s자리 이후에 순환마디 P가 u의 길이를 갖는 유리수라 하면 이 수를 다음과 같이 표현할 수 있습니다.\n\\begin{align*}\n\\frac{n}{d} &amp;= R + \\frac{Q}{10^s} + \\frac{P}{10^{s+u}} + \\frac{P}{10^{s+2u}} + \\frac{P}{10^{s+3u}} + \\cdots \\\\\n&amp;= R + \\frac{Q}{10^s} + \\frac{P}{10^{s}}\\left( \\frac{1}{10^{u}} + \\frac{1}{10^{2u}} + \\frac{1}{10^{3u}} \\right)\\\\\n&amp;= R + \\frac{Q}{10^s} + \\frac{P}{10^{s}} \\cdot\\frac{1}{10^{u}-1}\n\\end{align*}\n만약 n&lt;d라면, R=0이므로 이 표현을 더 간단하게 할 수 있고,\n\\frac{n}{d} = \\frac{Q}{10^s} + \\frac{P}{10^{s+u}} + \\frac{P}{10^{s+2u}} + \\frac{P}{10^{s+3u}} + \\cdots\n순환마디가 바로 시작한다면 s=0이므로 결과적으로 식을 더 간단하게 나타낼 수 있습니다.\n\\frac{n}{d} = \\frac{P}{10^{u}} + \\frac{P}{10^{2u}} + \\frac{P}{10^{3u}} + \\cdots = \\frac{P}{10^{u}-1}\n페르마의 소정리\n소수 p가 10을 나누지 않을 때 \\frac{n}{p}은 주기적이며, 오직 진분수만 고려하면 충분합니다. 왜냐하면 만약 n &gt; p라면, 나머지 정리에 의해 n = pq + r (r &lt; p)로 나타낼 수 있기 때문입니다. 그러면\n\\frac{n}{p} = q + \\frac{r}{p} \\quad (r &lt; p)\n정수 q는 소수점 앞에 오고, \\frac{r}{p}는 소수 부분이 되므로 결과적으로 우리가 관심있는 소수 부분만 따로 볼 수 있게 됩니다. 이제 소수 부분을 자세히 보기 위해 p로 나누는 과정을 분석해보겠습니다.\np로 어떤 수를 나눌 때 다음과 같은 0이 아닌 나머지들이 생기게 됩니다.\n1, 2, 3, \\cdots, p-1\n그리고 모든 수들은 이와 같이 p로 나누었을때, 나머지가 같은 수끼리 분류할 수 있습니다.\n\\begin{array}{|c|c|}\n\\hline\n\\text{나머지} &amp; \\text{수} \\\\\n\\hline\n0 &amp; 0, p, 2p, \\cdots \\\\\n\\hline\n1 &amp; 1, p+1, 2p+1, \\cdots \\\\\n\\hline\n2 &amp; 2, p+2, 2p+2, \\cdots \\\\\n\\hline\n3 &amp; 3, p+3, 2p+3, \\cdots \\\\\n\\hline\n\\vdots &amp; \\vdots \\\\\n\\hline\np-1 &amp; p-1, 2p-1, 3p-1, \\cdots \\\\\n\\hline\n\\end{array}\n이와 같은 분류를 수학에서 쉽게 나타내는 방법이 있는데 바로 합동(congruent modulo p)이라는 개념입니다.\nf \\equiv g \\pmod{p}\n쉽게 말해 두 수가 p로 나누었을 때 같은 나머지를 가지면 p에 대해 합동입니다.\n1 \\equiv 8 \\pmod7\n다른 말로 그들의 차이가 p로 나누어 떨어진다고 생각할 수 있죠.\n(8-1) \\div 7 =1\n이는 적당한 정수 c가 존재하여 다음 식을 만족한다는 것을 의미합니다.\n\nf - g = cp \\quad \\text{so} \\quad f=cp+g\n\n고등학생이라면 갑자기 처음보는 수학개념을 가져와서 당황스러우실 수도 있는데요. 이 개념을 이미 알고 있는(아마 수학과나 영재 수업을 들으신)분이라면 아까 나머지가 p-1개의 약수라는 말을 했을 때부터 페르마의 소정리가 떠오르셨을 것입니다.\n\n\n                  \n                  페르마의 소정리 \n                  \n                \n\n\n어떤 소수 p와 p로 나누어지지 않는 정수 a에 대해, a^{p-1} \\equiv 1 \\pmod p 이다.\n\n\n\n페르마의 소정리란, 어떤 소수 p와 그 소수로 나누어지지 않는 정수 a가 있을 때, a를 p-1만큼 거듭제곱한 값은 p로 나누었을 때 나머지가 1이 된다는 것입니다.\n예를 들어, p = 7이고 a = 3인 경우를 생각해 보겠습니다. 3^6 = 729이며, 이를 7로 나눈 나머지는 1입니다. 따라서 합동표현으로 나타내면 다음과 같이 쓸 수 있습니다.\n3^6 \\equiv 1 \\pmod 7\n뒷 내용을 보일때 굳이 페르마 소정리의 증명이 필요한 것은 아니기에 저는 군을 이용한 증명만 제시하고 넘어가겠습니다.\n\n페르마의 소정리 증명\n모듈로 p의 정수들의 곱셈에 대한 군 G=\\{1, 2, \\ldots, p-1\\}에 대하여, a \\in G는 p와 서로소이므로, a는 G에 대한 역원을 가지며, a \\times a^{-1} \\equiv 1 \\pmod{p}이다. a가 p와 서로소이므로, aG = \\{a \\times 1, a \\times 2, \\ldots, a \\times (p-1)\\}=G이다. 따라서 aG의 원소들을 모두 곱하면 G의 원소들을 모두 곱한 것과 같다. (a \\times 1) \\times (a \\times 2) \\times \\ldots \\times (a \\times (p-1)) \\equiv 1 \\times 2 \\times \\ldots \\times (p-1) \\pmod{p} 즉, a^{p-1} \\times (p-1)! \\equiv (p-1)! \\pmod{p}이다. p는 소수이므로, 1부터 p-1까지 모든 정수는 모듈로 p에서 역원을 가진다. (p-1)!은 p로 나누어지지 않으므로, (p-1)!의 역원으로 양변을 곱해주면, a^{p-1} \\equiv 1 \\pmod{p}이다.\n\n페르마의 소정리를 이용해 식의 성질을 보도록하겠습니다. a=10이라 하면 앞서 p가 2나 5가 아닌 소수라 했으므로, 페르마의 소정리에 의해 적당한 정수 c가 존재하여 다음 식을 만족합니다.\n10^{p-1} - 1 = cp\n양변의 역수를 취한 다음 c를 곱하면 소수 역수를 얻을 수 있고,\n\\frac{1}{p} = \\frac{c}{10^{p-1} - 1}\n양변에 r을 곱하면 앞서 본 분수표현을 얻을 수 있습니다.\n\\frac{r}{p} = \\frac{rc}{10^{p-1} - 1}\n이 식으로 부터 r &lt; p이므로 rc &lt; 10^{p-1}입니다. 따라서 rc는 최대 p - 1자릿수를 가진다는 것을 알 수 있습니다. 또한 이 식의 우변은 앞서 본 등비수열의 합과 같습니다.\n\\frac{r}{p} = \\frac{rc}{10^{p-1}} + \\frac{rc}{10^{2(p-1)}} + \\cdots\n그러므로 \\frac{r}{p}의 순환마디의 길이는 p - 1이거나 p - 1의 약수임을 알 수 있습니다. 그리고 순환마디 또한 rc와 연관이 있다는 것을 알수 있죠.\n9가 반복되는 이유\n앞선 증명들로부터 r &lt; p가 10^k - 1을 나누는 어떤 양의 정수 k에 대해, 다음 식이 성립합니다. 여기서 P는 \\frac{r}{p}의 순환마디이며, 10^k보다 작은 양의 정수입니다.\n\n\\frac{r}{p} = \\frac{P}{10^k - 1}\n\n양변에 소수 p를 곱하면,\npP = r(10^k - 1)\n소수 p는 r을 나누지 않으므로 10^k - 1을 나눕니다. 따라서 \\frac{r}{p}의 순환마디의 길이는\u001d10^k - 1이 p로 나누어지게 되는 가장 작은 정수 k와 같다는 것을 알 수 있습니다. 다른말로 주기 길이는 r이 아니라 오로지 p에만 달려있죠. 그러므로 우리는 \\frac{r}{p}의 소수표현이 k자리마다 반복된다는 결론을 내릴 수 있습니다.\n2 또는 5가 아닌 소수 p에 대해 순환마디 P의 길이가 짝수의 길이 즉, k=2t이라고 가정해보겠습니다. 그렇다면 P는 t자리보다 작거나 같은 두 수 M과 N으로 나누어 두 부분으로 표현할 수 있습니다.\n\\begin{align*}\nP = M \\cdot 10^t + N\\\\\n(\\text{단}, \\,\\, M, N &lt; 10^t)\n\\end{align*}\n이제 준비가 끝났으므로 M과 N의 합이 항상 9로만 이루져 있음을 보이겠습니다.\nclaim. M + N = 99\\cdots9 = 10^t - 1\n앞선 식에서 k가 짝수라 했으므로 합차공식을 다음과 같이 인수분해 할 수 있습니다.\npP = r(10^{2t} - 1) = r(10^t - 1)(10^t + 1)\n\\frac{r}{p}은 기약분수이므로, p는 r을 나눌 수 없습니다. 게다가 p는 10^t - 1도 나눌 수 없습니다. 왜냐하면 그랬다면 r/p의 주기 길이가 2t가 아니라 t가 될 것이기 때문입니다.\n\\begin{gather*}\np \\nmid r\\\\\np \\nmid 10^t-1\n\\end{gather*}\n그러므로 소수 p는 10^t + 1을 나눕니다.\np \\mid 10^t+1\n앞선 식을 P를 이용해 나타내면 다음과 같고,\n\\frac{r}{p} = \\frac{P}{10^{2t} - 1} = \\frac{M \\cdot 10^t + N}{(10^t - 1)(10^t + 1)}\n이로부터 분모와 분자를 약분하면 식을 깔끔하게 정리할 수 있습니다.\n\\begin{align*}\n\\frac{r(10^t + 1)}{p} &amp;= \\frac{M \\cdot 10^t + N}{10^t - 1} = \\frac{M \\cdot 10^t {\\color{red}{- M+ M}} + N}{10^t - 1} \\\\\n&amp;= \\frac{M(10^t - 1) + M + N}{10^t - 1} = M+\\frac{M + N}{10^t - 1}\n\\end{align*}\n앞서 소수 p는 10^t + 1을 나눈다고 했으므로, 이 결과는 항상 정수여야합니다. 따라서 \\frac{M + N}{10^t - 1}은 정수이며, M과 N은 각각 t자리 정수이므로,\n0 &lt; M + N \\leq 10^t - 1 + 10^t - 1\n\\frac{M + N}{10^t - 1}은 기껏해야 0보다 크고 2보다 작거나 같은 정수입니다.\n0 &lt; \\frac{M + N}{10^t - 1} \\leq 2\n그런데 이 식이 2와 같다는 등식은 M = N = 10^t - 1일 때만 성립할 수 있으며, 이 경우 P의 각 자리 수는 9가 됩니다. 그러나 이 경우에는 가장 짧은 주기의 길이가 한 자리가 되므로 순환마디의 길이가 짝수라는 가정에 어긋납니다.\n결국\n\\frac{M + N}{10^t - 1} = 1\n이므로,\nM + N = 10^t - 1 \\quad \\square\n이 됩니다.1\n순환마디를 더 잘게 쪼갠다면?\n우리는 앞서 소수 p를 분모로 갖는 분수의 소수표현에서 소수점 아래 수들을 두 부분으로 분할하여 더하는 합이 9가 되는 현상을 관찰했습니다. 그런데 이러한 성질은 반드시 두 부분으로만 나눌 때 가능한 것은 아닙니다.\n예를 들어, \\frac{1}{7}의 순환주기는 142857입니다.\n\\frac{1}{7}=0.\\overline{142857}\n이 숫자들을 두개의 동일한 길이의 수로 나눈 후 더하면 앞서 보았듯이 그 합은 999입니다. 이제 이 성질을 두 부분으로 나누는 성질이라는 의미에서 2-블록 특성(2-block property)이라 하겠습니다.\n142 + 857 = 999\n그렇다면 142857은 3-블록 특성도 가집니다.\n14+28+57 = 99\n만약 우리가 \\frac{3}{7}을 살펴본다면 2-블록 특성에 의해\n\\frac{3}{7} = 0.\\overline{428571}\n다시 428 + 571 = 999가 되며\n42 + 85 + 71 = 198\n이 됩니다. 이것은 99만큼 좋지는 않지만, 198은 99의 두 배이므로 배수라는 점에서 \\frac{3}{7}이 3-블록 특성을 가지고 있다고 할 수 있습니다. 그리고 이러한 수들은 다양한 소수에서 확인할 수 있으며, 소수의 거듭제곱의 분수에서도 관찰할 수 있습니다. 자세한 내용은 앞선 내용에 비해 너무나 길고 어려워지므로 논문2을 참조하시길 바라며 증명은 여기서 마무리 짓도록 하겠습니다.\n\\begin{array}{|c|c|c|c|}\n\\hline\n\\text{denominator} &amp; \\ell &amp; \\text{fraction} &amp; \\text{m-block property holds for} \\\\\n\\hline\n7 &amp; 6 &amp; 1/7 = 0.\\overline{142857} &amp; 2,3,6 \\\\ \\hline\n7 &amp; 6 &amp; 3/7 = 0.\\overline{428571} &amp; 2,3,6 \\\\ \\hline\n13 &amp; 6 &amp; 1/13 = 0.\\overline{076923} &amp; 2,3,6 \\\\ \\hline\n13 &amp; 6 &amp; 11/13 = 0.\\overline{846153} &amp; 2,3,6 \\\\ \\hline\n17 &amp; 16 &amp; 1/17 = 0.\\overline{0588235294117647} &amp; 2,4,8,16 \\\\ \\hline\n19 &amp; 18 &amp; 1/19 = 0.\\overline{052631578947368421} &amp; 2,3,6,9,18 \\\\ \\hline\n31 &amp; 15 &amp; 1/31 = 0.\\overline{032258064516129} &amp; 3,5,15 \\\\ \\hline\n31 &amp; 15 &amp; 11/31 = 0.\\overline{354838709677419} &amp; 3,5,15 \\\\ \\hline\n73 &amp; 8 &amp; 1/73 = 0.\\overline{23287671} &amp; 2,4,8 \\\\ \\hline\n487 &amp; 486 &amp; 1/487 = 0.\\overline{00020533\\cdots} &amp; 2,3,6,9,18,27,54,81,162,243,486 \\\\\n\\hline\n\\end{array}\n\\begin{array}{|c|c|c|c|}\n\\hline\n\\text{denominator} &amp; \\ell &amp; \\text{fraction} &amp; \\text{m-block property holds for} \\\\\n\\hline\n49 = 7^2 &amp; 42 &amp; 1/49 = 0.020408163265306\\ldots &amp; 2,3,6,14,21,42 \\\\ \\hline\n121 = 11^2 &amp; 22 &amp; 1/121 = 0.0082644628\\ldots &amp; 2,22 \\\\ \\hline\n169 = 13^2 &amp; 78 &amp; 1/169 = 0.0059171597\\ldots &amp; 2,3,6,26,39,78 \\\\ \\hline\n343 = 7^3 &amp; 294 &amp; 1/343 = 0.002915\\ldots &amp; 2,3,6,14,21,42,98,147,294 \\\\ \\hline\n237,169 = 487^2 &amp; 486 &amp; 1/237169 = 0.000004216\\ldots &amp; 2,3,6,9,18,27,54,81,162,243,486 \\\\\n\\hline\n\\end{array}\nOne more Thing\n이 성질에서 자주 소개되었던 \\frac{1}{7}에 1, 2, \\cdots, 6을 곱하면 순환마디가 순서만 바뀔 뿐 같은 숫자들만 나오는 성질이 있다는 것을 알고 계실 것입니다. 그렇다면 이러한 성질은 과연 우연일까요?\n\\begin{align*}\n\\frac{1}{7}=0.\\overline{142857}\\\\\n\\frac{2}{7}=0.\\overline{285714}\\\\\n\\frac{3}{7}=0.\\overline{428571}\\\\\n\\frac{4}{7}=0.\\overline{571428}\\\\\n\\frac{5}{7}=0.\\overline{714285}\\\\\n\\frac{6}{7}=0.\\overline{857142}\\\\\n\\end{align*}\n다음 영상은 오늘 다뤘던 성질을 바탕으로 순환수의 성질에 대해 알아보도록 하겠습니다.\nFootnotes\n\n\nA Property of Some Repeating Decimals ↩\n\n\nRepeating Decimals: A Period Piece ↩\n\n\n"},"Ray-math/Script/슈타이너-트리":{"slug":"Ray-math/Script/슈타이너-트리","filePath":"Ray math/Script/슈타이너 트리.md","title":"슈타이너 트리","links":[],"tags":["점","슈타이너","트리","연결","거리","최소","선","삼각","최적","합","페르마"],"content":"여러분이 대한민국의 첫 번째 길을 놓는 중대한 책임을 맡게 되었다고 상상해보겠습니다. 서울, 광주, 부산이라는 대한민국의 주요 도시 세 곳을 효율적으로 연결할 수 있는 최적의 도로망을 설계해야 합니다. 이 도로망은 단순히 세 도시를 잇는 것이 아니라, 국가의 경제 발전과 지역 간 균형을 이루는 데 중요한 역할을 할 것입니다.\n그러나 이 임무에는 큰 제약이 따릅니다. 자원은 한정적이며, 도로를 건설할 수 있는 예산과 인프라는 제한되어 있습니다. 따라서 최대한 효율적인 경로를 찾아야 하며, 각 도시를 연결하는 거리와 비용을 최소화하는 것이 필수적입니다.\n많은 사람들은 세 도시를 직선으로 쭉 연결하는 것이 가장 빠르고 효율적일 것이라 생각할 수 있습니다. 먼저 서울에서 광주로 연결되는 직선 거리는 268km입니다. 다음으로, 광주에서 부산으로 이어지는 거리는 202km입니다. 마지막으로, 부산에서 서울로 돌아오는 거리는 328km입니다. 이 세 구간을 합치면 총 직선 거리는 798km가 됩니다. 이 거리는 세 도시를 직접 연결했을 때의 최소 거리라고 할 수 있습니다.\n\n\\hline\n\\textbf{경로} &amp; \\textbf{직선 거리 (km)} \\\\ \\hline\n\\text{서울-광주} &amp; 268 \\\\ \\hline\n\\text{광주-부산} &amp; 202 \\\\ \\hline\n\\text{부산-서울} &amp; 328 \\\\ \\hline\n\\textbf{합계} &amp; 798 \\\\ \\hline\n\\end{array}\n그렇다면, 직선으로 연결하는 것이 정말로 최고의 선택일까요? 더 효율적인 경로가 존재하지 않을까요? 제한된 자원으로 최고의 결과를 도출하기 위해서는 단순히 세 도시를 직선으로 연결하는 방법 외에도, 보다 복잡한 최적화 과정을 고려해야 할 때가 있습니다. 예를 들어 대전을 경유하는 경로를 고려해 보겠습니다.\n\n\\begin{array}{|c|c|}\n\\hline\n\\textbf{경로} &amp; \\textbf{대전 경유 직선 거리 (km)} \\\\ \\hline\n\\text{서울-대전} &amp; 141 \\\\ \\hline\n\\text{광주-대전} &amp; 141 \\\\ \\hline\n\\text{부산-대전} &amp; 201 \\\\ \\hline\n\\textbf{합계} &amp; 483 \\\\ \\hline\n\\end{array}\n서울에서 대전까지의 직선 거리는 141km입니다. 대전에서 광주까지의 거리도 동일하게 141km이며, 부산에서 대전까지의 거리는 201km입니다. 이 세 구간의 거리를 모두 합치면 총 483km가 됩니다. 세 도시를 직접 연결했을 때의 총 거리인 798km와 비교했을 때, 상당히 줄어든 거리입니다. 대전을 경유하는 방법은 단순한 직선 경로의 총합보다 효율적일 수 있는 가능성을 보여줍니다.\n페르마-토리첼리 문제(Fermat-Torricelli Problem)\n삼각형의 세 꼭짓점으로부터의 거리 합이 최소화되는 점을 찾는 것은 기하학적 최적화 문제로, 17세기부터 수학자들 사이에서 중요한 연구 주제로 다루어졌습니다. 페르마는 이 문제를 통해 최적화 문제에 대한 관심을 보여주었으며, 주어진 세 점에서의 거리 합이 최소가 되는 점을 찾는 문제를 토리첼리에게 제안했습니다. 토리첼리는 이 문제를 빠르게 해결하여 페르마에게 답변을 보냈고, 오늘날 페르마-토리첼리 문제라고 불립니다.1\n![[CleanShot 2024-08-12 at 14.40.00@2x 1.png|www.geogebra.org/classic/apszfskt|500]]\n페르마 포인트를 찾는 과정을 자세히 알아보도록 하겠습니다. 가장 큰 각의 크기가 120^\\circ보다 작은 \\triangle ABC 내부의 점 P에 대하여, 이 점에서 삼각형의 세 꼭지점 A, B, C까지의 거리의 합 \\overline{AP} + \\overline{BP} + \\overline{CP}가 최소가 되도록 하는 점 P$의 위치를 찾고자 합니다.\n먼저, \\triangle ABP를 점 B를 중심으로 반시계 방향으로 60^\\circ 회전시킵니다. 회전 후에 새롭게 생기는 삼각형에서, 원래의 점 A에 대응하는 점은 A&#039;, 점 P에 대응하는 점을 P&#039;이라 하겠습니다. 회전 변환은 길이를 유지하므로, \\overline{AB} = \\overline{A&#039;B}, \\overline{PB} = \\overline{P&#039;B}입니다. 그리고 \\angle A&#039;BA = \\angle P&#039;BP = 60^{\\circ}가 됩니다. 따라서, \\triangle AA&#039;B와 \\triangle PP&#039;B는 정삼각형입니다.\n그림에서 보듯이 회전 변환에서는 도형의 크기와 형태가 변하지 않기 때문에 길이가 보존되고, \\triangle AA&#039;B와 \\triangle PP&#039;B는 정삼각형이므로, \\overline{AP} + \\overline{BP} + \\overline{CP}의 길이 합은 \\overline{AP&#039;} + \\overline{P&#039;P} + \\overline{PC}의 길이 합과 같습니다.\n\\overline{AP&#039;} + \\overline{P&#039;P} + \\overline{PC}의 길이가 최소가 되기 위해서는, 이 세 선분의 합이 \\overline{A&#039;C}라는 하나의 선분과 일치해야 합니다. 왜냐하면, 선분의 합이 최소가 되기 위해서는 가장 짧은 경로를 따라야 하므로, 시점인 점A와 종점인 C를 이은 직선 위에 세 선분이 위치해야하기 때문이죠.\n이제 점 P가 이동하면서, \\overline{AP&#039;} + \\overline{P&#039;P} + \\overline{PC}의 길이가 최소가 되는 위치를 찾으면, 이때 점 P가 바로 페르마 포인트 F_1가 됩니다. 페르마 포인트에서는 \\triangle P&#039;PB가 정삼각형이므로, 삼각형의 외각 성질을 이용해 \\angle BPC = 180^\\circ - 60^\\circ = 120^\\circ 입니다.\n마지막으로, 위의 과정을 삼각형의 다른 두 점에 대해서도 반복합니다. 같은 논리를 적용하여 최적의 점 P를 찾으면 결국 삼각형의 각 변을 한 변으로 하는 정삼각형을 각각 그린 후, 정삼각형의 바깥 꼭지점과 내부의 마주보는 점을 연결하는 교점이 페르마 포인트가 되며, 이때 각 꼭지점에서 페르마 포인트로 이은 각이 120^{\\circ}것을 알 수 있습니다.\n\n만약 한 각의 크기가 120^\\circ보다 크다면 어떻게 될까요? 일반적인 삼각형에서 페르마 포인트는 삼각형 내부에 위치하며, 이 점에서 삼각형의 각 꼭짓점으로 그은 선분이 이루는 각은 모두 120^{\\circ}입니다. 하지만, 삼각형의 한 각이 120^{\\circ}보다 크면, 삼각형 내부에서 이러한 조건을 만족하는 점이 존재하지 않게 됩니다.\n만약 \\angle A \\ge 120^\\circ이면, 삼각형 내부의 모든 점 P에서의 각 \\angle BPC \\ge 120^{\\circ}입니다. 따라서, 삼각형의 내부에서는 \\overline{AP} + \\overline{BP} + \\overline{CP}의 합이 최소가 되는 점이 존재하지 않게 됩니다. 그러나 점 P가 꼭지점 A로 이동하면 \\overline{AP} = 0이 되고, 거리의 합 \\overline{AP} + \\overline{BP} + \\overline{CP}는 \\overline{BP} + \\overline{CP}로 단순화되므로, 점 P가 삼각형 내부의 다른 위치에 있을 때보다 더 작아집니다. 따라서 한 각이 120^\\circ보다 큰 삼각형에서는 가장 큰 각의 꼭지점이 페르마 포인트가 됩니다.\n![[CleanShot 2024-08-12 at 14.43.26@2x 1.png|www.geogebra.org/classic/m5nswqb6|500]]\n슈타이너 트리(Steiner Tree)\n세 개의 점에서 페르마 포인트를 찾는 과정을 통해, 각 꼭짓점으로부터의 거리를 최소화하는 점을 알 수 있었습니다. 그런데 만약 네 개의 점이 주어졌다면 어떻게 해야 할까요? 세 점일 때는 비교적 간단한 해결책이 있었지만, 네 점의 경우 상황은 훨씬 복잡해집니다. 네 개의 점에서 최적의 연결점을 찾기 위해서는 다른 접근이 필요하며, 여기서 **슈타이너 점(Steiner point)**이라는 새로운 개념이 도입됩니다.\nTree\n앞서 보았듯 기하학적 문제들은 종종 직관적으로 이해하기 쉬운 형태로 주어지지만, 문제를 해결하기 위해서는 보다 형식화된 구조로 변환하는 것이 필요합니다. 이러한 구조화된 표현이 바로 그래프입니다.\n그래프는 점(꼭짓점)과 선(간선)으로 이루어진 구조로, 복잡한 기하학적 문제를 구조화된 형태로 표현할 수 있습니다. 그래프에서 이 슈타이너 점은 **트리(Tree)**의 형태로 표현될 수 있습니다. **트리(Tree)**란 사이클(cycle: 그래프 내에서 출발점과 도착점이 같은 닫힌 경로)이 없는 연결된 그래프입니다. 따라서 트리는 어떤 점에서 출발하여 동일한 점으로 돌아오는 경로가 존재하지 않고, 모든 노드가 직접 또는 간접적으로 연결되어 있습니다.\n역학적 해석\n트리는 인접 꼭짓점 사이의 거리 합을 잠재적 에너지로 하는 기계적 시스템으로 해석될 수 있습니다. 이러한 기계적 시스템은 트리가 상대적으로 최소 길이에 도달할 때 안정된 평형 상태에 있습니다. 예를 들어, 트리의 선들을 얼마만큼 늘리더라도 장력을 유지하는 고무 밴드로 생각할 수 있습니다. 그렇다면 주어진 점들은 고정된 상태이며, 슈타이너 점들은 자유롭게 움직일 수 있습니다. 이때 힘의 평형 위치를 슈타이너 점이라 생각할 수 있습니다.2\n\n그렇다면, 슈타이너 트리에서는 어떤 두 직선도 120^{\\circ} 미만의 각도로 만날 수 없습니다. 만약 두 선의 끼인각 \\theta가 \\theta &lt; 120^\\circ로 만난다고 가정해보겠습니다. 슈타이너 트리에서 각 선을 당기는 힘은 평형을 이루어야하고, 이 힘은 슈타이너 트리의 최단 거리 조건을 유지하는 역할을 합니다. 두 벡터 \\mathbf{F}_1과 \\mathbf{F}_2가 이루는 각도를 \\theta라고 하겠습니다. 이때, 두 벡터의 합 \\mathbf{F}는 벡터 삼각형에서 세 번째 변에 해당하며, 그 크기는 삼각법에 의해 다음과 같이 계산할 수 있습니다.\n|\\mathbf{F}| = \\sqrt{|\\mathbf{F}_1|^2 + |\\mathbf{F}_2|^2 + 2|\\mathbf{F}_1||\\mathbf{F}_2|\\cos(\\theta)}\n두 벡터의 크기가 1로 동일하면 즉, |\\mathbf{F}_1| = |\\mathbf{F}_2| = 1라고 하고, 코사인의 반각공식 \\cos(\\theta) = 2\\cos^2(\\theta/2) - 1을 이용하면 앞선 식은 단순화됩니다.\n|\\mathbf{F}| = \\sqrt{1^2 + 1^2 + 2\\cdot1^2\\cos(\\theta)} = \\sqrt{2(1 + \\cos(\\theta))} =2\\cos(\\theta/2)\n따라서, 두 힘 F_1과 F_2가 이루는 각도 \\theta가 작을수록 \\cos(\\theta/2) 값이 커지며, 따라서 합성된 힘 |\\mathbf{F}|가 증가한다는 것을 의미합니다. 이때, θ &lt; 120°라면, 두 선이 만나는 점에서 발생하는 힘이 1 즉, 기존의 벡터의 크기보다 과도하게 커지면서 트리의 다른 구성으로 이동하려는 경향이 생깁니다.\nF = 2 \\cos(\\theta/2) &gt; 1\n이때, 힘을 안정적으로 버텨줄 슈타이너 점을 추가하면, 더 짧고 안정적인 트리 구성으로 이동하게 됩니다. 따라서 슈타이너 트리에서 모든 선들은 최소 120°의 각도로 만나야 합니다. 그렇지 않으면 트리의 구조가 불안정해지고, 전체 길이를 줄일 수 있는 다른 구성이 나타날 수 있기 때문입니다. 반대로 120°보다 크다면 앞선 삼각형 예시에서 보았듯 내부에 슈타이너 점이 없으므로, 슈타이너 점에서 각 선은 120°로 만나게 됩니다.\n\n슈타이너 점의 개수\n앞선 성질에 의해 슈타이너 점에서 발생하는 힘의 합은 0이고, 각 슈타이너 점에서 120°의 각도로 만납니다. 따라서 슈타이너 트리에서 슈타이너 점은 항상 세 개(360^\\circ \\div 120^\\circ = 3)의 간선과 연결됩니다.\n\n트리는 항상 선 보다 하나 더 많은 점을 가집니다. 예를 들어, n개의 점과 s개의 슈타이너 점을 가진 트리에서는 총 간선의 개수가 n + s - 1개가 됩니다. n_k를 차수가 k인 점 즉, k개의 간선을 가지는 점의 수라 하면(단, 4이상의 차수를 갖는 선은 없으므로, n_4 = n_5 = \\cdots =0이다.), 전체 선의 수는 모든 점에서 생기는 선의 수를 더한 값이므로 다음 식이 성립합니다.\n3s + \\sum_{k} k n_k = 2(n + s - 1)\n점에 차수까지 곱해서 더한 값은 점의 수보다 크므로(슈타이너 트리에서 차수가 2인 점이 있을 수도 있다.) \\sum_k kn_k \\ge n가 성립합니다. 따라서, 슈타이너 포인트는 기껏해야 n-2개임을 알 수 있지요. 이때 등호가 성립하는 경우는 원래 점이 하나의 간선만을 가지는 경우입니다.\n3s+n \\le n+s-1 \\Rightarrow s \\le n-2\n사각형에서의 슈타이너 점 찾기\n슈타이너 트리에서 중요한 점은 슈타이너 점에서 발생하는 힘의 평형 상태를 이루기 위해 모든 슈타이너 점에서 연결된 세 개의 간선이 120^\\circ를 이루어야 한다는 것입니다. 이 점을 이용해서 사각형에서의 슈타이너 점을 찾아보겠습니다.\n![[CleanShot 2024-08-12 at 14.48.21@2x 1.png|www.geogebra.org/classic/zjshxpyv|500]]\n\\square ABCD에 대하여 변 \\overline {AB}를 한 변으로 하는 정삼각형 \\triangle AQB와 정삼각형의 외접원을 그립니다. 외접원 위의 점 중 사각형 내부에 위치한 부분에 임의의 점 P를 선택하면, \\angle APB는 항상 120^\\circ가 됩니다. 정삼각형 \\triangle AQB의 외접원은 사각형\\square AQBP의 외접원이기도 합니다. 외접원이 있는 사각형에서 마주보는 각의 합은 항상 180^\\circ이므로, 항상 60^\\circ를 갖는 Q의 대각인 P는 항상 120^\\circ입니다. 따라서 \\square ABCD의 한 슈타이너 점은 \\triangle AQB의 외접원 중 사각형 내부에 위치해야 합니다. 하지만 이 점들 중 아직 어떤 점이 슈타이너 점인지는 알 수 없습니다.\n이번에는 사각형의 마주보는 변  \\overline {CD}에 대해 동일한 과정을 반복합니다. 첫 번째 정삼각형의 외접원과 두 번째 정삼각형의 외접원 위에 있는 점들 중에서 슈타이너 점을 결정하려면, 이 두 외접원에서 가능한 후보 점들이 서로 이루는 각이 120^\\circ가 되어야 합니다. 따라서 마주보는 정삼각형의 꼭지점을 서로 이으면, 각 선들이 120^\\circ를 이루도록 외접원 위의 두 점이 교차하게 됩니다. 이 교차점들이 바로 사각형 \\square ABCD의 두 슈타이너 점입니다. 이러한 슈타이너 점들은 사각형 내에서 각 조건을 만족하는 특별한 위치로, 최적의 연결을 형성하게 됩니다.3\n하지만 여기서 끝이 아닙니다. 사실, 동일한 방법으로 또 다른 슈타이너 트리를 구할 수 있습니다. 사각형의 마주보는 변들, 즉 \\overline{AB}와 \\overline{CD}를 사용하여 하나의 슈타이너 트리를 찾을 수 있었지만, 다른 마주보는 변들, 즉 \\overline{AD}와 \\overline{BC}를 사용해도 또 다른 슈타이너 트리가 생깁니다. 그렇다면 이 둘 중 어떤 트리가 더 최적일까요?\n앞서 보았듯이 효율적인 슈타이너 트리는 각 슈타이너 점에서 연결되는 세 변의 각도가 120^\\circ가 되어야 합니다. 만약 두 트리 후보 중 하나에서 슈타이너 점에서의 각도가 120^\\circ에 가까운 반면, 다른 트리에서 이 조건이 충족되지 않는다면, 각도가 120^\\circ에 가까운 트리가 더 효율적일 가능성이 높습니다.\n하지만 이 경우에는 두 트리 모두에서 슈타이너 점에서의 각도 조건이 만족되기 때문에, 이 조건을 비교하는 것만으로는 어느 쪽이 더 효율적인지 판단할 수 없습니다. 그렇다면, 두 슈타이너 트리 중 어느 쪽이 더 최적인지 결정하는 핵심은 무엇일까요? 바로 총 길이입니다. 최적의 슈타이너 트리를 결정하기 위해서는 두 트리의 각 간선의 길이를 합산하여, 더 짧은 길이를 가지는 트리를 선택해야합니다.4\n다각형에서의 슈타이너 트리\n![[CleanShot 2024-08-12 at 15.08.29@2x 1.png|www.geogebra.org/classic/wywannvx]]\n그럼 오각형에서는 어떻게 될까요? 같은 방법으로 각도가 120^\\circ가 되는 점들을 찾고, 열심히 각 후보들 중에서 가장 효율적인 슈타이너 트리를 찾는 과정을 반복하면 됩니다. 이러한 해법은 정확한 답을 찾는 것은 가능할 지 몰라도, 더 복잡한 다각형에서는 과정이 매우 복잡해집니다. 각 슈타이너 점을 찾고 후보들을 비교하는 과정은 주어진 점에 따라 기하급수적으로 증가합니다.5\n\n\n                  \n                  Dreyfus-Wagner 알고리즘 \n                  \n                \n\n\n유한한 무향 그래프에서 슈타이너 문제를 해결하기 위해 주어진 s개의 그래프 점을 연결하는 데 필요한 최소 총 길이의 간선 집합을 계산하면, 그래프에 모두 n개의 노드가 포함되어 있을 경우, 이 알고리즘은 다음 시간에 비례하는 시간이 필요합니다.\n\\frac{n^3}{2} + n \\left(2^{s-1} - s - 1\\right) + \\frac{n}{2}\\left(3^{s-1} - 2^s + 3\\right)\n\n\n\n하지만 근사 알고리즘을 사용하면, 이러한 복잡한 계산을 피하면서도 실용적인 해를 빠르게 얻을 수 있습니다. 주어진 다각형의 모든 변에 대한 최단 경로를 계산하고, 주어진 모든 꼭짓점을 최소한의 간선으로 연결하는 최소 스패닝 트리를 사용하여 필요에 따라 슈타이너 점을 추가하며 트리를 보완하는 방식을 사용할 수도 있죠.(Kou-Markowsky-Berman 알고리즘)6\n이러한 방법을 사용하면 다항 시간 내에 최적해에 가까운 근사해를 매우 효율적으로 구할 수 있습니다. 이와 같은 근사 알고리즘은 복잡한 문제를 해결하는 데 매우 유용하며, 최적화 문제를 실질적으로 다룰 수 있게 해줍니다.\n예를 들어, 도시에 새로운 통신망을 구축할 때, 여러 지역에 설치된 기지국을 최소한의 케이블로 연결하려고 합니다. 이때, 슈타이너 트리 개념을 적용하면 기존의 주요 지점 사이에 새로운 중간 연결점을 추가해 전체 케이블 길이를 줄일 수 있습니다. 결과적으로 데이터 전송 속도는 극대화되고, 전력 소모와 유지보수 비용은 크게 절감할 수 있습니다. 슈타이너 트리는 원래 기하학적 문제에서 출발했지만, 단순한 이론적 모델을 넘어, 실질적으로 중요한 문제를 해결해주죠.\n우리는 삼각형의 페르마 포인트에서 출발해,  다각형에서의 슈타이너 트리 알고리즘까지 알아보았습니다. 기하에서 시작된 작은 질문은 현대 사회의 복잡한 시스템을 설계하는 실질적인 혁신을 이끌어 냈습니다. 여러분이 앞으로 마주할 복잡한 문제 속에서도, 기하적 사고가 해결의 문을 열어줄 수 있지 않을까요?\nFootnotes\n\n\nFermat point - Wikipedia ↩\n\n\nGilbert, E. N.; Pollak, H. O. (1968). _Steiner Minimal Trees. ↩\n\n\nD. Wells, The Penguin Dictionary of Curious and Interesting Geometry, London: Penguin, 1992. ↩\n\n\nRas, C., Swanepoel, K. &amp; Thomas, D.A. Approximate Euclidean Steiner Trees. J Optim Theory Appl 172, 845–873 (2017). ↩\n\n\nS. E. Dreyfus and R. A. Wagner, (1972) The Steiner problem in graphs. Networks, 1, 195–207. ↩\n\n\nA Fast Algorithm for Steiner Trees - Missouri University of Science and Technology ↩\n\n\n"},"Ray-math/Script/어느새-부터-패턴은-안멋져":{"slug":"Ray-math/Script/어느새-부터-패턴은-안멋져","filePath":"Ray math/Script/어느새 부터 패턴은 안멋져.md","title":"어느새 부터 패턴은 안멋져","links":[],"tags":["수열","그래프","점","원","원형","존재","선","조합","연결","가능","경우","길이","차수"],"content":"\n1 8 28 21 4 32 17 19 30 6 3 13 12 24 25 11 5 31 18 7 29 20 16 9 27 22 14 2 23 26 10 15\n여기 보이는 이 숫자들은 숫자들이 무작위로 배열되어 있는 것 처럼 보입니다. 하지만 이 원형수열은 숫자가 딱 한 번씩만 사용되었고, 인접한 두 숫자의 합이 항상 완전 제곱수를 이룹니다. 예를들어 32로 이루어진 수열에서 1과 8을 더하면 9가 되고, 이는 3의 제곱입니다.\n1+8=9=3^2\n마찬가지로, 32와 17을 더하면 49가 되는데, 이는 7의 제곱입니다.\n32 +17 =49 =7^2\n이런 아름다운 패턴과 숨겨진 규칙들이 바로 수학의 매력인데요. 32보다 크거나 작은 수에서도 가능할까요?\n33에서도 가능할까?\n우선 33에서도 이러한 패턴이 가능한지 알아보도록 하겠습니다. 1부터 33까지 33개의 숫자를 원 위에 배열하는 경우의 수는 원순열을 이용하면\n(33-1)! = 32!=2.63 \\times 10^{35}\n라는 것을 알 수 있습니다. 하지만 이 모든 원형 수열을 나열하면서 제곱수가 되는지 아닌지 판단하는 것은 매우 어렵기에 우리는 이 원형수열이 갖는 성질에 대해 한 번 생각해보겠습니다. 원형 수열은 이웃한 두 수의 합이 제곱수가 되는 성질을 갖고 있습니다. 따라서 모든 경우의 수를 다 찾는 것이 아니라 우선 1부터 33까지 숫자 중에 두 수의 합이 제곱수가 되는 조합만 시도해보면 됩니다. 이 모든 조합을 다 찾아보면 다음과 같습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n332^23^24^25^26^27^28^2(1,3)(1,8)(1,15)(1,24)(3,33)(16,33)(31,33)(2,7)(2,14)(2,23)(4,32)(17,32)(3,6)(3,13)(3,22)(5,31)(18,31)(4,5)(4,12)(4,21)(6,30)(19,30)(5,11)(5,20)(7,29)(20,29)(6,10)(6,19)(8,28)(21,28)(7,9)(7,18)(9,27)(22,27)(8,17)(10,26)(23,26)(9,16)(11,25)(24,25)(10,15)(12,24)(11,14)(13,23)(12,13)(14,22)(15,21)(16,20)(17,19)\n다음으로 1부터 32까지 가능한 조합들은 1부터 33까지의 조합에서도 사용할 수 있으므로 32로 만든 기존의 배열과 크게 차이가 나지 않을 것입니다. 따라서 32에서 가능한 조합과 비교해보겠습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n322^23^24^25^26^27^2(1,3)(1,8)(1,15)(1,24)(4,32)(17,32)(2,7)(2,14)(2,23)(5,31)(18,31)(3,6)(3,13)(3,22)(6,30)(19,30)(4,5)(4,12)(4,21)(7,29)(20,29)(5,11)(5,20)(8,28)(21,28)(6,10)(6,19)(9,27)(22,27)(7,9)(7,18)(10,26)(23,26)(8,17)(11,25)(24,25)(9,16)(12,24)(10,15)(13,23)(11,14)(14,22)(12,13)(15,21)(16,20)(17,19)\n1부터 32까지의 수를 보면 다음과 같이 46개의 순서쌍이 사용가능합니다. 길이가 32인 원형 수열을 만들기 위해서는 32개인 순서쌍이 있으면 충분한데 사용할 수 있는 조합의 수가 46개라면 충분하기에 처음에 본 원형 수열을 잘 만들 수 있었던거죠. 이제 33을 추가하면 (3,33), (16,33), (31,33)도 제곱수를 만들 수 있으므로 가능한 조합의 개수가 49개로 증가하게 됩니다. 더군다나 33은 처음 추가되는 수이므로 33이 들어갈 수 있는 자리인 3, 16, 31주변을 우선적으로 탐색하면서 원형 수열을 찾아보면 기존의 길이가 32인 수열을 크게 바꾸지 않고 길이가 33인 수열을 만드는 것을 성공할 수 있습니다.\n1 8 28 21 4 32 17 19 30 6 3 13 12 24 25 11 5 31 18 7 29 20 16 9 27 22 14 2 23 26 10 15.\n1 8 28 21 4 32 17 19 30 6 3 13 12 24 25 11 5 20 29 7 18 31 33 16 9 27 22 14 2 23 26 10 15.\n32보다 작게 만들 수 있을까?\n그렇다면 이러한 원형배열은 더 작은 수에서도 가능할까요? 예를들어 1부터 4까지의 수만 이용하면 어떻게 될까요? 1부터 4까지 중에 두 수의 합이 제곱수가 되는 조합은 (1,3) 밖에 없습니다. 따라서 1부터 4를 원형으로 배열해서는 제곱수를 만들 수 없죠.\n\n\n\n\n\n\n\n\n\n\n\n\n\n42^2(1,3)\n그렇다면 1부터 20까지라면 어떻게 될까요?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n202^23^24^25^26^2(1,3)(1,8)(1,15)(5,20)(16,20)(2,7)(2,14)(6,19)(17,19)(3,6)(3,13)(7,18)(4,5)(4,12)(8,17)(5,11)(9,16)(6,10)(10,15)(7,9)(11,14)(12,13)\n가능한 순서쌍의 개수가 22개로 늘었고 필요한 최소 순서쌍 개수인 20개보다 많으므로 가능해보이기도 합니다. 하지만 이 모든걸 다 조합해 원형으로 배열하려면 이어질 수 있는 모든 조합을 모두 고려하여 계산을 풀어야만 합니다. 따라서 이 복잡한 문제를 풀기 쉽게 바꾸기 위해서는 한 가지 수학적 아이디어가 필요합니다. 바로 그래프 이론(Graph Theory)이죠. 이 문제를 이렇게 바꾸어보겠습니다. 각 숫자들을 점으로 두고 가능한 조합인 두 수를 선으로 이어보는 거죠. 이렇게 문제를 바꾸어 보면 원형수열을 만드는 문제는 한 점에서 출발하여 선을 통해 모든 점을 다 연결한 후 다시 시작점으로 돌아오는 문제로 바뀌게 됩니다. 바로 해밀턴 회로 문제죠. 문제를 바꾸었다고해서 바로 결론을 찾을 수는 없습니다. 왜냐하면 아직 해밀턴 회로의 필요충분조건이 알려져 있지 않기 때문입니다. 다른말로 아직 해결방법이 증명되지 않는 미해결 문제죠.\n하지만 일반적인 풀이법은 없어도 이 문제와 같이 특수한 경우에 대해서는 몇 가지 힌트를 찾을 수 있습니다. 우선 해밀턴 회로는 모든 점을 지나고 다시 원래 그래프로 돌아오기 때문에 시작점이 의미가 없습니다. 어느 점에서 출발하든지 상관없죠. 따라서 저는 항상 1부터 출발해서 다시 1로 돌아오는 수열을 찾도록 하겠습니다. 다음으로 이웃한 두 수의 합이 제곱수가 되어야하므로 한 수를 기준으로 좌우에 각각 제곱수를 만들어야하므로 2개의 선을 이용해 점을 연결해야합니다. 쉽게말해 들어오는 선과 나가는 선이 필요하죠. 따라서 원형 수열이 존재하기 위해서는 한 점에 연결된 선의 개수 즉, 그래프의 차수는 최소 2가 되어야 합니다. 1 부터 차례대로 그래프를 그려보면서 그래프의 차수를 관찰해보면 1부터 30 까지의 그래프들은 차수가 2보다 작은 점이 존재하므로 원형 수열을 찾을 필요도 없이 원형 수열이 없다는 것이 증명되었습니다.\n그런데 이제 한가지 문제가 남습니다. 바로 31이죠. 31은 모든 점의 차수가 2보다 크거나 같은 최소의 수입니다. 따라서 이 경우에는 문제를 쉽게 해결할 수 없죠.\n31\n우선 31에서 원형수열이 존재할지, 존재하지 않을지 바로 찾을 수 있는 방법은 없습니다. 해밀턴 회로의 존재성은 미해결 문제죠. 그리고 너무나 유명한 NP문제입니다. 처음에 시도해보야할 경우의 수가 원순열의 경우의 수인 (n-1)!가지인 것을 보아도 컴퓨터를 갈아넣어야할 문제라는 것을 알 수 있죠. 그래도 그래프 이론을 이용해 문제를 조금 단순화할 수는 있습니다. 우선 31로 만든 그래프를 다시 보도록 하겠습니다.\n앞서 말했듯이 원형수열을 만들기 위해서는 최소 2개의 선이 필요합니다. 이 점을 초점으로하여 그래프를 다시 관찰하면 선이 2개인 점들이 있습니다. 이 점들은 다른 수의 조합을 사용할 수 없고 반드시 이어진 점들만 연결해서 원형수열을 만들어야 하죠. 이 선을 빨간색으로 표시하겠습니다. 그 후에 31을 보겠습니다. 31은 5와 18에만 연결되어 있습니다. 그러므로 5-31-18이외에 다른 조합은 불가능합니다. 같은 방법으로 18을 보면 31-18-7만 가능합니다. 이 두 수열을 이어보면 5-31-18-7이죠. 7은 차수가 4이므로 이제 다른 점으로 연결될 수 있어보이지만 29가 반드시 7과 20을 이어서 7-29-20이라는 수열을 만들어야하므로 결과적으로 7을 연결해야할 선 2개가 정해지게 됩니다. 이 내용을 정리하면 빨간선이 2개 연결된 점들은 반드시 이어지는 수열이 존재하고 이 점들은 수열을 잇는 처음점과 끝점을 제외하면 굳이 조사할 필요가 없어집니다. 따라서 빨간선이 2개 연결된 점을 제거하고 시점과 종점을 빨간색으로 이으면 다음과 같이 그래프를 간소화할 수 있습니다. 이 때 주의할 점은 5와 22처럼 시점과 종점을 이은 선은 반드시 연결되어야할 점이므로 빨간색으로 표시하겠습니다. 이렇게 간소화한 그래프에서 보면 2의 차수 즉, 연결된 점의 개수가 다시 2가 되므로 반드시 지나야하는 선인 빨간색으로 표시하고 빨간색 점이 2개가 되는 선을 제거하는 작업을 반복해 최종적으로 노드가 13개인 그래프로 간소화시킬 수 있습니다.\n이제 이 그래프의 한 점에서 출발하여 다시 원래점으로 돌아오는 그래프를 찾는 문제는 처음보았던 31개를 모두 잇는 것보다는 간단합니다. 그래도 이 그래프에서 바로 세기에는 어지럽기 때문에 점을 적절히 이동해보겠습니다. 그래프의 점을 이동하는 것은 이동 전후에 그래프의 정점과 간선, 그리고 그들 사이의 연결 관계가 변하지 않기 때문에 동형이며 복잡한 그래프를 더 간단한 형태로 바꿀 수 있습니다. 이렇게 그래프를 바꾼 후 남은 작업은 직접 다 해보는 것입니다. 이 그래프에서 저는 처음과 같이 1부터 출발할 것입니다. (그래프를 자세히 보면 1, 4, 15에서는 반드시 지나야할 빨간 간선이 없고, 모두 차수가 3이므로 이 세 점 중 하나에서 출발하는게 합리적입니다.)\n이제 1에서 출발했을 때 선택할 수 있는 경로는 3, 15, 24뿐 입니다. 저는 이 중에 3으로 이동해보겠습니다. 3으로 이동하면 3에서는 6과 12 중 하나를 골라 이동해야합니다. 하지만 생각해보면 반드시 빨간 선인 12로 이동해야만 합니다. 왜냐하면 3에서는 반드시 2개의 선이 연결되어 원형수열을 만들어야 하는데 이미 한개의 선이 연결되었으므로 만약 6으로 이동한다면 나중에 3과 12이 연결되면서 차수가 3이상이 되기 때문이죠. 따라서 12로 이동한 후 다시 선택의 갈림길에 섭니다. 이제 같은 방법으로 둘 중 하나의 선을 연결하면서 하나씩 시도해보면 빨간선을 우선적으로 이동하면서 해밀턴 그래프를 완성하지 못한다는 것을 알 수 있습니다. 1이란 점에서 3을 선택하는 것과 24를 연결하는 것은 본질적으로 같은 선택이고 15를 잇는 방법도 결과적으로 15를 지나서 다시 1로 가는 경우가 지금 보이는 경우에 포함되어 있으므로 이런 방식으로 모든 경우를 조사하면 해밀턴 회로가 없음을 보일 수 있습니다.\n33보다 큰 수는 가능할까?\n그렇다면 이제 한가지 질문만이 남았습니다. 31이하의 수에서는 원형수열이 없고, 32와 33은 원형 수열이 존재한다는 것은 알았는데 34이상에서는 어떻게 될까요? 앞서 보았듯 이 문제는 해밀턴 회로 문제로 모든 경우를 다 세는 방법밖에 없습니다. 그런데 그 전에 해야할 추측이 있습니다. 과연 32보다 큰 수에는 반드시 원형수열이 있을까요? 33에서는 운좋게 원형 수열을 찾았지만 그 보다 큰 수에는 원형수열이 있다고 확신할 수는 없습니다. 그리고 원형수열이 있다면 찾으면 되지만 반대로 없다면 앞서 본 경우처럼 모든 경우에 대해 없다는 것을 증명해야합니다. 따라서 수학에서 문제를 풀기 전에는 항상 이러한 존재성에 대한 질문을 던지죠. 답도 없는 문제에 답을 찾을 수는 없으니까요. 우선 저는 32보다 큰 수에는 반드시 이러한 원형 수열이 존재할 것이라 추측합니다. 그 근거는 순서쌍 개수의 증가 때문입니다. 앞서 보았듯이 32에서 33으로 변할 때 순서쌍은 3개 증가했습니다. 그렇다면 33에서 34로 변할 때 순서쌍은 몇개가 늘어날까요?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n342^23^24^25^26^27^28^2(1,3)(1,8)(1,15)(1,24)(2,34)(15,34)(30,34)(2,7)(2,14)(2,23)(3,33)(16,33)(31,33)(3,6)(3,13)(3,22)(4,32)(17,32)(4,5)(4,12)(4,21)(5,31)(18,31)(5,11)(5,20)(6,30)(19,30)(6,10)(6,19)(7,29)(20,29)(7,9)(7,18)(8,28)(21,28)(8,17)(9,27)(22,27)(9,16)(10,26)(23,26)(10,15)(11,25)(24,25)(11,14)(12,24)(12,13)(13,23)(14,22)(15,21)(16,20)(17,19)\n(2,34), (15,34), (30,34) 3가지가 늘어납니다. 원형수열은 앞서말했듯 숫자의 개수만큼 순서쌍 조합이 필요합니다. 따라서 34 원형수열은 33 원형수열보다 길이는 1밖에 증가하지 않았으나 조합의 개수는 3개가 증가했으니 나쁘지않죠. 물론 34를 원형수열에 배치하기 위해서는 34가 포함된 조합이 최소한 2개 필요하므로 3개라면 마냥 적당하지는 않지만요. 쨋든 저는 34도 원형 수열이 존재할거라는 강력한 믿음을 가지고 33에서 했었던 것과 마찬가지로 가능한 조합과 이전 수열에서 본 형태를 이용해 찾아보려했습니다.\n그러나 이 문제는 해밀턴 회로 문제이기에 제가 손으로 푸는 것은 한계가 있었고, 그래서 컴퓨터의 도움을 빌려 조건을 만족하는 수열을 찾아보았습니다. 그리고 그 결과 조건을 만족하는 원형 수열을 찾아냈습니다. 34에서도 원형 수열이 존재했으며 심지어 이러한 수열은 하나가 아니었습니다. 그리고 이러한 패턴은 더 큰 수들에서도 계속 발견되었습니다. 잠시 감상하시죠.\n아름다우신가요? 파이썬 코드를 이용해 조건을 만족하는 수열을 찾아보면 1초도 걸리지 않아 31에서는  원형 수열이 존재하지 않는다는 것을 알아낼 수 있고 길이가 42일 때는 1,000개 이상, 길이가 44일때는 10,000개 이상의 원형 수열이 가능하다는 사실을 알 수 있습니다. 더 큰 수에서는 너무 컴퓨팅 시간이 오래걸려 백트래킹과 최소 차수 휴리스틱을 활용해 존재하는지를 찾아 본 결과 아직 몇몇 자연수에 대해서는 원형 수열을 찾지 못한 것도 있지만 영상을 만드는 지금도 계속 비어있는 칸을 채워나가고 있으며 제가 이 문제를 처음 시작할 때 목표로 했던 길이가 100인 원형 수열도 찾아낼 수 있었습니다.\n더하여 원형수열의 길이가 100일 때 사용할 수 있는 순서쌍의 개수는 271개, 길이가 1000일 때 사용할 수 있는 순서쌍의 개수는 8711개로 필요한 순서쌍의 개수보다 더 많은 조합이 가능합니다. 그리고 길이가 100일 때 그래프의 최소차수는 4, 길이가 1000인 그래프의 최소차수는 12로 계속 증가하고 있습니다. 저는 이러한 추세를 통해 길이가 길어져도 원형수열이 반드시 존재할 것이라 추측합니다.\n하지만 앞선 결과에서 원형수열이 존재한다는 확신이 들어도 이는 추측일 뿐 반드시 존재한다고 생각하면 안됩니다. 해밀턴 회로에 대한 많은 정보를 담고 있는 오레의 정리에 따라 이 그래프를 분석해도 임의의 두점의 차수의 합이 길이보다 커지기에는 많이 부족하므로 반드시 해밀턴 회로가 있다고 확정할 수 없습니다. 왜냐하면 앞서 말했듯 해밀턴 회로의 존재성은 아직 필요충분 조건이 발견되지 않았고, 저는 이 문제를 해결할 능력이 부족하기 때문이죠.\n에필로그\n사실 이 문제는 제 가장 친한 친구한테 2년 전에 받은 사진 한장에 대한 질문으로 출발했습니다. 유튜브를 하니 이 주제로 한 번 영상을 만들어보라는 거였죠. 그런데 단순히 사진 하나 틀어놓고 아름답죠. 이러기에는 뭔가 부족해보였고, 이 문제를 보면서 ‘다른 수는 안되나?’ 하는 의문이 들었던 것에 대한 해결책을 찾으려 했습니다. 하지만 그때는 손으로만 문제를 풀다보니 한계를 느껴 포기했었지만 그러다 최근에 코딩을 배우게 되어 다시 원형 수열을 찾아보고자 도전해보았고 완벽하지는 않지만 이정도면 대본을 작성할 수 있을 것 같아 영상을 제작해보았습니다. 32에서만 원형수열이 존재했다면 신기했겠지만 오히려 다른 수에서도 원형수열을 찾다보니 처음만큼 신기한 것 같지는 않습니다. 이러한 다양한 패턴이 필연적으로 존재할 수 밖에 없고, 존재해야만 하는 것 처럼 느껴지죠. 오히려 이런 패턴을 보면서 아름답고 신기하다는 매력보다는 설계도 없는 레고 조각을 맞추어 나만의 비행기를 만드는 것과 같이 비밀을 하나씩 파헤치면서 보는게 진정한 수학의 매력이 아닐까 싶습니다. 제 부족한 지식으로는 여기가 한계였지만 이 영상을 보시는 여러분들은 저보다 더 뛰어나신 분들이 많으니 제가 찾은 결과를 바탕으로 더 나은 결과를 내주셨으면 좋겠습니다."},"Ray-math/Script/오일러-방정식":{"slug":"Ray-math/Script/오일러-방정식","filePath":"Ray math/Script/오일러 방정식.md","title":"세상을 바꾼 방정식 6 - 오일러 방정식","links":[],"tags":["다면체","오일러","증명","면","위상수학","방정식"],"content":"오일러 공식\n1752년, 오일러는 볼록한 다면체의 꼭짓점(V), 모서리(E), 면(F)의 개수 사이에 다음과 같은 관계가 성립함을 발견했습니다.1\n이 공식은 오일러 이전에도 이러한 패턴이 다면체에 존재한다는 것은 알려져 있었지만, 그것이 모든 다면체에 적용될 수 있다는 것은 오일러가 처음 발견한 것이었습니다. 이는 흔히 오일러 지표(Euler characteristic)라 불리며 폐쇄된 면을 가진 공간의 특성을 나타내는 수학적 속성을 나타냅니다.\n\\chi =V-E+F\n정리의 이름과 달리, 완전한 첫 증명은 다른 수학자들에 의해 이루어졌습니다. 각 수학자들은 독특하고 창의적인 접근 방식으로 이 공식을 증명했으며, 특히 코시의 증명 방법이 주목을 받았습니다.2\n코시의 증명\n코시는 오일러의 공식을 직관적인 기하학적 방법으로 증명하였습니다. 그의 증명은 다면체를 평면으로 전개하는 과정과 평면 지도를 삼각형으로 분할하는 과정을 통해 이루어집니다.3\n1단계: 다면체를 평면으로 전개하기\n먼저, 다면체의 한 면을 잘라내고 나머지 면들을 평면 위에 펼쳐서 평면 지도를 만듭니다. 이때, 꼭짓점(V)과 모서리(E)의 개수는 변하지 않지만, 면(F)의 개수는 1만큼 줄어들게 됩니다. 따라서 평면 지도에서는 다음과 같은 관계가 성립합니다.\nV - E + F = 1\n2단계: 평면 지도를 삼각형으로 분할하기\n평평하게 펼쳐진 평면 그래프에서, 삼각형이 아닌 다각형을 찾아 대각선을 그어 삼각형으로 만듭니다. 대각선을 그을 때마다 모서리(E)와 면(F)의 개수가 각각 1씩 증가하지만, V - E + F = 1이라는 관계에는 변함이 없습니다.\n3단계: 삼각형을 하나씩 제거하기\n이제 그래프에서 모든 면이 삼각형으로 분할되었다고 가정합니다. 삼각형을 하나 제거할 때, 모서리를 하나 제거하거나 또는 모서리 두 개와 꼭짓점 하나를 동시에 제거합니다. 이 과정에서도 V - E + F 값은 변하지 않습니다. 이 과정을 계속하면, 최종적으로 한 개의 삼각형만 남게 됩니다. 마지막으로 하나 남은 삼각형에서 V - E + F = 1이 성립하므로 증명은 완료됩니다.\n다면체란 무엇인가?\n이러한 증명은 직관적입니다. 정육면체나 정사면체와 같은 다면체에 대해서는 손쉽게 증명할 수 있죠. 그러나 코시의 증명은 시간이 지나면서 비판의 대상이 됩니다. 왜냐하면 코시의 생전에는 아직 확립되지 않은 위상수학적 결과를 암묵적으로 의존하고 있었기 때문이죠. 예를 들어 모든 다면체는 한 면만 제거하면 평평하게 펴 놓을 수 있을까요?\n다음 그림과 같은 육면체 가운데 구멍이 뚫린 다면체가 있다고 해보겠습니다. 이 다면체에서의 오일러 지표는 어떻게 될까요? 우선 앞선 방법과 같이 지표를 구하기 위해 윗면을 제거해보겠습니다. 윗면이 없다고 생각하고 이 물체를 연속적으로 변형해서 평면에 펼칠 수 있을까요? 앞선 다면체 처럼 간단하지 않아보입니다. 왜냐하면 점을 잇는 선들이 앞선 예시에 비해 너무나 많고 복잡하기 때문이죠. 따라서 증명을 하지는 않고, 그냥 점, 선, 면의 관계만 보도록 하겠습니다. 이 모양은 두 육면체를 겹치고 두 육면체의 꼭짓점을 서로 연결한 모양을 가집니다. 따라서 점의 개수는 8 \\times 2 =16개, 선의 개수는 12 \\times 2 + 8=32개 입니다. 면의 개수는 조금 복잡합니다. 뚫린 부분이 선으로 연결되면서 4개의 면으로 분할 되었기에 이를 고려하면 4 \\times 2 + 4\\times2=16입니다. 그러므로 오일러 지표는 0이 됩니다.\n\\begin{align*}\n\\chi &amp;= V -E +F\\\\\n&amp;= 16 - 32+16 = 0\n\\end{align*}\n여러개의 면으로 둘러싸인 다면체임에도 불구하고 오일러 지표가 2가 되지 않죠. 그렇다면 이 도형은 다면체가 맞기는 한걸까요?\n위상수학\n오일러 지표는 단순한 기하학적 대상인 다면체에 대한 연구에서 출발했습니다. 그러나 이 연구는 곧 기하학적 구조의 근본적인 특성을 새로운 방식으로 이해하는 데 기여하게 됩니다. 수학자들은 다면체에 대한 연구를  공간의 연속적인 변형에 의해 변하지 않는 속성을 연구하는 것으로 발전시켰죠. 앞선 오일러 지표가 V - E + F = 2라는 성질은 볼록한 다면체에서만 얻어낼 수 있습니다. 흔히 ‘구’라고 불리는 것을 변형한 형태로 자기 자신과 교차하지 않으며, 구멍이 없는 것이죠.\n따라서 오일러 지표가 V - E + F = 0인 물체는 볼록한 다면체라 할 수 없습니다. 앞선 예시처럼 구멍이 있는 물체는 토러스(torus)라고 불리죠. 두 물체는 기하학적 구조가 근본적으로 다른 개념입니다. 구를 교차하거나 구멍을 내지 않고서는 절대 토러스를 만들 수 없죠. 공간이 어떻게 연결되어 있는지, 구멍이 있는지와 같은 속성은 그 도형이 갖는 근본적인 성질입니다. 그러므로 오일러 지표가 다르다는 것은 근본적으로 두 도형이 다르다는 것을 의미합니다. 만약 두 도형이 동일하다면, 그들의 불변량(불변하는 특성, invariant)도 반드시 같아야 하고, 반대로 불변량이 다르다면 두 도형도 분명히 다른 것입니다. 그리고 이와같이 변하지 않는 성질을 연구하는 학문이 태동하게 되는데 바로 ‘위상수학(Topology)‘입니다.\n위상 수학의 활용\n\n서울시는 최근에 40년 만에 바뀌는 지하철 노선도의 최종 디자인을 발표했습니다. 시민과 전문가의 다양한 의견을 수렴해 원형으로 2호선을 나타내고, 다이어그램과 표기 요소을 변경했죠. 기존 노선도가 1980년대의 형태를 유지한 채 노선만 추가돼 복잡했기 때문입니다.4\n노선도에서 중요한 것은 각 역들이 어떻게 연결되어 있는지, 즉 그들 사이의 관계입니다. 역 간의 연결 관계는 그들이 물리적으로 얼마나 가까이 있느냐보다 더 중요하죠. 따라서 각 역이 어떻게 연결되어 있는지를 확인하는 것은 바로 위상수학이 다루는 핵심 개념인 ‘연결성’과 직접적으로 관련이 있습니다. 실제 지하철 노선은 복잡하지만, 노선도에서는 공간을 연속적으로 변형시켜도 본질적인 특성을 유지하죠. 이처럼 위상수학을 실생활에 적용한 결과 역 찾기 소요 시간을 최대 55% 단축시키는 효과를 보았습니다.\n뿐만 아니라 위상수학은 주식시장의 붕괴와 같이 사회 과학에서 적용되는 재난 이론(catastrophe theory)에도 응용될 수 있습니다. 재난 이론은 정량적 분석보다는 정성적 분석에 중점을 둡니다. 언제 또는 어느 정도로 일어날 것인가가 아니라, 일어날 것인가 아닌가를 따져야 하죠. 과학에서의 수학적 모델은 미적분으로 표현할 수 있는 행성의 규칙적인 회전, 가열되는 가스의 압력 점진적 증가, 떨어지는 물체의 지속적으로 변화하는 속도에 관심을 가졌습니다. 그러나 댐의 갑작스러운 붕괴, 물에서 얼음으로의 급격한 전환, 거품의 폭발과 같은 것들은 어떤가요? 불연속성은 예측이 어려운 돌발적 변화를 나타내며, 이러한 변화들은 전통적인 해석 기하학이나 대수학으로는 설명하기 어려운 경우가 많습니다. 하지만 위상수학은 변화의 본질을 파악하고, 불연속적인 전이가 언제 발생하는지, 그리고 종종 예측하기 어려운 전이가 시스템에 어떤 영향을 미치는지 이해할 수 있습니다. (물리학에서 충격파가 전파되는 동안 매체의 압력이나 밀도가 어떻게 변하는지 분석하거나, 심리학에서 환자의 기분 변화 패턴을 분석하는 모델을 제공합니다.)\n미적분과는 달리 일상생활에서 우리는 위상수학을 직접적으로 접할 일이 거의 없습니다. 매번 위상이 뭐냐라고 물어보면 도넛이랑 컵이랑 같다는 내용만 주구장창 반복하죠. 하지만 위상 수학은 형태와 구조의 근본적인 특성을 이해하는 데 수학이 어떻게 활용될 수 있는지를 보여줍니다. 다면체를 넘어 현실세계에 적용되며, 현대 수학의 중심적인 부분으로 자리 잡았죠.\nFootnotes\n\n\nEuler’s theorem on polyhedrons ↩\n\n\nEuler’s polyhedron formula ↩\n\n\nAn elementary proof of Euler’s formula using Cauchy’s method ↩\n\n\n서울 지하철 노선도, 40년 만에 변경 ↩\n\n\n"},"Ray-math/Script/이건-또-뭐야-...999=-1":{"slug":"Ray-math/Script/이건-또-뭐야-...999=-1","filePath":"Ray math/Script/이건 또 뭐야 ...999=-1.md","title":"이건 또 뭐야 ...999=-1","links":[],"tags":["진수","shorts","대수","어디크"],"content":"0.9999\\cdots=1인 것은 누구나 다 아는 사실입니다. 그렇다면 반대로 자릿수가 커져가면서 9가 계속 나오는 이러한 수는 얼마일까요? 믿기 어렵겠지만 \\cdots999=-1입니다. 세 가지 방법으로 이 등식이 성립함을 보여보겠습니다.\n\\cdots999=-1을 증명하는 3가지 방법\n1. 대수적 방법\n0.\\dot9=1임을 증명하는 것과 같이 이 수를 s = \\cdots999라고 가정한 후 10을 곱하면, 10s = \\cdots990이 됩니다. 두 식을 빼면 -9s = 9이므로 s = -1입니다.\n\\begin{align*}\ns &amp;= \\cdots999 \\\\\n10s &amp;= \\cdots990 \\\\\\\\\n\ns - 10s &amp;= -9 \\\\\n9s &amp;= -9 \\\\\ns &amp;= -1\n\\end{align*}\n2. 더하기 1\n좀 더 쉬운 방법도 있습니다. \\cdots999에 1을 더하면 어떻게 될까요?\n\\begin{array}{cccccc}\n&amp; &amp; &amp; ~~_{1} &amp; ~~_{1}&amp;\\\\\n&amp; &amp;  \\cdots &amp; 9 &amp; 9 &amp; 9 \\\\\n&amp; + &amp;  &amp;  &amp;  &amp; 1 \\\\\n\\hline\n&amp; &amp; \\cdots &amp; 0 &amp; 0 &amp; 0 \\\\\n\\end{array}\n이 수에 1을 더하면 9+1=10이므로 자릿수가 하나씩 올라가면서 반복적으로 0을 만들게 됩니다. 결과적으로 모든 자릿수가 0이 되므로 \\cdots999는 1을 더하면 0을 만드는 수입니다. 결과적으로 \\cdots999=-1입니다.\n3. 등비 급수를 이용한 방법\n\\cdots999는 9 + 90 + 900 + \\cdots 이므로 초항이 9이고 공비가 10인 등비 급수로 볼 수 있습니다. 따라서  등비급수의 합 공식을 이용하면\nS = \\frac{9}{1 - 10} = -1\n입니다.\np진수(p進數, p-adic number)\n물론 앞서 본 식들은 일반적인 상황에서는 성립하지 않습니다. 발산하는 값이므로 수렴값을 찾는 것 자체가 어불성설이죠. 이러한 수를 표현하는 것 자체도 말이 되지 않습니다. 하지만 p진수 흔히 p-adic number라 불리는 이 수는 특정한 기저에 대한 숫자의 표현을 확장한 것입니다. 대개 소수 p가 주어졌을때, p진수는 유리수의 확장으로서 실수와는 조금 다른 특성을 가집니다. 이 수들은 10진수와 유사한 형태로 표현될 수 있지만, 자릿수는 소수 p를 기반으로 하며, 오른쪽이 아닌 왼쪽으로 무한히 확장될 수 있습니다.\ns = \\sum_{i=k}^{\\infty} a_{i}p^{i} = a_{k}p^{k} + a_{k+1}p^{k+1} + a_{k+2}p^{k+2} + \\cdots\n여기서 k는 정수이고, 각 a_{i}는 0 \\leq a_{i} &lt; p인 정수입니다.\n모든 유리수는 위의 급수의 합으로 고유하게 표현될 수 있으며, 이를 통해 유리수를 특별한 p진수로 표현할 수 있습니다. 이렇게 정의한 수는 완비거리 공간(모든 코시수열이 수렴)을 만족하므로 실수에서 성립한 성질들이 p진수에서도 상당히 많이 유지되어 초기의 목적에 비해 훨씬 더 다양한 분야에서 사용되고 있습니다.\n이론물리학에서 시공간을 묘사하거나 양자장 이론을 분석할 때 응용될 수 있으며, 컴퓨터 공학에서는 데이터 압축이나, 암호, 그래픽에도 응용되죠. 쓸모없는 숫자놀이인 것처럼 보이지만 다 쓸데가 있어서 만드는게 아닐까요?"},"Ray-math/Script/초월수-e":{"slug":"Ray-math/Script/초월수-e","filePath":"Ray math/Script/초월수 e.md","title":"인류는 어떻게 e를 발견했는가?","links":[],"tags":["함수","로그","다음","테일러","수렴","만족","정리","과정","미분","자연","이자","밑","지수","계산","증가"],"content":"흔히 자연상수라 불리는 e는 수학의 여러 분야에서 중요한 역할을 합니다. 수학이나 자연과학, 심지어 사회과학에서도 등장하죠. 이렇게 모든 곳에서 볼 수 있는 e를 인류는 어떻게 발견하고 유도했을까요? e에 대한 모든 유도과정을 차근차근 살펴보도록 하죠.(앞으로 볼 내용 중에서는 여러분들이 공부하면서 봤던 내용들이 많이 있을 것 있니다. 아시는 내용은 건너뛰시면서 마지막에 왜 이 값이 다 같은 값으로 연결되는지 감상하시면 좋을 것 같습니다.)\n이자 계산\ne를 처음 발견하게된 계기는 우리가 일상에서 흔히 접하는 이자 계산을 통해서 입니다. 예를 들어, 은행에 가서 연이자율이 100%인 예금에 가입할 경우에 1년 후에 원금에 몇 배를 받을 수 있을까요?\n먼저, 연이자의 경우를 생각해봅시다. 이 경우 1년 후에 받을 수 있는 금액은 원금의 2배가 됩니다. 즉, 원금이 1이라면 1년 후에는 2를 받게 됩니다.\n\\left(1 + {1\\over1}\\right)^1 =2\n이번에는 이자를 반기에 한 번씩 주는 경우를 생각해보겠습니다. 만약 반기마다 이자를 받는대신 원금의 50%씩 이자를 받으면 어떻게 될까요?\n\\left(1 + {1\\over2}\\right)^2 = {9 \\over 4}=2.25\n1년 후에 받을 수 있는 금액은 1.5 \\times 1.5 = 2.25가 됩니다. 즉, 이자를 더 자주 주면 받을 수 있는 금액이 더 많아집니다. 이제 이 과정을 반복한다면 어떻게 될까요?\n\\begin{align*}\n\\left(1 + {1\\over3}\\right)^3= {64 \\over 27} &amp;= 2. \\dot37\\dot0\\\\\n\\left(1 + {1\\over4}\\right)^4= {625 \\over 256} &amp;= 2.44140625\\\\\n&amp;\\vdots\n\\end{align*}\n이자를 무한히 많이 주는 경우, 즉 연속적으로 이자가 붙는 경우를 생각해보면 1년 후에 받을 수 있는 금액은 극한을 이용해 계산할 수 있습니다.\n\\lim_{n \\to \\infty} \\left(1 + {1\\over n}\\right)^n = 2.71828\\cdots = e \n바로 이 값이 자연상수 e=2.71828\\cdots입니다. 즉, 2배의 이자를 연속적으로 주는 경우에는 1년 후에 받을 수 있는 금액이죠. 신기한 것은 이 수가 발산하지 않고 어떤 값으로 수렴한다는 것입니다.\n2. e의 수렴성\n왜 이자는 발산하지 않고 어떤 값으로 수렴할까요? 사실 이 수렴성을 엄밀하게 증명하는 것은 고등학교 과정은 아닙니다. 기본적인 아이디어는 이렇습니다. 어떤 수열이 특정한 범위내에 있는데 계속 증가한다는 것을 알면 반드시 어떤 값으로 수렴하지 않을까요? 왜냐하면 계속 증가하는데 상단이 막혀있으면 점근선처럼 어떤 값에 한없이 가까워져야 할 것이니까요. 이를 단조수렴정리라고 합니다.\n단조 수렴 정리\n만약 수열 {a_n}이 단조 이고 유계면 {a_n}은 수렴한다.\n\n수열 {a_n}이 조건에 의해 상한을 가지므로, 어떤 실수 M이 존재하여 모든 n에 대해 a_n \\leq M이 성립한다. 이 M을 수열 {a_n}의 극한이라고 가정하자.\n임의의 양수 \\epsilon &gt; 0에 대해, M - \\epsilon보다 큰 수열 {a_n}의 항을 찾아야 한다. 왜냐하면 {a_n}이 단조 증가하기 때문에, 이 항 이후의 모든 항도 M - \\epsilon보다 크기 때문이다.\n이제 N을 a_N &gt; M - \\epsilon을 만족하는 가장 작은 자연수라고 하자. 그러면 모든 n \\geq N에 대해 M - \\epsilon &lt; a_n \\leq M이 성립한다.\n따라서, 임의의 \\epsilon &gt; 0에 대해 N을 찾을 수 있으므로, {a_n}은 M에 수렴한다.\n이와 같은 방식으로 단조 감소하고 하한을 가지는 수열이 수렴함을 보일 수 있다.\n\n수렴성 증명\n단조 수렴 정리를 사용하기 위해 우리가 증명하려는 수열을 a_n = \\left(1 + {1\\over n}\\right)^n이라고 하겠습니다. (1 + x)^n은 이항 정리를 이용하면 다음과 같이 나타낼 수 있습니다.\n(1 + x)^n = 1 + nx + {n(n-1) \\over 2!}x^2 + {n(n-1)(n-2) \\over 3!}x^3 + \\cdots \n이때, x와 n이 모두 양수라면 다음과 같은 부등식을 얻을 수 있습니다.\n(1 + x)^n \\geq 1 + nx \n이제 x={1\\over n}을 대입하면 a_n 은 2보다 크다는 것을 알 수 있습니다.\na_n = \\left(1 + {1\\over n}\\right)^n \\geq 1 + n \\cdot {1\\over n} = 2 \n같은 방법으로 a_n은 3보다 작다는 사실도 알 수 있습니다.\n\\begin{align*}\n\\left(1 + \\frac{1}{n} \\right)^n &amp; =\\sum_{k=0}^{n} \\binom{n}{k} \\left(\\frac{1}{n}\\right)^k\\\\\n&amp; = \\binom{n}{0} \\left(\\frac{1}{n}\\right)^0 + \\binom{n}{1} \\left(\\frac{1}{n}\\right)^1 + \\binom{n}{2} \\left(\\frac{1}{n}\\right)^2 + \\cdots + \\binom{n}{n} \\left(\\frac{1}{n}\\right)^n \\\\\n&amp; = 1 + \\frac{n}{1} \\cdot \\frac{1}{n} + \\frac{n(n-1)}{2!} \\cdot \\frac{1}{n^2} + \\frac{n(n-1)(n-2)}{3!} \\cdot \\frac{1}{n^3} + \\cdots + \\frac{1}{n^n}\\\\\n&amp; \\le 1 + 1 + \\frac{1}{2!} + \\frac{1}{3!} + \\cdots + \\frac{1}{n!} \\\\\n&amp; \\le 1 + 1 + \\frac{1}{2} + \\frac{1}{2^2} + \\cdots + \\frac{1}{2^n} \\le 3\\\\\n\\end{align*}\n따라서 a_n은 유계입니다.\n2 \\le a_n \\le 3\n다음으로  a_n = \\left(1 + {1 \\over n}\\right)^n이 단조 증가 즉, a_{n+1} \\geq a_n임을 보이겠습니다. a_{n+1}와 a_n의 전개식은 이항정리를 이용하면 다음과 같습니다.\n\\begin{align*}\na_{n+1} &amp;= \\left(1 + \\frac{1}{n+1}\\right)^{n+1} = \\sum_{k=0}^{n+1} \\binom{n+1}{k} \\left(1\\right)^{n+1-k} \\left(\\frac{1}{n+1}\\right)^k\\\\\n&amp;= 1 + 1 + \\frac{n}{2!\\cdot (n+1)} + \\frac{n(n-1)}{3!\\cdot (n+1)^2} + \\frac{n(n-1)(n-2)}{4!\\cdot (n+1)^3} + \\cdots \\quad(1)\n\\\\\n\\\\\na_n &amp;= \\left(1 + \\frac{1}{n}\\right)^n = \\sum_{k=0}^{n} \\binom{n}{k} \\left(1\\right)^{n-k} \\left(\\frac{1}{n}\\right)^k\\\\\n&amp;= 1 + 1 + \\frac{(n-1)}{2!\\cdot n} + \\frac{(n-1)(n-2)}{3! \\cdot n^2} + \\frac{(n-1)(n-2)(n-3)}{4!\\cdot n^3} + \\cdots \\quad(2)\n\\end{align*}\n전개한 식을 비교하면 (1)번식의 각 항이 (2)번식의 각 항보다 항상 크고, 양항도 한 개 더 생기므로 a_{n+1}-a_n \\ge 0이라는 것을 알 수 있습니다. 따라서 a_n은 유계이며 단조 증가하므로 단조수렴정리에 따라 수렴한다는 것을 알 수 있습니다. 수렴한다는 사실을 알았다면 수렴값을 찾아야할텐데요. 수렴값은 조금만 있다가 찾도록 하죠.\n이름의 유래\n여기서 잠깐 e는 영어로 natural logarithm’s base 또는 Euler’s number라고 불립니다. 한국어로 번역하면 자연로그의 밑 또는 오일러 수 정도로 해석할 수 있죠.  그런데 왜 흔히 e를 자연상수라고 부르는 것일까요? 세균의 성장이나 인구의 증가와 같은 자연 현상에서는 복리와 유사한 성장 패턴을 볼 수 있습니다. 따라서 이러한 자연적인 성장 패턴을 나타내는 상수로서 e를 자연상수라고 부르게 된 것입니다. 그렇다고 영어로 그대로 natural constant라고 직역하면 안됩니다. 왜냐하면 natural constant 자연에 있는 다양한 상수들을 통칭하는 용도로 사용되기 때문이죠. 영어로 한다면 처음 보았듯이 자연로그의 밑이나 오일러 수라고 해야 서로 의미가 통합니다. 다른 의미로 e를 자연상수라고 부르는데는 자연로그와 연관이 깊은 것도 요인이 아닐까 생각합니다. 그런데 자연로그는 도대체 뭘까요?\n로그 함수의 역함수\n미분과 적분은 미적분으로 같이 다니듯, 지수와 로그도 항상 같이 따라다니는 개념입니다. 그래서 로그 함수와 지수 함수가 서로 역함수 관계에 있다는 것은 너무나 잘 알고 계실 것입니다. 즉, 한 함수를 통해 얻은 결과를 다시 원래의 값으로 돌리는 역할을 하죠. 이 관계를 이해하는 것은 e^x를 이해하는 데 중요한 열쇠가 됩니다. 일반적으로 해석학책에서는 로그 함수 \\ln x를 우선 정의하고 \\exp(x)를 로그함수의 역함수로 정의합니다. 왜 그럴까요?\n로그 함수 \\ln x는 다음과 같이 정의됩니다.\n\\ln x = \\int_1^x {1 \\over t} dt \n로그 함수 \\ln x의 정의를 살펴보면, \\ln x = \\int_1^x {1 \\over t} dt입니다. 이 식은 1부터 기하학적으로 t=1부터 t=x까지 함수 f(t)={1 \\over t} 아래의 면적을 구하는 것을 의미합니다. 이 면적은 t가 1에서 x로 변화할 때, 1 \\over t이 얼마나 누적되는지를 측정하는 거죠. 1 \\over t는 t가 1만큼 증가할 때마다 자기자신을 얼마나 많이 곱해야 하는지를 나타내는 비율입니다.\nt+1=t\\left(1+{1\\over t}\\right)\n따라서 직관적으로 본다면 이 적분식은 (1+ {1 \\over t})만큼을 계속 반복하여 곱하는 과정을 얼마나 했는지를 의미하죠.  수식으로 보겠습니다.\n어떤 함수 f가 다음과 같은 성질을 만족한다고 해보겠습니다.\n\nf(xy)=f(x)+f(y)\nf(x^a)=af(x)\nf(1)=0\n\nf의 성질을 보면 누가 봐도 로그함수이지만 일단 모르쇠하겠습니다.\n\n\\log(xy)=\\log(x)+\\log(y)\n\\log(x^a)=a\\log(x)\n\\log (1)=0\n\n이러한 성질을 만족하는 함수를 찾기 위해 첫 번째 성질을 x에 대해 미분하면 다음과 같은 결과를 얻을 수 있습니다\nyf&#039;(xy)=f&#039;(x)\n여기서 x=1을 대입하면\nf&#039;(y) = {f&#039;(1) \\over y}\n을 만족합니다. 이 관계식으로부터 우리는 미적분학의 기본정리에 따라\nf(x) - f(c) = \\int_c^x f&#039;(t)dt = f&#039;(1) \\int_c^x \\frac{1}{t} dt \n라고할 수 있습니다. 세번째 성질에 의해 f(1)=0이므로, c=1을 대입하면\nf(x) = f&#039;(1) \\int_1^x \\frac{1}{t} dt \n라 할 수 있습니다. 이때, 밑이 e인 자연로그는 위의 성질과 f&#039;(1)=1을 만족하는 유일한 함수이므로\n\\ln(x) = \\int_1^x \\frac{1}{t} dt \n라 할 수 있습니다. 그런데 밑이 e인 자연로그는 위의 성질을 만족하면서 왜 f&#039;(1)=1을 만족할까요?\n로그의 치명적 한계\n로그함수를 비율을 나타내는 수로 매우 크거나 작은 수를 근사치로 빠르게 계산하기 위해 만들어졌습니다. 그런데 로그함수는 태생적으로 같은 차이를 가지는 두 수의 로그 값이 그 차이가 클 수록 더 크게 나타난다는 치명적인 한계가 있습니다. 예를 들어, 두 수 2와 3의 차이는 1입니다. 이 두 수의 상용로그 값의 차를 계산해보면,\n\\log_{10}3 - \\log_{10}2 = \\log_{10}\\left(\\frac{3}{2}\\right) \\approx 0.176\n입니다. 이제 두 수 8과 9의 차이를 살펴보겠습니다. 8과 9의 차이도 1이지만 이 두 수의 로그 값을 계산해보면,\n\\log_{10}9 - \\log_{10}8 = \\log_{10}\\left(\\frac{9}{8}\\right) \\approx 0.051\n입니다. 같은 차이를 가지는 두 수의 로그 값의 차이를 비교해보면, 후자가 훨씬 작은 값을 가집니다. 이는 별거 아닌거 같지만 큰 문제를 발생시킵니다. 로그는 수를 로그로 변환하고 역산하는 과정을 반복해 근사치를 구합니다. 따라서 1,2,3에서는 간격이 넓기에 소수점 아래 세네자리 까지 이용해 계산해도 근사치를 매우 정밀하게 계산해낼 수 있는 반면 7,8,9에서는 간격이 좁기에 소수점 아래 많은 수까지 계산해도 근사치가 부정확해진다는 단점이 생기게 되는거죠.\n\\begin{array}{|c|c|}\n\\hline\nx &amp; \\log_{10}x \\\\\n\\hline\n1 &amp; 0 \\\\\n\\hline\n2 &amp; 0.301\\cdots \\\\\n\\hline\n3 &amp; 0.477\\cdots \\\\\n\\hline\n4 &amp; 0.602\\cdots \\\\\n\\hline\n5 &amp; 0.699\\cdots \\\\\n\\hline\n6 &amp; 0.778\\cdots \\\\\n\\hline\n7 &amp; 0.845\\cdots \\\\\n\\hline\n8 &amp; 0.903\\cdots \\\\\n\\hline\n9 &amp; 0.954\\cdots \\\\\n\\hline\n\\end{array}\n비율을 일정하게 유지하기 위해\n로그를 연구하는 사람들은 이러한 단점을 너무나 잘 알고 있었습니다. 그렇기에 로그함수가 x의 값이 증가함에 따라 y의 값도 일정하게 증가하며 모든 점에서 근사치가 정확하게 계산되기를 바랐죠. 그렇다면 어떻게 x의 값이 증가함에 따라 y의 값도 일정하게 그 비율을 유지할 수 있을까요? 사실 어렵지 않습니다. 로그를 이용해 일차함수 y=x를 만들면 되는거죠. y=x는 x값에 따라 y의 값이 정확히 같은 값을 가지니까요. 그럼 이제 다음 질문은 간단해집니다. 로그함수를 어떻게하면 일차함수로 만들 수 있을까요? 로그함수의 개형은 밑에 따라서 달라집니다. x에 스칼라배하거나 덧셈을 하는 것은 평행이동일 뿐이죠.\n\\begin{align*}\ny&amp;=\\log ax= \\log x + \\log a\\\\\ny&amp;=\\log (x+a)\n\\end{align*}\n그렇다면 로그의 밑을 어떻게 조정해야 일차함수가 될까요? 우선 로그함수 y=\\log_a x 는 (1,0)을 정점으로 가지며 x=0을 점근선으로 갖습니다. 반면에 y=x는 (0,0)을 지나죠. 그러므로 먼저 x 대신 x+1을 대입하여 원점을 지날 수 있도록 평행이동 합니다.\ny=\\log_a (1+x)\n다음으로 일차함수를 만들기 위해 로그를 없애기 위해서는 밑을 없애야하므로 a에 진수와 같은 (x+1)을 이용해 표현해보겠습니다.\ny=\\log_{(1+x)} (1+x)=1\n만약 밑이 (1+x)라면 y=1이 됩니다. 우리가 만들어야할 것은 y=x이므로 양변에 x를 곱해 정리하면\ny=x \\times \\log_{(1+x)} (1+x)=x\ny=\\log_{(1+x)^{1\\over x}} (1+x)=x\n밑이 (1+x)^{1 \\over x}일 때 y=x가 성립함을 알 수 있습니다. 여기서 구한 밑 (1+x)^{1 \\over x}가 익숙하실 것입니다. 바로 자연상수 e를 만드는 공식의 일부이죠. 우리가 흔히 자연로그 라고 부르는 밑이 e인 로그는 탄생부터가 y=x와 같아지게 만들어진 함수입니다. 따라서 이 공식은 외우는 것이 아니라 당연히 분모와 분자가 같은 식이라고 생각하셔야합니다.\n\\lim_{x \\rightarrow 0}{\\ln(1+x) \\over x}=1\n이 극한으로부터 로그함수 \\ln(1+x)의 x=0에서의 기울기가 1이라는 사실도 자명하게 알 수 있습니다. 따라서 앞서 본 자연로그의 정의로 이어지면서 유리함수의 적분으로 로그함수를 깔끔하게 정의해낼 수 있습니다.\n미분 방정식 f&#039;=f\n변화량이 다시 자기 자신과 같아지는 함수는 어떤게 있을까요? 이러한 함수는 자기 자신을 미분값으로 가지므로 간단하게\nf&#039;=f\n라 나타낼 수 있습니다. f \\not\\equiv 0이라면 미분 방정식을 풀기 위해\n양변을 f로 나누고\n{f&#039; \\over f} = 1 \n적분하면\n\\begin{align*}\n\\frac{f&#039;}{f} &amp;= 1\\\\ \n&amp; \\Rightarrow \\int \\frac{f&#039;}{f} dt = \\int dt \\\\\n&amp; \\Rightarrow \\ln \\vert f \\vert = t + C \\\\\n&amp; \\Rightarrow \\vert f \\vert= e^{t+C} = e^C e^t \\\\\n&amp; \\Rightarrow \\vert f \\vert = A e^t \\Rightarrow f(t) = \\pm A e^t\n\\end{align*}\n좌변은 로그의 정의에 따라 \\ln \\vert f \\vert가 되고, 우변은 t가 됩니다. 식을 정리하기 위해 양변에 지수 함수를 취하면 앞서 보았듯이 지수와 로그는 역연산이므로 f는 지수함수라는 결과를 얻을 수 있습니다. 그렇게 미분을 통해서 지수함수를 찾는 방법은 사실 한가지 더 있습니다. 바로 테일러 전개식을 이용하는거죠.\n5-1. 테일러 전개식을 통한 e^x의 정의\n테일러 전개는 쉽게말해 다항함수꼴의 무한급수를 이용해 함수를 나타내는 방법을 말합니다. f&#039;=f를 만족하는 함수는 다항함수꼴로 어떻게 표현할 수 있을까요?\n함수 f(x)의 a=0에서의 테일러 전개식은 다음과 같습니다.\nf(x) = \\sum_{n=0}^{\\infty} {f^{(n)}(0) \\over n!} x^n\n= f(0) + f&#039;(0)x + {f&#039;&#039;(0) \\over 2!}x^2 + {f^{(3)}(0) \\over 3!}x^3 + {f^{(4)}(0) \\over 4!}x^4 + \\cdots\n이제 양변을 미분하고 식을 비교해보겠습니다.\nf&#039;(x) = \\sum_{n=1}^{\\infty} {f^{(n)}(0)\\over (n-1)!} x^{n-1} = f&#039;(0) + {f&#039;&#039;(0)}x + {f^{(3)}(0) \\over 2!}x^2 + {f^{(4)}(0) \\over 3!}x^3 + {f^{(5)}(0) \\over 4!}x^4 +\\cdots\nf&#039;=f라 했으므로 계수를 비교하면\nf(0)=f&#039;(0)=f&#039;&#039;(0)= \\cdots =f^{(n)}(0) \n을 만족하므로 식을 바꿔 다시 쓰고 f(0)을 공통으로 묶어서 정리하면 다음과 같이 쓸 수 있습니다.\nf(x) = f(0) \\sum_{n=0}^{\\infty} {x^n \\over n!}= f(0) + {f(0)}x + {f(0) \\over 2!}x^2 + {f(0) \\over 3!}x^3 + {f(0) \\over 4!}x^4 +\\cdots\n우리는 이전에 f=f&#039;을 만족하는 함수는 지수함수라는 것을 알고 있고, f(0) = 1이라면 e^x 테일러 전개는 다음과 같습니다.\ne^x = \\sum_{n=0}^{\\infty} {x^n \\over n!} = 1 + x + {x^2 \\over 2!} + {x^3 \\over 3!} + {x^4 \\over 4!} + \\cdots \n이 테일러 급수가 갖는 의미는 어떤 것이 있을까요?\n무리수 e (테일러 급수의 의의 1)\n테일러 급수식이 갖는 첫번째 의미는 이 식에 x=1을 대입하면, 자연상수 e를 얻을 수 있다는 것입니다.\ne = 1 + 1 + {1 \\over 2!} + {1 \\over 3!} + {1 \\over 4!} + \\cdots \n이 무한급수의 각 항이 {1 \\over n!}만큼 빠르게 작아지므로, n이 작아도 e의 근사값을 빠르게 얻을 수 있다는 장점이 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn테일러 전개 결과수열식 결과1\\sum_{k=0}^{1} {1 \\over k!} = 2(1 + {1 \\over 1})^1 = 22\\sum_{k=0}^{2} {1 \\over k!} = 2.5(1 + {1 \\over 2})^2 = 2.253\\sum_{k=0}^{3} {1 \\over k!} = 2.6666\\cdots(1 + {1 \\over 3})^3 = 2.3703\\cdots4\\sum_{k=0}^{4} {1 \\over k!} = 2.7083\\cdots(1 + {1 \\over 4})^4 = 2.4414\\cdots5\\sum_{k=0}^{5} {1 \\over k!} = 2.7166\\cdots(1 + {1 \\over 5})^5 = 2.4883\\cdots6\\sum_{k=0}^{6} {1 \\over k!} = 2.7180\\cdots(1 + {1 \\over 6})^6 = 2.5216\\cdots7\\sum_{k=0}^{7} {1 \\over k!} = 2.7182\\cdots(1 + {1 \\over 7})^7 = 2.5465\\cdots8\\sum_{k=0}^{8} {1 \\over k!} = 2.7182\\cdots(1 + {1 \\over 8})^8 = 2.5657\\cdots9\\sum_{k=0}^{9} {1 \\over k!} = 2.7182\\cdots(1 + {1 \\over 9})^9 = 2.5815\\cdots10\\sum_{k=0}^{10} {1 \\over k!} = 2.7182\\cdots(1 + {1 \\over 10})^{10} = 2.5937\\cdots\n물론 n이 커지면 더해야할 값들이 많아지므로 수열식을 이용하는게 더 효과적일 수 있지만요. 그렇다면 아직 해결하지 않은 질문이 한 가지 남았습니다. e는 무리수일까요? X_n을 테일러 전개식의 부분합이라고 해보겠습니다.\nX_{n}=\\sum _{{k=0}}^{n}{1\\over k!}\n그렇다면 e에서 부분합을 뺀 부분은 다음과 같이 정리할 수 있습니다.\ne-X_{n}=\\sum _{{k=n+1}}^{\\infty }{ 1\\over k!} = {1 \\over (n+1)!}+{1 \\over (n+2)!}+ {1 \\over (n+3)!} +\\cdots\n여기서 {1 \\over (n+1)!}로 식을 묶어주면\ne-X_{n}= {1 \\over (n+1)!} \\left({1} + {1 \\over (n+2)} + {1 \\over (n+2)(n+3)}+ \\cdots \\right)\nn과 k가 충분히 클 때 (n+1)&lt;(n+k)이므로 다음과 같은 부등식이 성립합니다.\ne-X_{n} &lt;{1 \\over (n+1)!}\\cdot \\left(1+{1 \\over n+1}+{1 \\over (n+1)^{2}}+ {1 \\over (n+1)^{3}}+\\cdots \\right)\n이 때 (n+1)의 거듭제곱식의 역수의 합은 등비급수로 정리해줄 수 있습니다.\ne-X_{n}  &lt; {1 \\over n(n)!} \n이제 e 를 유리수라 가정하면 양의 정수 p, q에 대하여 e= {p \\over q}가 되어야하므로 n=q라 하면 식을 다음과 같이 적을 수 있습니다.\n0 &lt; e-X_{q}  &lt; {1 \\over q(q)!} \n이제 양변에 q!을 곱한식을 *라 하겠습니다.\n0 &lt; q!(e-X_{q}) &lt; {1 \\over q}  \\quad \\cdots *\ne= {p \\over q}라 가정했으므로 *는 다음과 같이 적을 수 있습니다.\n0 &lt; p(q-1)! - q! X_{q} &lt; {1 \\over q} \n그런데 이 식에서 보면 q!e와 q!X_q은 모두 양의 정수 이므로 q!(e-X_{q}) 또한 양의 정수여야 합니다. 그런데 *에서 q!(e-X_{q})은 0보다 크고 {1 \\over q}보다 작다고 했으므로 모순이 생깁니다. 따라서 e는 유리수가 아니므로 무리수입니다.\n오일러 공식 (테일러 급수의 의의 2)\n지수함수 \\exp(x)의 테일러 전개식이 갖는 의의가 단지 자연상수 e를 찾는 것만 있지 않습니다. 앞서 보았듯 f=f&#039;을 만족하는 f는 지수함수입니다. 그런데 이 식을 변형하여 f=f&#039;&#039;을 만족하는 함수는 무엇일까요? 당연하게 양변을 한 번 더 미분하면 f&#039;=f&#039;&#039;이므로 다시 지수함수가 됩니다.\nf=f&#039;=f&#039;&#039; \\Leftrightarrow f=Ae^x \n그렇다면 f=-f&#039;&#039;을 만족한다면 어떨까요? 먼저, 함수 f(x)의 a=0에서의 테일러 전개식은 앞서 본 것과 같이 다음과 같습니다.\nf(x) = \\sum_{n=0}^{\\infty} {f^{(n)}(0) \\over n!} x^n\n= f(0) + f&#039;(0)x + {f&#039;&#039;(0) \\over 2!}x^2 + {f^{(3)}(0) \\over 3!}x^3 + {f^{(4)}(0) \\over 4!}x^4 + \\cdots\n이제 양변을 두 번 미분하고,\nf&#039;&#039;(x) = \\sum_{n=2}^{\\infty} {f^{(n)}(0)\\over (n-2)!} x^{n-2} = f&#039;&#039;(0) + {f^{(3)}(0)}x + {f^{(4)}(0) \\over 2!}x^2 + {f^{(5)}(0) \\over 3!}x^3 + {f^{(6)}(0) \\over 4!}x^4 +\\cdots \nf&#039;&#039; = -f라 했으므로 계수를 비교하면\nf(0)=f&#039;&#039;(0), f&#039;(0)=-f^{(3)}(0), {f&#039;&#039;(0) \\over 2!}=-{f^{(4)}(0) \\over 2!}, {f^{(3)}(0) \\over 3!}=-{f^{(5)}(0) \\over 3!}, \\cdots \n을 만족합니다. 식을 보면 두 번 미분 했기에 짝수번 미분 한 것끼리 서로 연관이 있고, 홀수 번 미분 한 것끼리 서로 연관이 있는 것 처럼 보이죠. 그러므로 식을 f(0)과 f&#039;(0)을 공통으로 묶어서 정리하면 다음과 같이 쓸 수 있습니다.\nf(x) = f(0) \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} + f&#039;(0) \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} \n이 식은 e^x의 테일러 전개와 비슷한 점이 많습니다.\nf(x)=e^x = f(0) \\sum_{n=0}^{\\infty} {1 \\over n!}x^n\n식에 공통된 값 예를들어 f(0)과 같은 값이 있어 식을 묶어서 정리할 수 있고, 이렇게 묶으면 분자가 매우 간단해지죠. 물론 차이점도 명확합니다. f=-f&#039;&#039;를 만족하는 테일러 급수의 경우 홀수차수, 짝수차수가 다른 값에 영향을 받고, 분자가 -1의 거듭제곱 꼴이라는 것이죠.\n여기서 잠깐만 이렇게 생각해보겠습니다. 테일러 급수는 함수를 다항함수꼴을 이용해 표현한 것이라 했습니다. 그렇다면 다항함수가 만약 짝수차수로만 이루어져 있다면 뭐라고 부르나요? 반대로 홀수차수로만 이루어져 있다면 뭐라고 할까요? 맞습니다. 바로 우함수와 기함수입니다. y축 대칭, 원점 대칭이죠. 이 식은 그래서 \\exp(x)의 우함수 부분과 기함수부분을 적절히 합쳐놓은 것과 같은 모양을 하고 있습니다. 그래서 적당한 값을 f(0)과 f&#039;(0)에 대입해 이 두 부분을 분리해보겠습니다.\n우선 우함수 부분만 보기 위해 f(0) = 1, f&#039;(0) = 0을 대입해 식을 정리하면 다음과 같습니다.\n\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} = 1 - {x^2 \\over 2!} + {x^4 \\over 4!} - {x^6 \\over 6!} + \\cdots\n같은 방법으로 기함수 부분만 보기 위해 f(0) = 0, f&#039;(0) = 1을 대입해 식을 정리하면 다음과 같습니다.\n\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} = x - {x^3 \\over 3!} + {x^5 \\over 5!} - {x^7 \\over 7!} + \\cdots \n이렇게 식을 정리해 보면 \\exp(x)의 우함수와 기함수 부분과 정확히 일치할까요? 안타깝게도 성립하지 않습니다.\n\\sum_{n=0}^{\\infty} {x^n \\over n!} \\not= \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} + \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} \n1 + x + {x^2 \\over 2!} + {x^3 \\over 3!} + {x^4 \\over 4!} + \\cdots \\not= 1+x- {x^2 \\over 2!}- {x^3 \\over 3!}+ {x^4 \\over 4!}+ {x^5 \\over 5!}- \\cdots \n왜냐하면 부호차이가 있기 때문이죠. \\exp(x)는 항상 양수인데 반해 f=-f&#039;&#039;을 만족하는 함수의 경우 양변을 다시 두 번 미분해 총 네 번 미분해야 f=f^{(4)} 원래 함수의 부호와 같아집니다. 그렇다면 어떻게 해야 두 식이 같아질 수 있을까요? 중간에 부호가 바뀌지만 네 번 마다 다시 양수가 되는 수는 무엇일까요? 바로 허수 i입니다. 따라서 양변에 i를 적절히 이용하여 짝수와 홀수가 번갈아 부호가 바뀌게 설정하면 이 식은 같아집니다.\n\\sum_{n=0}^{\\infty} {(ix)^n \\over n!} = \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} + i\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} \n\\sum_{n=0}^{\\infty}{(ix)^n \\over n!} = 1 + ix - {x^2 \\over 2} - {ix^3 \\over 3!} + {x^4 \\over 4!} \\cdots \n\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} + i\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} = \\left( 1 - {x^2 \\over 2} + {x^4 \\over 4!} - \\cdots \\right) + \\left( ix - {ix^3 \\over 3!} + {ix^5 \\over 5!} - \\cdots \\right) \n아마 눈치 빠르신분들은 지금 이 식이 의미하는 바를 이미 아시고 계실 것입니다. f =-f&#039;&#039; 를 만족하는 함수는 뭘까요? \\sin(x)의 도함수는 \\cos(x)이고, 다시 한 번 미분한 이계도함수는 -\\sin(x)입니다. 반대로 \\cos(x)의 도함수는 -\\sin(x)이고, 이계도함수는 -\\cos(x)입니다.\n\\begin{align*}\n\\sin&#039;(x) &amp;=\\cos(x)\\\\\n\\cos&#039;(x) &amp;=-\\sin(x)\\\\\n\\\\ \n\\sin &#039;&#039;(x) &amp;= -\\sin(x)\\\\\n\\cos&#039;&#039;(x) &amp;= -\\cos(x)\\\\\n\\\\\n\\sin^{(4)}(x) &amp;= \\sin(x)\\\\\n\\cos^{(4)}(x) &amp;= \\cos(x)\n\\end{align*}\n삼각함수 \\sin(x)과 \\cos(x) 모두 f=-f&#039;&#039;(x)를 만족하죠.\nf(x)= -f&#039;&#039;(x) \\Leftrightarrow f(x)=c_2 \\sin x+c_1 \\cos x \n그리고 \\sin(x)는 f(0) = 0, f&#039;(0) = 1입니다. 홀수 차수로만 이루어져 있던 식이 사실 \\sin(x)의 테일러 전개식이었던 거죠.\n\\sin(x) = \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1} = x - {x^3 \\over 3!} + {x^5 \\over 5!} - {x^7 \\over 7!} + \\cdots \n같은 방법으로 \\cos(x)는 f(0) = 1, f&#039;(0) = 0이고, 짝수 차수로만 이루어져 있던 식은 \\cos(x)의 테일러 전개식입니다.\n\\cos (x) = \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} = 1 - {x^2 \\over 2!} + {x^4 \\over 4!} - {x^6 \\over 6!} + \\cdots\n결과적으로 이 복잡한 식을 간단하게 표현하면\n\\begin{align*}\n\\sum_{n=0}^{\\infty} {(ix)^n \\over n!} &amp;= \\sum_{n=0}^{\\infty} {(-1)^n \\over (2n)!} x^{2n} + i\\sum_{n=0}^{\\infty} {(-1)^n \\over (2n+1)!} x^{2n+1}\\\\\ne^{ix} &amp;= \\cos(x)+i\\sin(x)\n\\end{align*}\n흔히 오일러 공식이라 불리는 식이 성립하게 됩니다.  오일러 공식을 단순히 세상에서 가장 아름다운 공식을 유도하는 식 정도로만 알고계신분 들이 계실 것입니다.\n\\begin{align*}\n&amp; e^{i \\pi} = \\cos(\\pi)+i\\sin(\\pi) = -1\\\\\n&amp; \\Rightarrow e^{i \\pi}+1=0 \\\\\n\\end{align*}\n하지만 오일러 공식없이는 복소해석학을 단 한발자국도 나갈 수 없을 만큼, 하나의 새로운 학문을 연 공식입니다.\n오일러 공식을 사용하면 복소수를 지수 형태로 표현할 수 있습니다. 복소수를 기하학적으로 해석해 복소평면에서의 복소수의 위치와 쉽게 파악할 수 있고,\nr e^{i\\theta} = r(\\cos(\\theta) + i\\sin(\\theta))\n복소수의 지수 함수와 삼각 함수 사이의 관계를 통해 복소 함수의 다양한 성질을 파악할 수 있습니다.\nDe Moivre’s Theorem\n\\begin{align*} (r e^{i\\theta})^n &amp;= r^n e^{in\\theta} \\\\ &amp;=\n (r (\\cos(\\theta) + i\\sin(\\theta)))^n \\\\&amp;= r^n (\\cos(n\\theta) + i\\sin(n\\theta)) \\end{align*}\n이는 복소수의 연산을 간소화하고 실해석학에서는 찾기 어려운 값들을 쉽게 찾아내며 수학의 큰 발전을 이끌게 되죠.\nResidue Theorem\n\\int_C f(z) dz = 2\\pi i \\times \\sum \\text{Res}[f(z), c_i] \n초월수 e\n초월수란 무리수 중에서도 어떤 정수 계수의 다항식의 근이 될 수 없는 수를 의미합니다. 즉, e가 초월수라는 것은 e를 근으로 하는 정수 계수의 다항식이 존재하지 않는다는 것이죠. 따라서 e가 대수적 수라고 즉, e가 어떤 정수 계수의 다항식의 근이라고 가정한 후 모순을 찾아내는 방식으로 초월수임을 보입니다.  증명 방법이 매우 복잡하므로 에르미트의 증명을 약식으로 소개하고 자세한 내용은 블로그에 관련 내용을 첨부하겠습니다. (Hermite, 1873).\n다항식 f(x)에 대하여, F(x)를 다음과 같이 정의해보겠습니다.\nF(x) = \\sum_{i=0}^{\\infty} f^{(i)}(x) \n이 식에 부분적분을 여러 번 적용하면, 다음과 같은 Hermite identity 을 얻을 수 있습니다.\ne^x \\int_0^x f(t)e^{-t}dt = F(0)e^x - F(x) \n이제 e가 대수적이라 가정하기 위해 e를 근으로 갖는 최소차수 다항식을 설정해보겠습니다. 여기서 n은 e에 대한 허구적인 최소 다항식의 차수이며, p는 충분히 큰 소수입니다.\nf(x) = \\frac{x^{p-1}(x-1)^p \\cdots (x-n)^p}{(p-1)!} \n그렇다면 우리는 0 \\leq k \\leq n에 대하여 다음과 같이 추정할 수 있습니다.\n\\begin{align*} \\vert e^kF(0) - F(k) \\vert &amp;= \\lvert e^x \\int_0^x f(t)e^{-t}dt \\rvert \\\\ &amp;\\leq ne^n \\sup_{t \\in [0,n]} \\{f(t)\\} \\\\ &amp;= \\frac{np^{n-1}(np)^n}{(p-1)!} \\end{align*}\nn 고정되어 있을 때 p가 커져감에 따라 이 식이  0으로 수렴합니다. 만약 e가 대수적이라면, p&gt;n때와 1 \\le k \\le n인 경우로 나누어, \\sum_{k=1}^n F(0)e^k - F(k)가 0과 1 사이의 정수임을 보여줌으로써 모순이 발생하고 따라서 e는 초월수임을 보일 수 있습니다.\ne가 초월수임을 보이는 세부과정은 몇가지 명제와 세부과정을 더 증명하는 과정이 필요해 자세한 과정은 블로그에 올려두도록 하겠습니다.1\n에필로그\n이렇게 e가 갖는 성질과 연관된 내용에 대해 정리해보았습니다. 사실 e를 정의하는 여러가지 방법들을 극적으로 연결하기 위해 테일러 급수와 미분방정식, 초월수 증명 과정에서 생략한 부분이 있습니다. 이 내용을 보시고 추가적으로 공부하고 싶으신 분들은 꼭 전공 서적의 증명과정을 따라가시면서 제가 생략한 부분을 찾아보시면서 엄밀하게 남은 과정도 공부해보시길 추천드립니다. 모든 내용을 퍼즐 맞추듯 맞추고 왠지 모를 뿌듯함을 느껴보시길 바라겠습니다.\nFootnotes\n\n\ne is transcendental ↩\n\n\n"},"Ray-math/Script/튜링-정지-문제와-괴델의-불완전성-정리":{"slug":"Ray-math/Script/튜링-정지-문제와-괴델의-불완전성-정리","filePath":"Ray math/Script/튜링 정지 문제와 괴델의 불완전성 정리.md","title":"튜링 정지 문제와 괴델의 불완전성 정리","links":[],"tags":["프로그램","소수","정지","실행","증명","튜링","오라클","짝수"],"content":"정지 문제란 무엇인가?\n처음 프로그래밍을 할 때, 누구나 한 번쯤은 프로그램을 작성한 후 예상치 않게 컴퓨터가 멈추거나, 프로그램이 끝없이 실행되는 상황을 경험했을 것입니다. 여러분이 고심 끝에 작성한 코드가 실행되길 기대했는데, 프로그램이 멈추지 않고 계속해서 실행된다면 어떤 기분이 들까요? 심지어 이 프로그램이 여러분의 컴퓨터 자원을 모두 소모해 다른 작업도 방해한다면 단순히 불편함을 넘어서, 시스템 성능에 큰 문제를 일으킬 수 있습니다.\n그러므로 프로그램을 작성할 때, 프로그램이 주어진 입력값에 대해 반드시 종료 될지(정지 문제), 혹은 **계속해서 실행 될지(무한 실행 문제)**를 미리 판별하는 것이 매우 중요합니다. 프로그램의 정지 여부를 미리 판단할 수 있다면, 예상치 못한 오류를 줄이고, 시스템의 안정성을 높일 수 있기 때문이죠.\n정지 문제와 무한 실행 문제\n정지 문제와 무한 실행 문제의 개념을 이해하기 위해, 예시를 살펴보겠습니다.\n소인수 분해 프로그램: 정지 문제\n먼저, 소인수 분해 프로그램을 생각해보겠습니다. 소인수 분해 프로그램은 어떤 자연수 n을 입력으로 받아서, 그 수를 소수들로 분해합니다. 예를 들어, 60을 입력하면 프로그램은 60을 2 \\times 2 \\times 3 \\times 5로 소인수 분해하고, 그 결과를 출력한 뒤 종료됩니다.\ndef prime_factors(n):\n    factors = []\n    divisor = 2\n    while n &gt; 1:\n        while n % divisor == 0:\n            factors.append(divisor)\n            n //= divisor\n        divisor += 1\n    return factors\n \n# 프로그램 실행\nprint(prime_factors(60))  # 출력: [2, 2, 3, 5]\n이 프로그램이 멈추는 이유는 무엇일까요? 산술의 기본 정리에 의해 모든 자연수는 반드시 소인수로 분해되기 때문입니다. 즉, 1보다 큰 모든 자연수는 소수의 곱으로 고유하게 표현될 수 있기 때문이지요. 수학적으로 보장된 사실로부터, 어떤 자연수를 입력 하더라도 프로그램은 그 수를 소수들로 완전히 분해할 수 있으며, 더 이상 나눌 수 없는 상태가 되면 프로그램은 자연스럽게 종료됩니다.\n따라서 이 프로그램은 주어진 수를 소인수로 완전히 분해한 후에 멈추고 종료되므로, 정지 문제의 예시입니다.\n소수 찾기 프로그램: 무한 실행 문제\n반면에, 소수 찾기 프로그램은 이와는 다른 특징을 가지고 있습니다. 이 프로그램은 자연수 2부터 시작하여 모든 자연수를 하나씩 살펴보면서 그 숫자가 소수인지 확인하고, 소수일 경우 출력합니다. 그러나 이 프로그램은 한 번 시작하면 끝나지 않습니다.\ndef is_prime(num):\n    if num &lt; 2:\n        return False\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n \ndef find_primes():\n    num = 2\n    while True:\n        if is_prime(num):\n            print(num)\n        num += 1\n \n# 프로그램 실행\nfind_primes()\n왜 소수 찾기 프로그램은 멈추지 않을까요? 바로 소수는 무한히 존재하기 때문입니다. 고대 그리스의 수학자 에우클레이데스(유클리드)는 소수가 무한히 많다는 것을 이미 증명했습니다.\n\n\n                  \n                  유클리드의 증명 \n                  \n                \n\n\n\n임의의 유한 소수 목록이 있다고 가정합니다.\n그 목록에 있는 모든 소수를 곱하고 1을 더한 새로운 수를 생각합니다.\n이 새로운 수는 목록에 있는 소수들 중 어느 하나로도 나누어지지 않습니다. 따라서 이 수는 새로운 소수이거나, 새로운 소수를 포함하는 또 다른 소수의 곱으로 분해될 수 있습니다.\n이 과정을 반복하면, 무한히 많은 소수가 존재함을 알 수 있습니다.\n\n\n\n\n소수 찾기 프로그램은 이 무한한 소수들을 찾기 위해 끝없이 실행됩니다. 프로그램이 멈추지 않고, 계속해서 새로운 소수를 찾아내려 하기 때문에 이 프로그램은 무한 실행 문제의 대표적인 예시입니다. 이러한 프로그램은 끝나지 않으며, 우리가 예측한 시간 안에 멈출 수 없습니다.\n미리 정지하는지 판단할 수 있다면?\n만약 컴퓨터 프로그래밍에서 정지 문제와 무한 실행 문제를 미리 판단할 수 있다면, 수학적 추측이나 난제를 풀어나가는 데 매우 중요한 도구가 될 수 있습니다. 그 예로, 아직 증명되지 않은 골드바흐의 추측을 탐구해보겠습니다.\n골드바흐의 추측은 “모든 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다”는 가설입니다. 이 추측은 오랜 시간 동안 수많은 수학자들에 의해 연구되었지만, 아직까지 완전히 증명되거나 반증되지 않은 상태입니다.\ndef is_prime(num):\n\tif num &lt; 2:\n\t\treturn False\n\tfor i in range(2, int(num ** 0.5) + 1):\n\t\tif num % i == 0:\n\t\t\treturn False\n\treturn True\n \ndef check_goldbach_conjecture():\n\tn = 4\n\twhile True:\n\t\tfound = False\n\t\tfor i in range(2, n):\n\t\t\tif is_prime(i) and is_prime(n - i):\n\t\t\t\tfound = True\n\t\t\t\tprint(f&quot;{n} = {i} + {n - i}&quot;)\n\t\t\t\tbreak\n\t\tif not found:\n\t\t\tprint(f&quot;골드바흐의 추측에 반하는 수 발견: {n}&quot;)\n\t\t\treturn False\n\t\tn += 2\n \ncheck_goldbach_conjecture()\n골드바흐의 추측을 검증하기 위해, 우리는 짝수 n을 하나씩 증가 시키며, 각 짝수가 두 소수의 합으로 나타낼 수 있는지를 확인하는 과정을 생각해볼 수 있습니다.\n\n\n짝수 n 설정:\n\n이 프로그램은 4부터 시작하여 짝수 n을 설정한다. 4는 소수가 아닌 가장 작은 짝수로서, 첫 번째 검증 대상으로 선택된다.\n\n\n\n두 소수의 합으로 나타내기:\n\n설정된 짝수 n에 대해, 가능한 모든 소수 쌍 (p, q)을 찾\u001d다. 여기서 p와 q는 둘 다 n보다 작은 소수다.\np + q = n이 성립하는 소수 쌍이 존재하면, 그 짝수 n은 골드바흐의 추측에 부합한다.\n\n\n\n모든 가능성 탐색:\n\n가능한 모든 소수 쌍을 탐색하였으나, 어떤 소수 쌍도 n을 두 소수의 합으로 나타낼 수 없다면, 그 즉시 프로그램은 골드바흐의 추측이 틀렸음을 발견한 것이 된다.\n반대로, 만약 모든 소수 쌍을 탐색한 결과 n을 두 소수의 합으로 나타낼 수 있다면, 프로그램은 다음 짝수 n + 2로 넘어가서 같은 과정을 반복\u001f다.\n\n\n\n만약 이 프로그램이 특정 짝수 에서 두 소수의 합으로 나타낼 수 없는 경우를 발견한다면, 그 즉시 프로그램은 멈추게 됩니다. 이때 프로그램은 골드바흐의 추측에 반하는 수를 발견한 것이므로, 골드바흐 추측을 틀렸다는 것을 밝혀낼 수 있습니다.\n반대로, 프로그램이 모든 짝수 n에 대해 두 소수의 합으로 표현될 수 있는지를 끝없이 검증하지만, 어느 짝수에서도 반례를 찾지 못한다면, 프로그램은 결코 멈추지 않을 것입니다. 만약 우리가 이 프로그램이 정지 문제가 아니라는 것을 수학적으로 증명할 수 있다면 즉, 특정 n에서 결코 멈추지 않을 것임을 수학적으로 설명할 수 있다면, 이 프로그램은 무한히 실행될 수밖에 없으며, 따라서 골드바흐의 추측이 모든 짝수에 대해 참이라는 결론을 내릴 수 있습니다.\n그러므로 정지 문제와 무한 실행 문제를 미리 판단할 수 있다면, 수학적 난제를 푸는 과정에서 복잡한 계산을 줄이고, 더 효율적으로 문제를 해결할 수 있습니다.\n앨런 튜링의 정지 문제\n오라클(Oracle)은 그리스 신화에서 유래한 용어로, 신탁을 통해 미래를 예언하거나 중요한 질문에 대한 답을 주는 신성한 존재를 의미합니다.\n\n앨런 튜링은 컴퓨터 과학의 기초를 다지는 과정에서 계산 가능성에 대한 근본적인 질문을 연구하면서, ‘모든 프로그램에 대해 그 프로그램이 특정 입력에서 멈출지 여부를 항상 정확하게 판단할 수 있는 프로그램 즉, 정지 오라클(Halting Oracle)이 있을까?‘라는 질문을 던졌습니다. 여러분은 이러한 프로그램이 존재할 수 있다고 생각하시나요? 만약 존재한다면 프로그래밍할 수 있는 모든 증명 문제는 손 쉽게 해결할 수 있을 것입니다. 하지만 아직까지 많은 난제들이 남아 있는 것으로 보아 이러한 프로그램은 존재할 수 없을 것 같습니다. 튜링 역시 ‘그런 프로그램은 존재하지 않는다’는 결론을 내렸습니다.\n튜링의 증명은 ‘만약 정지 오라클이 존재한다고 가정하면 어떤 모순이 발생할까?‘라는 생각에서 출발합니다.\n1. 모든 프로그램의 리스트\n앨런 튜링은 문제를 해결하기 위해 튜링 기계(Turing Machine)라는 개념을 도입했습니다. 튜링 기계는 매우 단순한 수학적 모델로, 현재 우리가 사용하는 모든 컴퓨터 프로그램을 표현할 수 있는 계산 모델입니다. 튜링 기계는 무한히 길 수 있는 테이프 위에서 동작하는 기계로, 테이프에 기록된 기호를 읽고, 쓰고, 왼쪽 또는 오른쪽으로 움직일 수 있으며, 특정 규칙에 따라 상태를 변경합니다.\n\n모든 컴퓨터 프로그램은 이 튜링 기계의 동작으로 표현할 수 있습니다. 따라서 모든 프로그램은 일련의 명령어, 기호, 상태 변화 등을 통해 표현되며, 이 모든 것을 특정한 알파벳이나 숫자로 구성된 문자열로 나타낼 수 있습니다.\n이제 이 문자열들은 숫자와 같은 방식으로 순서를 부여받을 수 있습니다. 예를 들어, 사전에서 단어들을 가나다 순으로 정렬하는 것처럼, 모든 프로그램은 유한한 길이의 문자열로 표현될 수 있기 때문에 모든 프로그램을 그 코드에 따라 나열할 수 있습니다. 따라서 모든 컴퓨터 프로그램에 번호를 매긴 목록을 P(n)이라 하겠습니다.\n이러한 프로그램들은 특정한 입력을 받으면 실행을 시작하고, 특정 조건이 충족되면 멈추거나, 조건이 충족되지 않으면 무한히 실행됩니다.\n2. 가상의 정지 오라클 H\n그 후에 ‘정지 오라클’이라고 불리는 가상의 프로그램 H를 상상해보겠습니다. 이 오라클은 어떤 프로그램 P와 그 프로그램이 실행할 입력 n이 주어졌을 때, 그 프로그램이 멈출지(YES) 아니면 무한히 실행될지(NO)를 결정할 수 있다고 가정해보겠습니다.\n\n\n                  \n                  프로그램 H의 역할 \n                  \n                \n\n\n\nH는 프로그램 P가 입력 n에 대해 멈추는 경우 ‘YES’를 출력한다.\nH는 프로그램 P가 입력 n에 대해 멈추지 않는 경우 ‘NO’를 출력한다.\n\n\n\n\n3. 튜링의 역설 프로그램 R\n이제 오라클 H을 사용하여 또 다른 프로그램 R을 만들어 보겠습니다. 이 프로그램은 매우 특이한 방식으로 작동합니다\n\n\n                  \n                  프로그램 R의 역할 \n                  \n                \n\n\n\nR은 프로그램의 리스트에서 특정 n을 선택한다.\nH을 호출하여 P(n)이 멈출지 여부를 확인한다.\n만약 H가 ‘YES’라고 응답하면, R은 무한 루프에 빠진다(멈추지 않고 계속 실행됨).\n만약 H가 ‘NO’라고 응답하면, R은 즉시 멈춘다.\n\n\n\n\n프로그램 R은 정지 오라클 H의 반대되는 행동을 하도록 설계되었습니다. 앞서 H는 주어진 프로그램 P(n)이 멈출지 여부를 알려주는 도구입니다. 하지만 R은 이 정보를 반대로 사용합니다.\n이제 프로그램 R을 자기 자신에게 적용해보겠습니다. 즉, R은 자기 자신을 P(n)으로 삼아 자기 자신을 호출하게 됩니다. 이 경우 두 가지 가능한 시나리오가 있습니다.\n첫 번째로, 만약 R이 멈춘다면, 정지 오라클 H는 ‘YES’를 반환했어야 합니다. 하지만 R은 ‘YES’의 응답을 받으면 무한 루프에 빠지도록 설계되었습니다. 따라서, R이 멈춘다면 모순이 발생합니다.\n두 번째로, 만약 R이 멈추지 않는다면, 정지 오라클 H는 ‘NO’를 반환했어야 합니다. 하지만 R은 ‘NO’의 응답을 받으면 즉시 멈추도록 설계되었습니다. 따라서, R이 멈추지 않으면 또 다른 모순이 발생합니다.\n이처럼 R은 오라클의 예측과 항상 반대되는 행동을 하며, 논리적 모순을 일으키게 됩니다. 결국 이러한 모순을 통해 튜링은 모든 프로그램의 정지 여부를 정확하게 판단할 수 있는 정지 오라클 H와 같은 알고리즘이 존재할 수 없음을 증명했습니다.\n이러한 정지 문제의 불가능성을 고려할 때, 컴퓨터를 사용하여 수학적 난제를 해결하는 데 있어 분명한 한계가 있다는 점은 아쉬운 일입니다. 만약 정지 문제를 해결할 수 있다면, 컴퓨터 프로그램을 통해 여러 난제들을 자동으로 증명하거나 반증할 수 있을 것입니다.\n그러나 정지 문제의 불가능성으로 인해, 우리는 컴퓨터가 모든 경우에 대해 정확한 답을 제공할 수 없다는 사실을 받아들여야 합니다.\n하지만 이러한 한계가 그렇게 안타깝지는 않습니다. 왜냐하면 수학적 탐구에 있어 인간의 역할이 여전히 필수적임을 시사하기 때문이죠. 그리고 튜링의 접근 방식을 활용하면 괴델의 불완전성 정리를 직관적으로 이해할 수도 있습니다.\n괴델의 불완전성 원리\n괴델의 첫 번째 불완전성 정리는 특정 수학적 체계가 충분히 강력하고 일관성이 있는 경우, 쉽게 말해 시스템이 모순 없이 작동한다면, 그 체계 내에서 참이지만 증명할 수 없는 명제가 반드시 존재한다는 것을 의미합니다.\n여기서 충분히 강력하다는 것은 페아노 산술(Peano Arithmetic)과 같이 기본적인 산술을 표현할 수 있을 정도로 일관되며, 자기 자신을 표현할 수 있는 능력을 가진 형식 체계(Self-reference) 즉, 재귀적으로 열거 가능한 공리계를 갖는다는 것을 말합니다.\n그렇다면 튜링의 정지 문제를 이용해 괴델의 불완전성 정리를 어떻게 이해할 수 있는 것일까요?\n\n프로그램과 명제를 대응하는 함수 f(n)\n일관된(페아노 산술을 포함하고 효과적으로 공리화할 수 있는) 수학적 시스템이 완전하다 즉, 이 시스템 내에서 모든 참인 명제가 형식적으로 증명될 수 있다고 가정하고, 계산 가능한 f(n)이라는 함수를 정의해보겠습니다. f(n)는 n-번째 프로그램 P(n)이 멈추는지, 멈추지 않는지를 1 또는 0으로 나타냅니다.\n\n\nf(n) = 0은 P(n)이 멈추는 경우를 의미한다.\nf(n) = 1은 P(n)이 멈추지 않는 경우를 의미한다.\n\n\n자기 참조 알고리즘\n이제 계산 가능한 f(n)을 이용해 다음과 같은 자기참조 알고리즘을 생각해보겠습니다.\n\n\n\n                  \n                   f(n)을 이용한 알고리즘\n                  \n                \n\n\n\n숫자 n을 입력 받는다.\nP(n)이 멈출지, 멈추지 않을지를 판단하기 위해 수학적 시스템 내에서 증명 가능한 모든 명제를 살펴본다.\n만약 &#039;f(n) = 0&#039;이라는 명제를 찾으면, &#039;f(n) = 0&#039;을 출력하고 종료한다.\n만약 &#039;f(n) = 1&#039;이라는 명제를 찾으면, &#039;f(n) = 1&#039;을 출력하고 종료한다.\n\n\n\n\n\n이러한 알고리즘이 있다면?\n시스템이 일관되기 때문에, 만약 시스템 내에서 &#039;f(n) = 0&#039;이라는 명제를 증명할 수 있다면, 실제로 &#039;f(n) = 0&#039;이 성립합니다. 마찬가지로, &#039;f(n) = 1&#039;을 증명할 수 있다면, 실제로 &#039;f(n) = 1&#039;이 성립합니다.\n\n모든 참인 명제를 증명할 수 있다는 가정 하에, f(n)이 0 또는 1중 하나로 귀결될 수밖에 없고, 알고리즘은 입력 n에 대해 f(n)의 값을 반드시 찾아내므로 이 알고리즘은 어떤 입력에 대해서도 유한한 시간 안에 멈추게 됩니다\n그런데 이러한 결과는 앞서 본 정지 문제의 불가능성과 모순됩니다. 결과적으로 시스템이 완전하다는 가정이 모순을 일으킨다는 것으로 부터, 괴델의 불완전성 정리를 증명하는 것입니다.\n마치며\n영화 매트릭스(The Matrix)에서 오라클은 미래를 예언하는 능력을 가진 중요한 인물로 등장합니다. 오라클은 네오와 대화를 나누며 ‘그 꽃병을 깨는 것에 대해 걱정하지 마세요.‘라고 말합니다. 네오는 순간 놀라며 뒤를 돌아보게 되고, 그 과정에서 실수로 꽃병을 쳐서 떨어뜨리게 됩니다. 꽃병은 바닥에 떨어져 깨지고 말죠.\n오라클의 예언은 단순한 미래 예측을 넘어, 등장인물들의 행동을 유도하여 예언이 그 자체로 사건을 일으키는 역할을 하는 자기참조적 구조를 보여줍니다. 이는 논리적 체계 내에서 자기참조적 명제가 그 체계의 한계를 드러내는 방식과 매우 유사합니다. 오라클의 예언이 네오의 행동을 유도해 스스로 예언을 실현시키듯이, 괴델의 불완전성 정리는 수학적 체계가 자기참조적 구조를 포함할 때, 그 체계가 해결할 수 없는 문제를 내포할 수밖에 없음을 보여줍니다.\n우리는 튜링의 정지 문제를 통해 이를 증명함으로써, 이러한 한계가 단순히 추상적이거나 철학적인 문제가 아니라, 매우 구체적이고 실질적인 계산 문제와도 연결되어 있음을 알 수 있습니다.\n우리가 구축하는 시스템과 체계는 과연 완전할 수 있을까요? 오라클의 예언처럼, 우리가 마주하는 문제들 속에 숨겨진 자기참조적 구조가 우리를 어디로 이끌지, 그 끝은 누구도 알 수 없습니다. 여러분은 이 한계 속에서 어떤 선택을 하실 것인가요? 그리고 그 선택은 어떤 결론에 도달하게 될까요?"},"Ray-math/Script/트럼프가-수학-공식을-들고온-이유":{"slug":"Ray-math/Script/트럼프가-수학-공식을-들고온-이유","filePath":"Ray math/Script/트럼프가 수학 공식을 들고온 이유.md","title":"트럼프가 수학 공식을 들고온 이유","links":[],"tags":[],"content":"\b트럼프가 수학공식을 흔들다\n트럼프 대통령은 모든 국가에 동일하게 적용되는 새로운 관세 체계를 제시하며, 무역 불균형을 해소하겠다는 입장을 밝혔습니다. 그리고는 자신 있게 종이에 수식과 그로부터 계산된 결과를 인쇄해 흔들었습니다. 그 공식 하나로, 한국, 중국, 일본에 부과된 엄청난 관세율이 정당화된다고 합니다. 그런데 그 수식을 찬찬히 뜯어보면 이건 수학이라기보단, 뭔가 ‘수학처럼 보이게 만든 장식’이 아닐까 싶을 정도로 허술합니다.\n수학자는 이런 걸 보고 “수학처럼 보이기”라고 하죠. 겉보기엔 복잡하고 과학적인데, 실제론 아무 의미 없는 조작일 수도 있습니다. 그렇다면, 과연 트럼프의 그 수식은 어떤 내용을 담고 있고, 왜 문제가 될까요?\n트럼프 행정부의 관세 수식 완전 해부\n트럼프 행정부가 발표한 공식은 다음과 같습니다.\n\\Delta \\tau_i = \\frac{X_i - M_i}{\\varepsilon \\cdot \\varphi \\cdot M_i}\n이 수식은 수학을 조금이라도 배워본 분이라면 어렵지 않겠지만, 경제학적인 의미를 정확히 알기 위해서는 기호 하나하나를 차근차근 살펴봐야 합니다.\n\n\\Delta \\tau_i : 특정 국가 i에 부과해야 하는 관세 변화율 (Tariff Rate)\nX_i : 미국의 해당 국가에 대한 수출액 (Exports)\nM_i : 미국의 해당 국가로부터의 수입액 (Imports)\n\\varepsilon : 수입 수요 탄력성(elasticity of demand)\n\\varphi : 관세 전가율 (pass-through of tariffs to price)\n\n즉, 이 수식은 무역 수지를 균형(0)으로 맞추기 위해, 미국이 해당 국가로부터의 수입을 얼마나 줄여야 하는지를 계산하고, 이를 위해 필요한 관세율을 구하는 것을 목적으로 하고 있습니다.\n이 수식에서 \\varepsilon와 \\varphi는 경제학에서 자주 등장하는 개념입니다. 수입 수요 탄력성은 가격이 변했을 때 수입량이 얼마나 변하는지를 나타내고, 관세 전가율은 관세가 부과됐을 때 소비자에게 가격이 얼마나 전가되는지를 나타냅니다. 이 두 값은 경제학에서 매우 중요한 개념이지만, 그 값을 정확히 구하기란 쉽지 않습니다.\n여기서 첫 번째 문제가 발생합니다. 트럼프 행정부는 이 두 값을 어떻게 구했을까요? 공식에 넣기만 하면 되는 값인가요? 아니면 실험을 통해 측정한 값인가요? 아니면 그냥 대충 정해놓은 값인가요?\n트럼프는 이 두 값을 어떻게 구했는지 설명\b한 적이 없습니다. 그저 \\varepsilon = 4, \\varphi = \\frac{1}{4}을 대입했죠. 결국 이 수식은 다음과 같이 단순화됩니다.\n\\begin{align*}\n\\Delta \\tau_i &amp;= \\frac{X_i - M_i}{\\varepsilon \\cdot \\varphi \\cdot M_i} \\\\\n\\\\\n&amp;=\\frac{X_i - M_i}{4 \\cdot \\frac{1}{4} \\cdot M_i} \\\\\n\\\\\n&amp;= \\frac{X_i - M_i}{M_i} \\\\\n\\\\\n&amp;=\\frac{X_i}{M_i} - 1\n\\end{align*}\n관세율은 전문성과 수학적 정당성을 갖춘 듯 보이지만, 실제로는 수출액과 수입액의 차이를 수입액으로 나눈 단순한 비율 산출식에 불과합니다. 경제 모델을 흉내낸 듯 보이지만 실제론 수치 장식에 불과한것이죠.\n관세는 수출이 아니라 수입에 부과하는 세금이다\n무역수지란 무역에서 발생하는 수익과 비용을 나타내는 지표로, 수출과 수입의 차이를 의미합니다. 즉, 내가 다른 나라에 팔아서 번 돈에서 내가 다른 나라에서 사온 돈을 뺀 것입니다.\n\\text{무역수지} = \\text{수출} - \\text{수입} = X - M\n\nX: 수출(Exports) — 내가 다른 나라에 파는 것\nM: 수입(Imports) — 내가 다른 나라에서 사오는 것\n\n여기서 관세가 무엇인지에 대해 자세히 알아야 합니다. 관세는 수출이 아니라 수입에 부과하는 세금입니다. 즉, 내가 다른 나라에서 사오는 물건에 대해 세금을 내는 것입니다. 왜냐하면 관세는 수입을 줄이기 위해 부과하기 때문이지요.\n“우리가 수입을 너무 많이 하고 있어! 줄여야 해!”라고 한다면, 수입(M)이 수출(X)보다 크므로, 무역 적자가 발생합니다.\nM &gt; X \\quad \\Rightarrow \\quad \bX - M &lt; 0\n수식의 분자는 X_i - M_i 형태로 적었으므로, 반대로 수출이 적으면 관세를 부과하자는 논리입니다.\n\\Delta \\tau_i = \\frac{X_i - M_i}{\\varepsilon \\cdot \\varphi \\cdot M_i}\n예를들어 뉴질랜드를 보겠습니다. 미국은 뉴질랜드에 45억 달러를 수출하고, 55억 달러를 수입하고 있습니다. 따라서 미국은 뉴질랜드와의 무역에서 약 10억 달러의 무역적자를 기록했습니다. 즉, 미국 입장에서 돈이 빠져나간 상태입니다.\n\n미국이 뉴질랜드에 수출한 금액: $4.5 billion\n미국이 뉴질랜드로부터 수입한 금액: $5.5 billion\n\n이 값들을 식에 대입해보면,\n\\Delta \\tau_i = \\frac{4.5 - 5.5}{4 \\cdot 0.25 \\cdot 5.5}\n= \\frac{-1.0}{5.5}\n\\approx -0.1818\n\\Rightarrow -18.18\\%\n이렇게 되면 관세율이 -18.18%가 나옵니다. 즉, 미국은 뉴질랜드에 대해 18.18%의 보조금을 지급해야 한다는 의미입니다. 이게 무슨 말인가요? 수입을 줄이기 위해 세금을 부과해야 하는데, 오히려 보조금을 지급하라는 논리가 성립합니다. 공식이 표현하는 방향성조차 애매하거나 잘못되었습니다.\n이뿐만이 아니다.\n가격 전가율(\\varphi)은 관세가 부과되었을 때, 그 부담이 최종 소비자 가격에 얼마나 반영되는지를 나타내는 지표입니다. 트럼프의 발표에 따르면, 평균 관세율은 약 41%이며, 가격 전가율은 \\varphi = 0.25로 설정되어 있습니다. 즉, 관세가 41% 부과되었을 때 그 중 25%만큼 소비자 가격에 반영된다는 의미이므로,\n25 \\%\\times 41\\% = 10.25\\%\n결과적으로 수입품 가격은 약 10.25% 상승하게 됩니다. 그런데도 트럼프는 “관세는 외국이 부담하는 것이고, 미국 소비자에게는 영향이 없다”고 주장했습니다. 본인들이 제시한 수식 구조 안에서 이미 ‘소비자 가격이 오른다’는 사실을 인정하고 있는 것입니다. 스스로 내세운 수식과 모순되는 주장을 동시에 하고 있는 셈입니다.\n그뿐만이 아닙니다. 트럼프 행정부는 수입 수요 탄력성 \\varepsilon을 4로 설정했습니다. 이 값은 가격이 1% 오르면, 수요는 4% 감소한다는 의미입니다. 즉, 위에서 계산한 대로 관세로 인해 수입품 가격이 10.25% 오르면, 미국의 수요는 아래와 같이 감소하게 됩니다.\n\\varepsilon \\times \\text{가격상승률} = 4 \\times 10.25\\% = 41\\%\n결국 이 결과가 말하는 바는 단순합니다.\n\n정확히 관세율만큼 너희 물건에 대한 미국 내 수요를 줄이겠다는 것\n\n즉, 미국 시장에서 판매되는 다른 나라 제품의 수요를 줄이겠다는 의지의 표현 그 이상도, 그 이하도 아닙니다.\n한중일에 미치는 영향은?\n대부분의 나라에 대해 미국이 수출보다 수입을 더 많이 하고 있으므로, 이 수식의 결과는 음수가 나오는 것이 정상입니다. 그런데 실제 공개된 관세표에 음수는 없었죠. 자세히 보면 공식 결과가 음수로 나오는 경우에 강제로 양수로 뒤집거나, 기본값 10% 이상을 설정하는 방식으로 결과적으로 관세표에는 모두 양수 값만 남게 되었습니다.\n그렇다면 이 값들은 무슨 의미가 있는걸까요? 실제로는 관세율을 계산하기 위한 수식이 아니라, 관세율을 정당화하기 위한 수식으로 보입니다. 실제 수식을 복원해보면 다음과 같습니다.\n\\begin{align*}\n&amp;\\quad \\Delta \\tau_i = \\frac{M_i - X_i}{M_i} \\\\\n\\\\\n&amp;\\Rightarrow \\quad  M_i - X_i = \\Delta \\tau_i \\cdot M_i \\\\\n\\\\\n&amp;\\Rightarrow \\quad  X_i = M_i \\cdot (1 - \\Delta \\tau_i) \\\\ \n\\\\\n&amp;\\Rightarrow \\quad  M_i = \\frac{X_i}{1 - \\Delta \\tau_i}\n\\end{align*}\n수출액을 100으로 고정하고, 트럼프가 제시한 관세율을 대입해보면, 수입액은 다음과 같이 계산됩니다.\n🇰🇷 한국\nM_{\\text{KR}} = \\frac{100}{1 - 0.50} = \\frac{100}{0.50} = 200 \\\\\n🇯🇵 일본\nM_{\\text{JP}} = \\frac{100}{1 - 0.46} = \\frac{100}{0.54} \\approx 185.19\n🇨🇳 중국\nM_{\\text{CN}} = \\frac{100}{1 - 0.67} = \\frac{100}{0.33} \\approx 303.03\n트럼프가 제시한 공식과 관세율을 통해 역산해보면, 미국이 100 어치 물건을 수출하면, 한국은 200, 일본은 185, 중국은 303 어치 물건을 수출한다는 결론에 도달합니다. 2024년 기준으로 미국과 한국, 일본, 중국 간의 무역 통계와 각 국가의 수입 대비 수출 비율을 정리한 표를 보면 실제 통계와 대체로 유사하다는 것을 확인할 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n국가미국의 수출액 ($B)미국의 수입액 ($B)수입 대비 수출 비율한국65.5131.52.01일본78.6154.11.96중국143.5439.03.06\n왜 수식을 사용했을까?\n왜 트럼프 행정부는 이런 수학 공식 같은 것을 굳이 만들어서 관세율을 정당화하려 했을까요? 우리는 때로 수학이 사용된 문장 앞에서 고개를 끄덕이게 됩니다. 복잡한 기호와 낯선 기호들이 나열되면, 뭔가 정밀하고 타당한 논리인 것처럼 느껴지기 때문입니다. 하지만 그 수식이 말하는 것이 정말 현실을 정확히 반영한 진실인지, 아니면 그저 정책을 포장하기 위한 장치인지, 구분할 수 있어야 합니다.\n실제로 이 공식은 수학적 정확성도 부족하고, 경제적 현실도 왜곡하며, 무엇보다 정책적 판단을 가장한 정치적 도구에 불과합니다. 수식이 정말 정책 결정을 이끈 것이라기보다, 이미 내려진 결정을 정당화하기 위해 뒤늦게 갖다 붙인 듯한 구조입니다.\n수식은 세상의 복잡한 현상을 간결하게 설명하고, 다양한 문제를 예측하고 해결할 수 있는 강력한 도구입니다. 하지만 그 도구는 정확한 개념과 맥락 위에서 사용할 때에만 유효합니다. 수학은 권위가 아니라 질문과 검증의 언어입니다.\n수식이 등장했다고 해서 그것이 무조건 진실을 담고 있다고 맹목적으로 신뢰하기 보다 오히려 그 수식이 어떻게 도출되었는지, 어떤 가정을 기반으로 하고 있는지, 현실과 얼마나 부합하는지 끊임없이 질문하고 따져보는 자세가 필요합니다. 그것이야말로 수학적 사고력의 진짜 출발점입니다."},"Ray-math/Script/파울하버":{"slug":"Ray-math/Script/파울하버","filePath":"Ray math/Script/파울하버.md","title":"파울하버(Faulhaber)의 공식","links":[],"tags":["베르누이","급수","거듭제곱","규칙","faulhaber","이항정리"],"content":"수열의 합\n우리는 고등학교에서 다양한 수열의 합을 구하게됩니다. 이때 \\sum이란 기호를 처음 배우면서 가장 간단한 거듭제곱 수열들의 합을 유도하는 과정에 대해서 배우게 되죠.\n\\begin{align*}\n\\sum_{k=1}^n k &amp;=\\frac{n(n+1)}{2}\\\\\n\\sum_{k=1}^n k^2 &amp;=\\frac{n(n + 1)(2n + 1)}{6}\\\\\n\\sum_{k=1}^n k^3 &amp;=\\frac{n^2(n + 1)^2}{4}\n\\end{align*}\n그런데 여러분들은 이 식들이 생각보다 매우 규칙적이라는 것을 알고 계셨나요? 오늘은 그 비밀을 함께 풀어보도록 하겠습니다.\n1부터 n까지의 정수의 합\n우선 가장 쉬운 \\sum_{k=1}^n k부터 보도록 하겠습니다. 이 식은 흔히 1부터 100까지 더하여라 같은 등차수열의 합을 구하는데 사용되는 식입니다. 가우스가 어릴 적에 암산으로 풀었다는 사실로 더 유명한 문제죠.\n이 식의 답을 구하는 과정은 어렵지 않습니다. 먼저 1부터 n까지의 수를 나열한 후 이 값들을 모두 더한 것을 S라 하겠습니다. 이제 같은 수열 하나를 더 만들어 방향만 바꾼 후 두 수열을 더해보겠습니다.\n\\begin{array}{ccccc}\nS &amp; + &amp; S &amp; = &amp; 2S \\\\ \n\\hline\n1 &amp; &amp; n &amp; &amp; n+1 \\\\\n2 &amp; &amp; n-1 &amp; &amp; n+1 \\\\\n3 &amp; &amp; n-2 &amp; &amp; n+1 \\\\\n\\vdots &amp; &amp; \\vdots &amp; &amp; \\vdots \\\\\nn-1 &amp; &amp; 2 &amp; &amp; n+1 \\\\\nn &amp; &amp; 1 &amp; &amp; n+1 \\\\\n\\end{array}\n이때 2S 즉, 두 수열의 합을 보면 n+1이 n번 더해져 있이므로 n\\times(n+1)입니다. 따라서 우리가 구해야하는 수열의 합 S는 두 수열을 더한 값을 2로 나눈 것과 같습니다.\nS = \\frac{n(n+1)}{2}\n이 식을 이용하면 유용한 값들을 쉽게 찾을 수 있습니다. 예를들어 k가 홀수라면 k=2m-1을 대입하여 홀수들의 합은 제곱수를 만든다는 사실을 쉽게 증명할 수 있죠. 그리고 등차 수열은\u001d n에 대한 1차 함수이므로 같은 방법으로 빠르게 해결할 수 있습니다.\n\\sum_{k=1}^n 2k-1 = 2\\times \\frac{n(n+1)}{2} - n=n^2\n\n1부터 n^2까지의 정수의 합\n1부터 n^2까지의 합을 구하는 문제는 앞서 본 문제와 같이 마냥 쉽지는 않습니다. 우리는 k^2이라는 항을 얻어내 \\sum_{k=1}^n k^2의 값을 구하기 위해서 (k-1)^3의 전개식으로부터 시작해보겠습니다. (k-1)^3의 전개식은 다음과 같습니다.\n(k-1)^3 = k^3 - 3k^2 + 3k - 1\n우리가 필요한 것은 k^2이므로 k^3을 없애기 위해 식을 변형하면 다음과 같습니다.\nk^3 - (k-1)^3 = 3k^2 - 3k + 1\n이제 \\sum_{k=1}^n k^2을 구하기 위해 양변에 각각 \\sum을 취하겠습니다.\n\\sum_{k=1}^n \\left( k^3 - (k-1)^3 \\right) = \\sum_{k=1}^n \\left(3k^2 - 3k + 1\\right)\n먼저 좌변을 보겠습니다. 좌변의 일반항에 1부터 n까지 대입 한 후 각 항을 세로로 적고 모든 항을 더하면 같은 값에 부호만 다른 항들이 반복적으로 나오므로 소거할 수 있습니다. 따라서 좌변은 정리하면 n^3이 됩니다.\n\\begin{align*}\n&amp; {1^3} &amp;-&amp;&amp; 0^3&amp; \\\\\n&amp;2^3 &amp;-&amp;&amp; 1^3&amp; \\\\\n&amp;3^3 &amp;-&amp;&amp; 2^3&amp;\\\\\n&amp;&amp;\\vdots&amp;&amp;&amp; \\\\\n+\\quad&amp;n^3 &amp;-&amp;&amp; (n-1)^3&amp; \\\\\n\\hline\n&amp;n^3&amp;&amp;&amp;\n\\end{align*}\n다음으로 우변을 보겠습니다. 우변은 \\sum에 선형성에 따라 분배해주면 식을 다음과 정리할 수 있습니다.\n\\begin{align*}\n&amp;~\\sum_{k=1}^n \\left(3k^2 - 3k + 1\\right) \\\\\n=~ &amp; 3  \\sum_{k=1}^{n} k^2 - 3 \\sum_{k=1}^{n} k + \\sum_{k=1}^{n} 1 \\\\\n=~ &amp; 3  \\sum_{k=1}^{n} k^2 - 3 \\times \\frac{n(n+1)}{2} + n \\\\\n\\end{align*}\n마지막으로 정리된 결과를 원래식에 대입하여 \\sum_{k=1}^n k^2으로 식을 정리해주면 1부터 n^2까지의 합을 구하는 공식을 구할 수 있습니다.\n\\begin{align*}\n&amp;&amp;n^3 &amp;= 3  \\sum_{k=1}^{n} k^2 - 3 \\frac{n(n+1)}{2} + n\\\\\n\\Rightarrow&amp;&amp; 3 \\sum_{k=1}^{n} k^2 &amp;= n^3 + 3 \\times \\frac{n(n+1)}{2} - n \\\\\n\\Rightarrow&amp;&amp; \\sum_{k=1}^{n} k^2 &amp;= \\frac{1}{3} n^3 + \\frac{1}{2} n^2 + \\frac{1}{6} n \\\\\n\\Rightarrow&amp;&amp; \\sum_{k=1}^{n} k^2 &amp; = \\frac{n(n+1)(2n+1)}{6}\n\\end{align*}\n그리고 같은 방법으로 어렵지 않게 1부터 n^3까지의 합을 구하는 공식도 구할 수 있습니다.\n\\begin{align*}\n&amp;&amp;(k-1)^4 &amp;= k^4 - 4k^3 + 6k^2 - 4k + 1\\\\\n\\Rightarrow&amp;&amp;\\sum_{k=1}^n \\left( k^4 - (k-1)^4 \\right) &amp;= \\sum_{k=1}^n \\left( 4k^3 - 6k^2 + 4k - 1 \\right) \\\\\n\\Rightarrow&amp;&amp;n^4 &amp;= 4 \\sum_{k=1}^{n} k^3 - 6 \\sum_{k=1}^{n} k^2 + 4 \\sum_{k=1}^{n} k - n \\\\\n\\Rightarrow&amp;&amp; 4 \\sum_{k=1}^{n} k^3 &amp;= n^4 + 6 \\times \\frac{n(n+1)(2n+1)}{6} - 4 \\times \\frac{n(n+1)}{2} + n \\\\\n\\Rightarrow&amp;&amp; \\sum_{k=1}^{n} k^3 &amp;= \\frac{1}{4} n^4 + \\frac{1}{2} n^3 + \\frac{3}{4} n^2 + \\frac{1}{4} n \\\\\n\\Rightarrow&amp;&amp; \\sum_{k=1}^{n} k^3 &amp;= \\frac{n^2(n+1)^2}{4} = \\left( \\frac{n(n+1)}{2}\\right)^2\n\\end{align*}\n여기까지는 고등학교 수업시간에 배우는 내용입니다. 그리고 학교에서 아마 이해를 돕기 위해 다양한 그림을 곁들이죠.\n\n\n이 때의 결과는 내신이나 수능에 매번 출제되기도하고 나중에 정적분과 급수와의 관계에서 다시 등장하기에 보통은 외우고 있습니다.\n\\int_{a}^{b} f(x) \\, dx = \\lim_{{n \\to \\infty}} \\sum_{{i=1}}^{n} f(x_i^*) \\Delta x\n일반화된 패턴\n이 공식을 보면 일정한 규칙이 보이시나요? 차수가 하나 증가한다는 것 이외에는 규칙이 있다고 상상하기는 어렵습니다. 시험에서도 세제곱이상의 식을 물어보는 문제는 잘 출제되지 않으므로 굳이 고민하고 싶지도 않습니다. 그럼에도 불구하고 규칙을 찾을 수 있을까요? 이 식을 자세히 관찰하면 공통적으로 갖고 있는 몇가지 특성을 더 찾아볼 수 있습니다.1\n\\begin{align}\n\\sum_{k=1}^n k &amp;= \\frac{1}{2}n^2 + \\frac{1}{2}n\\\\\n\\sum_{k=1}^n k^2 &amp;= \\frac{1}{3}n^3 + \\frac{1}{2}n^2 + \\frac{1}{6}n\\\\\n\\sum_{k=1}^n k^3 &amp;= \\frac{1}{4}n^4 + \\frac{1}{2}n^3 + \\frac{1}{4}n^2\\\\\n\\end{align}\n좌변을 보면 모두 k의 멱함수의 합 꼴 되어있습니다. 따라서 좌변을 모두 더한다면 멱급수(주어진 변수를 거듭제곱한 항들의 무한급수)를 떠올릴 수 있습니다. 테일러 전개는 기본적으로 무한급수를 이용한 근사치 계산법으로, 우리가 다루는 합의 형태를 명확히 드러낼 수 있는 도구입니다. 따라서 이를 활용한다면 문제를 해결하는 중요한 열쇠가 될 수 있습니다.\n\\begin{align*}\n\\sum_{k=0}^{n-1} e^{kx} &amp;= \\sum_{k=0}^{n-1} \\sum_{m=0}^{\\infty} \\frac{k^m x^m}{m!} = \\sum_{m=0}^{\\infty} \\left(\\sum_{k=1}^{n-1} k^m \\right) \\frac{x^m}{m!}  &amp;\\cdots(1)\\\\\n\\\\\n\\sum_{k=0}^{n-1} e^{kx} &amp;= \\frac{e^{nx}-1}{e^x-1} \\\\\n&amp;= \\frac{e^{nx} - 1}{x} \\cdot \\frac{x}{e^x - 1} \\\\\n&amp;= \\frac{e^{nx} - 1}{x} \\cdot \\sum_{l=0}^{\\infty} B_l \\frac{x^l}{l!} \\\\\n&amp;= \\left( \\sum_{k=0}^{\\infty} \\frac{n^{m+1}}{m+1} \\cdot \\frac{x^m}{m!} \\right) \\left( \\sum_{l=0}^{\\infty} B_l \\frac{x^l}{l!} \\right) \\\\\n&amp;= \\sum_{m=0}^{\\infty} \\left( \\sum_{i=0}^{j} \\frac{1}{m-i+1} \\binom{m}{i} B_i n^{m+1-i} \\right) \\frac{x^m}{m!} &amp;\\cdots(2)\n\\end{align*}\ne^x = \\sum \\frac{1}{n!}x^n임을 이용해 x=mx를 대입한다면 (1)번 식처럼 앞서 본 형태의 멱함수의 합을 유도할 수 있습니다. 반대로, e^x를 공비로 갖는 등비수열의 합으로 본다면 (2)번 식처럼 정리할 수 있습니다. 이 때, \\frac{x}{e^x -1}의 테일러 전개는 잘 모르므로 계수를 B_l이라 두고 정리하겠습니다.\n(1)번 식과 (2)번 식은 같으므로 이로부터 거듭제곱의 합을 다음과 같이 나타낼 수 있습니다. 이후 조합을 이용하면 앞선 계수가 깔끔하게 정리됩니다.\n\\begin{align*}\n\\sum_{k=1}^{n-1} k^m &amp;= \\sum_{i=0}^{m} \\frac{1}{m-i+1} \\binom{m}{i} B_i n^{m+1-i} \\\\\n&amp;= \\sum_{i=0}^{m} \\frac{m!}{(m-i+1) i! (m-i)!} B_i n^{m+1-i} \\\\\n&amp;= \\frac{1}{m+1} \\sum_{i=0}^{m} \\binom{m+1}{i} B_i n^{m+1-i}\n\\end{align*}\n마지막으로 양변에 n^m을 더하면, 거듭제곱의 합은 B_i라는 값을 이용해 변형할 수 있습니다. 여기서 갑자기 부호가 나와 이상하시겠지만 그것은 잠시만 나중에 다뤄보겠습니다.\n\\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\sum_{i=0}^{m} (-1)^i\\binom{m+1}{i} B_i n^{m+1-i}\n그렇다면 B_i가 무엇이길래 거듭제곱의 합을 구하는데 사용될 수 있을까요?\n베르누이 수(Bernoulli numbers)\nB_i는 앞서 보았듯이 \\frac{x}{e^x - 1}를 이용해 정의됩니다.\n\\frac{x}{e^x - 1} = \\sum_{k=0}^{\\infty} B_i \\frac{x^i}{i!}\n테일러 정리를 이용해 B_i를 찾아보면, 다음과 같이 B_i를 찾아낼 수 있습니다.2\n\\begin{align*}\n\\frac{x}{e^x - 1} &amp;= 1 - \\frac{x}{2} + \\frac{x^2}{12} - \\frac{x^4}{720} + \\frac{x^6}{30240} - \\cdots\\\\\n&amp;=1\\cdot \\frac{1}{0!}-\\frac{1}{2}\\cdot \\frac{x}{1!} + \\frac{1}{6} \\cdot \\frac{x^2}{2!}-\\frac{1}{30}\\cdot \\frac{x^4}{4!} + \\frac{1}{42} \\cdot \\frac{x^6}{6!} - \\cdots\\\\\n\\end{align*}\n\\begin{array}{c|c|c|c|c|c|c|c|c|c|c|c|c|c|c}\nn &amp; 0 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 10 &amp; 11 &amp; 12 &amp; \\cdots\\\\\n\\hline\nB_n &amp; 1 &amp; -\\frac{1}{2} &amp; \\frac{1}{6} &amp; 0 &amp; -\\frac{1}{30} &amp; 0 &amp; \\frac{1}{42} &amp; 0 &amp; -\\frac{1}{30} &amp; 0 &amp; \\frac{5}{66} &amp; 0 &amp; -\\frac{691}{2730} \\\\\n\\end{array}\n얼핏 보면 이 숫자들이 너무 불규칙적이라 별로 중요하지 않다고 생각하실 수도 있습니다. 그런데 사실 이 숫자들은 우리가 생각보다 자주 등장합니다.3\n\\coth(x)는 지수함수를 이용해 정의할 수 있으므로,\n\\coth(x) = \\frac{\\cosh(x)}{\\sinh(x)} = \\frac{e^x + e^{-x}}{e^x - e^{-x}}\n앞서 보았던 베르누이 함수의 짝수 부분만 고려한 함수로 나타낼 수 있습니다.\n\\sum_{n=0}^{\\infty} \\frac{B_{2n} x^{2n}}{(2n)!} = \\frac{x}{2} \\coth \\left( \\frac{x}{2} \\right)\n복소수에서의 오일러 공식을 이용하면 \\cot(x)=i\\coth(ix)와 같으므로,\n\\coth(ix) = \\frac{\\cos(ix)}{i\\sin(x)} = \\frac{1}{i} \\cdot \\frac{\\cos(ix)}{\\sin(x)} = \\frac{\\cos(x)}{\\sin(x)} \\cdot \\frac{1}{i} = \\frac{1}{i} \\cot(x)\n앞선 식을 이용해 \\cot(x)에 대한 생성함수를 얻을 수 있습니다.\n\\sum_{n=0}^{\\infty} \\frac{(-1)^n B_{2n} x^{2n}}{(2n)!} = \\frac{x}{2} \\cot \\left( \\frac{x}{2} \\right)\n마지막으로 \\tan(x) = \\cot(x) - 2 \\cot(2x)이므로, 앞선 식을 정리하면, 베르누이 수를 이용해 \\tan의 테일러 전개도 구할 수 있습니다. 불규칙해 보였던 \\tan(x)의 테일러 전개의 계수들이 거듭제곱의 합과 연결이 되는거죠.\n\\begin{align*}\n\\tan(x) &amp;= \\sum_{n=0}^{\\infty} \\frac{(-1)^n B_{2n} 2^{2n} \\left( x^{2n-1} - 2 \\cdot 2^{2n-1} x^{2n-1} \\right)}{(2n)!}\\\\\n&amp;= \\sum_{n=1}^{\\infty} \\frac{(-1)^{n-1} B_{2n} \\left(2^{2n} - 1\\right) 2^{2n-1} x^{2n-1}}{(2n)!}\\\\\n&amp;= \\sum_{n=1}^{\\infty} \\frac{B_{2n} (-4)^{n} \\left(1-4^n \\right) x^{2n-1}}{(2n)!}\\\\\n&amp;= x+\\frac{x^3}{3}+\\frac{2x^5}{15}+\\frac{17x^7}{315}+\\frac{62x^9}{2835} + \\cdots\n\\end{align*}\n그런데 여기서 끝이 아닙니다. 베르누이 수를 이용해 다음과 같은 베르누이 다항식을 정의해보겠습니다.\nB_n(x) = \\sum_{k=0}^{n} \\binom{n}{k} B_{n-k} x^{k}\n몇 가지 베르누이 다항식을 예로 보면,\n\\begin{align*}\nB_0(x) &amp;= 1\\\\\nB_1(x) &amp;= x - \\frac{1}{2}\\\\\nB_2(x) &amp;= x^2 - x + \\frac{1}{6}\\\\\nB_3(x) &amp;= x^3 - \\frac{3}{2}x^2 + \\frac{1}{2}x\\\\\nB_4(x) &amp;= x^4 - 2x^3 + x^2 - \\frac{1}{30}\\\\\n\\vdots\n\\end{align*}\n베르누이 수 B_n는 베르누이 다항식의 x = 0에서 값 B_n = B_n(0)입니다. 이제 n이 커감에 따라 함수를 그려보도록 하겠습니다. 베르누이 다항식은 처음에는 규칙이 없어보일 수 있지만 n이 커질수록 변동폭이 증가합니다. 특히, 홀수 n에서는 사인 함수와, 짝수 n에서는 코사인 함수와 유사한 패턴을 나타내며 수렴하는 경향이 있습니다. 이는 결국 주기적인 삼각 함수의 성질과 맞물리게 됩니다.\n\n주기가 1인 \\tilde{B}_n(x)를 아래와 같이 정의하면,\n\\tilde{B}_n(x) = B_n(x), \\quad 0 \\leq x &lt; 1, \\quad \\tilde{B}_n(x+1) = \\tilde{B}_n(x), \\quad x \\in \\mathbb{R}\n주기적 베르누이 함수 \\tilde{B}_n(x)는 n \\geq 2일 때, n-1차 미분까지 연속이며, 푸리에 급수는 다음과 같습니다.\n\\begin{align*}\n\\tilde{B}_{2n}(x) &amp;= (-1)^{n+1}\\frac{2(2n)!}{(2\\pi)^{2n}} \\sum_{m=1}^{\\infty} \\frac{\\cos(2m\\pi x)}{m^{2n}}\\\\\n\\tilde{B}_{2n+1}(x) &amp;= (-1)^{n+1}\\frac{2(2n+1)!}{(2\\pi)^{2n+1}} \\sum_{m=1}^{\\infty} \\frac{\\sin(2m\\pi x)}{m^{2n+1}}\n\\end{align*}\n앞서 본 결과와 잘 맞아 떨어지죠. 이 식으로 알 수 있는 정보가 더 있을까요? 마지막으로 이 식의 양변에 0을 대입해보면 어떻게 될까요? 양변에 0을 대입하면 \\cos 0=1이므로, 우변이 간단하게 정리됩니다. 이 때, \\sum_{m=1}^{\\infty} \\frac{1}{m^{2n}}은 너무나 유명한 식이 됩니다.\n\\tilde{B}_{2n}(0) = (-1)^{n+1} \\frac{2(2n)!}{(2\\pi)^{2n}} \\sum_{m=1}^{\\infty} \\frac{1}{m^{2n}}\n바로 리만 제타 함수죠.\n\\zeta(s) = \\sum_{m=1}^{\\infty} \\frac{1}{m^s}\n따라서 리만 제타 함수에 짝수를 대입한 값은 베르누이 수를 이용해 찾을 수 있습니다. 이렇게 보면 리만 제타함수가 짝수를 정의역으로 가질 때, 함숫값에 \\pi가 들어가는 이유를 색다르게 해석할 수 있습니다.4\n\\begin{align*}\n &amp;\\tilde{B}_{2n}(0) = (-1)^{n+1} \\frac{2(2n)!}{(2\\pi)^{2n}} \\zeta(2n)\\\\\n\\Rightarrow \\quad &amp;\n\\zeta(2n) = \\frac{(-1)^{n+1} B_{2n} (2\\pi)^{2n}}{2(2n)!}\n\\end{align*}\n파울 하버의 공식\n이야기가 멀리 가버렸지만, 다시 원래 문제인 거듭제곱의 합으로 돌아와보겠습니다. 앞서 유도했던 이 식은 파울하버 공식(Faulhaber’s formula)이라 불립니다. 이제는 B_i의 값들이 익숙하므로 손쉽게 거듭제곱의 합을 구할 수 있을 것 처럼 보입니다.\n\\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\sum_{i=0}^{m} (-1)^i\\binom{m+1}{i} B_i n^{m+1-i}\n이 식을 이용해 거듭제곱의 합을 구하기에 앞서, 건너 뛰었던 증명을 조금 자세히 들여다 보겠습니다.\n\\begin{align*}\n\\sum_{k=1}^{n-1} k^m &amp;= \\sum_{i=0}^{m} \\frac{1}{m-i+1} \\binom{m}{i} B_i n^{m+1-i} \\\\\n&amp;= \\sum_{i=0}^{m} \\frac{m!}{(m-i+1) i! (m-i)!} B_i n^{m+1-i} \\\\\n&amp;= \\frac{1}{m+1} \\sum_{i=0}^{m} \\binom{m+1}{i} B_i n^{m+1-i}\n\\end{align*}\n\\sum_{k=1}^{n} k^m을 구하기 위해 \\sum_{k=1}^{n-1} k^m에 n^m을 더해보겠습니다. \\frac{1}{m+1}로 식을 묶어 표현하면 다음과 같이 정리됩니다.\n\\begin{align*}\n&amp; \\sum_{k=1}^{n} k^m = \\sum_{k=1}^{n-1} k^m + n^m \\\\\n\\Rightarrow ~&amp; \\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\sum_{i=0}^{m} \\binom{m+1}{i} B_i n^{m+1-i} + n^m\\\\\n\\Rightarrow ~&amp; \\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\left( \\sum_{i=0}^{m} \\binom{m+1}{i} B_i n^{m+1-i} + (m+1) n^m \\right)\\\\\n\\end{align*}\n이때,  i=1인 항에 주목해보겠습니다. B_1 = -\\frac{1}{2}이고, \\binom{m+1}{1} = m+1이므로,\n\\begin{align*}\n&amp;\\binom{m+1}{1} B_1 n^{m+1-1} +(m+1) n^{m}\\\\\n= ~ &amp;(m+1) \\left( -\\frac{1}{2} \\right) n^{m}  +(m+1) n^{m}\\\\\n= ~&amp;-\\frac{(m+1)}{2} n^{m} + (m+1) n^{m} \\\\\n= ~&amp;\\frac{(m+1)}{2} n^{m} \\\\\n= ~&amp; (-1)^1 \\binom{m+1}{1} B_1 n^{m+1-1}\n\\end{align*}\n식은 다음과 같이 다시 쓸 수 있습니다.\n\\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\left( \\binom{m+1}{0} B_0 n^{m+1} + (-1)^1 \\binom{m+1}{1} B_1 n^{m+1-1} + \\sum_{i=2}^{m} \\binom{m+1}{i} B_i n^{m+1 - i} \\right)\n베르누이 수 B_i는 i \\ge3인 홀수 일 때 B_i = 0이므로 (-1)^\\text{(홀수)}=-1이지만 영향을 미치지 않고,\n\\begin{array}{c|c|c|c|c|c|c|c|c|c|c|c|c|c|c}\nn &amp; 0 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 10 &amp; 11 &amp; 12 &amp; \\cdots\\\\\n\\hline\nB_n &amp; 1 &amp; -\\frac{1}{2} &amp; \\frac{1}{6} &amp; 0 &amp; -\\frac{1}{30} &amp; 0 &amp; \\frac{1}{42} &amp; 0 &amp; -\\frac{1}{30} &amp; 0 &amp; \\frac{5}{66} &amp; 0 &amp; -\\frac{691}{2730} \\\\\n\\end{array}\n짝수 일 때는 (-1)^\\text{(짝수)}=1이므로 같은 식입니다. 따라서, 다음과 같이 식을 정리할 수 있지요.\n\\sum_{k=1}^{n} k^m = \\frac{1}{m+1} \\sum_{i=0}^{m} (-1)^i\\binom{m+1}{i} B_i n^{m+1-i}\n파울하버의 공식을 이용하면 \\sum_{k=1}^{n} k^m에 대하여, \\sum_{k=1}^{10^{6}} k^{10}와 같은 복잡한 거듭제곱의 합도 컴퓨터를 사용해 빠르게 계산할 수 있습니다.\n이 식을 직접 합산 한다면, 모든 k의 값을 개별적으로 제곱하고 더해야 하므로, n개의 항에 대해 반복을 수행하기 때문에 n이 커질 수록 선형적으로 연산이 증가합니다.(\\mathcal{O}(n m \\log n)) 반면에 파울하버 공식은 거듭제곱 합을 계산할 때 개별 항을 모두 계산하지 않고, 베르누이 수와 이항 계수 등을 사용해 적은 계산만으로도 결과를 구할 수 있습니다. 파울하버 공식에서 다항식의 차수는 m+1이므로(\\mathcal{O}(m^2 \\log n)), m이 작을 경우 직접 합산에 비해 속도는 수천 배에서 수백만 배까지 더 빠르며, 큰 n에서도 거의 일정한 시간 내에 결과를 얻을 수 있습니다.\nimport time\nfrom mpmath import bernoulli, binomial, mp\n \n# mpmath로 정밀도를 높여 연산하기\nmp.dps = 100  # 소수점 이하 100자리까지 계산\n \n# 직접 합산 방식\ndef direct_sum(n, m):\n    return sum(k**m for k in range(1, n + 1))\n \n# 파울하버 공식 방식 (mpmath 사용, 결과를 정수형으로 변환)\ndef faulhaber_sum(n, m):\n    result = mp.mpf(0)\n    for i in range(m + 1):\n        result += (-1) ** i * binomial(m + 1, i) * bernoulli(i) * n ** (m + 1 - i)\n \n    # 최종 결과를 정수형으로 변환\n    return int(result / (m + 1))\n \n  \n# 예시\nn = 10**6\nm = 10\n \n \n# 직접 합산 방식 시간 측정\n \nstart_time = time.time()\ndirect_result = direct_sum(n, m)\ndirect_time = time.time() - start_time\n \n# 파울하버 공식 방식 시간 측정\nstart_time = time.time()\nfaulhaber_result = faulhaber_sum(n, m)\nfaulhaber_time = time.time() - start_time\n \n# 결과 출력\nprint(f&quot;직접합산 공식 결과: {direct_result}, 시간: {direct_time:.6f}초&quot;)\nprint(f&quot;파울하버 공식 결과: {faulhaber_result}, 시간: {faulhaber_time:.6f}초&quot;)\n파울하버 공식은 단순히 수학적 계산의 효율성을 높여줄 뿐만 아니라, 복잡한 문제를 단순화하여 접근하는 데 큰 도움을 줄 수도 있습니다.5\n\n오일러-매클로린 공식 (Euler–Maclaurin formula)\n오일러-매클로린 공식은 적분과 급수의 근사 관계를 통해 복잡한 급수를 간단하게 계산하는 데 사용됩니다.\n\n\\sum_{k=a}^n f(k) - \\int_a^n f(x) \\, dx = \\frac{f(n) + f(a)}{2} + \\sum_{k=1}^{\\infty} B_{2k} \\frac{f^{(2k-1)}(n) - f^{(2k-1)}(a)}{(2k)!}\n복잡해 보이는 수식 뒤에 숨겨진 패턴과 논리를 발견하는 과정은 단순한 계산을 넘어 수학의 본질을 이해하고 응용하는 것과 연결됩니다. 앞서 본 제타함수의 공식은 양자장론에서 무한대가 발생하는 진동수의 합을 처리할 때 제타 함수 규칙화(zeta function regularization)기법에 응용될 수 있습니다.\n\\zeta(2n) = (-1)^{n+1} \\frac{B_{2n} (2\\pi)^{2n}}{2 (2n)!}\n우리가 배운 단순한 급수의 합이 리만 제타 함수나 양자 물리학에서 중요한 역할을 한다는 것은 수학이 한정된 지식이 아니라 끊임없이 연결되는 학문이라는 점을 보여줍니다.  수학을 배우는 것이 단순히 계산을 하고 문제를 푸는 것이 아니라, 새로운 영역을 탐구하는 첫걸음이라는 사실을 기억해보면 어떨까요?\nFootnotes\n\n\nproof of Faulhaber’s formula (planetmath.org) ↩\n\n\nBernoulli Number ↩\n\n\nBernoulli numbers, taylor series expansion of tan x ↩\n\n\nBernoulli Polynomials, Fourier Series and Zeta Numbers Scheufens, Ernst E ↩\n\n\nMaclaurin’s Second Formula and its Generalization ↩\n\n\n"},"Ray-math/Script/파티-플래너-문제":{"slug":"Ray-math/Script/파티-플래너-문제","filePath":"Ray math/Script/파티 플래너 문제.md","title":"파티 플래너 문제","links":[],"tags":["램지","그래프","집합","선","정점","존재","연결","논리","손","개","사이"],"content":"여러분은 파티를 준비하고 있고, 초대할 손님 명단을 작성 중입니다. 파티가 즐겁게 진행되려면 몇 명을 초대해야 할까요? 여기서 핵심은 초대된 사람들 사이의 관계입니다. 모든 손님이 서로 잘 아는 사이라면 이야깃거리가 금방 고갈될 수 있습니다. 반대로, 모든 손님이 서로 모르는 사이라면 어색한 분위기가 형성될 수도 있죠. 따라서, 손님들 사이의 관계가 적당히 섞여 있는 것이 중요합니다. 그렇다면, 이 균형을 유지하면서도 파티가 흥미롭게 진행되려면 어떻게 해야할까요?\n이런 질문을 던져봅시다. 적어도 3명이 서로 알거나, 3명이 서로 모르는 그룹이 생기도록 하려면 최소 몇 명의 손님을 초대해야 할까요?\n파티 플래너 문제와 그래프\n앞서 본 문제를 파티 플래너 문제라고 부릅니다. 이 문제를 이해하기 위해서는 그래프 이론을 사용해야 합니다. 그래프 이론은 복잡한 관계를 시각적으로 나타내고 분석할 수 있는 강력한 도구입니다.\n예를 들어, 손님을 점(node)으로, 두 손님의 관계를 선(edge)으로 표현하면, 문제를 시각적으로 간단하게 표현할 수 있습니다. 그리고 이러한 그래프 모델은 다양한 크기의 문제로 확장 가능합니다.\n먼저 5명의 손님을 원형으로 배치하고, 각 손님들 사이의 관계를 표시해보겠습니다. 아는 사람들 사이의 관계는 파란색 선으로, 모르는 사람들 사이의 관계는 빨간색 선으로 나타냅니다.1\n\n이 그래프에서 각 손님은 서로 아는 관계(파란색 선)와 모르는 관계(빨간색 선)로 연결되어 있습니다. 예를 들어, 1번 손님과 2번, 5번 손님은 서로 아는 사이입니다(파란색 선). 반면, 1번 손님과 3번, 4번 손님은 서로 모르는 사이입니다(빨간색 선).\n파란색 선으로 연결된 사람들은 서로 알고 있지만, 같은 색 선으로 둘러싸인 삼각형이 없습니다. 예를 들어, 1번, 2번, 3번 손님은 1번과 2번, 2번과 3번이 서로 아는 사이지만, 1번과 3번은 서로 모르는 사이입니다(빨간색 선). 따라서 파란색 선으로만 이루어진 삼각형이 없습니다.\n반대로, 1번, 3번, 4번 손님은 1번과 3번, 1번과 4번이 서로 모르는 사이지만, 3번과 4번은 서로 아는 사이입니다(파란색 선). 따라서 빨간색 선으로만 이루어진 삼각형도 없습니다.\n따라서, 5명의 손님을 초대했을 때는 어떤 3명이 서로 모두 아는 친구이거나, 3명이 서로 모르는 낯선 사람인 상황이 그림과 같이 발생할 수 없을 수도 있습니다.\n그러나 6명일 때는 다릅니다. 정말 신기하게도, 6명을 초대하면 손님들 사이의 관계를 어떻게 설정하더라도, 서로 아는 3명의 그룹 또는 서로 모르는 3명의 그룹 중 하나가 반드시 발생하게 됩니다. 지금부터 그 이유를 설명해드리겠습니다.\n\n램지 수 R(s,~t)\n증명에 앞서, 파티 플래너 문제를 수학적으로 재해석해 보겠습니다. 앞선 질문은 질문은 램지 수 R(s,~t)라는 개념으로 설명할 수 있습니다. 여기서 R(s,~t)란, 임의의 완전 그래프에서  s개의 정점이 모두 연결된 클리크 또는  t개의 정점이 모두 연결되지 않은 독립 그래프를 반드시 포함하도록 하는 최소한의 정점 수 N입니다.2 여기서 완전 그래프 K_n이란\b모든 정점이 연결된 그래프를 의미합니다. K_3는 3개의 정점이 모두 서로 연결된 삼각형 모양의 그래프이고, K_4는 4개의 정점이 모두 서로 연결된 그래프입니다.\n\n반대로, 그래프 내의 모든 정점이 서로 연결되지 않은 그래프를 독립 그래프라고 합니다. 독립 그래프에서는 어떤 두 정점 사이에도 간선이 존재하지 않습니다.\n\n이해하기 쉽게 연결된 선은 파란색으로, 연결되지 않은 선은 빨간색 선으로 나타내 보겠습니다.\n그렇다면, R(s,~t)는 그래프의 모든 변을 두 가지 색으로 색칠했을 때, s개의 꼭짓점이 파란색으로 완전 연결되거나, t개의 꼭짓점이 빨간색으로 완전 연결되도록 하는 최소한의 정점 수입니다. 따라서 앞서 보았던 문제 상황은 ‘R(3,~3)이 몇 인가?‘하는 문제로 바뀌게 되죠.\n다시 말해, 모든 변의 색이 같은 삼각형이 존재하는 모든 정점들이 서로 연결된 최소의 정점 그래프를 찾으면 됩니다. 앞서 n=5일 때, 이러한 성질을 만족하지 않는 예시를 찾았으므로, n=6일 때는 이러한 성질을 반드시 만족하는지, 찾아보도록 하겠습니다.\n\n먼저 6개의 정점을 가지는 완전 그래프 K_6을 상상해보겠습니다.\n비둘기집 원리\n완전 그래프 K_6의 특정 꼭짓점에서 나가는 5개의 선 중 적어도 3개의 선은 비둘기 집 원리에 의해 반드시 같은 색으로 칠해져야 합니다. 왜냐하면 빨강과 파랑 두개의 색에 5개의 선을 골고루 배정한다면, 아무리 골고루 배정 해도 하나가 남고, 그 하나는 반드시 두 색 중 하나의 색을 골라야하기 때문이죠. 저는 이 선이 파란색으로 같다고 하고, 2,~3,~4로 그어보겠습니다.\n\n단색 삼각형의 존재\n이제 선택 받은 3개의 꼭짓점 2,~3,~4를 연결 하는 선 2-3,~3-4,~2-4 중 적어도 하나의 선이 파란 색이라면 단색 삼각형이 완성됩니다.\n\n만약 세 선분이 모두 파란색이 아니라면, 반대로 모두 빨간색이어야 하는데, 그렇다면 2,~3,~4 세 개의 꼭짓점을 연결하는 모든 선은 빨간색으로 칠해져 다시 단색 삼각형이 만들어집니다.\n\n색 교환 가능성\n이 논리는 특정 색을 임의로 선택했기 때문에, 파란색과 빨간색의 역할을 교환해도 동일하게 적용됩니다. 따라서, 어떠한 경우에도 단색의 삼각형이 존재한다는 것을 보여줍니다. 6개의 정점을 가지는 그래프에서는 항상 단색 삼각형이 존재함을 증명했으므로, R(3, 3) \\leq 6이고, 이전 그래프로 부터 R(3, 3) &gt; 5임으로, R(3,~3)=6입니다.\n램지 이론(Ramsey Theory)\n파티 플래너 문제는 겉보기에는 단순해 보이지만, 사실 매우 복잡한 문제입니다. 왜냐하면,  n개의 정점을 가진 그래프는 {}_{n} \\rm{C}_{2}개의 선을 갖기 때문이죠. 각 간선을 두 가지 색으로 칠할 수 있으므로 가능한 색칠의 수는 2^{{}_{n} \\rm{C}_{2}}이 됩니다. 정점의 수가 증가할 때마다 가능한 모든 간선의 색칠 조합이 지수적으로 증가하죠.\n\\begin{array}{c|c|c}\nn &amp; 2^{\\binom{n}{2}} &amp; \\text{Value} \\\\\n\\hline\n4 &amp; 2^6 &amp; 64 \\\\\n5 &amp; 2^{10} &amp; 1024 \\\\\n6 &amp; 2^{15} &amp; 32768 \\\\\n7 &amp; 2^{21} &amp; 2097152 \\\\\n8 &amp; 2^{28} &amp; 268435456 \\\\\n9 &amp; 2^{36} &amp; 68719476736 \\\\\n10 &amp; 2^{45} &amp; 35184372088832 \\\\\n\\end{array}\n단적으로 앞선 상황을 일일이 확인한다면, 정점이 6개인 3만 가지가 넘는 K_6 그래프마다 단색 삼각형이 반드시 존재하는지 확인해봐야합니다. 램지 수를 계산하는 것은 간단한 아이디어에서 시작되지만, 실제로 계산하는 과정은 매우 복잡하고 시간이 많이 걸리는 문제입니다. 만약 그래프의 정점의 개수가 10개만 되더라도, 35조 가지가 넘는 경우의 수를 따져봐야하죠. 왜냐하면, 문제의 핵심은 특정한 부분 그래프가 항상 존재하도록 보장하는지 찾아야 하기 때문입니다.\n그래도 다행인 점은 자연수 s와 t가 커지더라도 램지 수 R(s,~t)는 반드시 존재한다는 것입니다. 프랭크 램지는 자신의 논문 On a Problem of Formal Logic3을 통해 오늘날 램지 이론으로 알려진 개념을 처음 제시했습니다. 램지는 특정 논리적 문제를 해결하는 과정에서 조합적 방법론을 사용했으며, 이 과정에서 그래프 이론과 조합론에서 필수적인 램지 이론을 도출했습니다.\n\n\n                  \n                   On a Problem of Formal Logic의 개요\n                  \n                \n\n\n1. 무한 집합에 대한 정리 (Theorem A)\n\n램지는 논문의 첫 번째 부분에서 무한 집합 F와 그 하위 집합의 r-조합에 대한 문제를 다룹니다. 이 정리는 무한 집합 F의 모든 r-조합이 임의의 방식으로 서로 배타적인 \\mu개의 클래스 C_i로 나뉘었을 때, 반드시 같은 클래스에 속하는 무한 하위 집합 A가 존재함을 보장합니다.\n램지는 귀납법을 사용하여, 가장 간단한 경우(예: r = 1)에서 출발해 점진적으로 더 복잡한 경우로 증명을 확장합니다. \\mu = 2인 경우부터 시작해 증명을 전개하며, 무한 하위 집합에서 이러한 패턴이 반드시 나타날 수밖에 없음을 논증합니다.\n\n2. 유한 집합에 대한 정리 (Theorem B)\n\n무한 집합에 대한 정리를 바탕으로, 램지는 유한 집합 T_m에 대한 조합적 정리로 확장합니다. 이 정리는 주어진 m개의 정점을 가진 유한 집합 T_m에서, 모든 r-조합이 임의로 \\mu개의 서로 배타적인 클래스 C_i로 나뉘었을 때, 동일한 클래스에 속하는 하위 집합이 반드시 존재함을 보장합니다.\n이 정리도 마찬가지로 귀납법을 사용하여 증명되며, 무한 집합의 경우에서 유한 집합으로 귀납적으로 확장하는 방식으로 논리가 전개됩니다. 램지는 이를 통해 논리적 문제 해결의 중요한 도구로 이 정리를 활용할 수 있음을 보여줍니다.\n\n3. 논리 공식의 일관성 결정\n\n램지는 논리 공식을 평가하는 문제를 다루며, 주어진 공식이 일관성을 가지는지 여부를 결정하는 절차를 제시합니다. 이 과정에서 Theorem B를 사용하여, 특정 논리 공식이 모든 가능한 해석에서 참인지, 또는 그 공식이 어떤 경우에도 거짓이 될 수 없는지 여부를 결정하는 방법을 설명합니다.\n램지는 이 이론을 활용하여 다양한 논리 공식을 평가할 수 있는 방법을 제안하며, 특히 유한한 개체로 구성된 우주에서 이러한 일관성을 확인하는 데 필요한 조건을 도출합니다.\n\n4. 유한 집합에서의 문제 해결\n\n유한 집합의 크기에 따라 논리 공식의 일관성을 판단하는 조건을 제시합니다. 특히, 주어진 논리 공식이 특정 크기의 유한 집합에서 일관성을 유지하기 위해 필요한 최소한의 조건을 설정합니다.\n공식의 일관성을 보장하기 위해 필요한 최소 크기의 집합 m_0를 계산하는 문제를 다룹니다. 이 조건은 주어진 공식이 무한한 집합에서뿐만 아니라, 특정 크기의 유한 집합에서도 일관성을 유지할 수 있는지를 판단하는 데 사용됩니다.\n\n\n\n\n\n램지는 논문의 초반에서 무한 집합에 대한 정리를 하며 무한 집합에서 임의의 방식으로 하위 집합을 분할할 때, 반드시 특정 패턴이 나타나는 하위 집합이 존재한다는 것을 보여주었습니다. 이후 무한 집합에 대한 정리를 유한 집합의 경우로 확장하면서, 충분히 큰 구조(여기서는 그래프) 내에서 반드시 특정한 하위구조가 나타날 수밖에 없음을 증명했습니다. 이러한 결과는 무작위적 구조에서도 특정 패턴이 반드시 나타난다는 것을 수학적으로 보장해줍니다. 다른 말로, 특정한 크기 이상이 되면 반드시 어떤 형태의 질서가 나타날 수밖에 없다는 것을 보여주며, 완전한 불규칙은 존재할 수 없다는 것을 증명낸거죠. 무작위성 속에서도 예측 가능한 구조가 존재함을 보여주는 이 정리는 네트워크 이론, 데이터 분석, 컴퓨터 과학 등 다양한 분야에서 응용되고 있습니다.\n\n[! note] 램지의 생애\n프랭크 플럼튼 램지(Frank Plumpton Ramsey)는 1903년에 태어나 1930년에 불과 26세의 나이로 세상을 떠난 영국의 수학자, 철학자, 경제학자였습니다. 그의 짧은 생애에도 불구하고, 그는 수학과 철학, 특히 확률론과 경제 이론에 지대한 영향을 미쳤습니다.\n램지는 1920년대 초반부터 수학과 철학, 그리고 경제학에 걸쳐 뛰어난 연구를 수행했습니다. 그는 1926년에 “확률과 진리”라는 논문을 통해 주관적 확률과 유틸리티 이론의 기초를 다졌으며, 이 이론은 나중에 게임 이론과 의사결정 이론에서 핵심 개념으로 자리 잡았습니다. 그의 작업은 이후 존 폰 노이만과 오스카 모르겐슈테른의 게임 이론에서도 큰 영향을 미쳤습니다. 또한 베르트랑 러셀의 논리적 원자론을 발전시키고, 의미론적 이론에 중요한 기여를 했습니다. 램지의 논리학적 작업은 철학과 수학의 경계를 허물며, 이후 수많은 철학적 논의의 기초가 되었습니다.\n램지의 경제학적 기여로는 “주관적 유틸리티의 극대화”라는 개념을 통해 개인의 경제적 선택이 어떻게 이루어지는지를 설명했습니다. 또한 이자율에 대한 연구를 통해 자본 축적의 원리와 관련된 중요한 통찰을 제공했습니다. 그의 경제 이론은 나중에 케인즈 경제학의 중요한 기초가 되었으며, 현대 거시경제학에서도 여전히 중요한 위치를 차지하고 있습니다.\n램지의 죽음은 오래전부터 미스터리로 남아 있었습니다. 그의 마지막 병세와 관련된 여러 가지 가능성이 제기되었지만, 최근의 연구에서는 그가 겪었던 일련의 병증이 복잡한 상태였음을 시사합니다.(그의 사망 원인으로는 감염성 질환인 바이엘 병(Weil’s disease), 자가면역 질환인 원발성 경화성 담관염(Primary Sclerosing Cholangitis), 그리고 담석(Gallstones) 으로 인한 합병증 등이 제안되었습니다.) 램지의 상태는 1929년 말부터 급격히 악화되었고, 결국 1930년 1월 19일에 사망에 이르게 되었습니다\n\n더 많은 사람을 초대한다면?\n이후 에르되시(Erdős)와 셀프린스(Szekeres) 등의 수학자들은 램지 이론을 확장하고, 특정 램지 수에 대한 경계를 계산하는 연구를 진행했습니다. R(3, 3) = 6이라는 결론은 비교적 간단하게 나왔지만, 만약 R(4,~3)은 어떨까요? 가장 쉬운 방법은 정점을 하나씩 늘려가며 안되는 예시를 찾거나, 모든 그래프를 다 확인하는 방법일 것입니다. 물론 많은 수학자들이 도전하고 있지만 쉬운일은 아닙니다. 이러한 작업은 엄청난 계산을 요구하며, 현재의 컴퓨터 기술로도 정확한 값을 구하는 것이 어려운 상황입니다.\n\n당장 R(4,~3)만 하더라도 9개의 정점이 필요하고, R(4,~4)는 18로 훨씬 더 큰 수입니다. 심지어 R(5,~5)는 43부터 48까지의 정수라는 상한과 하한은 알지만 정확히 몇 개가 필요한지는 아직도 미해결 문제입니다.4\n\\begin{array}{|c|c|c|c|c|c|c|c|c|c|c|}\n\\hline\ns \\backslash t &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 10 \\\\\n\\hline\n1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\\n\\hline\n2 &amp;   &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 10 \\\\\n\\hline\n3 &amp;   &amp;  &amp; 6 &amp; 9 &amp; 14 &amp; 18 &amp; 23 &amp; 28 &amp; 36 &amp; 40-41 \\\\\n\\hline\n4 &amp;   &amp;  &amp;  &amp; 18 &amp; 25 &amp; 36-40 &amp; 49-58 &amp; 59-79 &amp; 73-106 &amp; 92-136 \\\\\n\\hline\n5 &amp;   &amp;  &amp;  &amp;  &amp; 43-48 &amp; 59-85 &amp; 80-133 &amp; 101-194 &amp; 133-282 &amp; 149-381 \\\\\n\\hline\n6 &amp;   &amp;  &amp;  &amp;  &amp;  &amp; 102-161 &amp; 115-273 &amp; 134-427 &amp; 183-656 &amp; 204-949 \\\\\n\\hline\n7 &amp;   &amp;  &amp;  &amp;  &amp;  &amp;  &amp; 205-497 &amp; 219-840 &amp; 252-1379 &amp; 292-2134 \\\\\n\\hline\n8 &amp;   &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp; 282-1532 &amp; 329-2683 &amp; 343-4432 \\\\\n\\hline\n9 &amp;   &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp; 565-5366 &amp; 581-9797 \\\\\n\\hline\n10 &amp;   &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp;  &amp; 798-17730 \\\\\n\\hline\n\\end{array}\n램지 수의 계산은 아직도 수많은 미해결 문제를 남기고 있으며, 수학자들과 컴퓨터 과학자들의 호기심을 자극하고 있습니다. 이 문제를 해결하려는 노력은 단순히 수학적 아름다움 때문만이 아니라, 그래프 이론의 발전과 알고리즘 개선에 큰 기여를 할 수 있기 때문입니다. 정확한 값을 알아내기 위해 여러분은 어떤 전략을 사용하실건가요? 미지의 영역을 탐험해 볼 의향이 있으신가요?\nFootnotes\n\n\nRamsey Graphs ↩\n\n\nRamsey Numbers, Christos Nestor Chachamis, 2018 ↩\n\n\nON A PBOBLEM OF FORMAL LOGIC, F. P. KAMSEY, 1928 ↩\n\n\nArray of Ramsey numbers R(n,k), A212954 - OEIS ↩\n\n\n"},"Ray-math/Script/폴리아-추측(Polya-conjecture)":{"slug":"Ray-math/Script/폴리아-추측(Polya-conjecture)","filePath":"Ray math/Script/폴리아 추측(Polya conjecture).md","title":"폴리아 추측(Pólya conjecture)","links":[],"tags":["추측","함수","소인수"],"content":"수학에서는 끊임없는 탐구와 질문이 이어지곤 합니다. 그리고 그 탐구의 발판이 되는 것이 바로 추측입니다. 추측은 어떤 수학적 성질이 일정한 범위 또는 특정 조건에서 참이라고 생각되지만 아직 증명되지 않은 주장입니다.\n예를 들어 골드바흐의 추측이 있죠. 골드바흐의 추측은 수학의 유명한 미해결 문제 중 하나로, 독일의 수학자 크리스티안 골드바흐(Christian Goldbach) 가 1742년에 처음 제시했습니다. 이 추측은 간단하면서도 아름답게 표현됩니다.\n\n(4보다 크거나 같은) 모든 짝수는 두 소수의 합으로 표현할 수 있다.\n\n쉽게말해 어떤 짝수 n이 주어졌을 때, 두 소수 p와 q가 존재하여 n = p + q입니다. 예를 들어, 다음과 같은 조합 등이 있습니다.\n4 = 2 + 2, \\quad 6 = 3 + 3, \\quad 8 = 3 + 5\n이러한 조합은 꽤 큰 수에서도 잘 맞아 떨어집니다.\n\\begin{align*}\\\\\n10 &amp;= 3 + 7 \\\\\n100 &amp;= 47 + 53\\\\\n1000 &amp;= 491 + 509\\\\\n10000 &amp;= 4649 + 5351\\\\\n100000 &amp;= 49877 + 50123\n\\end{align*}\n1938년 닐스 피핑(Nils Pipping)은 수작업으로 n = 100,000인 경우까지 검증했습니다. 그 후 컴퓨터의 도움을 받아, 더 많은 수들에 대해 진위가 확인되었습니다. 특히, T. Oliveira e Silva는 분산 컴퓨팅 검색을 수행하여 n \\leq 4 \\times 10^{18} (400경, 4 \\times 10^{17}까지는 두 번 검증)까지 이 추측을 검증했습니다. 이는 작은 모래알을 나열해서 지구를 1억 번 정도 돌 수 있는 길이가 될 정도로 큰 수입니다.\n\n모래알 한 개의 길이는 1 \\times 10^{-3} \\mathrm{m}라 가정하고, 4 \\times 10^{18}개의 모래알을 나열하면\n4 \\times 10^{18} \\times 1 \\times 10^{-3}\\mathrm{m} = 4 \\times 10^{15}\\mathrm{m}\n지구의 둘레는 약 4.0075 \\times 10^{7}\\mathrm{m}이므로\n\\frac{4 \\times 10^{15}\\mathrm{m}}{4.0075 \\times 10^{7}\\mathrm{m}} = \\frac{4}{4.0075} \\times 10^{8} \\approx 100 \\times 10^{6}\n\n골드바흐의 추측은 수백 년 동안 수많은 수학자들에게 도전의 기회를 제공했으며, 많은 짝수에 대해 실험적으로 검증되었습니다. 그렇다면 이렇게 큰 수까지 증명되면 참이라고 할 수 있을까요?\n폴리아 추측(Pólya conjecture)\n폴리아 추측은 조지 폴리아(George Pólya)가 1919년에 제시한 수학적 가설로, 소수론과 관련이 깊은 내용입니다. 이 추측은 자연수를 소인수의 개수에 따라 두 그룹으로 나누는 방식과 관련이 있습니다. 구체적으로, 폴리아 추측은 어떤 자연수 n에 대하여, 1보다 크고 n 이하인 모든 자연수를 소인수의 개수가 홀수인 그룹과 짝수인 그룹으로 나눌 때, 홀수인 그룹의 원소 수가 짝수인 그룹의 원소 수보다 많거나 같다고 주장합니다.\n\\begin{array}{|c|c|c|c|c|}\n\\hline\nn &amp; \\text{Prime Factorization} &amp; \\text{Classification} &amp; \\text{Odd} &amp; \\text{Even} \\\\\n\\hline\n2 &amp; 2 &amp; \\text{Odd} &amp; 1 &amp; 0 \\\\\n\\hline\n3 &amp; 3 &amp; \\text{Odd} &amp; 2 &amp; 0 \\\\\n\\hline\n4 &amp; 2^2 &amp; \\text{Even} &amp; 2 &amp; 1 \\\\\n\\hline\n5 &amp; 5 &amp; \\text{Odd} &amp; 3 &amp; 1 \\\\\n\\hline\n6 &amp; 2 \\times 3 &amp; \\text{Even} &amp; 3 &amp; 2 \\\\\n\\hline\n7 &amp; 7 &amp; \\text{Odd} &amp; 4 &amp; 2 \\\\\n\\hline\n8 &amp; 2^3 &amp; \\text{Odd} &amp; 5 &amp; 2 \\\\\n\\hline\n9 &amp; 3^2 &amp; \\text{Even} &amp; 5 &amp; 3 \\\\\n\\hline\n10 &amp; 2 \\times 5 &amp; \\text{Even} &amp; 5 &amp; 4 \\\\\n\\hline\n11 &amp; 11 &amp; \\text{Odd} &amp; 6 &amp; 4 \\\\\n\\hline\n12 &amp; 2^2 \\times 3 &amp; \\text{Odd} &amp; 7 &amp; 4 \\\\\n\\hline\n13 &amp; 13 &amp; \\text{Odd} &amp; 8 &amp; 4 \\\\\n\\hline\n14 &amp; 2 \\times 7 &amp; \\text{Even} &amp; 8 &amp; 5 \\\\\n\\hline\n15 &amp; 3 \\times 5 &amp; \\text{Even} &amp; 8 &amp; 6 \\\\\n\\hline\n16 &amp; 2^4 &amp; \\text{Even} &amp; 8 &amp; 7 \\\\\n\\hline\n17 &amp; 17 &amp; \\text{Odd} &amp; 9 &amp; 7 \\\\\n\\hline\n18 &amp; 2 \\times 3^2 &amp; \\text{Odd} &amp; 10 &amp; 7 \\\\\n\\hline\n19 &amp; 19 &amp; \\text{Odd} &amp; 11 &amp; 7 \\\\\n\\hline\n20 &amp; 2^2 \\times 5 &amp; \\text{Odd} &amp; 12 &amp; 7 \\\\\n\\hline\n\\end{array}\n자세히 보도록 하겠습니다. 예를들어 n = 10일 경우, 1과 10 사이에 있는 숫자 중 홀수 개의 소인수를 가진 수는 2, 3, 5, 7, 8이며, 짝수 개의 소인수를 가진 수는 4, 6, 9, 10입니다. 여기서 주의하실 점은 8과 같이 2 \\times 2 \\times 2처럼 거듭 제곱인 경우 각 소인수의 성분을 세므로 3개의 소인수를 가진다고 봐야합니다. 이렇게 소인수 분해하고 난 후 개수를 세서 다음 표와 같이 누적해서 보면 소인수가 홀수개인 수의 개수가 짝수개인 수의 개수보다 항상 큰 것을 볼 수 있습니다.\n앞서 본 표에서 규칙성을 보면 소수들은 홀수개의 성분으로 소인수 분해되고, 짝수개의 성분으로 소인수분해 되는 수와 홀수개의 성분으로 소인수분해 되는 수들의 개수가 앞으로도 비슷하다고 생각한다면 더 큰 수들도 조사해보았을 때 홀수개의 성분으로 소인수 분해되는 수가 항상 더 많을 것이라 생각할 수도 있습니다.\n이 추측은 리우빌 함수(Liouville function) \\lambda(n)을 이용해 보다 쉽게 나타낼 수 있습니다. 리우빌 함수는 자연수 n에 대해 정의된 함수로, \\Omega(n)을 n을 소인수분해한 결과에서 소인수 지수의 총합이라 할 때, 짝수이면 +1을, 홀수이면 -1을 값으로 갖는 함수입니다.\n\\lambda(n) = (-1)^{\\Omega(n)}\n따라서 폴리아 추측은 다음과 같이 정의된 L(x)가 항상 0 이하라는 추측입니다.\nL(x) = \\sum_{n \\leq x} \\lambda(n) \\leq 0\n모든 정수는 소수들의 곱으로 유일하게 표현될 수 있으며, 리우빌 함수는 이 소수들의 거듭제곱 지수를 통해 값을 결정하기 때문에, 서로소인 두 수의 소인수분해는 서로 영향을 주지 않아, 이들의 리우빌 함수 값의 곱은 각각의 리우빌 함수 값과 동일합니다. 따라서 리우빌 함수는 서로소인 두 정수 a와 b에 대해 \\lambda(ab) = \\lambda(a)\\lambda(b)을  만족하는 곱셈적 함수이므로 이 문제의 분석을 더 간편하게 할 수 있습니다.\n곱셈적 함수\n두 서로소인 양의 정수 a와 b에 대하여 a와 b가 공통된 소인수를 가지지 않으므로, \\Omega(ab)는 \\Omega(a)와 \\Omega(b)의 합과 같다.\n\\Omega(ab) = \\Omega(a) + \\Omega(b)\n리우빌 함수의 정의에 따라\n\n이고, 지수 법칙을 이용해 정리하면\n(-1)^{\\Omega(a) + \\Omega(b)} = (-1)^{\\Omega(a)} \\cdot (-1)^{\\Omega(b)}\n다음과 같다.\n\\lambda(ab) = \\lambda(a) \\cdot \\lambda(b)\n항상 성립할까?\n이를 이용해 python코드를 작성하여 간단하게 100만 자리까지 확인해보았을 때, 비록 L(48512)에서 -3까지 영점에 근접하며 추측을 위협하지만 결국엔 수가 커져갈 수록 다시 0과 멀어지는 추세를 확인할 수 있습니다. 그렇다면 이 추측은 더 큰 수에서도 항상 성립한다고 할 수 있을까요?\n쏟아지는 반례들\n1958년 해즐그로브(C. B. Haselgrove)는 자신의 논문에서 폴리아의 추측이 x &lt; 250,000에 대해 참임을 확인했습니다. 더하여 이 추측이 항상 참이 아님도 증명합니다. 그의 증명은 리만 가설(Riemann hypothesis)을 가정하고, 리만 제타함수와 리우빌 함수와의 관계를 이용해 리만 제타 함수의 특정 값들을 분석하여 폴리아의 추측이 잘못되었음을 보여주었습니다.\n\\frac{\\zeta(2s)}{\\zeta(s)} = \\sum_{n=1}^{\\infty} \\lambda(n)n^{-s}\n리만 가설에서 영점들이 s=\\frac{1}{2}+it 일직선상에 있다는 단순성을 가정한 잉엄(A. E. Ingham)의 작업을 인용하여 함수를 정의하고 이로부터 어떤 값u에 대해 L(e^u)&gt;0임을 보였죠. 이후 컴퓨터를 사용하여 \\zeta(s)를 큰 범위에서 계산했으며, 약 1.847 \\times 10^{361} 정도의 수에서 반례가 존재할 것으로 추정했습니다.1 관측 가능한 우주에 있는 원자수가 대략 10^{80}개라고 추측하는데 해즐그로브가 추측한 반례는 우주에 있는 원자의 수를 네 제곱한 수 보다 크므로 상상도 하기 어려운 숫자죠. 그래서 구체적인 반례는 영영 확인할 수 없을 줄 알았습니다. 하지만 다행히도 추측이 거짓임이 밝혀진지 2년 뒤에 레먼(R. Sherman Lehman)은 다음 공식을 이용해 n = 906,180,359에서 이 추측이 성립하지 않음을 보이며 처음으로 명시적인 반례를 찾아냅니다.2\nL(x) = \\sum_{k \\leq g} M\\left(\\frac{x}{k^2}\\right) + \\sum_{l \\leq \\frac{x}{g^2}} \\mu(l) \\left\\lfloor \\sqrt{\\frac{x}{l}} \\right\\rfloor - M\\left(\\frac{x}{g^2}\\right) \\left\\lfloor \\frac{\\sqrt{x}}{g^2} \\right\\rfloor\n\nIn the present paper we shall describe calculations which lead to the result that L(906,180,359) = +1. We have not found a smaller value of x for which the conjecture fails, but also we have not proved that this is the smallest x greater than 2 for which L(x) is positive\n본 논문에서 우리는 L(906,180,359) = +1이라는 결과로 이어지는 계산을 설명할 것입니다. 우리는 추측이 실패하는 더 작은 x 값을 찾지 못했으며, L(x)가 양수인 2보다 큰 가장 작은 x가 이것임을 증명하지도 못했습니다.\n\n이후 1980년에 이르러 타나카(Minoru Tanaka)가 n = 906,150,257이 폴리아 추측의 가장 작은 반례임을 밝혀내게 됩니다. 저도 이 문제를 직접 풀어보기위해 코드를 작성하고 이틀 간 검증해본 결과, L(x)의 값을 모아놓은 파일 크기만 7 \\rm{GB}를 넘어갔지만 결국 같은 값을 구해냈습니다. 그리고 10억까지의 수 중에서는 L(906,316,571)=828이 최댓값임을 확인 했습니다. 이 결과에 대해 관심이 있으신 분들은 블로그를 참고해주시기 바랍니다.\n여러 연구 결과를 통해 L(x)가 항상 음수가 아니라 양수일 수도 있음이 밝혀졌고, 이를 만족하는 최소의 반례도 찾아냈습니다. 하지만 L(x)가 무한히 양수와 음수를 오가는지는 아직 열린 문제로 남겨졌습니다.3\n10억까지의 수 중 L(x)=0을 만족하는 251개의 x목록\n\\begin{gather*}\n906150256, 906150290, 906150292, 906150294, 906150304, 906150306, \\\\\n906150310, 906150312, 906150314, 906150322, 906150324, 906151514, \\\\\n906151516, 906151528, 906151574, 906154582, 906154584, 906154604, \\\\\n906154608, 906154610, 906154614, 906154756, 906154762, 906154768, \\\\\n906154788, 906154790, 906154792, 906154824, 906154828, 906154836, \\\\\n906154856, 906154864, 906154866, 906154878, 906154880, 906154884, \\\\\n906154886, 906154888, 906154890, 906154892, 906154894, 906154906, \\\\\n906154908, 906154910, 906154914, 906154916, 906154920, 906154922, \\\\\n906154924, 906154926, 906154946, 906154948, 906180358, 906180360, \\\\\n906180362, 906180364, 906180366, 906180368, 906180370, 906180372, \\\\\n906180374, 906180390, 906180392, 906180422, 906180424, 906180516, \\\\\n906180518, 906180524, 906180528, 906180532, 906180536, 906180552, \\\\\n906180554, 906192696, 906192846, 906192864, 906192866, 906192902, \\\\\n906192904, 906192906, 906192962, 906192964, 906192970, 906192978, \\\\\n906192980, 906192982, 906192984, 906192990, 906193212, 906193226, \\\\\n906193228, 906193232, 906193244, 906193246, 906193302, 906193418, \\\\\n906193464, 906193474, 906193476, 906194930, 906194932, 906194936, \\\\\n906194944, 906194948, 906194950, 906194960, 906194966, 906194978, \\\\\n906195098, 906195108, 906195114, 906195146, 906195148, 906195150, \\\\\n906195296, 906195298, 906195982, 906195984, 906195988, 906196008, \\\\\n906196010, 906196012, 906196014, 906196044, 906196050, 906196052, \\\\\n906196054, 906196056, 906196058, 906196070, 906196076, 906196078, \\\\\n906196080, 906196082, 906196090, 906196098, 906196108, 906208708, \\\\\n906208710, 906208712, 906208730, 906209040, 906209062, 906209066, \\\\\n906209068, 906209070, 906209072, 906209208, 906209222, 906209226, \\\\\n906209232, 906209234, 906209236, 906209240, 906209242, 906209270, \\\\\n906209282, 906209284, 906209290, 906477698, 906477700, 906477734, \\\\\n906477810, 906477866, 906477868, 906477870, 906477898, 906477900, \\\\\n906477902, 906477904, 906477928, 906477930, 906477932, 906477934, \\\\\n906477936, 906486638, 906486804, 906486806, 906486816, 906486818, \\\\\n906486820, 906486830, 906486842, 906486844, 906486852, 906486854, \\\\\n906486908, 906486910, 906486912, 906486916, 906486946, 906486948, \\\\\n906486960, 906486964, 906486972, 906486974, 906487000, 906487004, \\\\\n906487058, 906487062, 906487064, 906487068, 906487070, 906487072, \\\\\n906487074, 906487076, 906487084, 906487086, 906487090, 906487092, \\\\\n906487094, 906487100, 906487184, 906487186, 906487188, 906487190, \\\\\n906487192, 906487194, 906487202, 906487204, 906487258, 906487260, \\\\\n906487262, 906487270, 906487272, 906487278, 906487286, 906487932, \\\\\n906487936, 906487948, 906487972, 906487974, 906487988, 906487990, \\\\\n906487992, 906487994, 906488000, 906488002, 906488006, 906488008, \\\\\n906488022, 906488024, 906488026, 906488028, 906488040, 906488044, \\\\\n906488054, 906488064, 906488066, 906488076, 906488078\n\\end{gather*}\n추측 너머에\n반례들은 진리를 향한 여정에서 중요한 이정표입니다. 폴리아의 추측이 틀렸다는 사실은 많은 경우에서의 진실성이 전체를 대변하지 않음을 보여주며, 특정 사례에서의 진실이 일반화될 수 없다는 중요한 교훈을 제시합니다. 그러나 이 추측을 통해 얻을 수 있는 것은 이러한 단순한 교훈뿐만이 아닙니다. 수학은 해답도 중요하지만 어쩌면 그 과정이 더 중요하다 생각합니다. 폴리아가 이 추측을 제시한 것은 정말 이 명제가 참이라고 생각해서 그런 것은 아니었습니다. 사실은 정반대 였죠. 폴리아는 이 명제가 참이라고 생각하지 않았습니다. 이 명제를 증명한 과정에서 보듯 이 추측의 본 목적은 리만 가설과 같은 깊은 수학적 문제에 대한 탐구를 촉진하고자 함이었습니다. 폴리아의 추측은 결코 오류를 의미하는 것이 아니라, 리만 가설이라는 미지의 세계로 나아가는 도전의 초대장이었습니다. 폴리아는 이 문제를 제기하고 해결함에 있어 수학의 새로운 분야를 개척할 수 있다고 생각했습니다.\n골드바흐의 추측과 폴리아의 문제는 모두 수학 탐구의 본질을 반영합니다. 수학의 발전은 귀납적 추론을 통한 문제 발견과 연역적 과정을 통한 증명의 순환 속에서 이루어집니다. 수학은 끊임없는 탐구와 물음, 그리고 불확실성 속에서도 지식의 빛을 발견하는 여정입니다. 아직 해결되지 않은 추측은 아직 펼쳐지지 않은 수학의 무한한 가능성과 진리를 밝히기위한 불빛입니다. 그렇다면 여러분이 밝혀낼 다음 진리는 무엇인가요?\nFootnotes\n\n\nA disproof of a conjecture of Pólya - Haselgrove - 1958 ↩\n\n\nOn Liouville’s Function By R. Sherman Lehman ↩\n\n\nA Numerical Investigation on Cumulative Sum of the Liouville Function ↩\n\n\n"},"Ray-math/Script/피타고라스-정리":{"slug":"Ray-math/Script/피타고라스-정리","filePath":"Ray math/Script/피타고라스 정리.md","title":"세상을 바꾼 방정식 1 - 피타고라스 정리","links":[],"tags":["정리","피타고라스","삼각","벡터","점","차원","거리","사이","길이","이용","크기"],"content":"피타고라스의 역사와 중요성\n대부분의 사람들이 대표적인 수학자로 피타고라스를 생각합니다. 개인적으로 수학과제탐구 수행평가를 할때 항상 나오는 주제라서 썩 좋아하지는 않습니다. 하지만 이 정리가 매번 나오는 것은 그만큼 중요하기 때문일 수 있습니다. 피타고라스는 철학자이자 기하학자로 그가 만든 학파에서는 수가 우주의 기반이라고 믿었습니다. 피타고라스가 유명해진 것은 그의 이름을 딴 정리 덕분인데, 이 정리의 출처에 대해 아직도 논란이 있습니다. 바빌로니아의 점토판에서 피타고라스보다 훨씬 이른 시기에 이 정리가 알려졌다는 증거도 있으며, 중국에서는 같은 개념이 독자적으로 발명되어 고구현의 정리라고 되어 있죠. 다만 현재에는 피타고라스의 정리라고 통용되며 이 때문에 피타고라스는 중학교를 졸업하면 누구나 다 아는 수학자가 되었습니다.\n직각삼각형에서의 피타고라스 정리와 응용\n피타고라스 정리는 유명한 수학 교과서인 에우클레이데스의 『원론』 1권의 명제47에 등장합니다. 다만 고대 그리스에서 기호나 방정식이 아직 발명되지않아 말과 기하학적 성질을 이용해 정리들을 표현했습니다. 그리스인들은 선과 면으로 수학을 공부했기 때문에, 피타고라스는 정리는 “한 직각삼각형의 가장 긴 변을 이용해 만든 정사각형의 넓이는 다른 두 변으로 만든 정사각형들의 넓이의 합과 같다.”라고 표현되어 있습니다.\na^2+b^2=c^2\n그런데 넓이의 관계를 나타낸 이 공식은 직선의 거리를 측정하는 데 효율적인 도구로 사용됩니다. 예를 들어, 두 점 사이의 직선 거리를 알고 싶을 때, 이 두 점을 직각삼각형의 두 꼭짓점으로 생각하고, 두 점 사이의 직선을 빗변으로 생각하면 됩니다. 그런 다음 피타고라스의 정리를 사용하여 빗변의 길이, 즉 두 점 사이의 거리를 계산할 수 있습니다.\n삼각법과 코사인 법칙의 확장\n그런데 이렇게 간단한 피타고라스 정리는 왜 세상을 바꾼 방정식에 첫번째로 선정된 것일까요? 사실 실생활에서 마주치는 삼각형 대부분은 직각이 아니므로, 피타고라스의 정리는 쓰임새 많아 보이진 않습니다. 그러나 모든 볼록 다각형은 삼각형으로 분할할 수 있고, 모든 삼각형은 빗변과 마주보는 꼭짓점에서 빗변으로 수선의 발을 내리면 2개의 직각삼각형으로 분할할 수 있으므로 직각삼각형의 성질을 아는 것은 매우 중요합니다. 여기서 나오게 된 것이 삼각법(trigonometry)입니다. 직각삼각형이 있다면 각도와 길이사이의 관계를 이용해 기본적인 삼각함수인 사인(sin), 코사인(cos), 탄젠트(tan)를 만들어낼 수 있죠. 이 방법을 이용하면 수를 다루는 직선의 세상에서 면의 세계로 수학을 확장시킬 수 있습니다.\n또 삼각함수가 있다면 피타고라스 정리를 조금 수정하여 직각이 없는 삼각형들에 바로 적용할 수 있는데, 흔히 ‘코사인 법칙’이라 불리는 공식이죠.\n우선, 임의의 삼각형 ABC를 생각해보겠습니다. 삼각형 ABC의 꼭짓점 A에서 a 즉, 변\\overline{BC} 나 그 연장선 위에 내린 수선의 발을 H라 하면\na=\\overline{BC}=\\overline{BH}+\\overline{CH}\n라 할 수 있습니다. 이때 코사인의 정의를 이용하면\na=c \\cos B + b \\cos C \\quad (1)\n라 할 수 있습니다. 그리고 같은 방법으로 b, c를 나타낼 수 있습니다.\nb=a \\cos C + c \\cos A \\quad (2)\nc=a \\cos B + b \\cos A \\quad (3)\n계산을 편하게 하기위해 첫번째, 두번째, 세번째 식에 각각 a, b, c를 곱한 후\na^2=ac \\cos B + ab \\cos C \\quad (1&#039;)\nb^2=ab \\cos C + bc \\cos A \\quad (2&#039;)\nc^2=ac \\cos B + bc \\cos A \\quad (3&#039;)\n첫번째 식에서 두번째, 세번째 식을 빼서((1&#039;)-(2&#039;)-(3&#039;)) 정리하면\na^2-b^2-c^2=-2bc \\cdot \\cos A\n삼각형의 세 변의 길이와 각의 크기에 대한 코사인 사이의 관계를 찾을 수 있는데 이를 코사인 법칙이라고 합니다.\na^2=b^2+c^2-2bc\\cdot\\cos A\n그리고 이 식은 다른 변에도 동일하게 적용할 수 있습니다.\nb^2=a^2+c^2-2ac\\cdot\\cos B\nc^2=a^2+b^2-2ab\\cdot\\cos C\n코사인 법칙은 두 변의 길이와 그 사이의 끼인각이 주어지면 삼각형의 알려지지 않은 남은 변의 길이를 찾는 데 사용됩니다. 반대로 세 변의 길이를 모두 알고 있을 때 각도를 찾는데도 유용하죠. 그리고 끼인각이 직각이라면 \\cos ({\\pi\\over2})=0이므로 자연스럽게 피타고라스 정리가 됩니다. 코사인 법칙은 이처럼 피타고라스의 정리를 모든 유형의 삼각형으로 확장하는 삼각법의 기본 정리입니다.\n삼각법은 거리 계산, 물체의 움직임 연구 등 실제 문제를 해결하는 데 널리 사용됩니다. 예를 들어 탈레스는 삼각법을 이용해 기자 피라미드의 높이를 측정했고, 에라토스테네스는 알렉산드리아와 시에네에서 관측한 태양의 각도를 이용해 지구의 크기를 추정했죠. 나아가 오늘날에는 삼각 측량(triangulation)로까지 발전했습니다. 삼각 측량은 한 지역을 많은 작은 삼각형들로 나누고 가장 처음에 삼각형 한 변의 길이를 정확하게 측정한 후, 각도들을 이용하여 거리를 계산하는 방법입니다. 이 개념은 사람들의 사고를 한 삼각형에서 평면으로 확장시켰고 결국 데카르트의 평면 좌표로 응용되었습니다.\n3차원에서의 피타고라스 정리\n길이를 정확히 측정할 수 있다는 것은 평면에서만 한정된 내용은 아닙니다. 길이는 공간에도 존재하므로 피타고라스 정리를 고차원으로 확장할 필요가 있습니다. 3차원 공간에서 두 점 (P(x_1, y_1, z_1))과 (Q(x_2, y_2, z_2)) 사이의 거리를 계산한다고 해보겠습니다.\n2차원 평면에서 두 점 A(x_1, y_1)와 B(x_2, y_2) 사이의 거리는 피타고라스의 정리를 이용하여 다음과 같이 계산할 수 있습니다.\nd_{2D} = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}\n이제, 이 두 점을 연결하는 선 d_{2D}와 z축에서의 두 점 사이의 거리인 \\lvert z_2 - z_1  \\rvert는 서로 수직을 이루므로, 다시 피타고라스의 정리를 사용할 수 있습니다.\nd_{3D} = \\sqrt{d_{2D}^2 + (z_2 - z_1)^2}\n이때, 2차원의 거리를 풀어서 정리하면 공간에서의 거리는 다음과 같이 계산됩니다.\nd_{3D} = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2 + (z_2 - z_1)^2}\n이는 피타고라스의 정리를 3차원으로 확장한 결과입니다. 3차원 공간에서도 변수를 추가하는 방법으로 확장될 수 있는거죠. 이처럼, 피타고라스의 정리는 직교좌표계를 사용할 수 있는 공간에서 너무나 잘 맞아떨어집니다. 두 점 사이의 거리를 측정하는 데 있어서 핵심적인 원리를 제공하죠. 그리고 길이를 정확히 측정할 수 있다는 강력한 성질은 움직임을 이해하는데도 중요합니다. 바꿔말해 벡터로 확장되어 물체의 운동 상태를 분석하거나 물리량을 분석하는데 응용될 수 있죠.\n피타고라스 정리의 확장\n피타고라스의 정리는 직교좌표계라는 기하학적 구조에 근거하며, 이 구조는 차원에 상관없이 일정합니다. 즉, 2차원, 3차원, 그리고 더 높은 차원에서도 기본적인 성질을 유지하여 계속 확장해나갈 수 있습니다. 앞서 말했듯 피타고라스 정리는 벡터와 연관이 있습니다. 벡터는 크기와 방향을 가진 수학적 객체로, 공간에서 한 점에서 다른 점으로의 이동을 나타냅니다.\n\n점 A를 (a_1, a_2)라 하고, 점 B를 (b_1, b_2)라 하면, 벡터 \\vec{AB}는 다음과 같이 표현될 수 있다.\n\n\\overrightarrow{AB} = (b_1 - a_1, b_2 - a_2)\n따라서, 두 점 A와 B에 대한 벡터는 점 A에서 점 B로의 이동을 나타내고 점 B의 좌표에서 점 A의 좌표를 뺀 결과로 표현될 수 있습니다. 이처럼 벡터를 직교 좌표계에서의 순서쌍으로 정의하는 것은 매우 자연스럽습니다.\n\nn차원 공간에서 두 점 A와 B의 좌표를 각각 (a_1, a_2, ..., a_n)과 (b_1, b_{2}, ..., b_{n})라고 할 때, 벡터 \\vec{AB}는 다음과 같이 표현될 수 있다.\n\n\\overrightarrow{AB} = (b_1 - a_1, b_2 - a_2, ..., b_n - a_n)\n왜냐하면 직교 좌표계는 공간을 직각으로 교차하는 축으로 분할하며, 이 축들 사이의 각도는 90^\\circ이기 때문이죠. 이러한 성질 때문에, 각 축을 따라 움직이는 벡터의 구성 요소는 서로 독립적입니다. 즉, 한 축을 따라 움직이는 것이 다른 축을 따라 움직이는 것에 영향을 미치지 않는거죠. 따라서, 벡터의 각 구성 요소는 각 축을 따라 이동하는 거리를 나타내며, 벡터의 크기는 피타고라스 정리를 사용하기 매우 편리합니다.\n피타고라스 정리의 응용분야\n벡터의 크기는 다양한 물리량을 나타내는 데 사용됩니다. 예를 들어, 속도 벡터의 크기는 속력을 나타내고, 힘 벡터의 크기는 힘의 크기를 나타내죠. 그리고 이러한 벡터의 크기를 계산하는 것은 물리적 양을 정량화하는 데 필수적입니다. 앞으로 볼 세상을 바꾼 방정식들이 벡터를 사용하여 현실에 있는 물체의 위치, 방향을 어떻게 설명하는지 보게된다면 왜 피타고라스의 방정식이 첫번째로 선정되었는지 이해하실 수 있게 될 것입니다.\n피타고라스의 정리를 처음 본다면 단순히 직각삼각형에서의 변의 관계라고 생각할 수 있습니다. 하지만 직각삼각형은 직각이 없는 삼각형으로, 평면은 다차원 공간으로 바뀌게 되었죠. 그렇게 피타고라스 방정식은 세계지도를 만들고, 복잡한 건축물을 설계하며 심지어 위성 궤도도 분석하게 되었습니다. 중학교 때 배우는 간단한 공식이 만들어낸 아이디어 덕분에 우리는 세상을 보는 방식을 바꾸고, 현실적인 문제를 해결하게 된거죠. 오늘 수업은 여기까지."},"Ray-math/Script/함수의-연속":{"slug":"Ray-math/Script/함수의-연속","filePath":"Ray math/Script/함수의 연속.md","title":"함수의 연속에 대하여","links":[],"tags":["연속","함수","극한","연속함수"],"content":"연속의 의미\n함수의 연속이란 무엇일까요? 흔히 함수의 연속은 함수가 ‘이어져 있다’고 생각할 수 있습니다. 이 말은 틀리지 않습니다. 원래 ‘연속’이란 ‘이어진 함수’라는 개념을 수학적으로 표현하고자 하는 시도로부터 나온 개념입니다. 정의도 구멍이 난 곳이 없어야 하므로 극한값이 함숫값과 같아야 합니다.\n\\lim_{x \\rightarrow a}f(x) = f(a)\n그런데 이러한 정의는 ‘이어져 있다’라는 성질을 완벽히 표현하지는 못합니다. 예를 들어 유리수에서는 y=x를, 무리수에서는 0을 함숫값으로 갖는 함수를 생각해보겠습니다. 이 함수는 실수의 성질에 의해 자명하게 모든 점에서 이어져 있지 않습니다. 하지만 x=0에서의 극한값과 함숫값이 모두 0이므로 x=0에서 연속의 정의를 만족합니다. 따라서 x=0 근방에서 이어져있지 않음에도 불구하고 x=0에서 연속입니다.\nf(x) = \\begin{cases} x &amp; (x \\in \\mathbb{Q}) \\\\ 0 &amp; (x \\in \\mathbb{Q}^c) \\end{cases}\n많은 경우에 연속함수들은 이어져 있는 모양을 가지며, 고등학교 과정에서 다루지 않는 이러한 특이한 경우를 제외한다면 ‘이어져 있다’라는 개념을 통해 연속함수의 다양한 성질을 손쉽게 유도할 수 있습니다. 예를 들어 연속함수들에 대해서는 덧셈, 뺄셈, 곱셈을 해도 이어져 있다는 것을 어렵지 않게 이해할 수 있습니다. 나아가 분모가 0이 아니라면 나눠도 이어져 있으며, 함수만 정의된다면 역함수나 합성에 대해서도 성질이 유지됩니다.\n\n\nf(x) \\pm g(x)도 연속이다.\nf(x) \\times g(x)도 연속이다.\n\\frac{f(x)}{g(x)}도 연속이다. (단, g(x) \\not= 0)\n역함수가 존재한다면, f^{-1}(x)도 연속이다.\n함수가 잘 정의된다면, f(g(x)),~ g(f(x))도 연속이다.\n\n\n하지만 연속함수의 정의가 ‘이어져 있음’을 의미하지 않는다면 연속함수는 왜 배우는 것일까요? 개인적으로 연속함수가 갖는 가장 큰 성질은 정의를 들여다보면 나온다고 생각합니다. 바로 극한과 연속성이 서로 교환될 수 있다는 점이죠.\n예를 들어 다항함수, 지수함수, 로그함수, 삼각함수에서의 극한 문제가 나왔다고 해보겠습니다. 여러분들은 이 극한 문제를 어떻게 푸시나요? 교과서에서는 그래프를 그린 후에 x가 1로 한없이 가까워질 때, 함숫값이 어떤 값을 향해 한없이 가까워지는지 확인하며 극한값을 찾습니다.\n\\begin{align*}\n&amp;\\lim_{x \\rightarrow 1} x^2+x\\\\\n&amp;\\lim_{x \\rightarrow 1} 2^x\\\\\n&amp;\\lim_{x \\rightarrow 1} \\log_2 x\\\\\n&amp;\\lim_{x \\rightarrow 1} \\sin x \n\\end{align*}\n하지만 우리는 그렇지 않죠. 아마 무의식적으로 숫자를 대입할 것입니다. 왜 그래도 상관없을까요? 왜냐하면 다항함수, 지수함수, 로그함수, 삼각함수는 모두 연속함수이므로 함수를 무시하고 x에 바로 극한을 보낼 수 있기 때문입니다. 다시 말해 연속함수는 극한과 함수가 교환될 수 있는 거죠.\n\\begin{align*}\n&amp;\\lim_{x \\rightarrow 1} x^2+x = (\\lim_{x \\rightarrow 1}x)^2+(\\lim_{x \\rightarrow 1}x)=  1^2+1=2\\\\\n&amp;\\lim_{x \\rightarrow 1} 2^x = 2^{(\\lim_{x \\rightarrow 1}x)}=2^1 = 2\\\\\n&amp;\\lim_{x \\rightarrow 1}  \\log_2 x = \\log_2 (\\lim_{x \\rightarrow 1}  x) = \\log_2 1 =0\\\\\n&amp;\\lim_{x \\rightarrow 1} \\sin x= \\sin(\\lim_{x \\rightarrow 1}  x)= \\sin 1 = 0.8414 \\cdots\n\\end{align*}\n물론 해석학적으로는 x=a가 정의역에서의 집적점인지 따지는 과정이 더 필요하긴 하지만 여기서는 거기까지 다루지는 않겠습니다.\n연속 함수와 불연속 함수의 연산\n앞서 보았듯 연속함수끼리 연산한다면 연속함수의 성질에 의해 당연하게 연속임을 알 수 있습니다. 그런데 연속함수와 불연속 함수를 연산하면 연속일까요? 아니면 불연속일까요? 만약 일반적으로 연속이거나 불연속이라면 ‘정리’나 ‘성질’로 배웠겠지만 그렇지 않은 것을 보면 불연속 함수와의 연산을 하면 어떻게 되는지는 주어진 함수의 조건에 따라 다르다는 것을 알 수 있습니다. 그렇다면 불연속함수와 연속함수의 연산에서 연속함수가 되는지 판별하는 규칙은 없을까요? 구체적인 예시로 조건을 찾아보겠습니다. 예를 들어 다음과 같이 열린구간 (-2,~2)에서 정의된 연속함수 f(x)와 불연속 함수 g(x)가 있다고 할 때, 두 함수의 곱함수는 연속일까요?\n\n연속함수와 불연속함수의 곱셈\ng(x)는 x=0에서만 불연속이고 나머지 정의역에서는 연속이므로 두 함수를 곱했을 때 x=0을 제외하면 연속입니다. 그렇다면 0에서 연속이라는 것을 어떻게 알 수 있을까요? 가장 정석적인 방법은 정의를 이용하는 것입니다. 우선 x=0에서의 좌극한, 우극한, 함숫값을 보면 f(x)는 모두 0으로 같습니다. 반면에 g(x)는 x=0에서의 좌극한은 -1, 우극한은 1, 함숫값은 0입니다. 이때 두 함수의 곱을 물어보았으므로 곱한 결과를 보면 모두 0으로 같은 값을 갖습니다.\n\\begin{array}{c|c|c|c}\n&amp; f (x) &amp; g(x) &amp; f(x)g(x) \\\\ \\hline\nx=0+ &amp; 0 &amp; 1- &amp; 0 \\\\ \\hline\nx=0- &amp; 0 &amp; -1+ &amp; 0 \\\\ \\hline\nx=0 &amp; 0 &amp; 0 &amp; 0  \n\\end{array}\n따라서 두 함수의 곱함수 f(x) \\cdot g(x)는 연속함수입니다. 이 결과를 자세히 살펴보면 한 가지 결과를 더 얻을 수 있습니다. 생각해보면 f(x)는 연속이므로 x=0에서의 좌극한, 우극한, 함숫값이 모두 같습니다. 반면에 g(x)는 불연속이므로, x=0에서의 좌극한, 우극한, 함숫값 중 적어도 하나는 다른 값을 가집니다. 이때, 두 함수의 곱이 연속이기 위해서는 반드시 두 결괏값의 곱이 항상 같은 값을 가져야 합니다. 그렇다면 서로 다른 값에 같은 값을 곱해서 항상 같은 값을 가지려면 그 같은 값은 얼마여야 할까요? 반드시 0이어야 합니다. 따라서 g(x)가 불연속인 점에서 f(x)의 함숫값이 0이면 f(x) \\cdot g(x)는 연속입니다.\n발산하는 불연속 함수와의 곱셈\n난이도를 살짝만 올려보겠습니다. 다음과 같은 문제에서 f(x) \\cdot g(x)가 연속이게 하는 다항함수 f(x)는 어떤 특징이 있을까요?\n\n함수 g(x) = \\begin{cases} \\frac{1}{x^2 - 1} &amp; (x \\neq \\pm 1) \\\\ 2 &amp; (x = \\pm 1) \\end{cases} 에 대하여 함수 f(x) \\cdot g(x)가 모든 실수에서 연속이게 하는 다항함수 f(x)의 조건을 구해보자.\n\n앞서 배운 대로 이 문제는 곱함수의 연속성을 묻는 질문이므로 g(x)가 불연속인 x값에 대하여 f(x) = 0이라 생각할 수 있습니다. 그런데 앞선 경우에는 g(x)의 좌, 우극한값이 존재했지만, 이번 경우에는 발산하므로 f(x) = 0인 조건만으로는 부족합니다. 왜냐하면 0과 \\infty를 연산했을 때 어떤 결과가 나오는지 알 수 없기 때문입니다.\n\\begin{array}{c|c|c|c}\n&amp; f(x) &amp; g(x) &amp; f(x)g(x) \\\\ \\hline\nx=1+ &amp; 0 &amp; \\infty &amp; ? \\\\ \\hline\nx=1- &amp; 0 &amp; -\\infty &amp; ? \\\\ \\hline\nx=1 &amp; 0 &amp; 2 &amp; 0 \\\\ \n\\end{array}\n예를 들어 f(x)=x^2-1로 둔다면,\nf(x) \\cdot g(x) = \\begin{cases} 1 &amp; (x \\neq \\pm 1) \\\\ 2(x^2 - 1) &amp; (x = \\pm 1) \\end{cases}\n입니다. 이 함수는 x=1에서 극한값은 1이지만 함숫값은 0이므로 불연속입니다. 왜 이런 현상이 일어났는지 본다면 x=\\pm1에서 g(x)는 1차의 속도로 무한대로 발산하고, f(x)는 1차의 속도로 0으로 수렴하면서 두 속도가 같기에 수렴값을 가지게 되었기 때문입니다. 따라서 그 수렴값이 0이 아니므로 좌, 우 극한값과 함숫값이 일치하지 않았고, 결과적으로 연속이 아니게 된 것입니다. 따라서 두 함수의 곱이 연속 즉, 극한값도 0으로 수렴하게 만들기 위해서는 g(x)가 x=\\pm1에서 무한대로 발산하는 속도보다 더 빠른 속도로 f(x)가 0으로 수렴해야 합니다. 이를 정리하면 f(x) = (x-1)^n(x+1)^mQ(x), ~(n,~m&gt;1, n, m \\in \\mathbb{N})이라 할 수 있습니다. 만약 f(x)가 다항함수라면 n, ~m이 2 이상의 자연수이겠지만, 다항함수라는 조건이 없으면 1차보다 빠르게 0으로 수렴하게 만들어주는 함수가 모두 가능합니다.\n연속함수와 불연속함수의 합성\n다음으로 연속함수와 불연속함수를 합성하면 어떻게 될까요? 연속은 교환법칙이 성립하지 않으므로 두 가지 경우가 있습니다. f \\circ g와 g \\circ f인 경우죠. 이 두 경우에 대해 각각 연속성을 알아보겠습니다. 먼저 f \\circ g인 경우입니다. 우선 이 경우도 정의역이 x=0인 부분을 제외하면 모두 연속이므로, x=0일 때의 연속성만 알아보면 충분합니다. 우선 정석적인 방법으로 좌, 우극한값과 함숫값이 어떻게 변하는지 관찰해보겠습니다. x=0+에서의 g(x)는 1-에서 접근하고, 이 방향으로 f(x)의 극한을 보면 f(x)의 극한값은 0입니다. 곱함수에서는 특별히 강조하지 않았지만 극한을 보낼 때 주의해야 할 점은 마지막 극한값이 나오기 전까지 모든 함수가 어떻게 움직이는지, 즉 어떤 방향으로 접근하는지 항상 같이 관찰할 필요가 있습니다. 같은 방법으로 0에서의 좌극한과 우극한을 보면 모두 0이므로 두 함수의 합성함수도 연속임을 알 수 있습니다.\n그런데, 곱함수처럼 합성에서도 더 빠르게 판단할 수 있는 방법은 없을까요? f(x)는 연속이므로 앞서 연속함수의 성질에서 보았듯이 \\lim_{x \\rightarrow a} f( g(x)) = f( \\lim_{x \\rightarrow a} g(x) )를 만족합니다. 따라서 쉽게 생각해 f(g(a+))=f(g(a-))=f(g(a))이면 x=a에서 f(g(x))가 연속입니다. 예를 들어 설명하면 g(x) 그래프에서 불연속일 때의 y값들, 즉 -1,~0,~1에 대해 f(y)의 값이 모두 같은지 확인하면 연속성을 빠르게 판단할 수 있습니다.\n반대로 g \\circ f는 어떨까요? x=0에서의 연속성만 본다면, 앞선 방법과 마찬가지로 정석적인 방법으로 연속성을 따지는 것이 가장 일반적입니다.\n\\begin{array}{c|c|c}\n&amp; f (x) &amp; g(f(x)) \\\\ \\hline\nx=0+ &amp; 0 &amp; 0 \\\\ \\hline\nx=0- &amp; 0 &amp; 0  \\\\ \\hline\nx=0 &amp; 0 &amp; 0  \n\\end{array}\n그러나 모든 점에서의 연속성에 대해 빨리 판단하고 싶다면 그래프를 그려서 전체적으로 판단하면 좋습니다. 합성함수의 그래프를 따라 그린다면 f(x)는 연속이므로 g(x)가 불연속이 되는 x값을 f(x)의 치역 즉, 함숫값으로 가지지 않는다면 연속임을 판단할 수 있습니다. 예를 들어, f(x)의 치역은 1에서 0을 지나 다시 1로 이동합니다. 이를 g(x)의 정의역에 넣어 보면 f(x)=1에서 f(x)=0으로 갈 때는 연속이지만 f(x)=0인 순간 불연속이 됩니다. 그리고 f(x)=0일 때는 항상 같은 값이므로 연속이었다가, 같은 방법으로 f(x)=0에서 f(x)=1로 이동할 때 다시 불연속이므로 g(f(x))의 불연속점이 두 개라는 것을 그래프를 따라가면서 찾아낼 수 있어야 합니다.\n마무리하며\n연속함수의 개념은 수학에서 매우 중요한 역할을 합니다. 이는 단순히 함수의 ‘이어져 있음’을 의미하는 것 이상의 의미를 지닙니다. 연속함수를 통해 우리는 극한값과 함수값을 쉽게 교환할 수 있으며, 이를 이용해 복잡한 문제를 보다 간단하게 해결할 수 있습니다.\n연속함수와 불연속함수의 조합에서 나타나는 다양한 성질과 예외적인 경우들을 통해 수학의 흥미로운 측면을 발견하고, 이러한 개념들을 바탕으로 더 복잡한 문제를 해결할 수 있는 능력을 기르는 것이 중요합니다. 수학의 여러 개념들이 서로 어떻게 연결되고 상호작용하는지를 이해하는 과정에서 연속성의 개념은 중요한 역할을 합니다."},"Ray-math/Script/허수-i":{"slug":"Ray-math/Script/허수-i","filePath":"Ray math/Script/허수 i.md","title":"세상을 바꾼 방정식 5 -  허수 i","links":[],"tags":["대수학","방정식","근","음수","복소수","해","제곱근","이용","차","곱"],"content":"이차 방정식의 해법\n오늘날 우리가 외우는 근의 공식은 언제부터 있던 것일까요?\nx = \\frac{{-b \\pm \\sqrt{{b^2-4ac}}}}{{2a}}\nYBC 6967라는 이름이 붙은 이 점토판은 기원 전 1900년경에 만들어진 것으로 추정됩니다. 이 점토판은 상호 역수인 ‘igi’와 ‘igi.bi’에 대한 문제와 그 해결책을 담고 있습니다. 바빌로니아인들은 60진법을 사용했기 때문에, 이 문제에서 ‘igi’와 ‘igi.bi’의 곱은 60이며, 두 수의 차이는 7을 의미하죠.1\n\n\n\n[A reciprocal] exceeds its reciprocal by 7. What are [the reciprocal] and its reciprocal? You: break in half the 7 by which the reciprocal ex\u0002ceeds its reciprocal, and 3;30 (will come up). Multiply 3;30 by 3;30 and 12;15 (will come up). Append [1 00, the area,] to the 12;15 which came up for you and 1 12;15 (will come up). What is [the square-side of 1] 12;15? 8;30. Put down [8;30 and] 8;30, its equivalent, and subtract 3;30, the takiltum-square, from one (of them); append (3;30) to one (of them). One is 12, the other is 5. The reciprocal is 12, its reciprocal 5\n이 문제는 상호 역수가 7만큼 차이가 난다고 설명하고 있습니다. 그렇다면 이 상호 역수는 무엇일까요? 먼저, 상호 역수가 7만큼 차이나는 것을 반으로 나누면 3.5가 됩니다. 이 3.5를 제곱하면 12.25가 나옵니다. 이 값에 원래의 면적 60을 더하면 72.25가 됩니다. 이 값의 제곱근은 8.5입니다. 이제 8.5에서 3.5를 빼고, 다시 8.5에 3.5를 더하면 두 상호 역수를 찾을 수 있습니다. 하나는 12이고, 다른 하나는 5입니다. 따라서 상호 역수는 12와 5입니다.\n\n현대적인 표기법으로 YBC 6967 문제는 xy = 60, x-y = 7을 의미합니다. 다른 말로 x^2-7x-60=0이죠. 서판에는 그림이 하나도 그려져 있지 않지만 내용을 들여다 보면 제곱을 완성하기 위해 더해야 할 항이 \\frac{b^2}{4a^2}=\\frac{49}{4}=12 \\frac{1}{4}로, 그림에서의 작은 정사각형의 면적과 정확히 일치하는 것을 볼 수 있습니다. 바빌로니아 서기관들은 이러한 기하학적인 방식으로 2차 방정식을 해결했으며, 이는 오늘날 우리가 외우는 근의 공식과 같은 내용입니다.2\n\\begin{align*}\nx^2 + px = q\\\\\nx = \\sqrt{q + \\frac{p^2}{4}} - \\frac{p}{2}\n\\end{align*}\n바빌로니아의 수학자들은 매우 발전된 수학적 기술을 가지고 있었지만, 이 시기에는 0이라는 개념이 없었기 때문에, 음수나 0을 포함한 복잡한 계산을 수행할 수 없었습니다. 음수의 개념은 7세기에 인도의 수학자 브라마굽타(Brahmagupta)에 의해 처음으로 규칙이 정립되었죠. 유럽에서 음수의 문제는 19세기에 드 모르간(De Morgan)과 피콕(Peacock) 등의 수학자들이 논리적 정의를 통해 ‘산술의 법칙’을 조사할 때까지 완전히 해결되지 않았습니다.3 결과적으로 이러한 근의 공식에서 근은 길이나 양을 나타낼 수 있는 양수에서 밖에 정의되지 않았습니다.\n삼차 방정식의 \b해법\n16세기 초, 볼로냐 대학의 교수였던 Scipione del Ferro는 흔히 depressed cubic이라 불리는 이차항이 없는 삼차 방정식x^3 + ax +b = 0의 한 해를 찾는 방법을 알고있었습니다.\nx = \\sqrt[3]{-\\frac{b}{2} + \\sqrt{\\frac{b^2}{4} + \\frac{a^3}{27}}} + \\sqrt[3]{-\\frac{b}{2} - \\sqrt{\\frac{b^2}{4} + \\frac{a^3}{27}}}\n삼차 방정식의 한 해를 찾는다면 삼차 방정식은 일차 방정식과 이차방정식으로 인수분해되므로 결과적으로 삼차 방정식의 모든 근을 찾을 수 있게 된거죠. 훗날 타르탈리아(Tartaglia)와 카르다노(Cardano)는 일반적인 삼차방정식 ax^3 + bx^2 + cx + d = 0에 x = t - \\frac{b}{3a}를 대입하여 이차항이 없는 삼차 방정식을 만든 후 다시 치환을 이용해 근을 찾는 방법으로 삼차 방정식의 일반적인 해법을 알게되었습니다.\n\\begin{align*}\n&amp; ax^3 + bx^2 + cx + d = 0 \\vert_{x = t - \\frac{b}{3a}} \\\\\\\\\n\\Rightarrow &amp; \\quad a\\left(t - \\frac{b}{3a}\\right)^3 + b\\left(t - \\frac{b}{3a}\\right)^2 + c\\left(t - \\frac{b}{3a}\\right) + d = 0 \\\\\\\\\n\\Rightarrow &amp; \\quad a \\left( t^3 - 3t^2\\left(\\frac{b}{3a}\\right) + 3t\\left(\\frac{b}{3a}\\right)^2 - \\left(\\frac{b}{3a}\\right)^3 \\right) + b \\left( t^2 - 2t\\left(\\frac{b}{3a}\\right) + \\left(\\frac{b}{3a}\\right)^2 \\right) + c \\left(t - \\frac{b}{3a} \\right) + d = 0 \\\\\\\\\n\\Rightarrow &amp;  \\quad at^3 - bt^2 + \\left(\\frac{b^2}{a}\\right)t - \\frac{b^3}{27a^2} + bt^2 - \\frac{2b^2t}{3a} + \\frac{b^3}{9a^2} + ct - \\frac{bc}{3a} + d = 0 \\\\\\\\\n\\Rightarrow &amp;  \\quad at^3 + \\left(c- \\frac{b^2}{3a}\\right)t + \\left( \\frac{2b^3}{27a^2}- \\frac{bc}{3a} + d \\right)= 0\n\\end{align*}\n나아가 카르다노와 그의 제자 페라리(Ferrari)는 사차 방정식의 일반적인 해법까지 찾아냅니다. 이와 같은 근의 공식은 방정식의 해를 찾는 데 있어서 중요한 도구입니다.\nax^4+bx^3+cx^2+dx+e=0\n함수나 기하학적 도구 없이 오로지 방정식의 계수들과 사칙연산 그리고 제곱근만을 가지고 근을 찾아낼 수 있기 때문이죠. 다양한 분야에서 문제를 해결하기 위해 방정식의 근을 찾을 때 근의 공식은 시간과 노력을 크게 절약해주는 효율적인 도구가 되었습니다.\n그러나 이러한 삼차 방정식의 해법에는 큰 문제가 하나 있었습니다. 예를 들어 간단한 형태의 삼차 방정식 x^3-6x+4=0의 근을 찾는다고 해보겠습니다. 먼저 이 방정식은 정수로 쉽게 인수분해 되므로 우리는 어렵지 않게 x=2가 근이 된다는 것을 알 수 있습니다.\nx^3-6x+4 =(x-2)(x^2+2x-2)\n반면에 근의 공식에 계수들 a=-6, b=4을 대입하면 다음과 같습니다.\n\\begin{align*}\nx &amp;= \\sqrt[3]{-\\frac{4}{2} + \\sqrt{\\frac{4^2}{4} + \\frac{(-6)^3}{27}}} + \\sqrt[3]{-\\frac{4}{2} - \\sqrt{\\frac{4^2}{4} + \\frac{(-6)^3}{27}}}\\\\\n&amp;= \\sqrt[3]{-2 + \\sqrt{-4}} + \\sqrt[3]{-2 - \\sqrt{-4}}\n\\end{align*}\n앞서 소개한 것과 같이 당시에는 음수에 대한 견해가 분명하지 않았습니다. 고대부터 음수의 문제를 실제로 다루지 않았죠. 방정식의 근이라는 것은 기하학적 아이디어에 기반을 두고 있었으므로 길이, 면적, 부피처럼 기하학적 구성의 결과로 반드시 양수여야 했습니다. 따라서 일부 학자들은 음수가 “방정식의 교리를 어둡게 하고, 그 자체가 명백하고 단순한 것을 불명확하게 한다”라고 말했습니다. 심지어 음수가 존재하지 않는다고 주장 하기까지 했죠.3 음수는 존재하지 않는다고 생각했던 시기이기에 음수가 해가 되는 식들은 의미가 없다는 관점이 상당히 힘을 얻었습니다. 당연히 제곱근 안에 음수가 들어간다는 것은 상상도 할 수 없는 일이었습니다. 하지만 삼차 방정식의 해에 대한 논란이 일어나며 많은 사람들이 이해할 수 있는 독립적인 대수학 책이 필요하다고 느낀 봄벨리(Bombelli)는 자신의 책”L’algebra parte maggiore dell’aritmetica divisa in tre libri”을 통해 대수학에 대한 포괄적인 소개 뿐만 아니라 복소수의 산술을 처음으로 다루게 됩니다.4\n\n169페이지 하단에서 볼 수 있듯이, Bombelli는 특정한 복소수를 곱할 때의 규칙을 제시했습니다. 이 규칙은 다음과 같이 해석됩니다.\n\n\n양수에 음수의 양의 제곱근을 곱하면 음수의 양의 제곱근이 됩니다.\n1(\\sqrt{-1}) = \\sqrt{-1}\n음수에 음수의 양의 제곱근을 곱하면 음수의 음의 제곱근이 됩니다. (-1)(\\sqrt{-1}) = -\\sqrt{-1}\n양수에 음수의 음의 제곱근을 곱하면 음수의 음의 제곱근이 됩니다. 1(-\\sqrt{-1}) = -\\sqrt{-1}\n음수에 음수의 음의 제곱근을 곱하면 음수의 양의 제곱근이 됩니다. (-1)(-\\sqrt{-1}) = \\sqrt{-1}\n음수의 양의 제곱근에 음수의 양의 제곱근을 곱하면 음수가 됩니다. (\\sqrt{-1})(\\sqrt{-1}) = -1\n음수의 양의 제곱근에 음수의 음의 제곱근을 곱하면 양수가 됩니다. (\\sqrt{-1})(-\\sqrt{-1}) = 1\n음수의 음의 제곱근에 음수의 양의 제곱근을 곱하면 양수가 됩니다. (-\\sqrt{-1})(\\sqrt{-1}) = 1\n음수의 음의 제곱근에 음수의 음의 제곱근을 곱하면 음수가 됩니다. (-\\sqrt{-1})(-\\sqrt{-1}) = -1\n\n\n이 책에서는 복소수를 곱하는 규칙도 상세히 설명되어 있는데, 예를 들면 양수에 음수의 양의 제곱근을 곱하면 음수의 양의 제곱근이 되고, 음수의 양의 제곱근에 음수의 양의 제곱근을 곱하면 음수가 된다는 식입니다. 봄벨리의 연산 방법에 따라 앞선 식을 다시 보도록 하겠습니다.\n\\begin{align*}\n(1-i)^3 = 1 - 3i + 3i^2 - i^3 = 1 - 3i - 3 + i = -2+2i\\\\\n(1+i)^3 = 1 + 3i + 3i^2 + i^3 = 1 + 3i - 3 - i = -2-2i\n\\end{align*}\n\\begin{align*}\nx &amp;= \\sqrt[3]{-2 + 2i} + \\sqrt[3]{-2 - 2i}\\\\\n&amp;= (1-i) + (1+i)\\\\\n&amp;= 2\n\\end{align*}\n1-i와 1+i를 각각 세제곱하면 각각 -2+2i와 -2-2i가 됩니다. 삼차 방정식의 근의 공식에 따라 x의 각 제곱근 안에 이 결과를 대입하면 우리가 사용하는 연산의 결과를 유지한 채로 x=2라는 결과를 얻을 수 있습니다. 이렇게 봄벨리는 복소수를 곱할 때의 다양한 경우를 상세하게 규정했고, 이는 당시에는 상당히 혁신적인 접근이었습니다. 존재하지 않아 쓸모 없었던 것처럼 보이던 ‘가상의 수’를 이용해 의미 있는 결과를 도출해냈기 때문이죠.\n일반적으로 복소수는 a + bi 형태로 표현되며, 여기서 a는 실수 부분, b는 허수 부분, i는 \\sqrt{-1}입니다. 중학교 때까지만 해도 모든 수는 제곱 하면 양수라고 했는데 제곱 하면 음수가 되는 i의 등장은 처음에 이해하기 어렵고 인위적으로 느껴질 수 있습니다. 하지만 앞서 본 내용과 같이 복소수는 방정식의 근을 매우 합리적이고 단순하게 찾을 수 있게 도와줍니다. 실수 범위에서는 불가능한 \\sqrt{-1}과 같은 표현을 이용하면 근을 찾는 공식과 연산 방법을 유지한 채로 대수적으로 생길 수 있는 모든 문제를 해결하게 된거죠. 단순함을 추구하는 수학의 본질과 대수적 일관성을 유지할 수 있게 된 것입니다. 그리고 이러한 결과로부터 수학자들은 새로운 사실을 발견하게 됩니다.\nx^n=1(roots of unity)\n\\begin{array}{|c|c|c|}\n\\hline\nn &amp; \\text{equation}&amp;\\text{Real Roots} \\\\\n\\hline\n1 &amp; x-1 &amp; 1 \\\\\n\\hline\n2 &amp; x^2-1 = (x-1)(x+1) &amp;1, -1 \\\\\n\\hline\n3 &amp; x^3-1 =(x-1)(x^2+x+1) &amp;1 \\\\\n\\hline\n4 &amp; x^4-1 = (x-1)(x+1)(x^2+1)&amp;1, -1 \\\\\n\\hline\n5 &amp; x^5-1 = (x-1) (1 + x + x^2 + x^3 + x^4)&amp;1 \\\\\n\\hline\n6 &amp; x^6-1 = (x - 1)(x + 1) (x^2 - x +1) (x^2 + x + 1)&amp;1, -1 \\\\\n\\hline\n\\vdots &amp; \\vdots&amp; \\vdots \\\\\n\\hline\n\\end{array}\n실수에서 x^n=1을 만족하는 x의 값들을 정리해보면 다음과 같습니다. x=1일 때, 자명한 근을 포함하며  n이 홀수일 때는 1개, n이 짝수일 때는 2개로 규칙적으로 반복됩니다. 그런데 복소수의 등장과 함께 이 규칙에 조금 다른 점이 보이게 됩니다.\n\\begin{align*}\nx^3 - 1 &amp;= (x - 1)(x^2 + x + 1) = 0\\\\\n&amp;\\Rightarrow x = 1, \\frac{-1 + i\\sqrt{3}}{2}, \\frac{-1 - i\\sqrt{3}}{2}\n\\end{align*}\nx^3-1=0을 인수 분해 한 후 근의 공식을 이용하여 복소수까지 확장한 해를 찾아보면 근이 총 3개가 발견됩니다. 같은 방법으로 x^4-1 = 0도 복소수까지 확장하여 해를 찾아보면 근이 총 4개가 발견됩니다.\n\\begin{align*}\nx^4 - 1 &amp; = (x - 1)(x + 1)(x^2 + 1) = 0\\\\\n&amp; \\Rightarrow x = 1, -1, i, -i\n\\end{align*}\n복소수까지 확장해 근을 찾으면 n차 방정식은 n개의 해를 갖는 것과 같이 보이죠. 이러한 특성을 더 잘 이해하기 위해 복소수를 좌표평면상에 표시해보겠습니다. 복소수를 좌표평면에 표시하는 방법은 매우 쉽고 직관적입니다. 복소수 a+bi는 좌표평면에서 점 (a, b)로 표현됩니다. a는 실수 부분이고 b는 허수 부분이죠. 이렇게 표현하면 두 복소수의 덧셈은 실수부는 실수부끼리 허수부는 허수부끼리 연산이 되므로 좌표평면상의 덧셈으로 표현할 수 있습니다.\n\\begin{gather*}\\\\\n(a + bi) + (c + di) = (a+c)+(b+d)i \\\\\n(a, b) + (c, d) = (a+c, b+d)\n\\end{gather*}\n그리고 복소수의 곱셈은 실수부는 벡터의 내적꼴, 허수부는 분수 덧셈에서의 분자 꼴로 나오며 대수적 규칙을 유지합니다. 이는 벡터의 길이와 각도를 고려한 연산으로 표현되죠.\n(a+bi) \\times (c+di) = (ac - bd) + (ad + bc)i\n예를 들어, z_1 = 1 + i와 z_2 = \\sqrt3 + i라고 할때,\n(1+i)(\\sqrt3+i) = (\\sqrt3 - 1) + (\\sqrt3 +1)i\n로 계산할 수도 있지만, 극좌표를 이용해 나타내면 z_1 = 1 + i = \\sqrt{2} e^{\\frac{i\\pi}{4}}, z_2 = \\sqrt{3} + i = 2 e^{\\frac{i\\pi}{6}}이므로 두 수의 곱을\n\\begin{align*}\nz_1 \\times z_2 &amp;= \\sqrt{2} \\times 2 \\times e^{i(\\frac{\\pi}{4} + \\frac{\\pi}{6})}\\\\\n&amp;= 2\\sqrt{2} \\times e^{i\\frac{5\\pi}{12}} \n\\end{align*}\n로 원점으로부터의 길이와 동경을 이용해 간단히 표현할 수 있습니다.\n이러한 방식으로 복소수의 대수적 연산을 좌표평면과 연관지어 정의하면, 복소수가 단순한 숫자 이상의 의미를 가지며 다양한 수학적 문제를 풀거나 이해하는 데 도움을 줍니다. 이제 오일러 공식을 이용해 x^n=1을 만족하는 점들을 좌표평면 위에 표시해보겠습니다.5 오일러 공식은 다음과 같이 주어집니다.\ne^{i\\theta} = \\cos(\\theta) + i\\sin(\\theta)\n\\theta = 2\\pi를 대입하면 e^{i 2\\pi} = 1이 되므로 x^n = 1을 만족하는 x는 다음과 같이 표현할 수 있습니다.\n\\begin{align*}\nx^n &amp; = e^{i 2\\pi k}\\\\\n\\Rightarrow x_k &amp;= e^{\\frac{2\\pi i k}{n}}\\\\\n\\Rightarrow x_k &amp;= \\cos\\left(\\frac{2\\pi k}{n}\\right) + i \\sin\\left(\\frac{2\\pi k}{n}\\right)\n\\end{align*}\n따라서 x^n=1의 근 들은 (1,~0)을 고정한 후 단위원을 n등분 한 점들 이라는 것을 알 수 있습니다.\n\\begin{array}{|c|c|}\n\\hline\nn &amp; \\text{Complex Roots} \\\\\n\\hline\n1 &amp; 1 \\\\\n\\hline\n2 &amp; 1, -1 \\\\\n\\hline\n3 &amp; 1, -\\frac{1}{2} + \\frac{\\sqrt{3}}{2}i, -\\frac{1}{2} - \\frac{\\sqrt{3}}{2}i \\\\\n\\hline\n4 &amp; 1, i, -1, -i \\\\\n\\hline\n5 &amp; 1, \\frac{\\sqrt{5} + 1}{4} + \\frac{\\sqrt{10 - 2\\sqrt{5}}}{4}i, \\frac{\\sqrt{5} - 1}{4} + \\frac{\\sqrt{10 + 2\\sqrt{5}}}{4}i,\n\\frac{\\sqrt{5} - 1}{4} - \\frac{\\sqrt{10 + 2\\sqrt{5}}}{4}i, \\frac{\\sqrt{5} + 1}{4} - \\frac{\\sqrt{10 - 2\\sqrt{5}}}{4}i \\\\\n\\hline\n6 &amp; 1, -1, \\frac{1}{2} + \\frac{\\sqrt{3}}{2}i, -\\frac{1}{2} + \\frac{\\sqrt{3}}{2}i, \\frac{1}{2} - \\frac{\\sqrt{3}}{2}i, -\\frac{1}{2} - \\frac{\\sqrt{3}}{2}i \\\\\n\\hline\n\\vdots &amp; \\vdots \\\\\n\\hline\n\\end{array}\n결과적으로 x^n=1을 만족하는 점들은 원을 n등분 하여 나오는 점들이므로 n개의 해를 가집니다. 그렇다면 이 성질은 x^n=1뿐만 아니라 더 복잡한 방정식으로 확장할 수 있을까요?\n대수학의 기본정리 (Fundamental Theorem of Algebra)\n수학에서 기본 정리라는 용어는 세부 분야의 핵심적인 원칙이나 규칙을 의미합니다. 흔히 고등학교 교과서에 있는 미적분학의 기본정리가 미분과 적분이 본질적으로 ‘역연산’ 관계에 있다는 것을 보여주는 것처럼 기본 정리는 해당 학문의 기초를 이루며, 다양한 문제 해결과 이론 개발에 있어 중추적인 역할을 합니다.\n\\int_a^b f&#039;(t)dt = f(b)-f(a)\n대수학은 산술의 일반화로 시작되었으며 오늘날에 있어서는 수와 수 사이의 관계, 구조, 변화, 그리고 이러한 개념들을 일반화하고 추상화하는 수학의 한 분야입니다. 고등학교 과정까지만 본다면 쉽게 말해 미지수를 이용해 방정식을 푸는 것을 의미하죠. 그리고 고등학교 1학년 때 어렴풋이 들었던 기억이 나는 정리가 있습니다. 바로 n차 방정식은 복소수 상에서 (중복을 허용하여) n개의 해를 갖는다는 거죠. 별거 아닌거 같지만 참 신기한 성질입니다.\n\\begin{align*}\nP(x) = a_n x^n + a_{n-1} x^{n-1} + \\cdots + a_1 x + a_0 ,~a_n \\neq 0,~a_n \\in \\mathbb{C}\n\\end{align*}\nn차 방정식이라고 하지만 근이 n보다 많거나 적을 수도 있는데 그렇지 않고 정확하게 n개만 갖는다는 것이죠. 복소수는 이처럼 방정식의 해를 일관되게 만들어 주기 때문에 방정식의 근을 찾는 대수학이 한층 깔끔해집니다. 그렇다면 이 사실을 어떻게 알게 되었을까요?\n증명의 아이디어\n대수학의 기본정리는 대수학에서 중요한 위치를 차지하고 있지만, 아이러니하게도 이를 증명하기 위해서는 실수의 완비성과 같은 해석학적 개념이 필요합니다. 그래서 정말 신기하게도 이 증명은 복소해석학과 위상을 이용해 증명됩니다. 최초의 증명은 달랑베르(d’Alembert)에 의해 시도되었으나 완전하지 않았습니다. 이후 오일러, 라그랑주, 라플라스 등이 증명을 시도했으나, 그들의 증명도 불완전했습니다. 결국 가우스가 박사학위 논문에서 이전의 증명들에서 틀린점을 반박하고 이후 몇 가지 증명을 더 내놓으며 최초의 증명은 가우스가 증명했다고 알려져 있습니다.6\n\n가우스의 아이디어는 다음과 같습니다. 예를들어 삼차 방정식 f(z) = 4z^3+3z^2+2z+1이 있다고 해보겠습니다. 복소 함수는 2차원 복소평면에서 2차원 복소평면으로 가는 함수입니다. 따라서 함수가 4차원에 있어 한 눈에 보기 어려우므로 정의역을 제한하면서 관찰하겠습니다. 우선 정의역을 e^{iz} 즉, 반지름의 길이가 1인 단위원의 모든 값의 함숫값을 보겠습니다. \\theta가 0 \\le \\theta \\le 2\\pi일 때, 함숫값을 보면 좌측의 점이 단위원을 한 바퀴 돌 때, 우측의 함숫값은 다음과 같은 궤적을 그리면서 회전하는 것을 볼 수 있습니다. 이때 자세히 보시면 점이 복소함수의 궤적을 따라 움직이면서 원점을 기준으로 세바퀴 회전하는 것을 볼 수 있습니다.\n\\because  z = R \\cos \\theta + i R \\sin \\theta \\Rightarrow z^n = R^n \\cos n\\theta + i R^n \\sin n\\theta\n방정식의 해라는 것은 함숫값이 \\mathbb{0}이되게 하는 정의역을 의미하는데 복소 함수에서 오른쪽 그래프가 \\mathbb{0} 즉, 원점(0,~0)을 지나지 않으므로 r=1에서는 해를 갖지 않는 것을 알 수 있습니다.\n그렇다면 이 함수는 복소수에서 해를 갖지 않는 것일까요? 그렇지 않습니다. 저는 정의역인 복소 평면 전체 중 단지 r=1인 단위원에서 밖에 해를 조사하지 않았습니다. 모든 정의역 조사하기 위해서는 복소 평면 전체를 덮어야하므로 우리는 r의 값을 조정해나가면서 정의역 전체에 대해 함숫값이 어떻게 변하는지 관찰해보겠습니다.\nr의 값이 1보다 크다면 앞서 본 원점을 둘러싸고 있는 함수의 궤적은 점점 커지며, 반대로 r의 값이 1보다 작다면 함수의 궤적은 점점 작아집니다. 만약 극단적으로 r=0이라면 z=0이므로 f(0)=1이 됩니다. 그런데 이러한 복소함수는 r의 값이 변함에 따라 연속적으로 변하게됩니다. 그렇다면 원점을 세 번 둘러쌓은 이 그래프는 (1,0)으로 수렴해감에 따라 적어도 3번은 반드시 원점을 지나쳐야할 것입니다. n차 방정식은 n보다 많은 해를 가질 수는 없으므로 결과적으로 삼차 방정식은 복소수 상에서 3개의 근을 갖는 것을 알 수 있습니다.(그리고 이 함수를 보면 x축에 대해 대칭이므로 근은 반드시 켤레로 생겨야한다는 것도 시각적으로 확인할 수 있습니다.)\n그런데 삼차방정식이라고해서 세 번 지나치는 것을 모두 확인할 필요는 없습니다. 왜냐하면 대수학의 기본정리는 다음과 같이 적을 수도 있기때문이죠. 다른말로 한 점에서 영점을 갖는 것만 보여도 충분합니다.\n\n모든 상수가 아닌 \\mathbb{C}[x]의 다항식은 \\mathbb{C} 안에 해를 가진다.\n\n왜냐하면 n차 방정식 f(z)가 z_1에서 영점 즉, 근을 갖는다면 다음과 같이 적을 수 있습니다.\nf(z)=(z-z_1)Q_1 (z)\n여기서 Q_1(z)는 (n-1)차 방정식이죠. 같은 논리를 Q_1(z)에 적용하면 적당한 복소수 z_2가 존재해서 (n-2)차 방정식 Q_2(z)에 대해 다음과 같이 적을 수 있습니다.\nf(z)=(z-z_1)(z-z_2)Q_2 (z)\n이런 방법으로 계속한다면 결과적으로 n차 방정식은 n개의 해를 가진다는 것을 보일 수 있습니다.\nf(z)=(z-z_1)(z-z_2)\\cdots(z-z_n)\n가우스의 증명\n가우스는 먼저 방정식에서 계수가 실수여도 충분하다는 것을 증명하였습니다. 왜냐하면 f(z)가 복소수 근을 갖고 있다는 것을 증명하면 모든 계수들을 복소수인 경우에도 여전히 복소수 근을 가지기 때문이죠.\nf(z)=a_0 + a_1z + a_2z^2 + \\cdots + a_n z^n\n만약 f(z)의 계수가 모두 복소수라고 가정해보겠습니다. 그리고 켤레 복소수를 이용해 함수를 다음과 같이 정의하면\n\\bar f(z) = \\overline {a_0} + \\overline {a_1}z + \\overline {a_2}z^2 + \\cdots + \\overline{a_n} z^n\n새로운 함수 g(z)는 다음 식을 만족합니다.\ng(z)=f(z) \\bar{f}(z)= f(z)\\overline{{f}(\\bar{z})}\n따라서 g(z)는 실수 계수를 갖고 있으며 이 방정식이 근 z_0를 갖는다면\ng(z_0)=f(z_0) \\bar{f}(z_0)= f(z_0)\\overline{{f}(\\overline{z_0})} = 0\nf는 z_0 또는 \\overline{z_0}가 근이 됩니다. 그러므로 f를 간단하게 실수계수 다항식이라 하겠습니다. 가우스의 실제 증명은 실수부와 허수부를 따로 관찰하며 이 두함수가 모두 0이 되는 지점이 교차해야한다고 했습니다.  복소수의 절댓값을 \\vert z \\vert =r로 놓은 다음 r이 충분히 크면 각각의 곡선들은 원 \\vert z \\vert =r과 2n개의 점에서 만나고,  이 곡선들이 만나는 점들이 서로 교차함을 보였죠. 즉, 한 곡선이 원과 만나는 두 개의 점 사이에는 다른 곡선의 점이 원과 만남을 보인 것입니다.\n\n그리고 원 \\vert z \\vert  \\le r 이면 반드시 다시 나온다는 것을 증명하지 않고 주장했죠. 가우스는 각주에서 “이에 대한 의심을 제기한 사람이 없다고 알고 있다. 그러나 만약 누군가 그렇게 요구한다면, 나중에 의심의 여지가 없는 증명을 제공하겠다”고 적었습니다. 하지만 실제로 이 부분까지 증명하지는 않았죠.(자세한 증명은 참고자료를 보시길 추천드립니다.) 7\n리우빌의 정리(Liouville’s theorem)를 이용한 증명\n오늘날 대수학의 기본정리는 복소해석학을 이용해 조금 더 쉽게 증명할 수 있습니다. 리우빌의 정리란 복소함수가 전체 복소평면에서 유한한 값을 가지려면 그 함수는 상수 함수밖에 없다는 것을 알려주는 정리입니다. 이 내용으로 어떻게 대수학의 기본정리를 증명할 수 있을까요? 차근차근 보도록 하죠.\n증명\nf가 전해석 함수이고 복소 평면에서 유계이면, f(z)는 복소 평면 전체에 상수이다.\n우선 복소함수 f는 적당한 조건에서 코시부등식을 만족합니다.\n중심이 z_0이고 반지름의 길이가 R인 양의 방향의 원 C_r과 그 안에서 해석적이라 할때, C_R에서 \\vert f(z) \\vert의 최댓값을 M_R이라 하면\n\\begin{align*}\n&amp;f^{(n)}(z_0)=\\frac{n!}{2\\pi i} \\int_{C_R} \\frac{f(z)}{(z-z_0)^{n+1}}dz \\quad (n=1, ~2, ~\\cdots)\\\\\n\\Rightarrow &amp; \\lvert f^{(n)}(z_0) \\rvert = \\frac{n!}{2\\pi} \\cdot \\frac{M_R}{R^{n+1}}2\\pi R \\quad (n=1, ~2, ~\\cdots)\\\\\n\\Rightarrow &amp;\\lvert f^{(n)}(z_0) \\rvert = \\frac{n! M_R}{R^{n}} (n=1, ~2, ~\\cdots)\n\\end{align*}\n이제 f가 전해석함수이고 유계라면 코시부등식에 의해 임의로 선택한 z_0와 R에 대하여 n=1일 때, 다음 식이 성립합니다.\n\\lvert f^\\prime(z_0) \\rvert \\le \\frac{M_R}{R}\n게다가 f가 유계라는 조건에 의해 R에 의한 값이 아닌 상수 M이 존재하여 식을 더 간단하게 표현할 수 있습니다.\n\\lvert f^\\prime(z_0) \\rvert \\le \\frac{M}{R}\n앞서 말했든 임의의 R에 대하여 이 식이 성립해야하는데 R은 충분히 커질 수 있으므로 결과적으로 f&#039;(z_0)=0이어야 합니다. 또 z_0도 임의의 점이므로 복소 평면 어디서나 f&#039;(z)=0임을 알 수 있습니다. 따라서  f(z)는 복소평면 전체에서 상수입니다.\n이제 앞서 본 리우빌 정리의 성질을 이용해 대수학의 기본정리를 증명해보겠습니다. 앞서 설명했듯이 n차 방정식에 대하여 근 하나만 찾을 수 있다면 같은 방법으로 n-1차에도 근이 있음을 보일 수 있으므로 증명이 완료됩니다.\nn(n \\ge 1)차 다항함수 f(z)에는 적어도 한 개의 영점이 있다. 즉 적어도 한 개의 점 z_0이 존재하여 f(z_0)=0이다.\nf(z)=a_0 + a_1 z + a_2 z^2 + \\cdots + a_n z^n \\quad (a_n \\not= 0)\n우선 f(z)가 근을 갖지 않는다고 가정해보겠습니다. 따라서 f(z) \\not= 0이므로 몫함수 \\frac {1}{f(z)}를 정의할 수 있으며 이 또한 전해석 함수가 됩니다. 그러면 복소함수의 성질에 의해 충분히 큰 양수 R에 대하여  \\vert z \\vert &gt; R일 때, 다음이 성립합니다.\n\\frac{1}{f(z)}&lt; \\frac{2}{ \\vert a_n \\vert R^n }\n따라서 \\frac{1}{f(z)}은 \\vert z \\vert  \\le R의 밖 구역에 갇혀있게 됩니다. 그런데 \\frac{1}{f(z)}은 닫힌 원판에서 연속이므로, 그 곳에서 유계가 됩니다. (쉽게 생각해 \\lim_{|z| \\rightarrow \\infty} \\vert f(z) \\vert =  \\infty이므로 \\lim_{|z| \\rightarrow \\infty} \\vert {\\frac{1}{f(z)}} \\vert =  0이다.) 그러므로 \\frac{1}{f(z)}은 평면 전체에서 유계가 되며 앞서 본 리우빌 정리에 의해 \\frac{1}{f(z)}은 상수함수가 됩니다. 그 말은 f(z)도 상수 함수여야한다는 건데 이는 모순이므로 결과적으로 f(z)는 근을 갖게 됩니다.\n사실 이 증명이 유일한 증명은 아닙니다. 코시-구르사 정리를 이용한 방법도 있고,8 로쉐(Rouchè)의 정리를 이용해 직접적으로 n차 방정식에서 정확히 n개의 해를 가짐을 보이는 방법도 있죠.9 오늘날에는 대수적 아이디어만을 사용하여 증명하는 방법10도 있습니다만 굳이 쉬운 방법을 이용해도 충분한데 어려운 방법으로 돌아지는 않겠습니다.\n에필로그\n사실 전 처음 i에 대해 배웠을 때 별로 큰 생각이 없었습니다. 그냥 필요하니까 만들었겠지라는 생각으로 연산만 주구장창했었죠. 대학에서 크로네커 정리를 통해 근이 반드시 존재하는 체로 확장하는 방법이나 복소해석학에서 리우빌 정리를 배웠을때도 그 정리 하나의 함의만 보고 증명을 외우는데 급급했습니다. 학교에 다닐 때는 당장 배워야 할 내용이 너무나 많다는 핑계로 왜 그래야만 하는가에 대한 질문은 하지 않았던 것 같습니다. 오히려 이번 기회로 저도 역사적 맥락과\u001d학교에서 왜 이러한 순서대로 교육을 진행했는지 조금이나마 더 잘 알게 되었고 학생들에게 해주고 싶은 이야기들이 늘어난 것 같아 뿌듯합니다. 여러분들도 조금이나마 i를 도입하기 위한 수학자들의 논의가 친숙해지셨기를 바랍니다.\n\nLet n denote the degree of f. Without losing generality, assume the leading coefficient of f is 1, thus f(z) = z^n + \\sum_{m=0}^{n-1} c_m z^m.\nDefine R = 1 + \\sum_{m=0}^{n-1} |c_m|. By this choice of R, when |z| &gt; R, f(z) \\neq 0. Assuming |z| \\geq R and since R \\geq 1, |z^a| \\leq |z^b| whenever 0 &lt; a &lt; b.\nThe chain of inequalities follows:\n\\left|\\sum_{m=0}^{n-1} c_m z^m \\right| \\leq 1 + \\sum_{m=0}^{n-1} |c_m||z^m| \\leq |z^{n-1}| + \\sum_{m=0}^{n-1} |c_m||z^{n-1}| \\leq R|z^{n-1}| \\leq |z^n|\nPolynomials in z are entire, and hence, are analytic functions in the disk |z| \\leq R. So, Rouché’s theorem can be applied here. Given that \\left|\\sum_{m=0}^{n-1} c_m z^m \\right| \\leq |z^n| for |z| \\geq R, Rouché’s theorem implies that z^n and f(z) have the same number of zeroes in the disk |z| \\leq R.\nSince z^n has a single zero of multiplicity n at z = 0, which counts as n zeroes, f(z) must also have n zeroes counted with multiplicity in the disk |z| \\leq R. By the choice of R, it’s concluded that f has exactly n zeroes in the complex plane.\n\nIn the given scenario, we begin with a polynomial f(x) \\in \\mathbb{C}[x] and a root a of f(x) in some extension of \\mathbb{C}. We then introduce K as a Galois closure of \\mathbb{C}(a) over \\mathbb{R} and define G as \\operatorname{Gal}(K/\\mathbb{R}). Further, H is a Sylow 2-subgroup of G, and L = K^{H} is the fixed field of H in K.\nBy the Fundamental Theorem of Galois Theory, we establish the equality [L:\\mathbb{R}]=[G:H], which is an odd number. It follows that L can be expressed as \\mathbb{R}(b) for some b \\in L. Thus, the minimal polynomial m_{b,\\mathbb{R}}(x) is irreducible over \\mathbb{R} and of odd degree. This implies that the degree must be 1, leading to L = \\mathbb{R}, and hence G = H, a 2-group.\nNow, G_{1} = \\operatorname{Gal}(K/\\mathbb{C}) is also a 2-group. If G_{1} \\neq 1, we choose G_{2} \\leq G_{1} such that [G_{1}:G_{2}] = 2, and set M = K^{G_{2}}, leading to [M:\\mathbb{C}] = [G_{1}:G_{2}] = 2. However, by the quadratic formula, any polynomial of degree 2 over \\mathbb{C} has roots in \\mathbb{C}, making the existence of such a field M impossible. This contradiction implies G_{1} = 1, and therefore K = \\mathbb{C} and a \\in \\mathbb{C}, completing the proof.\n\nThis markdown content encapsulates the core aspects of the proof utilizing Rouché’s theorem to demonstrate the Fundamental Theorem of Algebra.\nFootnotes\n\n\nNew Light on Plimpton 322 ↩\n\n\nBabylonian Quadratics ↩\n\n\nThe History of Negative Numbers ↩ ↩2\n\n\nMathematical Treasure: Raphael Bombelli’s L’algebra ↩\n\n\nwww.geogebra.org/classic/e565uncb ↩\n\n\nFundamental theorem of algebra - Wikipedia ↩\n\n\nOn Gauss’s First Proof of the Fundamental Theorem of Algebra ↩\n\n\nYet Another Proof of the Fundamental Theorem of Algebra. ↩\n\n\nproof of fundamental theorem of algebra (Rouché’s theorem) (planetmath.org) ↩\n\n\nA PURELY ALGEBRAIC PROOF OF THE FUNDAMENTAL THEOREM OF ALGEBRA ↩\n\n\n"},"Ray-math/Shorts/1만-더했을-뿐인데":{"slug":"Ray-math/Shorts/1만-더했을-뿐인데","filePath":"Ray math/Shorts/1만 더했을 뿐인데.md","title":"1만 더했을 뿐인데","links":[],"tags":["적분"],"content":"\\frac{1}{x^3}의 적분\n\\frac{1}{x^3}을 적분하려면, 기본적인 적분 공식(\\int x^n dx = \\frac{x^{n+1}}{n+1}+c)을 사용해 비교적 간단하게 적분할 수 있습니다.\n\\begin{align*}\n\\int \\frac{1}{x^3} dx &amp;= \\int x^{-3} dx \\\\\n&amp;= \\frac{x^{-2}}{-2} + C\\\\\n&amp;= -\\frac{1}{2x^2} + C\n\\end{align*}\n\\frac{1}{x^3+1}의 적분\n그렇다면 분모에 1을 더해서 적분하면 어떻게 될까요?\n\\int \\frac{1}{x^3 + 1} dx\n우선 \\frac{1}{x^3+1}을 부분 분수로 바꾸어준 후 각각의 항을 적분해보겠습니다.\n\\frac{1}{x^3 + 1} = \\frac{1}{2}\\cdot \\frac{1}{x^2 - x + 1} - \\frac{1}{6} \\cdot\\frac{2x-1}{x^2 - x + 1} + \\frac{1}{3}\\cdot\\frac{1}{x + 1}\n첫번째 항은 분모를 이차항의 완전제곱식으로 바꾼 후 삼각치환을 이용해 적분하고,\n\\begin{align*}\n\\frac{1}{2}\\int \\frac{1}{x^2 - x + 1}dx &amp;= \\frac{1}{\\sqrt{3}} \\tan^{-1}\\left(\\frac{2x - 1}{\\sqrt{3}}\\right) + C\\\\\n\\\\\n\\int \\frac{1}{x^2 - x + 1} dx &amp; = \\int \\frac{1}{u^2 + \\frac{3}{4}} du \\\\\n&amp;= \\frac{2}{\\sqrt{3}} \\tan^{-1}\\left(\\frac{2u}{\\sqrt{3}}\\right) + C \\\\ \n\\because\\int \\frac{1}{a^2 + x^2} dx &amp;= \\frac{1}{a} \\tan^{-1}\\left(\\frac{x}{a}\\right) + C  \\\\\n\\end{align*}\n두번째 항은 분모에 대해 치환적분합니다.\n\\begin{align*}\n\\int -\\frac{1}{6} \\cdot\\frac{2x-1}{x^2 - x + 1} dx &amp;= -\\frac{1}{6}\\int \\frac{2x-1}{x^2 - x + 1}dx \\\\\n&amp;= -\\frac{1}{6} \\ln\\vert x^2 - x + 1 \\vert + C\\\\\n\\because (x^2-x+1)&#039; &amp;=2x-1, \\int\\frac{1}{x}dx=\\ln x\n\\end{align*}\n마지막항을 로그적분법으로 적분한 후 식을 합쳐주면\n\\begin{align*}\n\\int \\frac{1}{3}\\cdot\\frac{1}{x + 1} dx &amp;= \\frac{1}{3}\\int \\frac{1}{x + 1} dx \\\\\n&amp;= \\frac{1}{3} \\log \\vert x + 1 \\vert + C\n\\end{align*}\n이렇게 적분해낼 수 있습니다.\n\\int \\frac{1}{x^3 + 1}dx = \\frac{1}{6} \\left(-\\ln(x^2 - x + 1) + 2 \\ln(x + 1) + 2 \\sqrt{3} \\tan^{-1}\\left(\\frac{2x - 1}{\\sqrt{3}}\\right)\\right) + C\n참 쉽죠?"},"Ray-math/Shorts/3,5,7-삼각형":{"slug":"Ray-math/Shorts/3,5,7-삼각형","filePath":"Ray math/Shorts/3,5,7 삼각형.md","title":"3,5,7 삼각형","links":[],"tags":[],"content":"흔히 1:1:\\sqrt2나 1:2:\\sqrt3의 비율을 갖는 삼각형의 각의 크기는 누구나 다 알고 있습니다.\n그런데 혹시 3:5:7의 비율을 갖는 삼각형의 각도 알고 있나요?\n\n코사인법칙을 이용하면 길이가 7인 선의 대각은 120^\\circ입니다.\n\\begin{align*}\n&amp; 7^2 = 3^2 + 5^2 - 2 \\cdot 3 \\cdot 5 \\cdot \\cos\\theta\\\\\n\\Rightarrow \\quad &amp; 15 = -30\\cos\\theta\\\\\n\\Rightarrow \\quad &amp; \\cos\\theta = -\\frac{1}{2}\\\\\n\\Rightarrow \\quad &amp; \\theta = 120^\\circ\n\\end{align*}\n이를 이용하면 길이가 3인 정삼각형과 5인 정삼각형을 덧붙여 3:7:8의 비율을 가지는 삼각형에서 7과 마주보는 각은 60^\\circ이고, 5:7:8의 비율을 가지는 삼각형에서 7과 마주보는 각도 60^\\circ인 것을 어렵지 않게 알 수 있습니다."},"Ray-math/Shorts/7로-나누기":{"slug":"Ray-math/Shorts/7로-나누기","filePath":"Ray math/Shorts/7로 나누기.md","title":"7로 나누기","links":[],"tags":["자리","숫자","shorts"],"content":"특정 규칙을 적용하면 어떤 수로 나누어 떨어지는지 빠르게 판단할 수 있습니다.\n그런데 한 자리 수 중 오직 7만은 배운 기억이 없는데요.\n\n2: 숫자의 마지막 자리가 짝수(0, 2, 4, 6, 8)이면 2로 나눌 수 있다.\n3: 숫자의 각 자리 수를 더한 합이 3의 배수이면, 원래의 수도 3으로 나눌 수 있다.\n4: 숫자의 마지막 두 자리가 4로 나눌 수 있는 수(즉, 00, 04, 08, 12, 16, …, 96)이면 원래 수도 4로 나눌 수 있다.\n5: 숫자의 마지막 자리가 0이나 5이면 5로 나눌 수 있다.\n6: 숫자가 2와 3 모두로 나눌 수 있으면(즉, 짝수이면서 각 자리 수의 합이 3의 배수이면), 6으로 나눌 수 있다.\n7: 7로 나누는 간단한 규칙은 없으며, 일반적인 나눗셈을 사용해야 한다.\n8: 숫자의 마지막 세 자리가 8로 나눌 수 있는 수(즉, 000, 008, 016, 024, …, 992)이면 원래의 수도 8로 나눌 수 있다.\n9: 숫자의 각 자리 수를 더한 합이 9의 배수이면, 원래의 수도 9로 나눌 수 있다.\n11: 숫자의 각 자리 수를 번갈아 더하고 빼는 합(예: 1자리 - 2자리 + 3자리 - 4자리 + …)이 11의 배수이거나 0이면, 원래의 수도 11로 나눌 수 있습니다.\n\n엄청 빠르지는 않지만 자릿수를 줄일 수 있는 트릭이 있다는 걸 아시나요?\n예를 들어 224는 7로 나누어 떨어질까요? 그냥 바로 나누어도 상관없지만,\n\n마지막 자리 수에 5를 곱한 후 앞선 숫자들과 더해 7로 나누어 떨어지는지 판단하는 방법으로 자릿수를 줄여 계산할 수도 있습니다.\n\\begin{align*}\n224 &amp;\\Rightarrow 22 + 4\\times5 = 42 \\\\\n&amp;\\Rightarrow 42 \\div 7\n\\end{align*}\n이는 더 큰 수에서도 항상 성립하며\n\\begin{align*}\n7574 &amp;\\Rightarrow757+4\\times5\\\\\n&amp;\\Rightarrow 777\\div 7\n\\end{align*}\n반복적으로 사용해 수를 더 줄여도 성립합니다.\n\\begin{align*}\n7574 &amp;\\Rightarrow757+4\\times5 = 777\\\\\n&amp;\\Rightarrow 77 + 7\\times5 = 112\\\\\n&amp;\\Rightarrow 11 + 2\\times 5=21\\\\\n&amp;\\Rightarrow 2 + 1\\times 5 = 7\n\\end{align*}\n\n비슷한 방법으로 뺄셈을 이용해도 됩니다.\n\n숫자를 일의 자리와 나머지로 분리합니다.\n일의 자리수에 2를 곱합니다.\n그 결과를 일의 자리를 분리한 나머지에서 뺍니다.\n새로운 숫자가 7의 배수인지 확인합니다.\n만약 새로운 숫자가 여전히 크다면, 이 과정을 반복합니다.\n결과가 0이거나 7의 알려진 배수가 나오면, 원래 숫자는 7의 배수입니다.\n\n예를들어 203을 보면\n\n203의 마지막 자리수를 제외한 숫자: 20\n마지막 자리수(3)에 2를 곱한 값: 6\n두 숫자의 차이 계산: 20 - 6 = 14\n14는 7의 배수이므로, 203도 7의 배수입니다.\n"},"Ray-math/Shorts/A4-용지와-B4용지":{"slug":"Ray-math/Shorts/A4-용지와-B4용지","filePath":"Ray math/Shorts/A4 용지와 B4용지.md","title":"A4 용지와 B4용지","links":[],"tags":[],"content":"A4 용지의 크기는 210 mm×297 mm입니다. 이는 가로 세로 비율을 약 1:\\sqrt2로 만든 건데요.\n\\begin{align*}\n&amp;\\quad a:b = b : \\frac{a}{2} \\\\\n\\Rightarrow &amp;\\quad a^2 = 2b^2 \\\\\n\\Rightarrow &amp;\\quad a:b = \\sqrt2 : 1\n\\end{align*}\n동일한 가로 세로 비율을 유지하면서 종이를 접거나 잘라서 다음 크기의 종이를 얻기 위해서입니다.\n그런데 A4의 대각선 길이와 B4의 세로 길이가 같은 것도 알고 계셨나요?\n\n\\text{D}_{A4} = \\sqrt{210^2 \\, \\text{mm}^2 + 297^2 \\, \\text{mm}^2} \\approx 363.74 \\, \\text{mm}\n이렇게 설계하면 피타고라스의 정리에의해 A4의 가로, 세로, B4의 세로 비율이 1:\\sqrt2:\\sqrt3이되면서, 넓이비는 2:3이 됩니다. 따라서 B4의 면적은 A4의 1.5배이므로 2배의 넓이를 갖는 A3의 중간 역할을 맡을 수 있죠.\n\\frac{257\\times364}{210\\times297}=1.4998\\cdots"},"Ray-math/Shorts/emirp":{"slug":"Ray-math/Shorts/emirp","filePath":"Ray math/Shorts/emirp.md","title":"emirp","links":[],"tags":["소수","shorts"],"content":"Emirp는 이름과 같이 소수를 뒤집어서도 소수가 되는 수를 의미합니다.\n예를 들어 13은 소수인데 이를 뒤집은 31도 소수이므로 13은 emirp입니다.\n대충 python을 돌려보면 꽤 많은 소수가 emirp가 존재합니다.\ndef is_prime(n):\n    if n &lt; 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n \ndef reverse_number(n):\n    return int(str(n)[::-1])\n \ndef find_emirps(limit):\n    emirps = []\n    for i in range(13, limit + 1):  # Starting from 13 as it&#039;s the first emirp\n        if is_prime(i):\n            reversed_i = reverse_number(i)\n            if i != reversed_i and is_prime(reversed_i):\n                emirps.append(i)\n    return emirps\n \n# Set a limit to search for emirps up to that number\nlimit = 1000\nemirps_up_to_limit = find_emirps(limit)\nprint(emirps_up_to_limit)\n현재까지 알려진 가장 큰 emirp는 다음과 같은데\n10^{10006} + 941992101 \\times 10^{4999} + 1\n신기하게도 이 숫자의 자리수인 10007도 emirp입니다."},"Ray-math/Shorts/그녀는-나보다-달에게-더-끌린다":{"slug":"Ray-math/Shorts/그녀는-나보다-달에게-더-끌린다","filePath":"Ray math/Shorts/그녀는 나보다 달에게 더 끌린다.md","title":"그녀는 나보다 달에게 더 끌린다","links":[],"tags":["만유인력","중력"],"content":"여러분들은 왜 여자친구가 없을까요? 다양한 이유가 있겠지만 여러분들이 이성에게 끌림을 유도할 수 없어서 일 것입니다. 만유인력의 법칙에 따라 끌리는 힘을 계산해보면\nF = \\frac{{G \\cdot m_1 \\cdot m_2}}{{r^2}}\n여러분들이 70kg이고 여성분이 50kg라고 가정했을 때, 여러분이 여성분에게 2m까지 접근해도 둘 사이의 인력은 기껏해야 이 정도입니다.\nF_{U} = \\frac{{(6.67430 \\times 10^{-11} \\, \\text{m}^3/\\text{kg s}^2) \\times 50 \\, \\text{kg} \\times 70 \\, \\text{kg}}}{{(2 \\, \\text{m})^2}}\nF_{U} = 5.84 \\times 10^{-8} \\, \\text{N}\n하지만 달은 멀리 떨어져 있어도 여러분들 보다 약 3만 배 정도 큰 힘으로 그녀를 끌어당기죠.\nF_{M} = \\frac{{(6.67430 \\times 10^{-11} \\, \\text{m}^3/\\text{kg s}^2) \\times 50 \\, \\text{kg} \\times 7.35 \\times 10^{22} \\, \\text{kg}}}{{(3.84 \\times 10^{8} \\, \\text{m})^2}}\nF_{M} = 0.00166 \\, \\text{N}\n그래서 여러분이 풉"},"Ray-math/Shorts/길이-차이가-1인-삼각형":{"slug":"Ray-math/Shorts/길이-차이가-1인-삼각형","filePath":"Ray math/Shorts/길이 차이가 1인 삼각형.md","title":"길이 차이가 1인 삼각형","links":[],"tags":[],"content":"3,4,5 또는 5, 12, 13과 같이 두 변의 길이가 1밖에 차이가 나지 않는 직각삼각형이 있습니다. 이런 직각삼각형들은 피타고라스 정리와 합차공식에 따라 간편하게 정리할 수 있습니다.\n\\begin{align*}\n&amp; \\quad a^2-b^2 = c^2\\\\\n\\Rightarrow &amp; \\quad (a+b)(a-b)=c^2\\\\\n\\Rightarrow &amp; \\quad a+b = c^2\\\\\n\\Rightarrow &amp; \\quad c = \\sqrt{a+b}\n\\end{align*}\n3,4,5나\n\\sqrt{4+5}=3\n5, 12, 13처럼 자연수 뿐만 아니라\n\\sqrt{12+13} = 5\n무리수인 경우도 손쉽게 적용할 수 있죠."},"Ray-math/Shorts/다른-수도-가능할까":{"slug":"Ray-math/Shorts/다른-수도-가능할까","filePath":"Ray math/Shorts/다른 수도 가능할까.md","title":"다른 수도 가능할까","links":[],"tags":[],"content":"`\n이 수는 2의 지수를 이용해 다시 자기 자신을 만드는 수입니다.\n\\sqrt{2^{{{{6^2}^1}^4}^4}}=262144\n이러한 조건을 만족하는 수는 찾기 어렵지만 7진법에 대해서는 3^6이\n\\begin{align*}\n\\sqrt {3^6} &amp;= 36_{(7)}\\\\\n27 &amp;= 3 \\times7+6\n\\end{align*}\n35진법에 대해서는 6^6이\n\\begin{align*}\n\\sqrt{6^6} &amp;= 66_{(35)}\\\\\n216 &amp;= 6 \\times 35 +6\n\\end{align*}\n성립한다고 알려져 있습니다.\n\\sqrt{2^{{{{6^2}^1}^4}^4}} = 2^{18} = 262144\n10진법에 대해서는 밑이 2인 경우 2^{30000}까지 검색해도 이러한 조건을 만족하는 수는 없었는데요. 앞으로도 없을까요?\n\\begin{align*}\n\\sqrt{2^A} &amp;= 2A_{(11)}\\\\\n32 &amp;= 2 \\times 11 + 10\n\\\\\n\\\\\n\\sqrt{2^C} &amp;= 2C_{(26)}\\\\\n64 &amp;= 2 \\times 26 + 12\n\\end{align*}"},"Ray-math/Shorts/마방진":{"slug":"Ray-math/Shorts/마방진","filePath":"Ray math/Shorts/마방진.md","title":"마방진","links":[],"tags":["shorts","마방진"],"content":"마방진은 정사각형 격자 안에 숫자를 배열하여 모든 행, 열, 대각선의 합이 동일하게 되도록 하는 숫자 배열입니다.\n\\begin{array}{|c|c|c|}\n\\hline\n8 &amp; 1 &amp; 6\\\\\n\\hline\n3 &amp; 5 &amp; 7\\\\\n\\hline\n4 &amp; 9 &amp; 2\\\\\n\\hline\n\\end{array}\n\\\\\n\\text{magic sum : 15}\n이러한 배열을 대충 파이썬 코드를 작성해서 찾아보면 3 \\times 3뿐만 아니라 더 큰 수에서도 찾을 수 있으며\nimport numpy as np\nfrom multiprocessing import Pool\n \n# 홀수 차수의 마방진 생성\ndef generate_odd_magic_square(n):\n    magic_square = np.zeros((n,n), dtype=int)\n    num = 1\n    i, j = 0, n//2\n    \n    while num &lt;= n*n:\n        magic_square[i, j] = num\n        num += 1\n        newi, newj = (i-1) % n, (j+1) % n\n        if magic_square[newi, newj]:\n            i += 1\n        else:\n            i, j = newi, newj\n            \n    return magic_square\n \n# 4n차수의 마방진 생성\ndef generate_doubly_even_magic_square(n):\n    arr = [[(n*y)+x+1 for x in range(n)]for y in range(n)]\n    for i in range(0,n//4):\n        for j in range(0,n//4):\n            arr[i][j] = (n*n + 1) - arr[i][j];\n    for i in range(0,n//4):\n        for j in range(3 * (n//4),n):\n            arr[i][j] = (n*n + 1) - arr[i][j];\n    for i in range(3 * (n//4),n):\n        for j in range(0,n//4):\n            arr[i][j] = (n*n + 1) - arr[i][j];\n    for i in range(3 * (n//4),n):\n        for j in range(3 * (n//4),n):\n            arr[i][j] = (n*n + 1) - arr[i][j];\n    for i in range(n//4,3 * (n//4)):\n        for j in range(n//4,3 * (n//4)):\n            arr[i][j] = (n*n + 1) - arr[i][j];\n    return np.array(arr)\n \n# 4n+2차수의 마방진 생성\ndef generate_singly_even_magic_square(s):\n    if s % 2 == 1:\n        s += 1\n    while s % 4 == 0:\n        s += 2\n    q = [[0 for j in range(s)] for i in range(s)]\n    z = s // 2\n    b = z * z\n    c = 2 * b\n    d = 3 * b\n    o = generate_odd_magic_square(z)\n    for j in range(0, z):\n        for i in range(0, z):\n            a = o[i][j]\n            q[i][j] = a\n            q[i + z][j + z] = a + b\n            q[i + z][j] = a + c\n            q[i][j + z] = a + d\n    lc = z // 2\n    rc = lc\n    for j in range(0, z):\n        for i in range(0, s):\n            if i &lt; lc or i &gt; s - rc or (i == lc and j == lc):\n                if not (i == 0 and j == lc):\n                    t = q[i][j]\n                    q[i][j] = q[i][j + z]\n                    q[i][j + z] = t\n    return np.array(q)\n \ndef generate_magic_square(n):\n    if n % 2 == 1:\n        return generate_odd_magic_square(n)\n    elif n % 4 == 0:\n        return generate_doubly_even_magic_square(n)\n    else:\n        return generate_singly_even_magic_square(n)\n \ndef is_valid_magic_square(magic_square):\n    n = len(magic_square)\n    magic_sum = np.sum(magic_square, axis=0)[0]\n    return (\n        all(np.sum(magic_square, axis=0) == magic_sum) and\n        all(np.sum(magic_square, axis=1) == magic_sum) and\n        np.sum(np.diag(magic_square)) == magic_sum and\n        np.sum(np.diag(np.fliplr(magic_square))) == magic_sum\n    )\n \ndef worker(n):\n    magic_square = generate_magic_square(n)\n    result_str = f&#039;Magic Square of order {n}x{n}:\\n&#039;\n    result_str += str(magic_square) + &#039;\\n&#039;\n    result_str += f&#039;Magic sum: {np.sum(magic_square, axis=0)[0]}\\n&#039;\n    result_str += f&#039;Is valid magic square: {is_valid_magic_square(magic_square)}\\n&#039;\n    return result_str\n \nif __name__ == &quot;__main__&quot;:\n    orders = list(range(3, 11))\n    with Pool() as pool:\n        results = pool.map(worker, orders)\n    for result in results:\n        print(result)\n\\begin{array}{|c|c|c|c|}\n\\hline\n16 &amp; 2 &amp; 3 &amp; 13\\\\\n\\hline\n5 &amp; 11 &amp; 10 &amp; 8\\\\\n\\hline\n9 &amp; 7 &amp; 6 &amp; 12\\\\\n\\hline\n4 &amp; 14 &amp; 15 &amp; 1\\\\\n\\hline\n\\end{array}\n4 \\times 4 \\quad \\text{magic sum : 34}\n\n\\begin{array}{|c|c|c|c|c|}\n\\hline\n17 &amp; 24 &amp; 1 &amp; 8 &amp; 15 \\\\\n\\hline\n23 &amp; 5 &amp; 7 &amp; 14 &amp; 16 \\\\\n\\hline\n4 &amp; 6 &amp; 13 &amp; 20 &amp; 22 \\\\\n\\hline\n10 &amp; 12 &amp; 19 &amp; 21 &amp; 3 \\\\\n\\hline\n11 &amp; 18 &amp; 25 &amp; 2 &amp; 9 \\\\\n\\hline\n\\end{array}\n5 \\times 5 \\quad \\text{magic sum : 65}\n\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline\n35 &amp; 1 &amp; 33 &amp; 8 &amp; 28 &amp; 6 \\\\\n\\hline\n3 &amp; 32 &amp; 7 &amp; 30 &amp; 5 &amp; 34 \\\\\n\\hline\n4 &amp; 9 &amp; 2 &amp; 31 &amp; 36 &amp; 29 \\\\\n\\hline\n26 &amp; 19 &amp; 24 &amp; 17 &amp; 10 &amp; 15 \\\\\n\\hline\n21 &amp; 23 &amp; 25 &amp; 12 &amp; 14 &amp; 16 \\\\\n\\hline\n22 &amp; 27 &amp; 20 &amp; 13 &amp; 18 &amp; 11 \\\\\n\\hline\n\\end{array}\n6 \\times 6 \\quad \\text{magic sum : 111}\n\n\\begin{array}{|c|c|c|c|c|c|c|}\n\\hline\n30 &amp; 39 &amp; 48 &amp; 1 &amp; 10 &amp; 19 &amp; 28 \\\\\n\\hline\n38 &amp; 47 &amp; 7 &amp; 9 &amp; 18 &amp; 27 &amp; 29 \\\\\n\\hline\n46 &amp; 6 &amp; 8 &amp; 17 &amp; 26 &amp; 35 &amp; 37 \\\\\n\\hline\n5 &amp; 14 &amp; 16 &amp; 25 &amp; 34 &amp; 36 &amp; 45 \\\\\n\\hline\n13 &amp; 15 &amp; 24 &amp; 33 &amp; 42 &amp; 44 &amp; 4 \\\\\n\\hline\n21 &amp; 23 &amp; 32 &amp; 41 &amp; 43 &amp; 3 &amp; 12 \\\\\n\\hline\n22 &amp; 31 &amp; 40 &amp; 49 &amp; 2 &amp; 11 &amp; 20 \\\\\n\\hline\n\\end{array}\n7 \\times 7 \\quad \\text{magic sum : 175}\n\n\\begin{array}{|c|c|c|c|c|c|c|c|}\n\\hline\n64 &amp; 63 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 58 &amp; 57 \\\\\n\\hline\n56 &amp; 55 &amp; 11 &amp; 12 &amp; 13 &amp; 14 &amp; 50 &amp; 49 \\\\\n\\hline\n17 &amp; 18 &amp; 46 &amp; 45 &amp; 44 &amp; 43 &amp; 23 &amp; 24 \\\\\n\\hline\n25 &amp; 26 &amp; 38 &amp; 37 &amp; 36 &amp; 35 &amp; 31 &amp; 32 \\\\\n\\hline\n33 &amp; 34 &amp; 30 &amp; 29 &amp; 28 &amp; 27 &amp; 39 &amp; 40 \\\\\n\\hline\n41 &amp; 42 &amp; 22 &amp; 21 &amp; 20 &amp; 19 &amp; 47 &amp; 48 \\\\\n\\hline\n16 &amp; 15 &amp; 51 &amp; 52 &amp; 53 &amp; 54 &amp; 10 &amp; 9 \\\\\n\\hline\n8 &amp; 7 &amp; 59 &amp; 60 &amp; 61 &amp; 62 &amp; 2 &amp; 1 \\\\\n\\hline\n\\end{array}\n8 \\times 8 \\quad \\text{magic sum : 260}\n\n\\begin{array}{|c|c|c|c|c|c|c|c|c|} \\hline\n47 &amp; 58 &amp; 69 &amp; 80 &amp; 1 &amp; 12 &amp; 23 &amp; 34 &amp; 45 \\\\\n\\hline\n57 &amp; 68 &amp; 79 &amp; 9 &amp; 11 &amp; 22 &amp; 33 &amp; 44 &amp; 46 \\\\\n\\hline\n67 &amp; 78 &amp; 8 &amp; 10 &amp; 21 &amp; 32 &amp; 43 &amp; 54 &amp; 56 \\\\\n\\hline\n77 &amp; 7 &amp; 18 &amp; 20 &amp; 31 &amp; 42 &amp; 53 &amp; 55 &amp; 66 \\\\\n\\hline\n6 &amp; 17 &amp; 19 &amp; 30 &amp; 41 &amp; 52 &amp; 63 &amp; 65 &amp; 76 \\\\\n\\hline\n16 &amp; 27 &amp; 29 &amp; 40 &amp; 51 &amp; 62 &amp; 64 &amp; 75 &amp; 5 \\\\\n\\hline\n26 &amp; 28 &amp; 39 &amp; 50 &amp; 61 &amp; 72 &amp; 74 &amp; 4 &amp; 15 \\\\\n\\hline\n36 &amp; 38 &amp; 49 &amp; 60 &amp; 71 &amp; 73 &amp; 3 &amp; 14 &amp; 25 \\\\\n\\hline\n37 &amp; 48 &amp; 59 &amp; 70 &amp; 81 &amp; 2 &amp; 13 &amp; 24 &amp; 35 \\\\\n\\hline\n\\end{array}\n9 \\times 9 \\quad \\text{magic sum : 369}\n\n\\begin{array}{|c|c|c|c|c|c|c|c|c|c|}\n\\hline\n92 &amp; 99 &amp; 1 &amp; 83 &amp; 90 &amp; 17 &amp; 24 &amp; 76 &amp; 8 &amp; 15 \\\\\n\\hline\n98 &amp; 80 &amp; 82 &amp; 89 &amp; 91 &amp; 23 &amp; 5 &amp; 7 &amp; 14 &amp; 16 \\\\\n\\hline\n4 &amp; 6 &amp; 88 &amp; 20 &amp; 22 &amp; 79 &amp; 81 &amp; 13 &amp; 95 &amp; 97 \\\\\n\\hline\n10 &amp; 12 &amp; 19 &amp; 21 &amp; 3 &amp; 85 &amp; 87 &amp; 94 &amp; 96 &amp; 78 \\\\\n\\hline\n11 &amp; 18 &amp; 25 &amp; 2 &amp; 9 &amp; 86 &amp; 93 &amp; 100 &amp; 77 &amp; 84 \\\\\n\\hline\n67 &amp; 74 &amp; 51 &amp; 58 &amp; 65 &amp; 42 &amp; 49 &amp; 26 &amp; 33 &amp; 40 \\\\\n\\hline\n73 &amp; 55 &amp; 57 &amp; 64 &amp; 66 &amp; 48 &amp; 30 &amp; 32 &amp; 39 &amp; 41 \\\\\n\\hline\n54 &amp; 56 &amp; 63 &amp; 70 &amp; 72 &amp; 29 &amp; 31 &amp; 38 &amp; 45 &amp; 47 \\\\\n\\hline\n60 &amp; 62 &amp; 69 &amp; 71 &amp; 53 &amp; 35 &amp; 37 &amp; 44 &amp; 46 &amp; 28 \\\\\n\\hline\n36 &amp; 43 &amp; 50 &amp; 27 &amp; 34 &amp; 61 &amp; 68 &amp; 75 &amp; 52 &amp; 59 \\\\\n\\hline\n\\end{array}\n10 \\times 10 \\quad \\text{magic sum : 505}\n그때 각 선들의 합은 다음 식을 만족합니다.\nM = \\frac{n(n^2 + 1)}{2}\n특이한 것은 8 \\times 8 마방진 중에서 다음 배열은\n\\begin{array}{|c|c|c|c|c|c|c|c|}\n\\hline\n16 &amp; 26 &amp; 1 &amp; 23 &amp; 38 &amp; 52 &amp; 43 &amp; 61 \\\\\n\\hline\n41 &amp; 63 &amp; 40 &amp; 50 &amp; 3 &amp; 21 &amp; 14 &amp; 28 \\\\\n\\hline\n36 &amp; 54 &amp; 45 &amp; 59 &amp; 10 &amp; 32 &amp; 7 &amp; 17 \\\\\n\\hline\n5 &amp; 19 &amp; 12 &amp; 30 &amp; 47 &amp; 57 &amp; 34 &amp; 56 \\\\\n\\hline\n27 &amp; 13 &amp; 22 &amp; 4 &amp; 49 &amp; 39 &amp; 64 &amp; 42 \\\\\n\\hline\n62 &amp; 44 &amp; 51 &amp; 37 &amp; 24 &amp; 2 &amp; 25 &amp; 15 \\\\\n\\hline\n55 &amp; 33 &amp; 58 &amp; 48 &amp; 29 &amp; 11 &amp; 20 &amp; 6 \\\\\n\\hline\n18 &amp; 8 &amp; 31 &amp; 9 &amp; 60 &amp; 46 &amp; 53 &amp; 35 \\\\\n\\hline \n\\end{array}\n8 \\times 8 \\quad \\text{magic sum : 260}\n각 수를 제곱해도 마방진이 됩니다.\n\\begin{array}{|c|c|c|c|c|c|c|c|}\n\\hline\n256 &amp; 676 &amp; 1 &amp; 529 &amp; 1444 &amp; 2704 &amp; 1849 &amp; 3721 \\\\\n\\hline\n1681 &amp; 3969 &amp; 1600 &amp; 2500 &amp; 9 &amp; 441 &amp; 196 &amp; 784 \\\\\n\\hline\n1296 &amp; 2916 &amp; 2025 &amp; 3481 &amp; 100 &amp; 1024 &amp; 49 &amp; 289 \\\\\n\\hline\n25 &amp; 361 &amp; 144 &amp; 900 &amp; 2209 &amp; 3249 &amp; 1156 &amp; 3136 \\\\\n\\hline\n729 &amp; 169 &amp; 484 &amp; 16 &amp; 2401 &amp; 1521 &amp; 4096 &amp; 1764 \\\\\n\\hline\n3844 &amp; 1936 &amp; 2601 &amp; 1369 &amp; 576 &amp; 4 &amp; 625 &amp; 225 \\\\\n\\hline\n3025 &amp; 1089 &amp; 3364 &amp; 2304 &amp; 841 &amp; 121 &amp; 400 &amp; 36 \\\\\n\\hline\n324 &amp; 64 &amp; 961 &amp; 81 &amp; 3600 &amp; 2116 &amp; 2809 &amp; 1225 \\\\\n\\hline\n\\end{array}\n8 \\times 8 \\quad \\text{magic sum : 11180}\nimport numpy as np\n \ndef is_valid_magic_square(magic_square):\n    n = len(magic_square)\n    magic_sum = np.sum(magic_square, axis=0)[0]\n \n    # Check the sum of each row, column, and the two diagonals\n    return (\n        all(np.sum(magic_square, axis=0) == magic_sum) and\n        all(np.sum(magic_square, axis=1) == magic_sum) and\n        np.sum(np.diag(magic_square)) == magic_sum and\n        np.sum(np.diag(np.fliplr(magic_square))) == magic_sum\n    )\n \n# Provided magic square\nmagic_square = np.array([\n    [256, 676, 1, 529, 1444, 2704, 1849, 3721],\n    [1681, 3969, 1600, 2500, 9, 441, 196, 784],\n    [1296, 2916, 2025, 3481, 100, 1024, 49, 289],\n    [25, 361, 144, 900, 2209, 3249, 1156, 3136],\n    [729, 169, 484, 16, 2401, 1521, 4096, 1764],\n    [3844, 1936, 2601, 1369, 576, 4, 625, 225],\n    [3025, 1089, 3364, 2304, 841, 121, 400, 36],\n    [324, 64, 961, 81, 3600, 2116, 2809, 1225]\n])\n \nprint(is_valid_magic_square(magic_square))"},"Ray-math/Shorts/무리수도-꽤나-규칙적이다":{"slug":"Ray-math/Shorts/무리수도-꽤나-규칙적이다","filePath":"Ray math/Shorts/무리수도 꽤나 규칙적이다.md","title":"무리수도 꽤나 규칙적이다","links":[],"tags":["shorts","무리수","연분수"],"content":"\\sqrt{2}는 무리수입니다. 무리수는 소수점 아래 자리수가 끝이 없고, 순환하지 않는 무한 소수이므로 불규칙하다고 생각할 수 있습니다.\n\\sqrt2 = 1.4142135623730950488016887242096980785696718753769480731766797379\\cdots\n그러나 \\sqrt2는 다음과 같이 유리화를 이용해 분리할 수 있고, \\sqrt{2}가 양변에 다시 나타나므로 이 과정을 반복한다면\n\\sqrt{2} = 1 + \\left( \\sqrt{2} - 1 \\right) = 1 + \\frac{1}{1 + \\sqrt{2}}\n\\sqrt{2}를 2가 반복되는 무한 연분수(continued fraction)로 나타낼 수 있습니다. 소수에서는 불규칙할지 모르나 연분수로 나타내면 꽤나 간단하면서 [1; 2, 2, 2, \\ldots]로 상당히 규칙적으로 표현할 수 있죠.\n\\begin{align*}\n\\sqrt{2} &amp;= 1 + \\frac{1}{1 + \\sqrt{2}} \\\\\\\\\n&amp;= 1 + \\frac{1}{2 + \\frac{1}{2 + \\frac{1}{2 + \\ddots}}}\n\\end{align*}"},"Ray-math/Shorts/배수를-빠르게-판단하는-법":{"slug":"Ray-math/Shorts/배수를-빠르게-판단하는-법","filePath":"Ray math/Shorts/배수를 빠르게 판단하는 법.md","title":"배수를 빠르게 판단하는 법","links":[],"tags":["자리","shorts"],"content":"특정 규칙을 사용하면 빠르게 나눗셈 가능 여부를 판단할 수 있습니다.\n숫자의 마지막 자리가 짝수(0, 2, 4, 6, 8)이기만 하면 원래 수는 2의 배수, 마지막 두 자리가 4로 나눌 수 있으면(즉, 00, 04, 08, 12, 16, \\cdots, 96)원래 수도 4의 배수, 마지막 세 자리가 8로 나눌 수 있는 수(즉, 000, 008, 016, 024, \\cdots, 992)면 원래의 수도 8의 배수입니다.\n\\begin{gather*}\n2 \\,\\vert \\, 3960\\\\\n\\because 2 \\,\\vert \\, 0\\\\\n\\\\\n4 \\, \\vert \\, 3960\\\\\n\\because 4 \\,\\vert \\, 60\\\\\n\\\\\n8 \\, \\vert \\, 3960\\\\\n\\because 8 \\,\\vert \\, 960\n\\end{gather*}\n숫자의 각 자리 수를 더한 합이 3의 배수면, 원래의 수도 3의 배수이고, 숫자의 각 자리 수를 더한 합이 9의 배수이면, 원래의 수도 9의 배수입니다.\n\\begin{gather*}\n3\\, \\vert \\, 3960\\\\\n9\\, \\vert \\, 3960\\\\\n\\\\\n\\because 3 + 9 + 6 + 0 = 18\\\\\n\n3 \\,\\vert \\, 18\\\\\n9 \\,\\vert \\, 18\n\\end{gather*}\n일의 자리가 0이나 5면 5로 나눌 수 있으며\n\\begin{gather*}\n2 \\,\\vert \\, 3960\\\\\n\\because 5 \\,\\vert \\, 0\\\\\n\\end{gather*}\n숫자가 짝수이면서 각 자리 수의 합이 3의 배수이면 6으로 나눌 수 있습니다.\n\\begin{gather*}\n6 \\,\\vert \\, 3960\\\\\n\\because 2 \\,\\vert \\, 0, \\, 3 \\,\\vert \\, 18\\\\\n\\end{gather*}\n마지막으로 숫자의 각 자리 수를 번갈아 더하고 빼는 합(예: 일의 자리 - 십의 자리 + 백의 자리 - 천의 자리 + \\cdots)이 11의 배수면, 원래의 수도 11로 나눌 수 있는데요.\n\\begin{gather*}\n11 \\,\\vert \\, 3960\\\\\n\\because 3-9+6-0=0\\\\\n11 \\,\\vert \\, 0\n\\end{gather*}\n7의 배수인지 빠르게 판단하는 방법은 없을까요?"},"Ray-math/Shorts/알았으면-끄덕여":{"slug":"Ray-math/Shorts/알았으면-끄덕여","filePath":"Ray math/Shorts/알았으면 끄덕여.md","title":"알았으면 끄덕여","links":[],"tags":[],"content":"계산기를 열어 세 개의 수를 연달아 2번 입력해\n세자리가 반복되는 여섯자리 수를 만듭니다.\n이제 7보다 크거나 같은 소수 즉 7, 11, 13을 차례대로 나누면\n두 번 입력한 부분이 없어지며 반복되는 세자리만 남습니다.\n다른 수로 해보아도 결과는 같은데요.\n이는 1001이 7\\times11\\times13으로 소인수분해되는 걸 이용한 트릭입니다.\n여러분이 알고있는 다른 트릭들이 있다면 댓글에 남겨주세요."},"Ray-math/Shorts/요일의-순서":{"slug":"Ray-math/Shorts/요일의-순서","filePath":"Ray math/Shorts/요일의 순서.md","title":"요일의 순서","links":[],"tags":["순서","시간"],"content":"일주일의 순서는 어떻게 정해졌을까요? 고대 바빌로니아인들은 하늘을 가로질러 움직이는 7개의 천체를 관찰하고, 지구를 중심으로 한 공전주기를 기준으로 순서를 정하였습니다.\n\\begin{align*}\n\\text{토성} &amp; : 29.45 \\text{년} \\\\\n\\text{목성} &amp; : 11.86 \\text{년} \\\\\n\\text{화성} &amp; : 1.88 \\text{년} \\\\\n\\text{태양} &amp; : 1 \\text{년} \\\\\n\\text{금성} &amp; : 224.70 \\text{일} \\\\\n\\text{수성} &amp; : 87.97 \\text{일} \\\\\n\\text{달} &amp; : 27.32 \\text{일} \\\\\n\\end{align*}\n그리고 이 순서대로 해당 날짜의 첫번째 시간이 요일을 결정한다고 했죠. 이렇게 하면 첫째날 첫번째 시간인 토성을 시작으로 토요일이 시작됩니다. 하루는 24시간이므로 7개의 천체는 3번 회전하고 (7 * 3 = 21) 다시 하루 중 남은 3시간은 토성, 목성, 화성이 순서대로 하늘을 지배하게 됩니다. 그렇다면 다음날 첫번째 시간은 다음순서인 태양이 하늘을 지배하므로 둘째날은 일요일이 됩니다.\n24 \\equiv 3 \\pmod 7\n따라서 이 규칙을 계속 적용하면 24의 배수를 7로 나눈 나머지는 3이므로 다음날짜의 첫번째 시간은 토성부터 3개씩 건너뛰며 요일이 정해지게 되면서 요일의 순서는 토, 일, 월, 화, 수, 목, 금 순서로 결정되게 됩니다. 문화와 종교에 따라 한 주가 시작되는 요일은 서로 다르긴 하지만 하루 24시간과 7천체의 관계사이에서 생긴 순서는 현재까지 그대로 유지되고 있습니다."},"Ray-math/Shorts/인수분해-팁":{"slug":"Ray-math/Shorts/인수분해-팁","filePath":"Ray math/Shorts/인수분해 팁.md","title":"인수분해 팁","links":[],"tags":["shorts","인수분해"],"content":"우리는 이차방정식을 인수분해할 때, 두 수의 곱이 상수항이 되고, 교차로 곱한 수의 합은 일차항의 계수가 되는 숫자조합을 찾습니다.\n\\begin{array}{ccc}\n&amp;x^2 &amp; -5x &amp;+6\\\\\n&amp;1&amp;&amp;-2\\\\\n&amp;1&amp;&amp;-3\n\\end{array}\n이때, 해는 최고차항의 계수로 상수항을 나눈 수의 약수가 되며,\n2 \\vert 6, \\quad 3 \\vert6\n해를 만드는 두 수는 일차항의 계수의 절반에서 정확히 같은 거리 만큼 떨어져 있습니다.\n\\left\\vert 2- \\frac{5}{2} \\right\\vert = \\left\\vert 3- \\frac{5}{2} \\right\\vert\n그리고 교차 곱셈에서의 각 행의 두 수는 반드시 서로소가 됩니다. 왜냐하면 만약 두 수가 서로소가 아니라면 공약수로 전체식을 묶어줄 수 있기 때문이죠.\n\\begin{array}{cccc}\n&amp;2x^2 &amp; -4x &amp;-6\\\\\n&amp;2&amp;&amp;2\\\\\n&amp;1&amp;&amp;-3\\\\\n\\\\\n2&amp; (x^2 &amp; -2x &amp; -3)\\\\\n&amp;1&amp;&amp;1\\\\\n&amp;1&amp;&amp;-3\n\\end{array}\n이런 성질을 미리 알고있다면 인수분해가 조금은 더 쉬워집니다."},"Ray-math/Shorts/자기-자신을-만들어-내는식":{"slug":"Ray-math/Shorts/자기-자신을-만들어-내는식","filePath":"Ray math/Shorts/자기 자신을 만들어 내는식.md","title":"자기 자신을 만들어 내는식","links":[],"tags":[],"content":"여러분은 이 식이 어떤 의미를 갖고 있는지 아시나요?\n\\frac{1}{2} &lt; \\left\\lfloor \\mathrm{mod}\\left(\\left\\lfloor \\frac{y}{17}\\right\\rfloor 2^{-17\\lfloor x\\rfloor - \\mathrm{mod}(\\lfloor y\\rfloor, 17)},2\\right)\\right\\rfloor\n이 식은 수학자 Jeff Tupper가 발표한 공식으로, 그래프를 통해 자기 자신을 그리는 놀라운 성질을 가지고 있습니다.\npython을 이용해 그림이 예쁘게 나올 수 있게 x, y, k값의 값을 설정한 후 그림을 그려보면\n\nfrom math import floor\n \ndef tuppers_formula(x, y):\n    return 0.5 &lt; floor((y // 17 // 2 ** (17 * floor(x) + floor(y) % 17)) % 2)\n \nk = 960939379918958884971672962127852754715004339660129306651505519271702802395266424689642842174350718121267153782770623355993237280874144307891325963941337723487857735749823926629715517173716995165232890538221612403238855866184013235585136048828693337902491454229288667081096184496091705183454067827731551705405381627380967602565625016981482083418783163849115590225610003652351370343874461848378737238198224849863465033159410054974700593138339226497249461751545728366702369745461014655997933798537483143786841806593422227898388722980000748404719\n \nfor y in range(k, k+17):\n    for x in range(105, -1, -1):\n        if tuppers_formula(x, y):\n            print(&#039;@&#039;, end=&#039;&#039;)\n        else:\n            print(&#039; &#039;, end=&#039;&#039;)\n    print(&#039;&#039;)\n출력화면이 처음 작성한 식과 같은 것을 알 수 있습니다."},"Ray-math/Shorts/절단-가능-소수":{"slug":"Ray-math/Shorts/절단-가능-소수","filePath":"Ray math/Shorts/절단 가능 소수.md","title":"절단 가능 소수","links":[],"tags":["shorts","소수"],"content":"3797은 특별한 소수입니다. 3797을 오른쪽에서 한 자리씩 제거하면 379, 37, 3이 되는데 모든 수가 소수입니다. 또한 3797을 왼쪽에서 한 자리씩 제거하면 797, 97, 7이며, 또한 모두 소수입니다.\n이처럼 p를 왼쪽이나 오른쪽에서 하나씩 제거하여 얻은 모든 수가 소수일 때, p를 절단 가능 소수(Truncatable Prime)라고 합니다.\n왼쪽 절단 가능한 소수는 4260개로 알려져 있으며 제일 큰 수는 357686312646216567629137입니다.(약 3천해)\n오른쪽 절단 가능한 소수는 83개로 가장 큰 수는 73939133입니다.\n양쪽 모두 절단이 가능한 가장 큰 소수는 739397입니다.\n2, 3, 5, 7, 23, 37, 53, 73, 313, 317, 373, 797, 3137, 3797, 739397\n\n왼쪽 절단 가능 소수\n2, 3, 5, 7, 13, 17, 23, 37, 43, 47, 53, 67, 73, 83, 97, 113, 137, 167, 173, 197, 223, 283, 313, 317, 337, 347, 353, 367, 373, 383, 397, 443, 467, 523, 547, 613, 617, 643, 647, 653, 673, 683, 743, 773, 797, 823, 853, 883, 937, 947, 953, 967, 983, 997, … 가장 큰 것은 24자리 3576863126462165676291371\n오른쪽 절단 가능 소수\n2, 3, 5, 7, 23, 29, 31, 37, 53, 59, 71, 73, 79, 233, 239, 293, 311, 313, 317, 373, 379, 593, 599, 719, 733, 739, 797, 2333, 2339, 2393, 2399, 2939, 3119, 3137, 3733, 3739, 3793, 3797, 5939, 7193, 7331, 7333, 7393, 23333, 23339, 23399, 23993, 29399, 31193, 31379, 37337, 37339, 37397, 59393, 59399, 71933, 73331, 73939, 233993, 239933, 293999, 373379, 373393, 593933, 593993, 719333, 739391, 739393, 739397, 739399, 2339933, 2399333, 2939999, 3733799, 5939333, 7393913, 7393931, 7393933, 23399339, 29399999, 37337999, 59393339, 739391332\n좌우 절단 가능 소수\n2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 127, 131, 137, 139, 151, 157, 173, 179, 223, 227, 229, 233, 239, 251, 257, 271, 277, 331, 337, 353, 359, 373, 379, 421, 431, 433, 439, 457, 479, 521, 523, 557, 571, 577, 631, 653, 659, 673, 677, 727, 733, 739, 751, 757, 773, 821, 823, 827, 829, 839, 853, 857, 859, 877, 929, 937, 953, 971, 977, 1117, 1171, 1193, 1231, 1237, 1291, 1297, 1319, 1373, 1433, 1439, 1471, 1531, 1597, 1613, 1619, … 3\nFootnotes\n\n\nA024770 - OEIS ↩\n\n\nA024770 - OEIS ↩\n\n\nA077390 - OEIS ↩\n\n\n"},"Ray-math/Shorts/제곱한-후-나누어-더하면-자기-자신이-되는-수":{"slug":"Ray-math/Shorts/제곱한-후-나누어-더하면-자기-자신이-되는-수","filePath":"Ray math/Shorts/제곱한 후 나누어 더하면 자기 자신이 되는 수.md","title":"제곱한 후 나누어 더하면 자기 자신이 되는 수","links":[],"tags":["숫자","python","shorts"],"content":"오늘은 숫자의 특별한 성질 중 하나를 소개하려고 합니다. 이 성질은 숫자를 제곱한 후, 그 결과를 특정 방식으로 나누어 더하면 다시 자기 자신이 되는 숫자를 의미합니다. 이러한 성질을 가진 숫자는 수학에서 흥미로운 주제로 다루어지기도 하며, 여러분도 쉽게 찾아볼 수 있습니다.\n예시\n\n9^2 = 81, 9=8 + 1\n45^2 = 2025, 45=20 + 25\n7777^2 = 60481729, 7777=6048 + 1729\n\n이 성질을 만족하는 숫자를 찾는 방법\n\n특정 범위 내의 숫자 n을 선택합니다.\nn^2을 계산합니다.\nn^2의 결과를 두 부분으로 나눕니다. (예: 2025를 20과 25로 나눕니다.)\n두 부분을 더하고, 그 합이 원래의 숫자 n과 같은지 확인합니다.\n\nPython 코드로 찾아보기\ndef find_numbers(limit):\n    result = []\n    for n in range(1, limit):\n        square = n ** 2\n        str_square = str(square)\n        for i in range(1, len(str_square)):\n            a = int(str_square[:i])\n            b = int(str_square[i:])\n            if a + b == n:\n                result.append(n)\n    return result\n \nlimit = 10000000\nnumbers = find_numbers(limit)\nprint(numbers)\n아래는 찾은 숫자의 목록입니다.\n9, 10, 45, 55, 99, 100, 297, 703, 999, 1000, 2223, 2728, 4879, 4950, 5050, 5292, 7272, 7777, 9999, 10000, 17344, 22222, 38962, 77778, 82656, 95121, 99999, 100000, 142857, 148149, 181819, 187110, 208495, 318682, 329967, 351352, 356643, 390313, 461539, 466830, 499500, 500500, 533170, 538461, 609687, 627615, 643357, 648648, 670033, 681318, 791505, 812890, 818181, 851851, 857143, 961038, 994708, 999999, 1000000, 4444444, 4927941, 5072059, 5479453, 5555556, 8161912, 9372385, 9999999"},"Ray-math/Shorts/추측을-함부로-하면-안되는-이유":{"slug":"Ray-math/Shorts/추측을-함부로-하면-안되는-이유","filePath":"Ray math/Shorts/추측을 함부로 하면 안되는 이유.md","title":"추측을 함부로 하면 안되는 이유","links":[],"tags":["함수","삼각함수","미적분","Borwein","디랙","퓨리에"],"content":"흔히 \\text{sinc}(x) = \\frac{\\sin(x)}{x}라 불리는 이 함수는  -\\infty부터 \\infty까지 적분하면 \\pi가 됩니다.\n\\begin{align*}\n\\int_{-\\infty}^{\\infty} \\frac{\\sin x}{x} \\; dx\n&amp;= 2 \\int_{0}^{\\infty} \\frac{\\sin x}{x} \\; dx \\\\\n&amp;= 2 \\int_{0}^{\\infty} \\sin x \\left( \\int_{0}^{\\infty} e^{-xt} \\; dt \\right) \\; dx \\\\\n&amp;= 2 \\int_{0}^{\\infty} \\int_{0}^{\\infty}  \\sin x \\, e^{-tx} \\; dx dt \\\\\n&amp;= 2 \\int_{0}^{\\infty} \\frac{dt}{t^2 + 1} \\\\\n&amp;= \\vphantom{\\int}2 \\cdot \\frac{\\pi}{2} = \\pi.\n\\end{align*}\n비슷한 형태로 x축 방향으로 3배만큼 확대한 함수를 곱해도 신기하게 적분값은 변화가 없습니다.\n\\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}dx=\\pi\\\\\n\\because \\mathcal{F}\\left\\{\\frac{\\sin(x)}{x} \\frac{\\sin(x/3)}{x/3}\\right\\} = \\delta(f - 1/3) + \\delta(f + 1/3)\n같은 방법으로 계속 함수를 곱해도 적분값은 변하지 않아서 이 현상이 계속 일어날 것 처럼 보이지만\n\\begin{gather*}\n\\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}\\frac{\\sin(x/5)}{x/5}dx=\\pi\\\\\\\\\n\\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}\\frac{\\sin(x/5)}{x/5}\\frac{\\sin(x/7)}{x/7}dx=\\pi\\\\\\\\\n\\vdots\\\\\\\\\n\\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}\\cdots\\frac{\\sin(x/11)}{x/11}dx=\\pi\\\\\\\\\n\\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}\\cdots\\frac{\\sin(x/13)}{x/13}dx=\\pi\\\\\\\\\n\\end{gather*}\n갑자기 15부터는 이러한 규칙성이 미묘하게 깨지는 것을 확인할 수 있습니다.1\n\\begin{align*}\n&amp; \\int_{-\\infty}^{\\infty} \\frac{\\sin(x)}{x}\\frac{\\sin(x/3)}{x/3}\\cdots\\frac{\\sin(x/15)}{x/15}dx\\\\\n\\\\\n&amp; = \\frac{935615849426881477393075728938}{935615849440640907310521750000}\\pi \\\\\n\\\\\n&amp; \\approx \\pi-4.62\\times10^{-11}\n\\end{align*}\n이는 디랙 델타함수의 성질에 의해 역수의 합이 1보다 크거나 작을 때 생기는 차이에 따라 발생하는 현상입니다.\n\\begin{gather*}\n\\frac{1}{3} + \\frac{1}{5} + \\ldots + \\frac{1}{13} = 0.9551\\cdots &lt; 1\\\\\\\\\n\\frac{1}{3} + \\frac{1}{5} + \\ldots + \\frac{1}{15} = 1.0218\\cdots&gt; 1\n\\end{gather*}\n당연해 보이는 추측에도 한 번씩 의심을 해보는 것이 어떨까요?\nDirac Delta\nDirac 델타 함수는 특정 지점에서 무한히 높고, 그 외의 지점에서는 0인 함수입니다. 이 함수의 적분값은 1입니다.\n\\mathcal{F}\\left\\{\\frac{\\sin(x)}{x} \\frac{\\sin(x/3)}{x/3}\\right\\} = \\delta(f - 1/3) + \\delta(f + 1/3)\n이 식은 주어진 함수의 Fourier 변환 결과가 두 개의 Dirac 델타 함수의 합이라는 것을 의미합니다. 이 델타 함수들은 f = \\pm 1/3에서 발생합니다.\n이제 역변환을 생각해봅시다.\n두 개의 델타 함수를 역변환하면 원래의 함수가 되고, 이 함수의 적분값은 델타 함수의 적분값인 1을 두 번 더한 값, 즉 2가 됩니다. 그런데 원래의 적분 문제에서는 \\pi가 곱해져 있으므로, 최종적인 적분값은 2 \\times \\pi/2 = \\pi가 됩니다.\nDirac Delta function\n\\begin{align*}\n\\int_{-\\infty}^{\\infty}{\\sin(x) \\over x}\\,{\\rm d}x &amp; =\\int_{-\\infty}^{\\infty}\\left({1 \\over 2}\\,\\int_{-1}^{1}{\\rm e}^{{\\rm i}kx}\\,{\\rm d}k\\right)\\,{\\rm d}x\\\\\n&amp; =\\pi\\int_{-1}^{1}{\\rm d}k\\int_{-\\infty}^{\\infty}{{\\rm d}x \\over 2\\pi}\\,{\\rm e}^{{\\rm i}kx}\\\\\n&amp; =\\pi\\int_{-1}^{1}{\\rm d}k\\,\\delta(k) = \\pi\n\\end{align*}\nFootnotes\n\n\nSome Remarkable Properties of Sinc and Related Integrals ↩\n\n\n"},"Ray-math/Shorts/투자와-수학-1":{"slug":"Ray-math/Shorts/투자와-수학-1","filePath":"Ray math/Shorts/투자와 수학 1.md","title":"투자와 수학 1","links":[],"tags":["투자","investment"],"content":"1억을 10%의 수익률로 30년간 투자하면 어떻게 될까요?\n(1.1)^{30} \\approx 17.45\n계산에 따르면, 30년 후에는 초기 투자액이 거의 17.45배 증가하여 17.45억 원이 됩니다. 이는 복리의 효과를 보여주는 탁월한 예시이며, 장기간 동안 지속적으로 좋은 수익률을 유지하는 것이 얼마나 중요한지 강조합니다. 이는 굳이 계산기 없이도 돈이 2배가 되는 시기를 계산하는 72의 법칙에 따라 근삿값을 쉽게 구할 수 있습니다.\n\\quad \\Rightarrow \\quad \\frac{30}{7.2} \\approx 4\n\\quad \\Rightarrow \\quad 2^{4} \\approx 16\n\n72의 법칙 증명 과정\n\n복리 공식: 복리의 기본 공식은 A = P(1 + r)^t입니다. 여기서 A는 미래의 가치, P는 초기 투자액, r은 연수익률, t는 투자 기간(년)을 나타낸다.\n투자가 두 배로 성장하는 조건: 투자액이 두 배로 성장한다는 것은 A = 2P임을 의미합니다. 따라서 공식은 2P = P(1 + r)^t로 변형된다.\n공식 정리: P를 양변에서 나누면, 2 = (1 + r)^t가 된다.\n로그를 사용한 시간 t 계산: 이제 t에 대해 풀기 위해 양변에 자연로그 \\ln을 취한다. \\ln(2) = t \\cdot \\ln(1 + r)가 된다.\n근사치 사용: 자연로그의 성질을 사용하여 \\ln(1 + r)을 r에 대한 근사치로 바꾼다. r가 작을 때, \\ln(1 + r) \\approx r이다.\nt에 대한 근사식: 따라서, t \\approx \\frac{\\ln(2)}{r}입니다. \\ln(2)는 대략 0.693입니다.\n72의 법칙 도출: r을 백분율로 표현하면, t \\approx \\frac{0.693 \\times 100}{r}이고, 계산을 간편하게 하기 위해 0.693대신 0.72로 근사하여 사용합니다. 따라서, t \\approx \\frac{72}{r}이 됩니다.\n\n\n그렇다면 30년 중 딱 3년만 수익률 10%를 달성하지 못하고, 본전을 유지하면 어떻게 될까요?\n(1.1)^{27} \\approx 13.11\n이 시나리오에서는 30년 후의 최종 금액이 13.11억 원으로, 첫 번째 시나리오에 비해 약 4억 원의 차이가 발생합니다. 물론 이 금액도 상당히 큰 금액이긴하지만 장기적인 투자에서 단 몇 년의 성과가 전체 결과에 상당한 영향을 미칠 수 있음을 보여줍니다. 만약 30년 중 단 3번 수익률이 -10%가 된다면 어떻게 될까요?\n(1.1)^{27}×(0.9)^{3} \\approx 9.56\n30년 동안 투자 기간 중 27년은 연 10%의 수익을, 나머지 3년은 연 10%의 손실을 기록한다고 가정하면 30년 후의 최종 금액은 약 9.56억 원이 됩니다.\n투자와 관련된 이러한 수학적 계산은 투자의 장기적인 가치와 변동성에 대한 중요한 교훈을 제공합니다."},"Ray-math/Shorts/포획--and--재포획법":{"slug":"Ray-math/Shorts/포획--and--재포획법","filePath":"Ray math/Shorts/포획 & 재포획법.md","title":"포획 & 재포획법","links":[],"tags":["포획","개인","잉어","표시","추정","모집단"],"content":"문득 학교를 산책하다 연못 안에 있는 잉어의 수가 궁금하다면 어떻게 셀 수 있을까요?\n물을 다 빼고 잉어의 수를 일일이 세면 정확하지만 교장선생님께 뺨을 맞을 수도 있습니다.\n우선 연못 한 귀퉁이에 앉아 생물에 무해한 식용 락카를 뿌리면서 잉어의 수를 셉니다.\n\\text{색칠한 잉어 수 }  n_1 = 15 \n다음날 같은 곳으로 가서 잉어의 수를 세면서 락카칠이 되어 있는 잉어의 비율을 구합니다.\n\\text {세어본 잉어 수 } n_2 = 20 \n\\text {그 중 색칠된 잉어 수 } m = 5 \n잉어들이 연못에 골고루 퍼져있다면 비율이 일정해야하므로\n{n_1 \\over N} = {m \\over n_2} \n독립적인 두 표본의 비율로 식을 세우면\nN={{n_1 \\times n_2}\\over m}=15 \\times {20 \\over 5}= 60\n물을 빼지 않고 잉어의 수를 추정할 수 있습니다.\n포획-재포획 방법\n링컨-피터슨 지수(Lincoln-Petersen index) 또는 표식 및 재포획(mark and recapture) 방법\n으로도 알려진 은 모든 개체를 직접 계산하기 어려울 때 개체군의 크기를 추정하기 위해 생태학 및 야생 생물학에서 널리 사용되는 기술입니다.\n이 방법의 기본 아이디어는 모집단에서 개인의 하위 집합을 캡처 및 표시한 다음 표시된 개인을 모집단으로 다시 릴리스한 후 새 샘플을 다시 캡처하는 두 단계를 포함합니다. 재포획된 샘플에서 표시된 개인의 비율을 사용하여 전체 인구 크기를 추정할 수 있습니다.\n포획-재포획 절차\n\n캡처: 개인(n1)의 무작위 샘플이 모집단에서 캡처됩니다. 포획된 각 개인은 그들의 행동이나 생존 가능성에 영향을 미치지 않는 방식으로 표시됩니다(예: 무해한 염료 또는 작은 태그). 표시된 개인은 다시 모집단으로 풀려납니다.\n재포획: 표시된 개인이 모집단에 다시 섞일 수 있도록 충분한 시간을 허용한 후 두 번째 무작위 샘플(n2)을 포획합니다. 두 번째 샘플(m2)에서 발견된 표시된 개인의 수를 기록합니다.\n추정: 두 번째 표본에서 표식된 개인의 비율은 전체 모집단에서 표식된 개인의 비율과 동일하다고 가정합니다. 이 가정을 통해 다음 방정식을 사용하여 총 모집단 크기(N)를 추정할 수 있습니다.\n\n(n1 / N) = (m2 / n2)\nN을 풀기 위해 방정식을 재배열하면 다음이 제공됩니다.\nN = (n1 * n2) / m2\n동물이나 식물의 경우와 같이 개별 개체를 다루는 경우 예상 인구 크기 N은 가장 가까운 정수로 반올림할 수 있습니다.\n유의점\n포획-재포획 방법은 정확한 추정을 위해 몇 가지 가정에 의존한다는 점에 유의해야 합니다.\n\n모집단이 닫혀 있습니다. 즉, 포획 기간과 재포획 기간 사이에 출생, 사망, 이민 또는 이주가 없음을 의미합니다.\n표식이 있는 개인은 표식이 없는 개인과 동일한 확률로 재포획됩니다.\n표시는 분실되거나 간과되지 않으며 표시는 개인의 생존 가능성이나 행동에 영향을 미치지 않습니다.\n두 샘플 모두 무작위이며 서로 독립적입니다.\n\n이러한 가정을 위반하면 추정치가 편향될 수 있습니다. 그러나 이러한 가정 중 일부를 완화하고 추가 정보를 통합하여 인구 규모 추정의 정확도를 개선하는 고급 포획-재포획 모델이 있습니다."},"Study/Differential-Geometry/1-2.-Parametrized-Curves":{"slug":"Study/Differential-Geometry/1-2.-Parametrized-Curves","filePath":"Study/Differential Geometry/1-2. Parametrized Curves.md","title":"1-2. Parametrized Curves","links":[],"tags":[],"content":"곡선\n매개변수화된 곡선(parametrized curve)이란, 열린 구간 I = (a, b) \\subset \\mathbb{R}에서 \\mathbb{R}^3으로 가는 미분 가능한 함수 \\alpha: I \\to \\mathbb{R}^3를 의미한다.\n이 함수는 각 실수 t \\in I에 대해 공간상의 점 \\alpha(t) = (x(t), y(t), z(t))를 대응시키며, x(t), y(t), z(t)는 모두 미분 가능 함수이다.\n\nt는 곡선의 매개변수(parameter) 라고 한다.\n\\alpha(I) \\subset \\mathbb{R}^3는 자취(trace) 라고 하며, 이는 곡선이 공간에서 지나가는 점들의 집합이다.\n\n\n함수 \\alpha의 도함수 \\alpha&#039;(t) = (x&#039;(t), y&#039;(t), z&#039;(t))는 주어진 시각 t에서의 속도 벡터(velocity vector) 혹은 접선 벡터(tangent vector) 라고 한다.\n\n내적과 노름\n|u| = \\sqrt{u_1^2 + u_2^2 + u_3^2}, \\quad\nu \\cdot v = |u||v|\\cos \\theta\n\nu \\cdot v = 0 \\iff u \\perp v\nu \\cdot v = v \\cdot u\n\\lambda(u \\cdot v) = (\\lambda u) \\cdot v = u \\cdot (\\lambda v)\nu \\cdot (v + w) = u \\cdot v + u \\cdot w\n\nu \\cdot v = u_1v_1 + u_2v_2 + u_3v_3\n벡터 함수 u(t), v(t)에 대해\n\\frac{d}{dt}(u(t) \\cdot v(t)) = u&#039;(t) \\cdot v(t) + u(t) \\cdot v&#039;(t)\n예제\n\n나선(Helix)\n\n\\alpha(t) = (a \\cos t, a \\sin t, bt), \\quad t \\in \\mathbb{R}\n원기둥 x^2 + y^2 = a^2 위를 일정한 속도로 상승하는 나선곡선. pitch는 2\\pi b이다.\n\n곡률이 있는 곡선 (0차 도함수가 0)\n\n   \\alpha(t) = (t^3, t^2)\nt = 0에서 속도 벡터 \\alpha&#039;(0) = (0, 0), 즉 접선이 정의되지 않는다.\n\n자취는 같지만 함수가 1:1 아님\n\n   \\alpha(t) = (t^3 - 4t, t^2 - 4)\nt = \\pm2에서 모두 (0, 0)을 지나므로, 매개함수 \\alpha는 전사지만 단사 아님.\n\n절댓값 함수 비미분 예시\n\n   \\alpha(t) = (t, |t|)\nt = 0에서 |t|은 미분 불가능이므로, \\alpha는 매끄러운 곡선 아님."},"Study/Differential-Geometry/1-3.-Regular-Curves;-Arc-Length":{"slug":"Study/Differential-Geometry/1-3.-Regular-Curves;-Arc-Length","filePath":"Study/Differential Geometry/1-3. Regular Curves; Arc Length.md","title":"1-3. Regular Curves; Arc Length","links":[],"tags":[],"content":"정칙 곡선 (Regular Curve)\n매개변수화된 곡선 \\alpha: I \\to \\mathbb{R}^3에 대해, 모든 t \\in I에서 도함수 \\alpha&#039;(t) \\ne 0이면 \\alpha는 정칙 곡선이라 한다\n\n도함수 \\alpha&#039;(t)는 t에서의 접선 벡터(tangent vector)를 나타낸다.\n만약 \\alpha&#039;(t) = 0인 점이 존재하면 그 점은 특이점(singular point)이라 하며, 이 장에서는 이런 특이점이 없는 곡선만을 다룬다.\n\n호의 길이 (Arc Length)\n정칙 곡선 \\alpha: I \\to \\mathbb{R}^3에 대해 기준점 t\\_0 \\in I에서 시작해 t까지의 호의 길이 s(t)는 다음과 같이 정의된다.\ns(t) = \\int_{t_0}^t |\\alpha&#039;(u)| \\, du\n\n|\\alpha&#039;(t)| = \\sqrt{(x&#039;(t))^2 + (y&#039;(t))^2 + (z&#039;(t))^2}는 속도 벡터의 크기.\ns(t)는 t에 대한 미분 가능한 함수이며 \\frac{ds}{dt} = |\\alpha&#039;(t)|이다.\n\n호의 길이로 매개변수화\n만약 \\frac{ds}{dt} = |\\alpha&#039;(t)| \\equiv 1이면, 즉 속도 벡터의 크기가 항등적으로 1이면 t는 곡선의 호의 길이와 같다. 이 경우 \\alpha는 호의 길이에 의해 매개변수화된 곡선이라 한다.\n\n이 경우, 곡선은 ‘등속도’로 진행되며, 곡선의 여러 기하적 성질을 단순하게 표현할 수 있다.\n\n방향의 변화 (Change of Orientation)\n호의 길이 s에 대해 \\beta(-s) = \\alpha(s)인 곡선 \\beta는 \\alpha와 동일한 자취(trace)를 가지지만 진행 방향이 반대이다. 이를 방향의 변화라고 한다."},"Study/Differential-Geometry/1-4.-The-Vector-Product-in-R3":{"slug":"Study/Differential-Geometry/1-4.-The-Vector-Product-in-R3","filePath":"Study/Differential Geometry/1-4. The Vector Product in R3.md","title":"1-4. The Vector Product in R3","links":[],"tags":[],"content":"벡터곱 (Vector Product)\n\\mathbb{R}^3에서 두 벡터 u, v의 벡터곱 또는 외적(cross product)은 다음 조건을 만족하는 벡터 u \\wedge v \\in \\mathbb{R}^3으로 정의된다:\n(u \\wedge v) \\cdot w = \\det(u, v, w) \\quad \\text{for all } w \\in \\mathbb{R}^3.\n\nu \\wedge v는 u, v가 생성하는 평면에 수직인 벡터이다.\n|u \\wedge v|는 u, v가 생성하는 평행사변형의 넓이이다.\n(u, v, u \\wedge v)는 \\mathbb{R}^3의 양의 방향 기준을 이루는 삼중 기저이다.\n\n벡터곱의 성질\n\nu \\wedge v = -v \\wedge u\n(au + bw) \\wedge v = a(u \\wedge v) + b(w \\wedge v)\nu \\wedge v = 0 \\iff u, v가 선형 종속\nu \\wedge v \\perp u = 0, u \\wedge v \\perp v=0\n\n외적의 크기\n(u \\wedge v) \\cdot (x \\wedge y) = \\begin{vmatrix} u \\cdot x &amp; v \\cdot x \\\\ u \\cdot y &amp; v \\cdot y \\end{vmatrix} = (u \\cdot x)(v \\cdot y) - (u \\cdot y)(v \\cdot x)이므로, |u \\wedge v|^2 = \\begin{vmatrix} u \\cdot u &amp; u \\cdot v \\\\ v \\cdot u &amp; v \\cdot v \\end{vmatrix} = |u|^2 |v|^2 - (u \\cdot v)^2 = |u|^2 |v|^2 (1 - \\cos^2 \\theta)이다.\n따라서,\n|u \\wedge v| = |u||v| \\sin \\theta\n여기서 \\theta는 u, v 사이의 각이다. 즉, 외적의 크기는 두 벡터가 생성하는 평행사변형의 넓이이다.\n벡터곱의 미분\n벡터 함수 u(t), v(t)가 미분 가능할 때,\n\\frac{d}{dt} (u(t) \\wedge v(t)) = u&#039;(t) \\wedge v(t) + u(t) \\wedge v&#039;(t)\n삼중 벡터곱 항등식\n(u \\wedge v) \\wedge w = (u \\cdot w)v - (v \\cdot w)u"},"Study/Differential-Geometry/1-5-The-Local-Theory-of-Curves-Parametrized-by-Arc-Length":{"slug":"Study/Differential-Geometry/1-5-The-Local-Theory-of-Curves-Parametrized-by-Arc-Length","filePath":"Study/Differential Geometry/1-5 The Local Theory of Curves Parametrized by Arc Length.md","title":"1-5 The Local Theory of Curves Parametrized by Arc Length","links":[],"tags":[],"content":"프레네 공식\n곡선 \\alpha(s)가 호의 길이 s로 매개변수화되어 있다고 가정하자. t(s) = \\alpha&#039;(s) 일 때 각 점 s에 대해, 단위 접벡터 t(s), 법선벡터 n(s), 종법선벡터 b(s)로 구성된 직교 기저 (t, n, b)를 프레네 구조(Frenet–Serret frame)라고 한다. 이 벡터들은 다음의 프레네 공식을 만족한다1\n\\begin{aligned}\nt&#039;(s) &amp;= k(s)n(s) \\\\\nn&#039;(s) &amp;= -k(s)t(s) - \\tau(s)b(s) \\\\\nb&#039;(s) &amp;= \\tau(s)n(s)\n\\end{aligned}\n\n\nk(s): 곡률 (curvature), 곡선이 얼마나 휘어졌는지\n\n\n\\tau(s): 비틀림 (torsion), 곡선이 얼마나 평면에서 벗어나는지\n\n\nt(s): 단위 접벡터\n\n\nn(s): 곡률 방향의 법선벡터 (곡선이 휘는 방향)\n\n\nb(s): t \\wedge n으로 정의되는 종법선벡터\n\n\n(t, n) 평면은 접촉법면 (osculating plane)\n\n\n(n, b) 평면은 법평면 (normal plane)\n\n\n(t, b) 평면은 전직평면 (rectifying plane)이라 한다.\n\n\n곡률, 비틀림률 계산\n\n곡률2\n\n\\kappa(t) = \\frac{|\\alpha&#039;(t) \\wedge \\alpha&#039;&#039;(t)|}{|\\alpha&#039;(t)|^3}\n\n비틀림률3\n\n\\tau(ts) = \\frac{(\\alpha&#039;(t) \\wedge \\alpha&#039;&#039;(t)) \\cdot \\alpha&#039;&#039;&#039;(t)}{|\\alpha&#039;(t) \\wedge \\alpha&#039;&#039;(t)|^2}\n\n평면 곡선 \\alpha(s) = (x(t), y(t)) \\in \\mathbb{R}^2의 경우, 곡률은\n\n\\kappa(t) = \\frac{x&#039;(t)y&#039;&#039;(t) - x&#039;&#039;(t)y&#039;(t)}{(x&#039;(t)^2 + y&#039;(t)^2)^{3/2}}\n\n\\alpha(s)가 구면 위의 곡선이고, R을 곡률 반경, T을 비틀림 반경이라고 하면\n\nR^2 + (R&#039;)^2 T^2 = \\text{const.}\n국소 곡선 이론의 기본 정리(Fundamental Theorem of Local Theory)\n미분가능한 함수 k(s) &gt; 0, \\tau(s)가 주어지면, 유일한 정칙 곡선 \\alpha: I \\to \\mathbb{R}^3이 존재하며 이러한 곡선은 강체 운동에 의해서만 달라질 뿐, 본질적으로 동일하다. 즉, 동일한 k(s), \\tau(s)를 가지는 두 곡선은 회전 및 평행이동만으로 서로 대응된다.\nFootnotes\n\n\n\\frac{d}{ds} \\begin{bmatrix} t \\\\ n \\\\ b\\end{bmatrix} = \\begin{bmatrix} 0 &amp; \\kappa &amp; 0 \\\\ -\\kappa &amp; 0 &amp; \\tau \\\\ 0 &amp; -\\tau &amp; 0 \\end{bmatrix} \\begin{bmatrix} t \\\\ n \\\\ b \\end{bmatrix}, A^T = -A 이므로 A는 skew-symmetric matrix (반대칭 행렬)이다. v \\cdot Av = 0 이므로 Av항상 v에 수직이다. 반대칭 행렬은 프레임이 길이를 보존한 채 회전(크기는 유지하고 방향만 바꾸는 유일한 방법)만 한다는 걸 수학적으로 보장해 주는 구조이다. ↩\n\n\n속도와 가속도의 외적의 크기를 속도 보정으로 나눈다. ↩\n\n\n속도와 가속도의 외적의 방향이 얼마나 회전하는가 측정한다. ↩\n\n\n"},"Study/Differential-Geometry/1-6.-The-Local-Canonical-Form":{"slug":"Study/Differential-Geometry/1-6.-The-Local-Canonical-Form","filePath":"Study/Differential Geometry/1-6. The Local Canonical Form.md","title":"1-6. The Local Canonical Form","links":[],"tags":[],"content":"국소 표준형(Local Canonical Form)\n정칙 곡선 \\alpha(s)에 대해, 어떤 점 s_0의 근방에서 곡선의 기하적 구조를 단순하게 기술하기 위해 Frenet basis을 기준으로 좌표계를 도입한다.\n곡선을 s_0 = 0으로 두고 Taylor 전개를 수행하면,\n\\alpha(s) = \\alpha(0) + s\\alpha&#039;(0) + \\frac{s^2}{2}\\alpha&#039;&#039;(0) + \\frac{s^3}{6}\\alpha&#039;&#039;&#039;(0) + R\n이며, 여기서 잔차 R은 \\lim_{s \\to 0} R/s^3 = 0이다.\n\\alpha&#039;(0) = t, \\alpha&#039;&#039;(0) = k n, \\alpha&#039;&#039;&#039;(0) = k&#039; n - k^2 t - k\\tau b를 대입하여 정리하면,\n\\alpha(s) - \\alpha(0) = \\left(s - \\frac{k^2}{6}s^3\\right)t + \\left(\\frac{k}{2}s^2 + \\frac{k&#039;}{6}s^3\\right)n - \\frac{k\\tau}{6}s^3 b + R\n이렇게 Frenet basis (t, n, b)에 대해 x(s), y(s), z(s) 좌표를 가지는 국소 표준형 표현(local canonical form)은 다음과 같다:\n\\begin{align*}\nx(s) &amp;=  s - \\frac{k^2}{6}s^3 + R_x \\\\\ny(s) &amp;=  \\frac{k}{2}s^2 + \\frac{k&#039;}{6}s^3 + R_y \\\\\nz(s) &amp;=  -\\frac{k\\tau}{6}s^3 + R_z\n\\end{align*}\n즉, x축은 접선(tangent) 방향, y축은 주법선(normal) 방향, z축은 종법선(binomal) 방향으로 하는 좌표계에서 곡선을 근사한다.\n기하적 응용\n비틀림의 부호에 따른 의미\nz(s) = -\\frac{k\\tau}{6}s^3 + \\cdots 에서 알 수 있듯, torsion \\tau의 부호는 곡선이 접촉 평면을 어떤 방향으로 관통하는지를 나타낸다.\n\n\\tau &gt; 0: 곡선은 접촉면을 종법선(binomal)의 반대 방향으로 관통한다.\n\\tau &lt; 0: 곡선은 접촉면을 종법선(binomal) 방향으로 관통한다.\n\n접촉 평면(osculating plane)\n접척 평면은 \\alpha(s)에서의 접선과 주법선 방향이 이루는 평면이다. 접촉 평면은 다음 조건을 만족하는 평면의 극한으로 정의할 수 있다:\n\n한 점 \\alpha(s)에서의 접선\n\\alpha(s + h) 점을 포함하는 평면\n\ny(s) = \\frac{k}{2}s^2 + \\frac{k&#039;}{6}s^3 + \\cdots 이므로, 곡률 k &gt; 0인 경우 s가 충분히 작을 때 y(s) \\ge 0이고 y(s) = 0일 때는 s = 0 뿐이다.\n\n곡선의 자취 \\alpha(J)는 주법선 방향이 가리키는 쪽의 반공간 안에 국소적으로 위치한다.\n"},"Study/Differential-Geometry/1-7.-Global-Properties-of-Plane-Curves":{"slug":"Study/Differential-Geometry/1-7.-Global-Properties-of-Plane-Curves","filePath":"Study/Differential Geometry/1-7. Global Properties of Plane Curves.md","title":"1-7. Global Properties of Plane Curves","links":[],"tags":[],"content":"기본 개념\n\n닫힌 곡선(Closed curve)\n매끄러운 매개화 곡선 \\alpha : [a, b] \\to \\mathbb{R}^2으로서, 모든 도함수가 끝점에서 일치하는 곡선.\n\n\\alpha(a) = \\alpha(b), \\quad\n\\alpha&#039;(a) = \\alpha&#039;(b), \\quad\n\\alpha&#039;&#039;(a) = \\alpha&#039;&#039;(b), \\quad \n\\cdots\n\n\n단순 폐곡선(Simple closed curve)\n닫힌 곡선 중 자기 교차점이 없는 곡선.\n\n\n볼록 곡선(Convex curve)\n임의의 점에서 접선을 그었을 때 곡선 전체가 그 접선의 한쪽에 놓이는 곡선.\n\n\n회전지표 (Rotation Index)\n단순 닫힌 곡선을 호의 길이 s로 매개화하여 접선 벡터를\n\nt(s) = (x&#039;(s), y&#039;(s)), \\quad |t(s)| = 1\n\n라 하면, 접선벡터 t(s)가 곡선을 한 바퀴 따라 움직이면서 전체적으로 회전한 각도 \\theta(s)는 다음과 같이 곡률 k(s)를 통해 표현된다.\n\n\\int_0^l k(s)\\, ds = \\theta(l) - \\theta(0) = 2\\pi I, \\quad I \\in \\mathbb{Z}\n\n단순 닫힌 평면곡선 C의 회전 지표(rotation index)는 정확히 \\pm 1이다. 즉, 단순 닫힌 곡선은 접선 벡터가 정확히 한 바퀴 회전한다는 의미이다.\n등주 부등식 (Isoperimetric Inequality)\n등주 부등식은 역사적으로 고대 그리스에서부터 다루어진 기하학적 문제로, 주어진 길이로 가장 큰 면적을 둘러싸는 도형이 원임을 증명하는 결과이다. 단순 폐곡선 C의 길이를 l, 둘러싸는 면적을 A라고 하면, 등주 부등식은 다음과 같다.\nl^2 - 4\\pi A \\geq 0\n등주 부등식은 단순 폐곡선의 길이와 면적 사이의 관계를 나타내며, 등호는 원일 때만 성립한다.\n네 꼭짓점 정리 (Four-Vertex Theorem)\n단순 닫힌 볼록 곡선은 적어도 네 개의 꼭짓점(곡률의 극값을 갖는 점)을 가진다. 곡선을 호의 길이 s로 매개화하여 곡률을 k(s)로 나타낼 때, 꼭짓점의 정의는 다음과 같다.\nk&#039;(s) = 0\n임의의 실수 A, B, C에 대하여 닫힌 곡선 \\alpha(s) = (x(s), y(s))에 대해 다음 등식이 성립한다.\n\\int_0^l (Ax(s) + By(s) + C)k&#039;(s)\\,ds = 0\n이 등식을 활용하여, 곡률 k(s)가 만약 극값(최대, 최소)을 가지는 점이 2개 이하라면 모순이 발생함을 증명할 수 있다. 따라서 곡선은 최소 4개의 꼭짓점을 가져야 한다는 결론을 얻는다.\n코시-크로프턴 공식 (Cauchy-Crofton Formula)\n곡선의 길이를 직접 측정하지 않고, 정칙 평면 곡선 C의 길이 l을 교차하는 직선의 수로 측정하는 공식이다. 평면 내 직선을 두 매개변수 p, \\theta로 나타내면, 직선 방정식은 다음과 같다.\nx \\cos\\theta + y \\sin\\theta = p\n곡선과 직선이 교차하는 점의 수를 n(p, \\theta)라 할 때, 코시-크로프턴 공식은 다음과 같은 이중 적분으로 주어진다.\n\\iint n(p,\\theta)\\,dp\\,d\\theta = 2l\n다음은 평면에서의 그린 정리(Green’s Theorem) 에 대한 정의와 수학적 표현, 의의를 설명한 것이다.\n평면에서의 그린 정리 (Green’s Theorem in the Plane)\n평면에서의 그린 정리는 2차원 영역 위에서의 이중적분(double integral)과, 그 경계 곡선에서의 선적분(line integral)을 연결시켜주는 정리이다. 이는 미분 형식과 벡터장 해석에서 나타나는 스토크스 정리(Stokes’ theorem)의 특수한 경우로 볼 수도 있다.\n수학적 표현\n영역 R \\subset \\mathbb{R}^2 이 다음 조건을 만족한다고 하자.\n\nR은 닫힌 곡선 C로 둘러싸인 영역이다.\n곡선 C는 양의 방향으로(반시계 방향) 매개변수화되어 있다.\n\n이때 두 개의 연속적으로 미분가능한 함수 P(x,y), Q(x,y)에 대해 다음이 성립한다.\n\\oint_{C} P(x,y)\\,dx + Q(x,y)\\,dy \n= \\iint_{R} \\left(\\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\right) dxdy\n\n좌변: 폐곡선 C 위에서의 선적분\n우변: 영역 R에서의 이중적분\n\n벡터장 형태의 표현\n벡터장 \\mathbf{F}(x,y) = (P(x,y), Q(x,y))로 나타내면,\n그린 정리는 다음과 같이 간단한 형태로도 표현 가능하다.\n\\oint_{C} \\mathbf{F}\\cdot d\\mathbf{r} = \\iint_{R} \\left(\\nabla \\times \\mathbf{F}\\right)\\cdot \\mathbf{k}\\,dxdy\n이때, \\mathbf{k}는 z축 방향의 단위벡터이며,\n\\nabla \\times \\mathbf{F} = \\left(\\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\right)\\mathbf{k}\n이다.\n네, 그린 정리(Green’s Theorem) 를 이용하면 복잡한 곡선으로 둘러싸인 영역의 넓이를 간단하게 계산할 수 있습니다.\n아래에서 자세히 설명하겠습니다.\n그린 정리를 이용한 넓이 계산\n곡선 C로 둘러싸인 평면의 영역 R의 면적 A를 구하고 싶다고 할 때, 그린 정리를 이용하면 영역 내부에서의 이중적분을 경계 곡선 위에서의 간단한 선적분 으로 쉽게 바꿔 계산할 수 있다.\n평면 곡선 C가 다음과 같이 반시계 방향으로 매개변수화 되어있다고 하자.\nC: \\alpha(t) = (x(t), y(t)), \\quad t \\in [a,b]\n이때, 그린 정리를 이용한 영역 R의 넓이 공식은 다음과 같다.1\n\\text{Area}(R) = \\frac{1}{2}\\oint_C x\\,dy - y\\,dx\n여기서 선적분은 다음과 같이 표현될 수 있다.\n\\text{Area}(R) = \\frac{1}{2}\\int_{a}^{b}\\left(x(t)y&#039;(t)-y(t)x&#039;(t)\\right)\\,dt\n예시: 원의 면적 계산\n예를 들어 반지름 r인 원의 면적을 이 방법으로 쉽게 구할 수 있다.\nC: x(t) = r\\cos t,\\quad y(t) = r\\sin t, \\quad t\\in[0, 2\\pi]\n그린 정리로 계산한 면적은\n\\begin{align*}\n\\text{Area}(R) &amp;= \\frac{1}{2}\\int_{0}^{2\\pi}\\left[(r\\cos t)(r\\cos t) - (r\\sin t)(-r\\sin t)\\right]\\,dt\n\\\\ &amp;= \\frac{1}{2}\\int_{0}^{2\\pi}(r^2\\cos^2 t + r^2\\sin^2 t)\\,dt\n\\\\ &amp;= \\frac{r^2}{2}\\int_{0}^{2\\pi}1\\,dt\n\\\\ &amp;= \\pi r^2\n\\end{align*}\nFootnotes\n\n\n면적을 구하기 위해 그린 정리의 벡터장 \\mathbf{F}(x,y)=(P,Q)를 특별히 P=-\\frac{y}{2}, Q=\\frac{x}{2}로 설정한다. 이때 그린 정리의 우변인 \\frac{\\partial Q}{\\partial x}-\\frac{\\partial P}{\\partial y}를 계산하면 \\frac{\\partial}{\\partial x}\\left(\\frac{x}{2}\\right)-\\frac{\\partial}{\\partial y}\\left(-\\frac{y}{2}\\right)=\\frac{1}{2}+\\frac{1}{2}=1이 되어 피적분함수가 정확히 1로 설정된다. 따라서 그린 정리의 우변이 \\iint_R 1\\,dxdy=\\text{Area}(R)로 영역의 넓이를 나타내고, 좌변의 선적분과 같게 되어 결국 면적이 \\text{Area}(R)=\\frac{1}{2}\\oint_C (x\\,dy - y\\,dx)로 간단히 표현된다. ↩\n\n\n"},"Study/Differential-Geometry/2-2.-Regular-Surfaces;-Inverse-Images-of-Regular-Value":{"slug":"Study/Differential-Geometry/2-2.-Regular-Surfaces;-Inverse-Images-of-Regular-Value","filePath":"Study/Differential Geometry/2-2. Regular Surfaces; Inverse Images of Regular Value.md","title":"2-2. Regular Surfaces; Inverse Images of Regular Value","links":[],"tags":[],"content":"정칙 곡면(Regular Surface)\n집합 S \\subseteq \\mathbb{R}^3가 정칙 곡면이라는 것은, 각 점 p \\in S에 대해 다음 조건을 만족하는 매개화(mapping) \\mathbf{x}:U \\subseteq \\mathbb{R}^2 \\to \\mathbb{R}^3 가 존재함을 의미한다.\n\n\\mathbf{x}(U)는 p의 열린 근방이며, \\mathbf{x}(U)\\subseteq S\n\\mathbf{x}는 미분가능(differentiable)하고 일대일(Injective)이다.\n\\mathbf{x}^{-1}: \\mathbf{x}(U) \\to U도 연속이다.\n각 점에서 도함수의 두 벡터가 선형독립(Linear Independence)이다.\n\n즉, 매개함수 \\mathbf{x}(u,v)를 쓰면,\n\\mathbf{x}(u,v) = (x(u,v),\\,y(u,v),\\,z(u,v))\n이고, 모든 점에서 다음 벡터가 선형독립이어야 한다.\n\\mathbf{x}_u=\\frac{\\partial x}{\\partial u},\\quad \\mathbf{x}_v=\\frac{\\partial x}{\\partial v},\\quad \\text{with} \\quad \\mathbf{x}_u \\times \\mathbf{x}_v \\neq \\mathbf{0}\n이 조건을 정칙성 조건(regularity condition) 이라 한다.\n정칙값(Regular Value)\n매끄러운 함수 F:\\mathbb{R}^3\\to\\mathbb{R}와 실수 a\\in\\mathbb{R}에 대하여, 점 p \\in F^{-1}(a)에서 기울기 벡터 \\nabla F(p)\\neq0 일 때, a를 함수 F의 정칙값(regular value) 이라 한다.\n\\nabla F(p) = \\left(\\frac{\\partial F}{\\partial x}(p),\\,\\frac{\\partial F}{\\partial y}(p),\\,\\frac{\\partial F}{\\partial z}(p)\\right)\\neq \\mathbf{0}\n를 만족하는 a가 정칙값이다.\n정칙값의 역상(Inverse Images of Regular Values)에 의한 정칙 곡면 표현\n정칙값 a에 대해, 다음 역상(inverse image) 집합이 정칙 곡면이 된다.\nS=F^{-1}(a)=\\{(x,y,z)\\in\\mathbb{R}^3 : F(x,y,z)=a\\}\n이는 기하적으로 함수 F가 상수 값을 갖는 레벨 곡면(level surface)을 의미한다. 이때 각 점에서의 접평면 T_p S는 다음과 같이 표현된다.\n\n곡면 위의 임의의 점 p=(x,y,z)에서의 접평면은\n\n\\nabla F(p)\\cdot(X-p)=0, \\quad X=(X_1,X_2,X_3)\\in\\mathbb{R}^3\n즉, 기울기 벡터 \\nabla F(p)가 곡면의 법선 벡터(normal vector)가 된다.\n단위원구(Unit Sphere)\n단위원구는 함수 F:\\mathbb{R}^3\\to\\mathbb{R}를\nF(x,y,z)=x^2+y^2+z^2\n로 놓았을 때, F^{-1}(1)로 표현할 수 있다. 이때 모든 점에서\n\\nabla F(x,y,z) = (2x, 2y, 2z)\\neq \\mathbf{0}\n이므로, a=1은 정칙값이 되고, 그 역상인 구면 S^2는 정칙 곡면이다.\n정칙 곡면 판별법 (Regularity Criterion)\n함수 \\mathbf{x} : U\\subseteq \\mathbb{R}^2\\to\\mathbb{R}^3를 통해 주어진 곡면이 정칙 곡면인지 판별하기 위해서는, 다음 행렬식의 조건을 확인하면 된다.\n매개함수의 야코비 행렬(Jacobian Matrix)이\nd\\mathbf{x}_q=\n\\begin{pmatrix}\n\\frac{\\partial x}{\\partial u} &amp; \\frac{\\partial x}{\\partial v} \\\\\n\\frac{\\partial y}{\\partial u} &amp; \\frac{\\partial y}{\\partial v} \\\\\n\\frac{\\partial z}{\\partial u} &amp; \\frac{\\partial z}{\\partial v} \\\\\n\\end{pmatrix}\n로 주어질 때, 이 행렬의 두 열벡터가 독립적이라는 조건은 적어도 하나의 2\\times 2 소행렬식(minor determinant)이 0이 아니라는 것과 동치이다.\n\\left( \\frac{\\partial(x, y)}{\\partial(u, v)}, \\frac{\\partial(x, z)}{\\partial(u, v)}, \\frac{\\partial(y, z)}{\\partial(u, v)} \\right) \\ne \\mathbf{0}\n따라서\n\\text{rank}(d\\mathbf{x}_q)=2\n이면, 이 곡면은 정칙 곡면이다."},"Study/Differential-Geometry/2-3.-Change-of-Parameters;-Differentiable-Functions-on-Surface":{"slug":"Study/Differential-Geometry/2-3.-Change-of-Parameters;-Differentiable-Functions-on-Surface","filePath":"Study/Differential Geometry/2-3. Change of Parameters; Differentiable Functions on Surface.md","title":"2-3. Change of Parameters; Differentiable Functions on Surface","links":[],"tags":[],"content":"곡면은 국소적인 성질로 이해된다. 즉, 곡면 S 위의 한 점 p의 성질은 해당 점을 포함하는 매개함수 \\mathbf{x}(u,v)에 의해 좌표계로 설명할 수 있다. 이러한 국소 좌표계는 여러 개 존재할 수 있으므로, 서로 다른 매개화 간의 변환이 미분가능해야만 그 위에서 정의되는 함수들의 미분 가능성 또한 좌표계에 의존하지 않게 정의된다.\n매개변수의 변환(Change of Parameters)\n정칙 곡면 S 위의 한 점 p\\in S가 두 개의 매개화 \\mathbf{x}:U\\subset \\mathbb{R}^2 \\to S, \\mathbf{y}:V\\subset \\mathbb{R}^2 \\to S 에 의해 기술된다고 하자. 즉, p \\in \\mathbf{x}(U) \\cap \\mathbf{y}(V) = W 라면, 다음과 같은 좌표변환 함수\nh = \\mathbf{x}^{-1} \\circ \\mathbf{y} : \\mathbf{y}^{-1}(W) \\to \\mathbf{x}^{-1}(W)\n는 미분동형사상(diffeomorphism)이다.\n\nh는 미분가능하며\n역함수 h^{-1}도 미분가능하다.\n\n따라서 좌표변환이 가능함을 수학적으로 보장한다. 또한 야코비 행렬식\u001d다음과 같다.\n\\frac{\\partial(u, v)}{\\partial(\\xi, \\eta)} \\cdot \\frac{\\partial(\\xi, \\eta)}{\\partial(u, v)} = 1\n곡면 위의 함수의 미분가능성\n함수 f: V \\subset S \\to \\mathbb{R}가 p \\in V에서 미분가능하다는 것은, 어떤 매개화 \\mathbf{x}:U\\subset \\mathbb{R}^2 \\to S가 p \\in \\mathbf{x}(U) \\subset V를 만족할 때, 함수의 성분 함수\nf \\circ \\mathbf{x} : U \\to \\mathbb{R}\n가 x^{-1}(p)에서 미분가능하다는 것을 뜻한다.\nf \\text{ is differentiable at } p \\iff f\\circ\\mathbf{x} \\text{ is differentiable at } \\mathbf{x}^{-1}(p)\n\n이 정의는 좌표계 \\mathbf{x}의 선택에 의존하지 않음.\n왜냐하면 f\\circ \\mathbf{y} = f\\circ \\mathbf{x} \\circ h이고, h가 미분가능하므로 합성도 미분가능하다.\n\n\n고도 함수 (Height function)\n단위 벡터 v \\in \\mathbb{R}^3에 대해\n\nh(p) = p \\cdot v \\quad (p \\in S)\n는 고도 함수이며 S 위에서 미분가능하다.\n\n거리 제곱 함수\n고정된 점 p_0 \\in \\mathbb{R}^3에 대해\n\n   f(p) = |p - p_0|^2\n는 S 위에서 미분가능하다. (거리 |p - p_0|는 p=p_0에서 미분 불가능이므로 제곱을 사용)\n미분가능성\n두 정칙 곡면 S_1, S_2가 주어졌을 때, 열린 집합 V_1 \\subset S_1에 대해 \\phi: V_1 \\to S_2가 연속 함수라고 하자. 이때 \\phi가 p\\in V_1에서 미분가능하다는 것은, 매개화 x_1: U_1 \\to S_1, x_2: U_2 \\to S_2가 존재하여 다음 합성함수\nx_2^{-1} \\circ \\phi \\circ x_1 : U_1 \\to U_2\n가 \\mathbf{x}_1^{-1}(p)에서 미분가능한 경우이다.\n다음은 회전곡면 (Surface of Revolution)에 대한 정의와 함께, 생성곡선, 자오선, 평행선, 특이점, 접평면에 대한 설명을 포함하여 정리한 내용입니다.\n회전곡면 (Surface of Revolution)\n회전곡면은 평면상의 정칙곡선 C \\subset \\mathbb{R}^2를 고정된 축을 중심으로 회전시켜 생성되는 곡면이다. 곡선 C가 다음과 같이 주어졌을 때,\nx = f(v), \\quad z = g(v), \\quad a &lt; v &lt; b, \\quad f(v) &gt; 0\n회전각 u를 도입하여 회전곡면의 매개화는 다음과 같이 표현된다.\n\\mathbf{x}(u, v) = (f(v) \\cos u, \\; f(v) \\sin u, \\; g(v)), \\quad 0 &lt; u &lt; 2\\pi, \\; a &lt; v &lt; b\n\n생성곡선 (Generating Curve): xz-평면 위의 곡선 C = (f(v), g(v)), 곡면 전체를 회전시켜 생성한다.\n회전축 (Axis of Revolution): 곡선이 회전하는 축으로 여기서는 z-축이다.\n자오선 (Meridian): 생성곡선이 회전하면서 위치를 바꾼 곡선. 각 고정된 u에 대해 v \\mapsto \\mathbf{x}(u, v)로 정의되는 곡선. 곡면의 한 점에서 축 방향으로 이어지는 경로.\n평행선 (Parallel): 고정된 v에서 u만 변하게 하여 얻는 원형 궤도. 곡면을 따라 생성된 원, 즉 v = \\text{const}인 곡선.\n\n특이점 (Singular Point)\n회전곡면 \\mathbf{x}(u,v)에서 특이점이란, 야코비 행렬의 두 열벡터가 선형종속이 되는 점이다.\n이는 곧 다음 조건에서 발생한다.\n\\frac{\\partial \\mathbf{x}}{\\partial u} \\times \\frac{\\partial \\mathbf{x}}{\\partial v} = \\mathbf{0}\n회전곡면에서 이런 특이점은 보통 f(v) = 0인 지점에서 발생하며, 이는 생성곡선이 축에 닿을 때 나타난다.예를 들어 구면의 극점이나 원뿔의 꼭짓점이 이에 해당한다.\n접곡면 (Tangent Surface)\n정칙 곡선 \\alpha: I \\to \\mathbb{R}^3에 대해, 곡선의 각 점 \\alpha(t)에서 그 점을 지나는 접선 방향으로 직선을 따라 확장하면, 이 직선들의 자취는 하나의 곡면을 형성한다. 이 곡면을 접곡면(tangent surface)라 하며, 다음과 같이 매개화된다.\n\\mathbf{x}(t, v) = \\alpha(t) + v\\alpha&#039;(t), \\quad t \\in I,\\; v \\in \\mathbb{R}\n\nt는 곡선 \\alpha(t)의 매개변수\nv는 곡선의 각 점에서의 접선 방향 직선 위의 거리 파라미터\n\n곡률이 0이 아니라고 가정하면\n\\begin{gather*}\n\\frac{\\partial \\mathbf{x}}{\\partial t} = \\alpha&#039;(t) + v\\alpha&#039;&#039;(t), \\quad\n\\frac{\\partial \\mathbf{x}}{\\partial v} = \\alpha&#039;(t) \\\\\n\\frac{\\partial \\mathbf{x}}{\\partial t}  \\wedge \\frac{\\partial \\mathbf{x}}{\\partial v} = v \\alpha&#039;&#039;(t) \\wedge \\alpha&#039;(t) \\not= \\mathbf{0} \\quad (t, v \\in U)\n\\end{gather*}"},"Study/Differential-Geometry/2-4.-The-Tangent-Plane;The-Differential-of-a-Map":{"slug":"Study/Differential-Geometry/2-4.-The-Tangent-Plane;The-Differential-of-a-Map","filePath":"Study/Differential Geometry/2-4. The Tangent Plane;The Differential of a Map.md","title":"2-4. The Tangent Plane;The Differential of a Map","links":[],"tags":[],"content":"접선벡터(Tangent Vector)\n정칙 곡면 S 위의 점 p에 대하여, 미분가능한 곡선 \\alpha: (-\\epsilon, \\epsilon) \\to S가 \\alpha(0) = p를 만족할 때, 벡터 \\alpha&#039;(0)를 점 p에서 곡면 S에 대한 접선벡터(tangent vector)라고 한다.\n정칙 곡면 S의 매개화 \\mathbf{x}: U \\subset \\mathbb{R}^2 \\to S와 점 q \\in U에 대하여, 점 \\mathbf{x}(q)에서의 접선벡터들의 집합은 2차원 벡터 부분공간 d\\mathbf{x}_q(\\mathbb{R}^2) \\subset \\mathbb{R}^3와 일치한다.\n접평면 (Tangent Plane)\n위의 정리에 의해 벡터 공간 d\\mathbf{x}_q(\\mathbb{R}^2)는 매개화 \\mathbf{x}의 선택에 의존하지 않는다. 이 평면은 점 p=\\mathbf{x}(q)에서 곡면 S의 접평면(tangent plane)이라 하고 T_p(S)로 표기한다.\n\n매개화 \\mathbf{x}는 T_p(S)의 기저 \\{\\frac{\\partial \\mathbf{x}}{\\partial u}(q), \\frac{\\partial \\mathbf{x}}{\\partial v}(q)\\}를 결정하며, 이를 \\mathbf{x}에 연관된 기저(associated basis)라 한다. 간단히 \\mathbf{x}_u, \\mathbf{x}_v로 표기하기도 한다.\n접선벡터 w \\in T_p(S)의 이 기저에 대한 좌표는 다음과 같다. w는 곡선 \\alpha(t) = \\mathbf{x}(u(t), v(t))의 속도벡터, 즉 w = \\alpha&#039;(0)으로 표현된다. 여기서 \\mathbf{x}(u(0), v(0))=p이다.\n\nw = \\alpha&#039;(0) = \\frac{d}{dt}(\\mathbf{x} \\circ (u(t), v(t)))\\Big|_{t=0} = \\mathbf{x}_u(q)u&#039;(0) + \\mathbf{x}_v(q)v&#039;(0)\n    $$\n\n따라서 $w$의 좌표는 $(u&#039;(0), v&#039;(0))$이다.\n\n### 접평면의 방정식 (Equation of the Tangent Plane)\n1.  $S$가 정칙값 $c$의 역상 $f^{-1}(c)$으로 주어질 때, 점 $p_0 = (x_0, y_0, z_0) \\in S$에서의 접평면의 방정식은 다음과 같다.\n\n\\frac{\\partial f}{\\partial x}(p_0)(x - x_0) + \\frac{\\partial f}{\\partial y}(p_0)(y - y_0) + \\frac{\\partial f}{\\partial z}(p_0)(z - z_0) = 0\n\n2.  $S$가 미분가능한 함수 $z=f(x,y)$의 그래프로 주어질 때, 점 $p_0 = (x_0, y_0)$에서의 접평면의 방정식은 다음과 같다.\n\nz = f(x_0, y_0) + \\frac{\\partial f}{\\partial x}(p_0)(x-x_0) + \\frac{\\partial f}{\\partial y}(p_0)(y-y_0)\n\n### 사상의 미분 (The Differential of a Map)\n\n두 정칙 곡면 $S_1, S_2$와 미분가능한 사상 $\\phi: V \\subset S_1 \\to S_2$ ($V$는 $S_1$의 열린 집합)가 주어졌다고 하자. 점 $p \\in V$에 대하여, 모든 접선벡터 $w \\in T_p(S_1)$는 $w = \\alpha&#039;(0)$인 미분가능한 곡선 $\\alpha: (-\\epsilon, \\epsilon) \\to V$ ($\\alpha(0)=p$)를 갖는다. 이때 곡선 $\\beta = \\phi \\circ \\alpha$는 $\\beta(0) = \\phi(p)$를 만족하며, 따라서 $\\beta&#039;(0)$는 $T_{\\phi(p)}(S_2)$의 벡터이다.\n\n$d\\phi_p: T_p(S_1) \\to T_{\\phi(p)}(S_2)$로 정의되는 사상 $d\\phi_p(w) = \\beta&#039;(0)$는 선형이며, 이를 점 $p$에서 $\\phi$의 미분(differential)이라 한다.\n\n위의 논의에서 주어진 $w$에 대하여, 벡터 $\\beta&#039;(0)$는 곡선 $\\alpha$의 선택에 의존하지 않으며, 사상 $d\\phi_p$는 선형이다.\n\n### 법선벡터와 곡면 간의 각 (Normal Vector and Angle Between Surfaces)\n\n점 $p \\in S$에서 접평면 $T_p(S)$에 수직인 $\\mathbb{R}^3$의 단위벡터를 단위 법선벡터(unit normal vector)라 한다. 이러한 벡터는 각 점마다 두 개가 존재한다. 점 $p$를 지나고 단위 법선벡터를 포함하는 직선을 법선(normal line)이라 한다.\n\n두 정칙 곡면 $S_1, S_2$가 점 $p$에서 만날 때, 두 곡면 사이의 각은 $p$에서의 두 접평면 $T_p(S_1)$과 $T_p(S_2)$ 사이의 각으로 정의된다. 이는 점 $p$에서의 두 법선벡터 사이의 각과 같다.\n\n* 매개화 $\\mathbf{x}: U \\to S$가 주어지면, 각 점 $q \\in \\mathbf{x}(U)$에서 단위 법선벡터장 $N$을 다음 식으로 명확히 선택할 수 있다.\n\nN(q) = \\frac{\\mathbf{x}_u \\wedge \\mathbf{x}_v}{|\\mathbf{x}_u \\wedge \\mathbf{x}_v|}(q)\n$$\n"},"Study/Differential-Geometry/2-5.-The-First-Fundamental-Form;-Area":{"slug":"Study/Differential-Geometry/2-5.-The-First-Fundamental-Form;-Area","filePath":"Study/Differential Geometry/2-5. The First Fundamental Form; Area.md","title":"2-5. The First Fundamental Form; Area","links":[],"tags":[],"content":"제1 기본 형식 (The First Fundamental Form)\n\\mathbb{R}^3 \\supset S의 자연스러운 내적(inner product)은 각 접평면 T_p(S)에 내적을 유도한다. 이 내적은 p \\in S에 대하여 \\langle \\ , \\ \\rangle_p로 표기하며, w_1, w_2 \\in T_p(S) \\subset \\mathbb{R}^3에 대하여 \\langle w_1, w_2 \\rangle_p는 \\mathbb{R}^3에서의 w_1과 w_2의 내적과 같다.\n점 p \\in S에서 T_p(S) 위에 정의된 이차 형식(quadratic form) I_p: T_p(S) \\to \\mathbb{R}은 다음과 같이 주어진다.\nI_p(w) = \\langle w, w \\rangle_p = |w|^2 \\ge 0\n\n이 이차 형식 I_p를 점 p에서 정칙 곡면 S의 제1기본 형식(first fundamental form)이라 한다.\n제1기본 형식은 곡면 S가 주변 공간 \\mathbb{R}^3의 자연스러운 내적을 어떻게 상속하는지를 나타낸다. 이를 통해 곡선의 길이, 벡터 사이의 각, 영역의 넓이 등 곡면 위의 기하학적 양들을 주변 공간을 참조하지 않고 측정할 수 있다.\n점 p에서의 매개화 \\mathbf{x}(u, v)에 연관된 기저 \\{\\mathbf{x}_u, \\mathbf{x}_v\\}를 사용하여 제1기본 형식을 표현할 수 있다. 접선벡터 w \\in T_p(S)는 곡선 \\alpha(t) = \\mathbf{x}(u(t), v(t))에 대하여 p = \\alpha(0)일 때 w = \\alpha&#039;(0) = \\mathbf{x}_u u&#039; + \\mathbf{x}_v v&#039;1로 나타낼 수 있다. 따라서,\n\\begin{align*}\nI_p(\\alpha&#039;(0)) &amp;= \\langle \\mathbf{x}_u u&#039; + \\mathbf{x}_v v&#039;, \\mathbf{x}_u u&#039; + \\mathbf{x}_v v&#039; \\rangle_p\\\\\n&amp;= E(u&#039;)^2 + 2F u&#039;v&#039; + G(v&#039;)^2\n\\end{align*}\n이때 E, F, G는 제1기본 형식의 계수라 불리며 다음과 같이 정의된다.\n\\begin{align*}\nE(u, v) = \\langle \\mathbf{x}_u, \\mathbf{x}_u \\rangle\\\\\nF(u, v) = \\langle \\mathbf{x}_u, \\mathbf{x}_v \\rangle\\\\\nG(u, v) = \\langle \\mathbf{x}_v, \\mathbf{x}_v \\rangle\n\\end{align*}\n평면 (Plane)\nw_1, w_2가 정규직교벡터일 때, 평면 \\mathbf{x}(u,v) = p_0 + u w_1 + v w_2의 제1 기본 형식의 계수는 \\mathbf{x}_u = w_1, \\mathbf{x}_v = w_2이므로 E=1, F=0, G=1이다.\n원기둥 (Cylinder)\n원기둥 \\mathbf{x}(u, v) = (\\cos u, \\sin u, v)의 경우, \\mathbf{x}_u = (-\\sin u, \\cos u, 0), \\mathbf{x}_v = (0,0,1)이므로 E=1, F=0, G=1이다. 이는 원기둥이 국소적으로 평면과 등거리(isometric) 관계에 있음을 시사한다.\n나선면 (Helicoid)\n나선면 \\mathbf{x}(u, v) = (v \\cos u, v \\sin u, au)의 경우, \\mathbf{x}_u = (-v \\sin u, v \\cos u, a), \\mathbf{x}_v = (\\cos u, \\sin u, 0)이므로, 계수는 E = v^2 + a^2, F=0, G=1이다.\n곡선의 길이와 벡터 사이의 각 (Arc Length and Angle of Vectors)\n곡선의 길이 (Arc Length)\n매개화된 곡선 \\alpha: I \\to S의 호의 길이 s(t)는 다음과 같다.\ns(t) = \\int_{t_0}^t |\\alpha&#039;(t)| dt= \\int_{t_0}^t \\sqrt{I(\\alpha&#039;(t))} dt\n만약 \\alpha(t) = \\mathbf{x}(u(t), v(t))가 좌표조각사상 안에 포함된다면,\ns(t) = \\int_{t_0}^t \\sqrt{E\\left(\\frac{du}{dt}\\right)^2 + 2F\\frac{du}{dt}\\frac{dv}{dt} + G\\left(\\frac{dv}{dt}\\right)^2} dt\n이로 인해 호의 길이의 요소 ds를 다음과 같이 표기하기도 한다.\nds^2 = E \\,du^2 + 2F \\,du \\,dv + G \\,dv^2\n벡터 사이의 각 (Angle between Vectors)\n두 매개화된 정칙 곡선 \\alpha: I \\to S, \\beta: I \\to S가 t=t_0에서 만날 때, 그 사이의 각 \\theta는 다음과 같이 주어진다.\n    \\cos \\theta = \\frac{\\langle \\alpha&#039;(t_0), \\beta&#039;(t_0) \\rangle}{|\\alpha&#039;(t_0)||\\beta&#039;(t_0)|}\n    $$\n\n특히, 매개화 $\\mathbf{x}(u,v)$의 두 좌표곡선 사이의 각 $\\phi$는 다음과 같다.\n\n\\cos \\phi = \\frac{\\langle \\mathbf{x}_u, \\mathbf{x}_v \\rangle}{|\\mathbf{x}_u||\\mathbf{x}_v|} = \\frac{F}{\\sqrt{EG}}\n$$\n\n따라서 좌표곡선들이 직교할 필요충분조건은 모든 (u,v)에 대해 F(u,v)=0인 것이다. 이러한 매개화를 직교 매개화(orthogonal parametrization)2라 한다.\n구면과 등각항로 (Sphere and Loxodromes)\n구면의 매개화 \\mathbf{x}(\\theta, \\phi) = (\\sin\\theta\\cos\\phi, \\sin\\theta\\sin\\phi, \\cos\\theta)에 대하여 제1 기본 형식의 계수는 E=1, F=0, G=\\sin^2\\theta이다.\n경선(meridian, \\phi = \\text{const.})과 일정한 각 \\beta를 이루는 곡선인 등각항로(loxodrome)의 방정식은 다음과 같이 유도된다. 곡선이 \\alpha(t) = \\mathbf{x}(\\theta(t), \\phi(t))로 주어질 때, \\alpha&#039;(t)와 경선의 접선벡터 \\mathbf{x}_\\theta 사이의 각은 다음과 같다.\n\n\\cos\\beta = \\frac{\\langle \\mathbf{x}_\\theta, \\alpha&#039;(t) \\rangle}{|\\mathbf{x}_\\theta||\\alpha&#039;(t)|} = \\frac{\\theta&#039;}{\\sqrt{(\\theta&#039;)^2 + (\\phi&#039;)^2 \\sin^2\\theta}}\n\n이를 정리하면 \\frac{\\theta&#039;}{\\sin\\theta} = \\pm\\phi&#039; \\cot\\beta를 얻고, 적분하면 다음 등각항로의 방정식을 얻는다.\n\n\\log\\left(\\tan\\frac{\\theta}{2}\\right) = \\pm(\\phi+c)\\cot\\beta\n\n면적 (Area)\n정칙 곡면 S 위의 유계 영역(bounded region) R이 좌표조각사상 \\mathbf{x}: U \\to S 안에 포함될 때, R의 면적(area) A(R)은 다음과 같이 정의된다.\nA(R) = \\iint_Q |\\mathbf{x}_u \\wedge \\mathbf{x}_v| \\,du\\,dv, \\quad Q = \\mathbf{x}^{-1}(R)\n또 다른 매개화 \\bar{\\mathbf{x}}: \\bar{U} \\to S가 주어졌을 때, \\bar{Q} = \\bar{\\mathbf{x}}^{-1}(R)이라 하면,\nA(R) = \\iint_Q |\\mathbf{x}_u \\wedge \\mathbf{x}_v| \\,du\\,dv = \\iint_{\\bar{Q}} |\\mathbf{x}_u \\wedge \\mathbf{x}_v| \\left| \\frac{\\partial(u,v)}{\\partial(\\bar{u},\\bar{v})} \\right| \\,d\\bar{u}\\,d\\bar{v}\n이므로, 넓이는 매개화 선택에 독립적이다.\n|\\mathbf{x}_u \\wedge \\mathbf{x}_v|^2 + \\langle \\mathbf{x}_u, \\mathbf{x}_v \\rangle^2 = |\\mathbf{x}_u|^2 |\\mathbf{x}_v|^2이므로, 피적분함수는 제1 기본 형식의 계수로 다음과 같이 표현된다.\n\n|\\mathbf{x}_u \\wedge \\mathbf{x}_v| = \\sqrt{\\langle \\mathbf{x}_u, \\mathbf{x}_u \\rangle \\langle \\mathbf{x}_v, \\mathbf{x}_v \\rangle - (\\langle \\mathbf{x}_u, \\mathbf{x}_v \\rangle)^2} = \\sqrt{EG - F^2}\n\n원환면의 면적 (Area of a Torus)\n매개화 \\mathbf{x}(u, v) = ((a + r \\cos u) \\cos v, (a + r \\cos u) \\sin v, r \\sin u)로 주어진 원환면(torus)의 제1 기본 형식 계수는 E=r^2, F=0, G=(r \\cos u + a)^2 이다. 따라서 면적 요소는 \\sqrt{EG-F^2} = r(r \\cos u + a) 이다.\n0 &lt; u &lt; 2\\pi, 0 &lt; v &lt; 2\\pi 범위에서 적분하면 원환면의 전체 면적을 얻을 수 있다.\nA(T) = \\int_0^{2\\pi} \\int_0^{2\\pi} r(r \\cos u + a) \\,du\\,dv = 2\\pi \\int_0^{2\\pi} r(r \\cos u + a) \\,du = 4\\pi^2 ra\n파푸스의 정리 (Pappus’s Theorem)\n회전축을 포함하는 평면 위의 곡선 C를 회전시켜 얻은 회전곡면(surface of revolution) S의 겉넓이 A는 생성곡선 C의 길이(l)와, 곡선 C의 무게중심(centroid)이 회전하며 그리는 원의 둘레를 곱한 값과 같다.\nA = 2\\pi \\int_0^l \\rho(s) \\, ds = l \\times (2\\pi\\bar{\\rho})\n\nl: 생성곡선(generating curve) C의 총 길이\ns: 곡선 C의 호의 길이(arc length) 매개변수\n\\rho(s): 호의 길이 s에 해당하는 곡선 위의 점에서 회전축까지의 거리입니다.\n\nFootnotes\n\n\n\\alpha&#039;(t) = \\frac{d}{dt}\\mathbf{x}(u(t), v(t)) = \\frac{\\partial \\mathbf{x}}{\\partial u}\\frac{du}{dt} + \\frac{\\partial \\mathbf{x}}{\\partial v}\\frac{dv}{dt} = \\mathbf{x}_u u&#039; + \\mathbf{x}_v v&#039; ↩\n\n\n직교 매개화(Orthogonal Parametrization)란 제1 기본 형식의 계수 중 F = \\langle \\mathbf{x}_u, \\mathbf{x}_v \\rangle = 0 인 경우에 해당한다. 이러한 좌표계는 국소적으로 직교좌표계와 유사하게 행동하기 때문에 곡면의 기하학적 분석과 계산을 매우 단순하게 만들어 준다. 예를 들어, 호의 길이 요소는 ds^2 = E\\,du^2 + G\\,dv^2로, 면적 요소는 dA = \\sqrt{EG}\\,du\\,dv로 간소화된다. 또한 크리스토펠 기호(\\Gamma_{ij}^k)의 계산이 쉬워져 측지선(geodesic)이나 평행이동(parallel transport)과 관련된 미분방정식을 다루기가 훨씬 수월해진다. 더 나아가, 만약 제2 기본 형식의 계수인 f마저 f=0이라면, 이 좌표곡선들은 그 점에서의 주곡률 방향(principal directions)과 일치하게 됩니다. 이 특별한 경우(F=f=0)에는 주곡률이 각각 k_1 = e/E와 k_2 = g/G로 매우 간단하게 구해지며, 가우스 곡률과 평균 곡률의 계산 역시 극도로 단순화된다. ↩\n\n\n"},"Study/Differential-Geometry/2-6.-Orientation-of-Surfaces":{"slug":"Study/Differential-Geometry/2-6.-Orientation-of-Surfaces","filePath":"Study/Differential Geometry/2-6. Orientation of Surfaces.md","title":"2-6. Orientation of Surfaces","links":[],"tags":[],"content":"가향 곡면(Orientable Surface)\n매개화 \\mathbf{x}(u,v)는 각 점에서의 접평면에 순서 기저(ordered basis) \\{\\mathbf{x}_u, \\mathbf{x}_v\\}를 부여함으로써 향을 결정한다. 만약 다른 매개화 \\bar{\\mathbf{x}}(\\bar{u}, \\bar{v})를 사용하면, 두 기저 \\{\\mathbf{x}_u, \\mathbf{x}_v\\}와 \\{\\bar{\\mathbf{x}}_{\\bar{u}}, \\bar{\\mathbf{x}}_{\\bar{v}}\\}는 매개변수 변환의 야코비 행렬식(Jacobian determinant) \\frac{\\partial(u,v)}{\\partial(\\bar{u},\\bar{v})}가 양수일 때만 같은 향을 결정한다.1\n정칙 곡면 S의 좌표근방 모임이 곡면 S를 덮고 어떤 점 p \\in S가 이 집합의 두 좌표근방에 속한다면, 그 점에서의 좌표변환의 야코비 행렬식이 항상 양수인 경우, S는 가향(orientable)이라고 한다. 이러한 좌표근방들의 집합을 선택하는 것을 S에 향을 부여한다(orientation)고 한다.\n네, 알겠습니다. 지시하신 단정적인 어조(~이다, ~한다)에 맞춰 단위 법선벡터장부터 다시 작성하겠습니다.\n단위 법선벡터장과 곡면의 향 (Unit Normal Vector Fields and Orientation of Surfaces)\n곡면 위의 한 점 p에는 그 점에 접하는 평면, 즉 접평면(T_p(S))이 존재한다. 이 접평면에 수직인 벡터를 법선벡터(normal vector)라 한다. 각 점에는 서로 반대 방향을 가리키는 두 개의 단위(길이가 1인) 법선벡터가 존재한다.\n단위 법선벡터장(field of unit normal vectors)이란, 곡면의 모든 점에 대해 이러한 단위 법선벡터를 하나씩, 일관되고 부드럽게(differentiable) 선택하여 붙여놓은 것을 의미한다. 여기서 ‘부드럽게’라는 조건은, 한 점에서 이웃한 점으로 이동할 때 법선벡터의 방향이 갑자기 뒤집히지 않고 연속적으로 변해야 함을 뜻한다.\n법선벡터장과 가향성(Orientability)의 관계\n정칙 곡면 S가 가향(orientable)인 것과, 그 곡면 위에 미분가능한 단위 법선벡터장(N)이 존재하는 것은 서로 동치(equivalent)이다.\n가향 곡면 (Orientable Surface)\n예를 들어, 구(sphere)는 가향 곡면이다. 구의 모든 점에서 ‘바깥쪽’을 향하는 법선벡터를 일관되게 선택할 수 있으며, 이 벡터들의 장은 구 전체에 걸쳐 부드럽게 정의된다.\n비가향 곡면 (Non-orientable Surface)\n반면 뫼비우스의 띠에서는 이것이 불가능하다. 한 점에서 ‘위’를 향하는 법선벡터를 정하고 띠를 따라 한 바퀴 돌면, 출발점으로 돌아왔을 때 법선벡터는 ‘아래’를 향하게 된다. 이처럼 방향의 일관성을 유지할 수 없으므로, 뫼비우스의 띠 위에는 전체를 덮는 부드러운 단위 법선벡터장이 존재하지 않는다. 따라서 뫼비우스의 띠는 비가향 곡면이다.\n단위 법선벡터장의 구체적인 구성\n단위 법선벡터장은 두 가지 주요 방법으로 구성될 수 있으며, 이러한 구성의 가능성 자체가 가향성을 보여준다.\n\n매개화(\\mathbf{x}(u,v)) 이용: 각 좌표 조각에서 법선벡터장 N은 접선벡터들의 외적으로 정의된다.\n\nN = \\frac{\\mathbf{x}_u \\wedge \\mathbf{x}_v}{|\\mathbf{x}_u \\wedge \\mathbf{x}_v|}\n\n가향 곡면은 여러 조각들의 이러한 N이 겹치는 부분에서 서로 같은 방향을 가리키도록 만들 수 있는 곡면이다.\n\n음함수(f(x,y,z)=c) 이용: 만약 곡면이 정칙값 c의 역상 S=f^{-1}(c)으로 표현된다면, 그래디언트 벡터(\\nabla f)는 항상 곡면에 수직이다. 따라서 다음과 같이 곡면 전체에 걸친 법선벡터장을 즉시 정의할 수 있다.\n\nN = \\frac{\\nabla f}{|\\nabla f|}\n\n이러한 법선벡터장이 존재하기 때문에, 정칙값의 역상으로 표현되는 모든 곡면은 가향이다.\nFootnotes\n\n\n어떤 곡면에 향을 부여할 수 있다(orientable)는 것은 그 곡면의 “안쪽”과 “바깥쪽”을 전체적으로 모순 없이 구분할 수 있다는 뜻이다. ↩\n\n\n"},"Study/Differential-Geometry/2-7.-A-Characterization-of-Compact-Orientable-Surfaces":{"slug":"Study/Differential-Geometry/2-7.-A-Characterization-of-Compact-Orientable-Surfaces","filePath":"Study/Differential Geometry/2-7. A Characterization of Compact Orientable Surfaces.md","title":"2-7. A Characterization of Compact Orientable Surfaces","links":[],"tags":[],"content":"정칙, 콤팩트, 가향 곡면 S가 미분가능한 함수 g에 대하여 S=g^{-1}(0)의 형태로 표현될 수 있음을 증명한다.(여기서 0은 g의 정칙값이다)\n관상 근방 (Tubular Neighborhood)의 존재성\n정칙 곡면 S와 점 p \\in S의 근방을 매개화하는 \\mathbf{x}: U \\to S가 주어졌을 때, p를 포함하는 근방 W \\subset \\mathbf{x}(U)와 어떤 양수 \\epsilon &gt; 0이 존재한다. 이때, W 안의 모든 점 q를 중심으로 하는 길이가 2\\epsilon인 법선분들은 서로 겹치지 않는다. 즉, 모든 점은 국소적으로 관상 근방(tubular neighborhood)을 갖는다.1\n\n점 p 근방의 매개화 \\mathbf{x}(u,v)를 이용하여, 곡면 위의 점에 법선벡터를 더하는 사상 F(u,v;t) = \\mathbf{x}(u,v) + tN(u,v)를 정의한다. t=0일 때 이 사상 F의 야코비 행렬식을 계산하면 |\\mathbf{x}_u \\wedge \\mathbf{x}_v|가 되어 0이 아니다. 역함수 정리(Inverse Function Theorem)에 의해, F는 점 (u_0, v_0, 0)의 어떤 근방에서 일대일 함수이다. 이는 p의 근방 W와 충분히 작은 \\epsilon &gt; 0에 대해 법선분들이 서로 겹치지 않음을 보장한다.\n\n유향 거리 함수 (Oriented Distance Function)\n가향 곡면 S의 관상 근방 V \\subset \\mathbb{R}^3이 존재한다고 가정하면, V에서 정의된 유향 거리 함수(oriented distance function) g: V \\to \\mathbb{R}는 미분가능하며, 0은 g의 정칙값이다.\n\n유향 거리 함수 g는 국소적으로 명제 1의 사상 F(u,v,t)의 역함수 F^{-1}(x,y,z) = (u(x,y,z), v(x,y,z), t(x,y,z))의 세 번째 성분 함수 t(x,y,z)와 같다. F가 국소 미분동형사상이므로, 그 역함수 F^{-1} 역시 미분가능하다. 따라서 g도 미분가능하다. dF가 특이하지 않으므로 d(F^{-1}) 역시 특이하지 않다. 이로부터 \\nabla g \\neq 0임을 보일 수 있어 0이 정칙값임을 증명한다.\n\n콤팩트 집합의 성질 (Properties of Compact Sets)\n콤팩트 집합(compact set)은 닫혀 있고(closed) 유계인(bounded) 집합이다.  콤팩트 집합은 다음의 주요 성질들을 만족한다.\n\n\n볼차노-바이어슈트라스 성질 (Bolzano-Weierstrass Property): 콤팩트 집합 K 안의 모든 무한 부분집합은 K 안에 적어도 하나의 집적점(limit point)을 갖는다.\n\n\n하이네-보렐 성질 (Heine-Borel Property): 콤팩트 집합 K의 모든 열린 덮개(open cover)는 유한 부분 덮개(finite subcover)를 갖는다.\n\n\n르베그 수 성질 (Lebesgue Number Property): 콤팩트 집합 K의 열린 덮개 \\{U_\\alpha\\}에 대하여, 어떤 두 점 p,q \\in K의 거리가 d(p,q) &lt; \\delta이면 그 두 점이 어떤 동일한 U_\\alpha에 속하게 되는 양수 \\delta &gt; 0가 존재한다.\n\n\n정칙, 콤팩트, 가향 곡면 S \\subset \\mathbb{R}^3은 (균일한 두께를 갖는) 전역적인 관상 근방을 갖는다.\n주요 정리 (Main Theorem)\n정칙, 콤팩트, 가향 곡면 S \\subset \\mathbb{R}^3에 대하여, S를 포함하는 열린 집합 V \\subset \\mathbb{R}^3 위에 정의된 미분가능한 함수 g: V \\to \\mathbb{R}가 존재하여, 0은 g의 정칙값이고 S = g^{-1}(0)를 만족한다.2\nFootnotes\n\n\n관상 근방(Tubular Neighborhood)이란 정칙 곡면 S에 일정한 ‘두께’를 부여한 영역으로 비유할 수 있다. 이 ‘두꺼워진’ 공간 V \\supset S의 핵심적인 특징은, V 안의 모든 점 P를 지나는 S의 법선이 유일하게 존재한다는 점이다. 즉, 관상 근방 안의 모든 점은 원래 곡면 S 위의 어떤 한 점과 유일하게 짝지어진다. 이 근방은 S 위의 각 점 p에서 법선 방향으로 뻗어 나가는 작은 열린 선분 I_p들의 합집합으로 구성되는데, 관상 근방이 존재한다는 것은 이 선분들의 길이(2\\epsilon)를 충분히 작게 조절하면, 서로 다른 두 점 p와 q에서 시작된 선분 I_p와 I_q가 절대로 서로 만나거나 겹치지 않음(p \\neq q일 때 I_p \\cap I_q = \\emptyset)을 의미한다. 곡면이 매끄럽기(정칙 곡면이기) 때문에 국소적으로 보면 곡면의 곡률 때문에 법선들의 방향이 조금씩 달라지므로, 법선분들의 길이를 아주 짧게 만들면 서로 부딪히지 않는다. 특히 곡면이 콤팩트(compact)할 경우, 곡면 전체에 적용되는 균일한 두께 \\epsilon을 찾을 수 있다. ↩\n\n\n관상 근방이 있다는 사실은, 곡면 주변의 모든 점에서 곡면까지의 거리를 유일한 방법으로 잴 수 있는 ‘측정 가능한 영역’을 보장해줍니다. 이 영역 위에서 ‘부호가 있는 거리’라는 간단한 아이디어로 함수 g를 정의하면, 이 함수는 자연스럽게 S를 자신의 영점 집합(g^{−1}(0))으로 가지며, 동시에 0을 정칙값으로 만드는 모든 조건을 만족하게 된다. ↩\n\n\n"},"Study/Differential-Geometry/2-8.-A-Geometric-Deﬁnition-of-Area":{"slug":"Study/Differential-Geometry/2-8.-A-Geometric-Deﬁnition-of-Area","filePath":"Study/Differential Geometry/2-8. A Geometric Deﬁnition of Area.md","title":"2-8. A Geometric Deﬁnition of Area","links":[],"tags":[],"content":"이 절의 목표는 2-5절에서 소개된 면적 공식에 대한 기하학적 정당성을 부여하는 것이다. 이는 곡면 위의 영역을 평면 영역들의 합으로 근사하고, 그 극한을 통해 면적을 정의한 뒤, 이 정의가 적분 공식과 일치함을 보이는 방식으로 이루어진다.\n면적의 기하학적 정의 (Geometric Definition of Area)\n곡면 S 위의 유계 영역 R의 면적은 다음과 같은 기하학적 과정을 통해 정의된다.\n\n\n분할 (Partition): 영역 R을 유한개의 작은 부분 영역 R_i들로 나눈다(R = \\cup_i R_i). 이때 분할 P의 노름(norm) \\mu는 모든 R_i의 지름(diameter) 중 가장 큰 값으로 정의된다.\n\n\n접평면으로의 사영 (Projection onto Tangent Plane): 각 부분 영역 R_i에서 임의의 점 p_i를 선택하고, R_i를 점 p_i에서의 접평면 T_{p_i}(S) 위로 정사영시킨다. 이 사영된 영역을 \\bar{R}_i라 한다.\n\n\n근사와 극한 (Approximation and Limit): 모든 사영된 영역의 넓이의 합 \\sum_i A(\\bar{R}_i)는 영역 R의 넓이에 대한 근삿값이다. 분할을 점점 더 잘게 만들어 노름 \\mu가 0으로 갈 때, 이 합이 선택 과정에 관계없이 일정한 값으로 수렴하면, 그 극한값을 영역 R의 면적(area)으로 정의한다.\n\n\nA(R) = \\lim_{\\mu_n \\to 0} \\sum_i A(\\bar{R}_i)\n\n면적 공식 (Area Formula)\n정칙 곡면 S의 좌표근방 \\mathbf{x}(U)에 포함된 유계 영역 R = \\mathbf{x}(Q)는 면적을 가지며, 그 값은 다음과 같이 주어진다.\nA(R) = \\iint_Q |\\mathbf{x}_u \\wedge \\mathbf{x}_v| \\,du\\,dv\n\n\n각각의 작은 사영 넓이 A(\\bar{R}_i)는 다중적분의 변수변환 공식을 통해 매개변수 (u,v)에 대한 적분으로 표현된다. A(\\bar{R}_i) = \\iint_{Q_i} \\left| \\frac{\\partial(\\bar{x},\\bar{y})}{\\partial(u,v)} \\right| du\\,dv 여기서 (\\bar{x},\\bar{y})는 접평면의 직교좌표이다. 점 p_i에서 야코비안 \\left| \\frac{\\partial(\\bar{x},\\bar{y})}{\\partial(u,v)} \\right|의 값은 면적 요소 |\\mathbf{x}_u \\wedge \\mathbf{x}_v|의 값과 같다. 적분 평균값 정리에 의해, A(\\bar{R}_i)는 근사적으로 p_i에서의 면적 요소 값과 Q_i의 넓이의 곱으로 나타낼 수 있다. 따라서 합 \\sum A(\\bar{R}_i)는 적분 \\iint_Q |\\mathbf{x}_u \\wedge \\mathbf{x}_v| \\, du\\,dv의 리만 합(Riemann sum)에 해당한다. 분할의 노름이 0으로 가는 극한에서, 이 리만 합은 적분값으로 수렴한다.\n"},"Study/Differential-Geometry/2-Appendix.-A-Brief-Review-of-Continuity-and-Differentiability":{"slug":"Study/Differential-Geometry/2-Appendix.-A-Brief-Review-of-Continuity-and-Differentiability","filePath":"Study/Differential Geometry/2-Appendix. A Brief Review of Continuity and Differentiability.md","title":"2-Appendix. A Brief Review of Continuity and Differentiability","links":[],"tags":[],"content":"\\mathbb{R}^n에서의 연속성 (Continuity in \\mathbb{R}^n)\n열린 공과 근방 (Open Ball and Neighborhood)\n점 p_0 \\in \\mathbb{R}^n을 중심으로 하고 반지름이 \\epsilon &gt; 0인 열린 공(open ball)은 집합 B_\\epsilon(p_0) = \\{p \\in \\mathbb{R}^n; |p - p_0| &lt; \\epsilon\\}이다.  점 p를 포함하는 열린 집합을 p의 근방(neighborhood)이라 한다.\n연속 함수 (Continuous Map)\n사상 F: U \\subset \\mathbb{R}^n \\to \\mathbb{R}^m이 점 p \\in U에서 연속이라는 것은, 임의의 \\epsilon &gt; 0에 대해 F(B_\\delta(p)) \\subset B_\\epsilon(F(p))를 만족하는 \\delta &gt; 0가 존재함을 의미한다.\n\nF가 연속일 필요충분조건은 그 성분 함수들 f_i: U \\to \\mathbb{R}이 모두 연속인 것이다\nF가 연속일 필요충분조건은 모든 열린 집합 V \\subset \\mathbb{R}^m의 역상 F^{-1}(V)가 열린 집합인 것이다.\n연속 함수의 합성은 연속 함수이다.\n\n닫힌 집합 (Closed Set)\n집합 F \\subset \\mathbb{R}^n이 자신의 모든 집적점(limit point)을 포함할 때 닫혀있다고 한다.  집합 F가 닫혀있는 것과 그 여집합 \\mathbb{R}^n - F가 열려있는 것은 동치이다.\n코시 수열 (Cauchy Sequence)\n\\mathbb{R}^n 안의 수열 \\{p_i\\}가 수렴할 필요충분조건은 코시 수열인 것이다.\n중간값 정리 (Intermediate Value Theorem)\n닫힌 구간 [a,b]에서 연속인 함수 f에 대하여 f(a)와 f(b)의 부호가 다르면, f(c)=0인 c \\in (a,b)가 존재한다.\n최대-최소 정리 (Extreme Value Theorem)\n닫힌 구간 [a,b]에서 연속인 함수는 그 구간 내에서 최댓값과 최솟값을 갖는다.\n\\mathbb{R}^n에서의 미분가능성 (Differentiability in \\mathbb{R}^n)\n미분가능한 함수 (Differentiable Function)\n함수가 미분가능하다는 것은 모든 차수의 편도함수가 존재하고 연속임을 의미한다 (C^\\infty 등급). 미분가능한 함수에 대하여 혼합 편도함수는 미분 순서에 무관하다(예: f_{xy} = f_{yx}).\n미분가능한 사상 (Differentiable Map)\n사상 F: U \\subset \\mathbb{R}^n \\to \\mathbb{R}^m의 모든 성분 함수가 미분가능할 때, F를 미분가능하다고 한다.\n사상의 미분 (Differential of a Map)\n미분가능한 사상 F: U \\subset \\mathbb{R}^n \\to \\mathbb{R}^m의 점 p \\in U에서의 미분(differential)은 선형사상 dF_p: \\mathbb{R}^n \\to \\mathbb{R}^m으로 정의된다.  이는 p를 지나는 곡선 \\alpha(t) (단, \\alpha(0)=p, \\alpha&#039;(0)=w)의 접선벡터 w를 곡선 (F \\circ \\alpha)(t)의 F(p)에서의 접선벡터 (F \\circ \\alpha)&#039;(0)으로 보낸다.\n\ndF_p의 표준기저에 대한 행렬은 야코비 행렬(Jacobian matrix)이다.\n\n연쇄 법칙 (Chain Rule for Maps)\n미분가능한 사상 F와 G의 합성에 대하여 d(G \\circ F)_p = dG_{F(p)} \\circ dF_p가 성립한다.\n역함수 정리 (Inverse Function Theorem)\n미분가능한 사상 F: U \\subset \\mathbb{R}^n \\to \\mathbb{R}^n에 대하여, 만약 점 p \\in U에서 미분 dF_p가 동형사상(isomorphism)이면, F는 p의 어떤 근방에서 미분동형사상(diffeomorphism)이다.1\n\\mathbb{R}^n의 열린 집합 U에서 \\mathbb{R}^n으로 가는 함수 F: U \\to \\mathbb{R}^n가 C^1 이고, 야코비 행렬식이 0이 아니면, 점 p_0와 그 상 F(p_0)를 각각 포함하는 적절한 열린 근방 V와 W가 존재하여, 함수 F는 V에서 W로 가는 미분동형사상(diffeomorphism)이 된다. 즉, F를 V에 국한시키면 이 함수는 전단사 함수이며, 그 역함수 F^{-1}: W \\to V 또한 존재하고 C^1 함수가 된다.\nFootnotes\n\n\n역함수 정리는 어떤 함수가 복잡한 비선형 함수라도 국소적으로 미분가능하고, 역함수를 가지면, 그 지점 근방에서는 함수를 마치 일대일 대응처럼 다룰 수 있고 그 역함수 또한 매끄럽다는 것을 보장해준다. ↩\n\n\n"},"Study/Differential-Geometry/3-2.-The-Deﬁnition-of-the-Gauss-Map-and-Its-Fundamental-Properties":{"slug":"Study/Differential-Geometry/3-2.-The-Deﬁnition-of-the-Gauss-Map-and-Its-Fundamental-Properties","filePath":"Study/Differential Geometry/3-2. The Deﬁnition of the Gauss Map and Its Fundamental Properties.md","title":"3-2. The Deﬁnition of the Gauss Map and Its Fundamental Properties","links":[],"tags":[],"content":"이 절에서는 정칙이고 가향인 곡면 S에 방향(orientation) N이 주어졌다고 가정한다.\n가우스 사상 (Gauss Map)\n방향이 주어진 곡면 S \\subset \\mathbb{R}^3에 대하여, 사상 \\mathbf{N}: S \\to S^2 \\subset \\mathbb{R}^3는 S의 각 점 p에 단위 법선벡터 N(p)를 대응시킨다. 여기서 S^2는 반지름이 1인 단위구면 이다.\nS^2 = \\{(x, y, z) \\in \\mathbb{R}^2: x^2+y^2+z^2 = 1\\}\n이렇게 정의된 사상 \\mathbf{N}을 곡면 S의 가우스 사상(Gauss map)이라 한다.\n가우스 사상 \\mathbf{N}은 미분가능하다. 점 p \\in S에서 N의 미분 dN_p는 T_p(S)에서 T_{N(p)}(S^2)로 가는 선형사상이다. T_p(S)와 T_{N(p)}(S^2)는 \\mathbb{R}^3에서 평행한 평면들이므로, 동일한 벡터 공간으로 볼 수 있다. 따라서 dN_p는 T_p(S) 위의 선형 연산자로 간주할 수 있다.\ndN_p는 점 p 근방에서 법선벡터 N이 어떻게 변하는지를 측정한다. 곡선에서 이 변화율이 곡률이라는 하나의 수로 주어졌다면, 곡면에서는 이 변화율이 선형사상으로 특징지어진다.\n제2 기본 형식 (The Second Fundamental Form)\n가우스 사상의 미분 dN_p: T_p(S) \\to T_p(S)는 자기수반(self-adjoint) 선형사상이다.\ndN_p가 선형사상이므로, T_p(S)의 기저 \\{\\mathbf{x}_u, \\mathbf{x}_v\\}에 대해 \\langle dN_p(\\mathbf{x}_u), \\mathbf{x}_v \\rangle = \\langle \\mathbf{x}_u, dN_p(\\mathbf{x}_v) \\rangle임을 보이면 충분하다. dN_p(\\mathbf{x}_u) = N_u이고 dN_p(\\mathbf{x}_v) = N_v이므로, 우리는 \\langle N_u, \\mathbf{x}_v \\rangle = \\langle N_v, \\mathbf{x}_u \\rangle임을 보이면 된다. \\langle N, \\mathbf{x}_u \\rangle = 0과 \\langle N, \\mathbf{x}_v \\rangle = 0을 각각 v와 u에 대해 편미분하면 다음을 얻는다.\n\\begin{align*}\n\\langle N_v, \\mathbf{x}_u \\rangle + \\langle N, \\mathbf{x}_{uv} \\rangle = 0 \\\\\n\\langle N_u, \\mathbf{x}_v \\rangle + \\langle N, \\mathbf{x}_{vu} \\rangle = 0\n\\end{align*}\n따라서 \\langle N_u, \\mathbf{x}_v \\rangle = -\\langle N, \\mathbf{x}_{uv} \\rangle = \\langle N_v, \\mathbf{x}_u \\rangle이다.\nT_p(S) 위에 정의된 이차 형식1\nII_p(v) = -\\langle dN_p(v), v \\rangle\n을 점 p에서 곡면 S의 제2 기본 형식(second fundamental form)이라 한다.\n법곡률 (Normal Curvature)\n곡면 S 위의 정칙 곡선 C가 점 p \\in S를 지난다고 하자. C의 점 p에서의 곡률을 k라 하고, C의 법선벡터를 \\mathbf{n}, S의 법선벡터를 N이라 할 때, \\cos\\theta = \\langle \\mathbf{n}, N \\rangle이다. 이때 수 k_n = k \\cos\\theta를 점 p에서 곡선 C \\subset S의 법곡률(normal curvature)이라 한다.\n법곡률 k_n은 곡률벡터 k\\mathbf{n}을 곡면의 법선 방향으로 정사영한 것의 부호 있는 길이가 된다.\ns를 호의 길이로 갖는 곡선 \\alpha(s) \\subset S가 \\alpha(0)=p를 만족할 때, 제2 기본 형식의 값은 다음과 같이 법곡률과 같다.\nII_p(\\alpha&#039;(0)) = -\\langle dN_p(\\alpha&#039;(0)), \\alpha&#039;(0) \\rangle = -\\langle N&#039;(0), \\alpha&#039;(0) \\rangle = \\langle N(0), \\alpha&#039;&#039;(0) \\rangle = \\langle N, k\\mathbf{n} \\rangle = k_n(p)\n\n정리 2 (뫼니에 정리, Meusnier’s Theorem). 한 점 p \\in S를 지나고 같은 접선을 갖는 곡면 S 위의 모든 곡선들은 그 점에서 같은 법곡률을 갖는다.\n이 정리에 의해 한 점 p에서 주어진 방향으로의 법곡률을 이야기할 수 있다. 단위벡터 v \\in T_p(S)가 주어졌을 때, v와 N(p)를 포함하는 평면과 곡면 S의 교선을 점 p에서 v 방향의 법절단면(normal section)이라 한다. 법절단면의 곡률은 그 방향의 법곡률의 절댓값과 같다.\n\n주곡률과 주방향 (Principal Curvatures and Principal Directions)\ndN_p가 자기수반이므로, T_p(S)에는 dN_p(e_1) = -k_1 e_1, dN_p(e_2) = -k_2 e_2를 만족하는 정규직교기저 \\{e_1, e_2\\}가 존재한다. 이때 k_1과 k_2는 제2 기본 형식 II_p가 단위 원 위에서 갖는 최댓값과 최솟값, 즉 법곡률의 극값이다.\n정의 4 (Definition 4). 최대 법곡률 k_1과 최소 법곡률 k_2를 점 p에서의 주곡률(principal curvatures)이라 하고, 이에 대응하는 고유벡터 e_1, e_2의 방향을 주방향(principal directions)이라 한다.\n오일러 공식 (Euler’s Formula): 주방향 e_1과 각 \\theta를 이루는 단위벡터 v \\in T_p(S) 방향의 법곡률 k_n은 다음과 같다.\nk_n = II_p(v) = k_1 \\cos^2\\theta + k_2 \\sin^2\\theta\n\n정의 5 (Definition 5). 곡면 S 위의 정칙 연결 곡선 C의 모든 점 p \\in C에서 C의 접선이 주방향일 때, C를 S의 곡률선(line of curvature)이라 한다.\n정리 3 (올랭드 로드리그, Olinde Rodrigues). 연결된 정칙 곡선 C \\subset S가 곡률선이 될 필요충분조건은 임의의 매개화 \\alpha(t)에 대해 N&#039;(t) = \\lambda(t)\\alpha&#039;(t)를 만족하는 것이다. 여기서 N(t) = N \\circ \\alpha(t)이고, \\lambda(t)는 미분가능한 함수이다. 이 경우, -\\lambda(t)는 \\alpha&#039;(t) 방향의 주곡률이다.\n\n가우스 곡률과 평균 곡률 (Gaussian and Mean Curvatures)\n정의 6 (Definition 6). 점 p \\in S에서 가우스 사상의 미분 dN_p: T_p(S) \\to T_p(S)에 대하여,\n\ndN_p의 행렬식(determinant)을 점 p에서 S의 가우스 곡률(Gaussian curvature) K라 한다.\ndN_p의 대각합(trace)의 -1/2배를 점 p에서 S의 평균 곡률(mean curvature) H라 한다.\n\n주곡률 k_1, k_2를 이용하여 다음과 같이 표현할 수 있다.\nK = k_1 k_2\n\nH = \\frac{k_1 + k_2}{2}\n\n정의 7 (Definition 7). 곡면 S 위의 한 점은 다음과 같이 분류된다.\n\n타원점 (Elliptic point): \\det(dN_p) &gt; 0. 이때 K&gt;0이고, 두 주곡률은 같은 부호를 갖는다.\n쌍곡점 (Hyperbolic point): \\det(dN_p) &lt; 0. 이때 K&lt;0이고, 두 주곡률은 다른 부호를 갖는다.\n포물점 (Parabolic point): \\det(dN_p) = 0이고 dN_p \\neq 0. 이때 K=0이지만 주곡률 중 하나는 0이 아니다.\n평탄점 (Planar point): dN_p = 0. 이때 K=H=0이다.\n\n정의 8 (Definition 8). 점 p \\in S에서 k_1 = k_2이면 p를 배꼽점(umbilical point)이라 한다. 특히, 평탄점(k_1 = k_2 = 0)은 배꼽점이다.\n정리 4 (Proposition 4). 연결된 곡면 S의 모든 점이 배꼽점이면, S는 평면의 일부이거나 구면의 일부이다.\n\n점근 방향과 듀팽의 지시곡선 (Asymptotic Directions and Dupin Indicatrix)\n정의 9 (Definition 9). 점 p \\in S에서 법곡률이 0이 되는 T_p(S)의 방향을 점근 방향(asymptotic direction)이라 한다. S 위의 정칙 연결 곡선 C의 각 점 p에서 C의 접선 방향이 점근 방향일 때, C를 점근선(asymptotic curve)이라 한다.\n타원점에서는 점근 방향이 존재하지 않는다.\n듀팽의 지시곡선 (Dupin Indicatrix): 점 p에서의 듀팽 지시곡선은 II_p(w) = \\pm 1을 만족하는 벡터 w \\in T_p(S)들의 집합이다. \\{e_1, e_2\\}를 주방향의 정규직교기저라 하고 w = \\xi e_1 + \\eta e_2라 하면, 지시곡선의 방정식은 다음과 같다.\nk_1 \\xi^2 + k_2 \\eta^2 = \\pm 1\n\n\n타원점 (K&gt;0): 지시곡선은 타원이다.\n쌍곡점 (K&lt;0): 지시곡선은 한 쌍의 공통 점근선을 갖는 두 쌍곡선이다. 이 점근선 방향이 바로 점근 방향이다. 따라서 쌍곡점에서는 정확히 두 개의 점근 방향이 존재한다.\n포물점 (K=0, H \\neq 0): 지시곡선은 한 쌍의 평행한 직선이다. 이 직선들의 공통 방향이 유일한 점근 방향이다.\n\n정의 10 (Definition 10). 점 p \\in S에서 영이 아닌 두 벡터 w_1, w_2 \\in T_p(S)가 \\langle dN_p(w_1), w_2 \\rangle = 0을 만족할 때, 이 두 벡터는 공액(conjugate)이라고 한다. 두 방향 r_1, r_2가 공액이라는 것은 각각에 평행한 영이 아닌 벡터들이 공액 관계에 있다는 뜻이다.\n주방향은 항상 서로 공액이다. 점근 방향은 자기 자신과 공액이다. 배꼽점이 아닌 점에서, 두 방향 r_1, r_2가 주방향 e_1과 이루는 각을 각각 \\theta, \\phi라 할 때, 두 방향이 공액일 필요충분조건은 다음과 같다.\nk_1 \\cos\\theta \\cos\\phi = -k_2 \\sin\\theta \\sin\\phi\n\nFootnotes\n\n\n이차 형식은 자기수반 행렬(A = A^*)에 대해 정의되는 함수 Q(x) = \\langle Ax, x \\rangle = x ^* A x이며, 이때에만 그 값이 항상 실수이고 내적 구조를 기반으로 해석 가능하다. ↩\n\n\n"},"Study/Differential-Geometry/Differential-Geometry":{"slug":"Study/Differential-Geometry/Differential-Geometry","filePath":"Study/Differential Geometry/Differential Geometry.md","title":"Differential Geometry","links":["Study/Differential-Geometry/1-2.-Parametrized-Curves","Study/Differential-Geometry/1-3.-Regular-Curves;-Arc-Length","Study/Differential-Geometry/1-4.-The-Vector-Product-in-R3","1.5-The-Local-Theory-of-Curves-Parametrized-by-Arc-Length","Study/Differential-Geometry/1-6.-The-Local-Canonical-Form","Study/Differential-Geometry/1-7.-Global-Properties-of-Plane-Curves","Study/Differential-Geometry/2-2.-Regular-Surfaces;-Inverse-Images-of-Regular-Value","Study/Differential-Geometry/2-3.-Change-of-Parameters;-Differentiable-Functions-on-Surface","Study/Differential-Geometry/2-4.-The-Tangent-Plane;The-Differential-of-a-Map","Study/Differential-Geometry/2-5.-The-First-Fundamental-Form;-Area","Study/Differential-Geometry/2-6.-Orientation-of-Surfaces","Study/Differential-Geometry/2-7.-A-Characterization-of-Compact-Orientable-Surfaces","Study/Differential-Geometry/2-8.-A-Geometric-Deﬁnition-of-Area","Study/Differential-Geometry/2-Appendix.-A-Brief-Review-of-Continuity-and-Differentiability","Study/Differential-Geometry/3-2.-The-Deﬁnition-of-the-Gauss-Map-and-Its-Fundamental-Properties"],"tags":[],"content":"Curves\n1-2. Parametrized Curves\n1-3. Regular Curves; Arc Length\n1-4. The Vector Product in R3\n1.5 The Local Theory of Curves Parametrized by Arc Length\n1-6. The Local Canonical Form\n1-7. Global Properties of Plane Curves\nRegualr Surfaces\n2-2. Regular Surfaces; Inverse Images of Regular Value\n2-3. Change of Parameters; Differentiable Functions on Surface\n2-4. The Tangent Plane;The Differential of a Map\n2-5. The First Fundamental Form; Area\n2-6. Orientation of Surfaces\n2-7. A Characterization of Compact Orientable Surfaces\n2-8. A Geometric Deﬁnition of Area\n2-Appendix. A Brief Review of Continuity and Differentiability\nThe Geometry of the Gauss map\n3-2. The Deﬁnition of the Gauss Map and Its Fundamental Properties"},"Study/Dump/양의-정부호(Positive-Definite,-PD)와-양의-준정부호(Positive-Semidefinite,-PSD)":{"slug":"Study/Dump/양의-정부호(Positive-Definite,-PD)와-양의-준정부호(Positive-Semidefinite,-PSD)","filePath":"Study/Dump/양의 정부호(Positive Definite, PD)와 양의 준정부호(Positive Semidefinite, PSD).md","title":"양의 정부호(Positive Definite, PD)와 양의 준정부호(Positive Semidefinite, PSD)","links":[],"tags":[],"content":"\n양의 정부호(Positive Definite, PD) 행렬 A는 모든 비영벡터 x에 대해\n\nx^T A x &gt; 0\n를 만족하는 대칭 행렬입니다.\n\n\n즉, 모든 고유값이 양수입니다.\n\n\n양의 준정부호(Positive Semidefinite, PSD) 행렬 A는 모든 x에 대해\n\n\n  x^T A x \\geq 0\n를 만족하는 대칭 행렬입니다.\n\n즉, 모든 고유값이 0 이상입니다.\n"},"Study/Dump/유한차원에서-전단사":{"slug":"Study/Dump/유한차원에서-전단사","filePath":"Study/Dump/유한차원에서 전단사.md","title":"유한차원에서 전단사","links":[],"tags":[],"content":"네, 유한 차원에서 어떤 함수가 부분집합으로의 전단사 함수(bijective function) 라면, 그 함수는 해당 부분집합 위에서 전사(surjective)라는 의미이며, 따라서 그 부분집합 전체와 같아집니다. 이를 정확하게 살펴보겠습니다.\n유한 차원에서 단사이면 전사임\n만약 f: W \\to W 가 유한 차원 벡터공간 W 에서 자기 자신으로 가는 선형 변환이고, 단사라면 전사임을 보일 수 있습니다.\n핵 차원이 0이면 전사\n선형 변환 f: W \\to W 에 대해 기본 차원 정리(Rank-Nullity Theorem) 를 적용하면,\n\\dim W = \\dim (\\ker f) + \\dim (\\operatorname{im} f)\n여기서 f 가 단사(injective) 라는 것은 \\ker f = \\{0\\} 임을 의미하므로,\n\\dim W = 0 + \\dim (\\operatorname{im} f) = \\dim (\\operatorname{im} f)\n즉, 상(Image)의 차원이 원래 공간과 같으므로 전사(surjective)이다. 따라서 \\operatorname{im} f = W 가 되어 f 는 전사적(surjective) 이다.\n결론:\n유한 차원 벡터공간 W 에서 선형 변환 f: W \\to W 가 단사이면, 반드시 전사이다.\n유한 차원에서 전사이면 단사임\n반대로, 만약 f: W \\to W 가 전사(surjective) 라면, \\operatorname{im} f = W 이므로\n\\dim (\\operatorname{im} f) = \\dim W\n기본 차원 정리에 의해\n\\dim W = \\dim (\\ker f) + \\dim (\\operatorname{im} f)\n인데, \\dim (\\operatorname{im} f) = \\dim W 이므로,\n\\dim W = \\dim (\\ker f) + \\dim W\n이 성립하려면 \\dim (\\ker f) = 0, 즉 \\ker f = \\{0\\} 이어야 합니다. 따라서 f 는 단사(injective) 입니다.\n결론:\n유한 차원 벡터공간 W 에서 선형 변환 f: W \\to W 가 전사이면, 반드시 단사이다.\n최종 결론\n유한 차원 벡터공간 W 위에서 선형 변환 f: W \\to W 가 단사이면 전사이고, 전사이면 단사이므로, 결국 전단사(bijective) 가 됩니다.\n즉, 유한 차원에서는 단사와 전사가 동치이며, 전단사이면 그 이미지는 원래 공간 전체와 같습니다.\n따라서 유한 차원에서 어떤 함수가 부분집합으로의 전단사 함수라면, 그 부분집합과 전체가 같아진다는 것이 성립합니다."},"Study/Dump/카탈란-수(Catalan-Number)란":{"slug":"Study/Dump/카탈란-수(Catalan-Number)란","filePath":"Study/Dump/카탈란 수(Catalan Number)란?.md","title":"카탈란 수(Catalan Number)란?","links":[],"tags":[],"content":"카탈란 수는 조합론에서 매우 중요한 수열 중 하나로, 여러 가지 조합적 문제에서 등장하는 계수입니다.\n카탈란 수의 일반적인 정의는 다음과 같습니다.\nn번째 카탈란 수 C_n은 다음과 같이 주어집니다.\nC_n = \\frac{1}{n+1} \\binom{2n}{n} = \\frac{(2n)!}{(n+1)!n!}, \\quad n \\geq 0\n카탈란 수의 조합적 해석\n카탈란 수는 다양한 조합 문제에서 등장합니다. 대표적인 몇 가지 예를 살펴보겠습니다.\n1. 올바른 괄호 문자열의 개수\n\n길이가 2n인 문자열에서 &#039;(&#039;와 &#039;)&#039;를 사용하여 올바른 괄호 문자열을 만들 수 있는 개수는 C_n입니다.\n예를 들어, n = 3일 때, 가능한 올바른 괄호 문자열은:\n\n”((()))”\n”(()())”\n”(())()”\n”()(())”\n”()()()”\n→ 총 5개이며, 이는 C_3 = 5와 같습니다.\n\n\n\n2. 이진 트리(Binary Tree)의 개수\n\n노드가 n개인 이진 트리를 구성하는 방법의 수는 C_n입니다.\n예를 들어, n = 3인 경우 가능한 이진 트리의 개수는 5개이며, 이는 C_3 = 5와 동일합니다.\n\n3. 격자 경로(Lattice Path) 문제\n\nn \\times n 격자에서 대각선을 넘지 않는 경로의 개수는 C_n입니다.\n즉, (0,0)에서 (n,n)으로 가는 경로 중에서 항상 대각선 아래에만 위치하는 경로를 찾는 문제에서 등장합니다.\n\n4. 다각형의 삼각 분할(Triangulation of Polygon)\n\n(n+2)개의 변을 가진 볼록 다각형을 삼각형으로 나누는 방법의 수는 C_n입니다.\n예를 들어, 오각형(5변)에서 삼각형으로 나누는 방법은 5가지이며, 이는 C_3 = 5와 같습니다.\n\n5. 스택을 이용한 정렬 가능한 순열(Stack-Sortable Permutations)\n\n스택을 이용하여 정렬할 수 있는 길이 n의 순열의 개수는 C_n입니다.\n\n카탈란 수의 첫 몇 개 값\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnC_n011122354145426132\n이 수들은 올바른 괄호 문자열의 개수, 이진 트리의 개수, 다각형의 삼각 분할 방법 등의 문제에서 같은 값을 가집니다.\n카탈란 수의 유도 과정\n카탈란 수의 공식:\nC_n = \\frac{1}{n+1} \\binom{2n}{n}\n이 공식은 이항 계수(Binomial Coefficient)를 이용하여 유도할 수 있습니다.\n\n이항 계수 \\binom{2n}{n} 는 2n개의 요소 중 n개를 선택하는 경우의 수입니다.\n그러나 이 경우 모든 가능한 경로를 고려하는 것이므로, 불가능한 경로(대각선을 넘는 경로)를 제외해야 합니다.\n이를 반영하기 위해 \\frac{1}{n+1}을 곱하여 조정합니다.\n\n카탈란 수의 점화식(Recurrence Relation)\n카탈란 수는 다음과 같은 점화식을 만족합니다.\nC_n = \\sum_{k=0}^{n-1} C_k C_{n-1-k}, \\quad C_0 = 1\n이 점화식은 괄호 문자열을 구성하는 방법이나 이진 트리를 구성하는 방법을 분석하면 자연스럽게 도출됩니다.\n결론\n\n카탈란 수는 다양한 조합 문제에서 등장하는 중요한 수열이다.\n이항 계수와 밀접한 관계가 있으며, 점화식으로도 정의될 수 있다.\n올바른 괄호 문자열, 이진 트리, 격자 경로, 다각형 분할 등 다양한 문제에서 동일한 수가 등장한다.\n\n카탈란 수는 조합론에서 매우 중요한 역할을 하므로, 많은 경우에 유용하게 사용됩니다!"},"Study/Linear-Algebra/y=mx에-대한-대칭과-사영":{"slug":"Study/Linear-Algebra/y=mx에-대한-대칭과-사영","filePath":"Study/Linear Algebra/y=mx에 대한 대칭과 사영.md","title":"y=mx에 대한 대칭과 사영","links":[],"tags":[],"content":"직선 y = mx에 대한 대칭 변환과 사영 변환을 찾고자 합니다. 일반적인 표준기저에서 해당 식을 찾는 과정은 복잡하므로, 새로운 기저를 이용해 다시 표준변환하는 과정을 설명해보겠습니다.\n개념정리\nT를 유한 차원 벡터 공간 V 위의 선형 연산자라고 하고, \\beta와 \\beta&#039;를 V의 순서 있는 기저라고 하자. Q를 \\beta&#039;-좌표를 \\beta-좌표로 변환하는 기저 변환 행렬이라고 가정하면, 다음이 성립한다.\n[T]_{\\beta&#039;} = Q^{-1} [T]_{\\beta} Q\nT의 표준기저 표현을 찾는 것은 어려우므로, 새로운 기저 \\beta&#039;를 선택하여 T를 표현하고자 합니다.\n새로운 기저의 구성\n대칭 변환을 쉽게 표현하기 위해, 직선 y = mx에 평행한 벡터와 수직인 벡터를 새로운 기저로 선택합니다. 왜냐하면 평행한 방향의 벡터는 그대로 유지하고, 수직한 벡터는 방향이 반전되기 때문입니다.\n\n평행한 벡터: (1, m)\n직선의 방향 벡터로, 기울기 m을 가진 직선과 평행합니다.\n수직인 벡터: (-m, 1)\n평행한 벡터와 수직을 이루는 벡터입니다. (1,m) \\cdot (-m,1) = -m + m = 0\n\n이렇게 구성된 새로운 기저 \\beta&#039;는 다음과 같습니다.\n\\beta&#039; = \\{(1, m), (-m, 1)\\}\n대칭 변환 행렬 계산\n대칭 변환 T가 새로운 기저 \\beta&#039;에서 어떻게 표현되는지 알아보겠습니다.\n  T(1, m) &amp;= 1(1, m) + 0(-m, 1) = (1, m)\\\\\n  T(-m, 1) &amp;= 0(1, m) + 1(-m, 1) = (-m, 1)\n\\end{align*}\nT는 새로운 기저 \\beta&#039;에서 대칭축과 평행한 벡터는 유지하고, 수직한 벡터의 방향을 바꾸는 방식으로 동작합니다. 따라서 T의 행렬 표현은 다음과 같습니다.\n[T]_{\\beta&#039;} = \n\\begin{bmatrix}\n1 &amp; 0 \\\\\n0 &amp; -1\n\\end{bmatrix}\n이제, [T]_{\\beta&#039;} = Q^{-1} [T]_{\\beta} Q 관계식을 이용하면, [T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1}를 구할 수 있습니다.\n기저 변환 행렬 Q\n기저 변환 행렬 Q는 새로운 기저 \\beta&#039;를 기존 표준 기저 \\beta로 나타내는 역할을 합니다.\n1. 좌표 변환을 이용한 Q 계산\nQ = [I_V]_{\\beta&#039;}^{\\beta}\n\n(1, m)의 표준 기저 표현\n\n  I_V(1, m) = 1(1, 0) + m(0, 1) = \n  \\begin{bmatrix}\n  1 \\\\\n  m\n  \\end{bmatrix}\n\n(-m, 1)의 표준 기저 표현\n\n  I_V(-m, 1) = -m(1, 0) + 1(0, 1) = \n  \\begin{bmatrix}\n  -m \\\\\n  1\n  \\end{bmatrix}\n따라서 Q는 다음과 같습니다.\nQ= \n\\begin{bmatrix}\n1 &amp; -m \\\\\nm &amp; 1\n\\end{bmatrix}\n2. Q^{-1} 계산\nQ의 역행렬을 계산하여 Q^{-1}를 구하면 다음과 같습니다.\nQ^{-1} = \\frac{1}{\\det(Q)} \\operatorname{adj}(Q) = \n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\n1 &amp; m \\\\\n-m &amp; 1\n\\end{bmatrix}\n대칭 변환 행렬 [T]_{\\beta} 계산\n마지막으로 [T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1} 관계식을 이용하여 대칭 변환 행렬 [T]_{\\beta}를 계산합니다.\n\\begin{align*}\n[T]_{\\beta} &amp;= Q [T]_{\\beta&#039;}Q^{-1}\\\\\\\\\n&amp;= \\begin{bmatrix} 1 &amp; -m \\\\ m &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} \\frac{1}{1 + m^2} \\begin{bmatrix} 1 &amp; m \\\\ -m &amp; 1 \\end{bmatrix}\\\\\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} 1 - m^2 &amp; 2m \\\\ 2m &amp; m^2 - 1 \\end{bmatrix}\n\\end{align*}\n행렬 [T]_{\\beta}를 사용하여 선형 변환 T(x, y)를 정의합니다.\n\\begin{align*}\nT(x, y) &amp;=\n\\frac{1}{1 + m^2} \\begin{bmatrix} 1 - m^2 &amp; 2m \\\\ 2m &amp; m^2 - 1 \\end{bmatrix}\n\\begin{bmatrix}\nx \\\\\ny\n\\end{bmatrix}\\\\\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} (1 - m^2)x + 2my \\\\ 2mx + (m^2 - 1)y \\end{bmatrix}\n\\end{align*}\n따라서, T(x, y)는 다음과 같습니다.\nT(x, y) =\n\\left(\n\\frac{x - m^2x + 2my}{1 + m^2},\n\\frac{2mx + m^2y - y}{1 + m^2}\n\\right)\n사영 변환 행렬 계산\n사영 변환 T가 새로운 기저 \\beta&#039;에서 어떻게 표현되는지 알아보겠습니다.\n  T(1, m) &amp;= 1(1, m) + 0(-m, 1) = (1, m)\\\\\n  T(-m, 1) &amp;= 0(1, m) + 0(-m, 1) = (0, 0)\n\\end{align*}\nT는 새로운 기저 \\beta&#039;에서 사영축과 평행한 벡터는 유지하고, 수직한 벡터는 한 점으로 수렴(\\vec{0})하는 방식으로 동작합니다. 따라서 T의 행렬 표현은 다음과 같습니다.\n\\begin{bmatrix}\n1 &amp; 0 \\\\\n0 &amp; 0\n\\end{bmatrix}$$\n## 사영 변환 행렬 $[T]_{\\beta}$ 계산\n$[T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1}$ 관계식을 이용하여 사영 변환 행렬 $[T]_{\\beta}$를 계산합니다.\n\n\\begin{align*}\n[T]{\\beta} &amp;= Q [T]{\\beta’}Q^{-1}\\\\\n&amp;= \\begin{bmatrix} 1 &amp; -m \\ m &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 \\ 0 &amp; 0 \\end{bmatrix} \\frac{1}{1 + m^2} \\begin{bmatrix} 1 &amp; m \\ -m &amp; 1 \\end{bmatrix}\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} 1  &amp; m \\ m &amp; m^2 \\end{bmatrix}\n\\end{align*}\n\n행렬 $[T]_{\\beta}$를 사용하여 선형 변환 $T(x, y)$를 정의합니다.\n\\begin{align*}\nT(x, y) &amp;=\n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\n1 &amp; m \\\nm &amp; m^2\n\\end{bmatrix}\n\\begin{bmatrix}\nx \\\ny\n\\end{bmatrix}\\\n&amp;=\n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\nx + my \\\nmx + m^2y\n\\end{bmatrix}\n\\end{align*}\n\n따라서, $T(x, y)$는 다음과 같습니다.\nT(x, y) =\n\\left(\n\\frac{x + my}{1 + m^2},\n\\frac{mx + m^2y}{1 + m^2}\n\\right)\n"},"Study/Linear-Algebra/내적-보존,-노름-보존":{"slug":"Study/Linear-Algebra/내적-보존,-노름-보존","filePath":"Study/Linear Algebra/내적 보존, 노름 보존.md","title":"내적 보존, 노름 보존","links":[],"tags":[],"content":"내적을 보존하는 것과 노름을 보존하는 것은 밀접하게 연결되어 있지만, 완전히 같은 개념은 아닙니다. 그러나 내적을 보존하는 변환은 항상 노름도 보존하지만, 노름을 보존하는 변환이 반드시 내적을 보존하는 것은 아닙니다.\n내적을 보존하는 변환\n어떤 선형 변환 T: \\mathbb{R}^n \\to \\mathbb{R}^n 이 내적을 보존한다는 것은 모든 벡터 \\mathbf{x}, \\mathbf{y} \\in \\mathbb{R}^n에 대해\n\\langle T(\\mathbf{x}), T(\\mathbf{y}) \\rangle = \\langle \\mathbf{x}, \\mathbf{y} \\rangle\n이 성립함을 의미합니다.\n이 조건을 만족하는 변환은 직교 변환(orthogonal transformation) 또는 유니터리 변환(unitary transformation)입니다. 즉, 행렬 표현으로 나타내면, 행렬 A가 다음 조건을 만족해야 합니다.\nA^T A = I\n또는 복소수 공간에서는\nA^* A = I\n이 조건을 만족하는 행렬 A는 항상 직교 행렬(orthogonal matrix) 또는 유니터리 행렬(unitary matrix)입니다.\n노름을 보존하는 변환\n어떤 선형 변환 T: \\mathbb{R}^n \\to \\mathbb{R}^n 이 노름을 보존한다는 것은 모든 벡터 \\mathbf{x} \\in \\mathbb{R}^n에 대해\n\\| T(\\mathbf{x}) \\| = \\| \\mathbf{x} \\|\n이 성립함을 의미합니다.\n노름을 보존하는 변환은 거리도 보존하므로 등거리 변환(isometry)이라고도 합니다. 만약 T가 선형 변환이라면, 위 조건은 모든 벡터에 대해\n\\| T(\\mathbf{x}) \\|^2 = \\| \\mathbf{x} \\|^2\n즉,\n\\langle T(\\mathbf{x}), T(\\mathbf{x}) \\rangle = \\langle \\mathbf{x}, \\mathbf{x} \\rangle\n이 되어야 합니다.\n이 조건을 만족하는 선형 변환의 행렬 A는 직교 행렬 또는 유니터리 행렬뿐만 아니라 직교 행렬에 스칼라 배를 한 행렬도 포함할 수 있습니다. 즉, 어떤 절대값이 1인 상수 c (|c| = 1)가 존재하여\nA^T A = c^2 I\n를 만족하면 됩니다. 예를 들어, c = -1인 경우 A는 반사(reflection) 변환이 될 수 있습니다.\n차이점\n\n내적을 보존하는 변환 ⇒ 반드시 노름을 보존한다.\n\n  \\langle T(\\mathbf{x}), T(\\mathbf{x}) \\rangle = \\langle \\mathbf{x}, \\mathbf{x} \\rangle \\Rightarrow \\|T(\\mathbf{x})\\|^2 = \\|\\mathbf{x}\\|^2.\n즉, 내적이 보존되면 노름도 보존됨이 자동으로 성립합니다.\n\n노름을 보존하는 변환 ≠ 반드시 내적을 보존하는 것은 아니다.\n모든 벡터에 대해 \\|T(\\mathbf{x})\\| = \\|\\mathbf{x}\\|이지만, 내적을 보존하는지 여부는 추가적인 확인이 필요합니다. 예를 들어, 반사(reflection) 변환은 노름을 보존하지만, 경우에 따라 내적을 변경할 수도 있습니다. 유한차원 내적공간 V에서는 내적을 보존하는 것과 노름을 보존하는 것이 동치이지만, 무한차원 내적공간에서는 이 둘 사이에 차이가 있을 수 있습니다.\n"},"Study/Linear-Algebra/동반행렬(companion-matrix)":{"slug":"Study/Linear-Algebra/동반행렬(companion-matrix)","filePath":"Study/Linear Algebra/동반행렬(companion matrix).md","title":"동반행렬(companion matrix)","links":[],"tags":[],"content":"T-순환기저(cyclic basis)\nv로 생성되는 부분공간 \\mathcal{K}_n(T,v)를 생각해봅시다.\n\\mathcal{K}_n(T,v) = \\langle v, Tv, T^2v, \\dots, T^{n-1}v \\rangle\n이때 T^n v는 v, Tv, \\dots, T^{n-1}v의 선형결합으로 나타낼 수 있습니다.\n  T^n v = -a_{n-1} T^{n-1}v - \\cdots - a_0 v\n따라서 특성다항식 p(t)는 다음과 같이 정의할 수 있습니다.\n  p(t) = t^n + a_{n-1}t^{n-1} + \\cdots + a_0\nCompanion matrix C_p 정의\np(t)에 대해 T가 v, Tv, \\cdots 위에서 어떻게 작동해야 할지를 행렬로 적으면 다음과 같습니다.\nC_p =\n\\begin{pmatrix}\n0      &amp; 0      &amp; \\cdots &amp; 0      &amp; -a_0 \\\\\n1      &amp; 0      &amp; \\cdots &amp; 0      &amp; -a_1 \\\\\n0      &amp; 1      &amp; \\cdots &amp; 0      &amp; -a_2 \\\\\n\\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\\n0      &amp; 0      &amp; \\cdots &amp; 1      &amp; -a_{n-1}\n\\end{pmatrix}\n이러한 구조가 생기는 이유\n동반행렬(companion matrix)의 구조를 이해하려면 선형변환이 기저 벡터들에 어떻게 작용하는지를 살펴보는 것이 중요합니다.\n동반행렬은 다항식 p(t) = t^n + a_{n-1}t^{n-1} + \\cdots + a_0에 대응하는 특별한 행렬입니다. 이 행렬이 왜 특정한 구조를 가지는지는 선형변환 T가 기저 {v, Tv, \\dots, T^{n-1}v}에 어떻게 작용하는지를 생각하면 자연스럽게 이해할 수 있습니다.\n선형변환 T가 기저의 첫 번째 원소 v에 작용하면 기저의 두 번째 원소인 Tv가 됩니다. 이는 행렬의 관점에서 첫 번째 열의 두 번째 행에 1이 위치해야 함을 의미합니다. 마찬가지로 T가 Tv에 작용하면 T^2v가 되므로, 두 번째 열의 세 번째 행에 1이 위치해야 합니다. 이런 패턴이 계속되어 대각선 바로 아래에 1이 있는 ‘하부 단위행렬’ 구조가 형성됩니다.\n그러나 마지막 기저 원소 T^{n-1}v에 T가 작용하면 상황이 달라집니다. T^n v는 더 이상 기저에 포함되지 않으며, 특성다항식 관계에 의해 T^n v = -a_0 v - a_1 Tv - \\cdots - a_{n-1} T^{n-1}v로 표현됩니다. 이 관계를 행렬로 표현하려면 마지막 열에 각각 -a_0, -a_1, \\dots, -a_{n-1}를 배치해야 합니다.\n결과적으로 동반행렬은 하부 단위행렬과 마지막 열에 특성다항식의 계수가 들어간 특별한 구조를 갖게 됩니다. 이렇게 구성된 행렬은 정확히 p(C_p) = 0을 만족하여 다항식 p의 소멸자 역할을 수행합니다."},"Study/Linear-Algebra/동차-선형-미분-방정식":{"slug":"Study/Linear-Algebra/동차-선형-미분-방정식","filePath":"Study/Linear Algebra/동차 선형 미분 방정식.md","title":"동차 선형 미분 방정식 (Homogeneous Linear Differential Equations with Constant Coefficients)","links":["Study/Linear-Algebra/동차-선형-미분-방정식"],"tags":[],"content":"많은 경우에서 물리적 법칙은 미분 방정식의 형태로 표현되며, 특히 자연적인 진동, 전기 회로, 유체 역학 등에서 동차 방정식이 등장한다. 예를 들어 물체가 공기 저항을 받으며 자유 낙하할 때, 뉴턴의 운동 방정식은 다음과 같다.\nm \\frac{d^2 y}{dt^2} + k \\frac{dy}{dt} = 0\n여기서,\n\nm : 물체의 질량 (kg)\nk : 공기 저항 계수 (Ns/m)\ny(t) : 시간에 따른 위치 (m)\n\n이 방정식의 해를 구하면, 물체가 속도를 점차 줄이며 평형 상태로 도달하는 과정을 분석할 수 있다.\n동차 선형 미분 방정식(Homogeneous Linear Differential Equation)\n미분 방정식(differential equation)은 미지 함수 y = y(t) 와 그 도함수(derivatives)들을 포함하는 방정식이다. 가장 일반적인 n계 미분 방정식의 형태는 다음과 같다.\na_n y^{(n)} + a_{n-1} y^{(n-1)} + \\dots + a_1 y^{(1)} + a_0 y = f(t)\n여기서,\n\ny^{(k)} 는 y 의 k계 도함수,\na_n, a_{n-1}, \\dots, a_0 는 t 의 함수(보통 상수 계수인 경우가 많음),\nf(t) 는 주어진 함수이다.\n\n이 방정식에서 오른쪽이 0인 경우, 즉 f(t)= 0이면, 이를 동차 선형 미분 방정식(homogeneous linear differential equation)이라고 한다.\na_n y^{(n)} + a_{n-1} y^{(n-1)} + \\dots + a_1 y^{(1)} + a_0 y = 0\n만약 f(t)\\neq 0이면, 이를 비동차(nonhomogeneous)선형 미분 방정식 이라고 한다.\n미분 연산자 D\nC^\\infty는 모든 차수의 도함수를 가질 수 있는 함수들의 집합을 의미한다. C^\\infty가 \\mathcal{F}(\\mathbb{R},\\mathbb{C})의 부분공간(subspace)이다. x \\in C^\\infty에 대해, 도함수 x&#039;도 여전히 C^\\infty에 속한다. 따라서, 우리는 도함수 연산을 통해 다음과 같은 사상(mapping)을 정의할 수 있다.\nD: C^\\infty \\to C^\\infty\nD(x) = x&#039;, \\quad \\text{for } x \\in C^\\infty\n쉽게 확인할 수 있듯이, D는 선형 연산자(linear operator)이다. 좀 더 일반적으로, 복소수 계수(complex coefficients)를 갖는 다항식(polynomial)\np(t) = a_n t^n + a_{n-1} t^{n-1} + \\dots + a_1 t + a_0\n을 고려하자.\n이제, 다음과 같이 정의하면\np(D) = a_n D^n + a_{n-1} D^{n-1} + \\dots + a_1 D + a_0 I\np(D) 역시 C^\\infty 위에서의 선형 연산자가 된다. 어떤 차수가 양수인 다항식 p(t)에 대해, p(D)를 상수 계수를 가진 미분 연산자(differential operator with constant coefficients), 또는 간단히 미분 연산자(differential operator)라고 한다. 미분 연산자 p(D)의 차수(order)는 다항식 p(t)의 차수(degree)와 같다.\n미분 연산자는 선형 대수의 관점에서 미분 방정식을 변형하는 데 유용하게 쓰인다. 임의의 상수 계수를 가지는 동차 선형 미분 방정식(homogeneous linear differential equation with constant coefficients)은 다음과 같이 주어진다.\ny^{(n)} + a_{n-1} y^{(n-1)} + \\dots + a_1 y^{(1)} + a_0 y = 0\n이 방정식은 미분 연산자를 사용하여 다음과 같이 다시 쓸 수 있다.\n(D^n + a_{n-1} D^{n-1} + \\dots + a_1 D + a_0 I)(y) = 0\n보조 다항식(Auxiliary Polynomial)\n위 미분 방정식에 대해, 다음과 같은 복소수 다항식을 정의한다.\np(t) = t^n + a_{n-1} t^{n-1} + \\dots + a_1 t + a_0\n이를 해당 미분 방정식에 연관된 보조 다항식(auxiliary polynomial) 이라고 한다. ==상수 계수를 갖는 동차 선형 미분 방정식의 모든 해의 집합은 미분 연산자 p(D)의 영공간(null space)과 일치한다.== 미분 연산자 p(D)의 영공간(null space)이란, 모든 y \\in C^\\infty에 대해 다음을 만족하는 함수들의 집합이다.\np(D)(y) = 0\n이는 해당 미분 방정식의 해를 찾는 문제와 동일하다. 즉, 방정식을 만족하는 모든 함수 y의 집합이 p(D)의 영공간과 정확히 일치함을 알 수 있다. 또한 ==상수 계수를 갖는 동차 선형 미분 방정식의 모든 해의 집합은 C^\\infty의 부분공간(subspace)이다.== 1\n해 공간과 지수 함수\n우리는 상수 계수를 갖는 동차 선형 미분 방정식의 해 집합을 해 공간(solution space) 이라고 부른다. 해 공간을 표현하는 가장 일반적인 방법은 기저(basis)를 찾는 것이다. 이를 위해, 특정 함수 형태를 고려한다.\n임의의 실수 s에 대해, 우리는 지수 함수 e^s를 알고 있다. 여기서 e는 자연로그의 밑으로, \\ln e = 1을 만족한다. 지수 함수는 다음과 같은 성질을 만족한다. (s, t는 임의의 실수)\ne^{s+t} = e^s e^t, \\quad e^{-t} = \\frac{1}{e^t}\n모든 실수 에 대해 위의 성질이 성립한다.\n오일러 공식 (Euler’s Formula)\n임의의 복소수 c = a + ib에 대해,\ne^c = e^a (\\cos b + i \\sin b)\n이며, 특히, a = 0일 경우,\ne^{ib} = \\cos b + i \\sin b\n이다. 이 공식은 오일러 공식(Euler’s Formula)이라 불린다. 그리고 앞선 지수법칙은 복소수로 확장할 수 있다. (c, d는 임의의 복소수)\ne^{c+d} = e^c e^d, \\quad e^{-c} = \\frac{1}{e^c}\n지수 함수 (Exponential Function)\n복소수 c에 대해,\nf(t) = e^{ct}\n로 정의되는 함수 f: \\mathbb{R} \\to \\mathbb{C}를 지수 함수(exponential function) 라고 한다. 모든 지수 함수 f(t) = e^{ct}에 대해, 도함수는 다음과 같다.\nf&#039;(t) = c e^{ct}\n1계 동차 선형 미분 방정식\n미분 방정식\ny&#039; + a_0 y = 0\n에 대하여, 먼저 자명하게 e^{-a_0 t}은 하나의 근이다. 임의의 해를 x(t)라 가정하자. 그렇다면\nx&#039;(t) = -a_{0}x(t)\n가 성립한다. z(t)를 다음과 같이 정의하자.\nz(t) = e^{a_0 t} x(t)\nz를 미분하면 (e^{a_0 t})&#039; = a_0 e^{a_0 t}이고, x&#039;(t) = -a_0 x(t)이므로,\nz&#039;(t) = (e^{a_0 t})&#039; x(t) + e^{a_0 t} x&#039;(t)  = a_{0}e^{a_{0}t}x(t) - a_{0}e^{a_{0}t} x(t) = 0\nz&#039;(t) \\equiv 0, 즉 z는 상수 함수이다. z가 상수 함수이므로, 어떤 복소수 k가 존재하여\nz(t) = e^{a_0 t} x(t) = k \\quad \\forall t \\in \\mathbb{R}\n따라서,\nx(t) = k e^{-a_0 t}.\n이다. 즉, 주어진 미분 방정식 y&#039; + a_0 y = 0의 모든 해는 e^{-a_0 t}의 스칼라배(scalar multiple) 형태로 표현된다. 따라서, ==해 공간의 차원은 1이며, 기저는 \\{ e^{-a_0 t} \\}임을 알 수 있다.== 나아가 임의의 복소수 c에 대해, 미분 연산자 D - cI의 영공간(null space)은 \\{e^{ct}\\}을 기저(basis)로 갖는다.2\n고차 미분 방정식으로 확장 (Higher-Order Differential Equations)\n이제, 차수가 1보다 큰 미분 방정식을 고려하자. 일반적인 n계 상수 계수 동차 선형 미분 방정식은 다음과 같다.\ny^{(n)} + a_{n-1} y^{(n-1)} + \\dots + a_1 y^{(1)} + a_0 y = 0\n이에 대응하는 보조 다항식 (auxiliary polynomial)은\np(t) = t^n + a_{n-1} t^{n-1} + \\cdots + a_1 t + a_0\n대수학의 기본정리(Fundamental Theorem of Algebra)에 의해, 1차 다항식들의 곱으로 분해된다.\np(t) = (t - c_1)(t - c_2) \\cdots (t - c_n)\n여기서 c_1, c_2, \\dots, c_n은 (반복될 수도 있는)복소수 근이다. 이를 이용하여 미분 연산자로 변환하면,\np(D) = (D - c_1 I)(D - c_2 I) \\cdots (D - c_n I)\n이다. 미분 연산자 D - c_i I들은 교환 가능하므로,\nN(D - c_i I) \\subseteq N(p(D))\n이제, N(p(D))가 주어진 미분 방정식의 해 공간과 일치하므로, 이를 이용하여 일반해를 구할 수 있다. 따라서 임의의 복소수 c가 p(t)의 근(root)이라면, 지수 함수 e^{ct}는 주어진 미분 방정식의 해이고, 고차 미분 방정식의 해는 보조 다항식의 근을 이용한 지수 함수의 선형 결합으로 표현할 수 있다.\np(D)의 영공간\nn계 미분 연산자 p(D)에 대해, 영공간 N(p(D))은 C^\\infty의 n차원 부분공간이다.\nLemma 1\n미분 연산자 D - cI: C^\\infty \\to C^\\infty는 임의의 복소수 c에 대해 전사(onto) 함수이다. 3\nLemma 2\nV를 벡터 공간이라 하고, T와 U를 V 위의 선형 연산자라고 하자. U가 전사이고, T와 U의 영공간(null space)이 유한 차원(finite-dimensional)이라면, TU의 영공간도 유한 차원이며,\n\\dim(N(TU)) = \\dim(N(T)) + \\dim(N(U))\nN(p(D))의 차원\n수학적 귀납법(mathematical induction)을 이용하여 미분 연산자 p(D)의 차수 n에 대해 알아보자.\n\n\nn = 1일 때, 1계 동차 선형 미분 방정식의 차원은 1이다.\n\n\n어떤 n &gt; 1에 대해, 차수가 n - 1 이하인 모든 미분 연산자 q(D)에 대해 \\dim(N(q(D))) = n - 1이라고 가정하자.\n\n\n차수가 n인 미분 연산자 p(D)의 보조 다항식을 인수분해 하면,\n\n\np(t) = q(t)(t - c)\n여기서 q(t)는 차수가 n-1인 다항식이며, c는 복소수이다. 이를 미분 연산자로 변환하면,\np(D) = q(D)(D - cI)\nLemma 2에 의해,\n\\begin{align*}\n\\dim(N(p(D))) &amp;= \\dim(N(q(D)))+ \\dim(N(D - cI)) \\\\\n&amp;= (n-1)+ 1 = n\n\\end{align*}\n이므로, p(D)의 영공간 N(p(D))의 차원은 n이다.\n지수함수 집합의 선형독립\n서로 다른 n개의 복소수 c_1, c_2, \\dots, c_n에 대해, 지수 함수 집합 \\{e^{c_1 t}, e^{c_2 t}, \\dots, e^{c_n t}\\}는 선형 독립(linearly independent)이다.\n따라서 n계 상수 계수를 갖는 동차 선형 미분 방정식의 보조 다항식(auxiliary polynomial)이 n개의 서로 다른 근(distinct zeros) c_1, c_2, \\dots, c_n을 가진다면,\n\\{ e^{c_1 t}, e^{c_2 t}, \\dots, e^{c_n t} \\}\n는 해당 미분 방정식의 해 공간(solution space)의 기저(basis)가 된다.\n반복근(repeated roots)을 갖는 보조 다항식\n주어진 복소수 c와 양의 정수 n에 대해, (t - c)^n이 상수 계수를 갖는 동차 선형 미분 방정식의 보조 다항식이라 하자. 그러면, 다음과 같은 함수 집합\n\\beta = \\{ e^{ct}, t e^{ct}, \\dots, t^{n-1} e^{ct} \\}\n는 해당 미분 방정식의 해 공간의 기저(basis)가 된다. 미분 방정식의 해 공간이 n-차원임을 알고 있으므로, 집합 \\beta가 선형 독립(linearly independent)이면서 해 공간에 포함됨을 보이면 충분하다.\n\\beta가 해 공간에 포함됨을 보이기\n임의의 양의 정수 k에 대해, 미분 연산자 D - cI를 적용해 보자.\n(D - cI)(t^k e^{ct})\n곱의 미분 규칙(Product Rule)을 적용하면,\n(D - cI)(t^k e^{ct})\n= k t^{k-1} e^{ct} + c t^k e^{ct} - c t^k e^{ct}\n즉,\n(D - cI)(t^k e^{ct})= k t^{k-1} e^{ct}\n따라서, k &lt; n일 때, D - cI를 n번 연속 적용하면,\n(D - cI)^n (t^k e^{ct})= 0\n모든 \\beta의 원소가 미분 방정식의 해임을 의미하므로, 집합 \\beta가 해 공간의 부분집합임을 보였다.\n\\beta가 선형 독립임을 보이기\n임의의 선형 결합을 고려하자.\nb_0 e^{ct} + b_1 t e^{ct} + \\dots + b_{n-1} t^{n-1} e^{ct} = 0\n이제, 양변을 e^{ct}로 나누면,\nb_0 + b_1 t + \\dots + b_{n-1} t^{n-1} = 0\n좌변은 n-1차 이하의 다항식이다. 이 다항식이 항등적으로 0이 되어야 하므로, 모든 계수 b_0, b_1, \\dots, b_{n-1}는 0이어야 한다. 따라서, 집합 \\beta는 선형 독립이다.\n정리\n상수 계수를 갖는 동차 선형 미분 방정식이 주어졌다고 하자. 이때, 해당 방정식의 보조 다항식(auxiliary polynomial)이 다음과 같은 형태를 가진다고 하자.\n(t - c_1)^{n_1} (t - c_2)^{n_2} \\cdots (t - c_k)^{n_k}\n여기서 n_1, n_2, \\cdots, n_k는 양의 정수(positive integers)이며, c_1, c_2, \\cdots, c_k는 서로 다른(distinct)복소수이다. 그러면, 미분 방정식의 해 공간(solution space)의 기저(basis)는 다음과 같다.\n\\{ e^{c_1 t}, t e^{c_1 t}, \\cdots, t^{n_1 - 1} e^{c_1 t}, \\cdots, e^{c_k t}, t e^{c_k t}, \\cdots, t^{n_k - 1} e^{c_k t} \\}\n예제\n1. y&#039;&#039; + 4y = 0\n특성 방정식을 설정한 후 인수분해하면,\nt^{2} + 4 = (t - 2i)(t + 2i) = 0\n서로 다른 복소수 근을 얻는다.\nc_1 = 2i, \\quad c_2 = -2i\n지수 함수\ne^{2it}, \\quad e^{-2it}\n는 주어진 미분 방정식의 해가 된다. 따라서, 해 공간의 기저는 \\{e^{2it}, e^{-2it}\\}이다. 오일러 공식(Euler’s Formula)을 이용하면,\n\\begin{align*}\n\\cos 2t &amp;= \\frac{1}{2} (e^{2it} + e^{-2it})\\\\\n\\sin 2t &amp;= \\frac{1}{2i} (e^{2it} - e^{-2it})\n\\end{align*}\n\\{e^{2it}, e^{-2it}\\} 대신 \\{\\cos 2t, \\sin 2t\\}도 해 공간의 기저가 될 수 있다. 이 기저가 유용한 이유는, 실수 해를 직접 제공하기 때문이다. 모든 해는 기저의 선형 결합으로 표현되므로,\ny(t)= c_1 \\cos 2t + c_2 \\sin 2t, \\quad (c_1, c_2 \\in \\mathbb{R})\n이제 c_1, c_2를 초기 조건(initial conditions)에 맞게 조정하면, 특정 해(particular solution)를 구할 수 있다.\n2. y^{(3)} - 3y^{(2)} + 3y^{(1)} - y = 0\n특성 방정식을 인수분해하면,\nt^3 - 3t^2 + 3t - 1 = (t - 1)^3 = 0\n반복근 t = 1(중복도 3)을 갖는다. 해 공간의 기저는 다음과 같다.\n\\{ e^{t}, t e^{t}, t^2 e^{t} \\}\n해 공간의 기저를 이용하면, 모든 해는 기저의 선형 결합으로 표현된다.\ny(t)= c_1 e^{t} + c_2 t e^{t} + c_3 t^2 e^{t}\n여기서 c_1, c_2, c_3를 를 초기 조건(initial conditions)에 맞게 조정하면, 특정 해(particular solution)를 구할 수 있다.\nFootnotes\n\n\np(D)(ay_1 + by_2) = ap(D)(y_1) + bp(D)(y_2) = 0 + 0 = 0 ↩\n\n\n미분 연산자 D - cI가 주어진 경우, 이를 만족하는 함수는 미분 방정식 (D - cI)(y) = 0의 해이다. 즉, y&#039; - c y = 0이므로, 앞선 방식과 같이 y = k e^{ct}이다. ↩\n\n\nw(t) = v(t) e^{-ct}, t \\in \\mathbb{R}라 하면, w \\in C^\\infty가 성립한다. W&#039;(t) = w(t)라 두고, u(t) = W(t) e^{ct}라 정의하자. (D - cI)u(t) = u&#039;(t) - c u(t) = (W&#039;(t) e^{ct} + W(t) c e^{ct}) - c W(t) e^{ct} = w(t) e^{ct} = v(t) e^{-ct} e^{ct} = v(t) 이므로, 미분 연산자 D - cI는 전사 함수(onto function)다. ↩\n\n\n"},"Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)-1":{"slug":"Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)-1","filePath":"Study/Linear Algebra/라그랑주 보간법(Lagrange Interpolation) 1.md","title":"라그랑주 보간법(Lagrange Interpolation) 1","links":[],"tags":["다항식","점"],"content":"우리 주변에는 데이터를 이용해 미지의 값을 추정하거나, 연속적인 값을 예측해야 하는 상황이 많습니다. 이렇게 주어진 데이터 점들 사이의 값을 추정하는 과정을 수학에서는 **보간(interpolation)**이라고 합니다.\n이는 점들을 모두 통과하는 하나의 방정식을 찾아낼 수 있는가? 하는 문제로 연결됩니다. 왜냐하면 이 다항식은 주어진 점들을 모두 정확히 통과하면서, 중간 값들을 추정할 수 있게 해주기 때문이지요. 라그랑주 보간법의 원리를 통해 ‘몇 개의 점으로 방정식을 찾을 수 있을까?‘라는 질문에 답을 찾아보겠습니다.\n라그랑주 다항식\n무한 체 F에서 서로 다른 스칼라 c_0, c_1, \\dots, c_n가 주어졌다고 가정해보겠습니다. 이때, 다음과 같이 정의된 다항식 f_0(x), f_1(x), \\dots, f_n(x)을 **라그랑주 다항식(Lagrange polynomials)이라 부릅니다. 각 f_i(x)가 차수가 n인 다항식이며, 따라서 P_n(F)에 속합니다.\nf_i(x) = \\frac{(x - c_0) \\cdots (x - c_{i-1})(x - c_{i+1}) \\cdots (x - c_n)}{(c_i - c_0) \\cdots (c_i - c_{i-1})(c_i - c_{i+1}) \\cdots (c_i - c_n)} = \\prod_{\\substack{k=0 \\\\ k \\neq i}}^{n \\frac{x - c_k}{c_i - c_{k}}}\n이때, f_i(x)는 다항식 함수 f_i : F \\to F이며,\nf_i(c_j) = \n\\begin{cases} \n0 &amp; (i \\neq j) \\\\\n1 &amp; (i = j)\n\\end{cases}\n입니다.\n라그랑주 다항식은 P_n(F)의 기저인가?\n\\beta = \\{f_0, f_1, \\cdots, f_n\\}라 할 때, 다음 함수를 영함수라 가정해보겠습니다.\n\\sum_{i=0}^n a_i f_i = 0\n이 때,  x=c_j라 하면\n\\sum_{i=0}^n a_i f_i(c_j) = 0 \\quad (j = 0, 1, \\dots, n)\n이다. 한편 f_i(c_j)의 성질에 의해,\n\\sum_{i=0}^n a_i f_i(c_j) = a_j\n이므로,  a_j = 0이고, j = 0, 1, \\dots, n에 대해 \\beta는 선형 독립입니다. P_n(F)의 차원이 n+1이므로, \\beta는 P_n(F)의 기저(basis)가 됩니다.\n\\beta가 P_n(F)의 기저이기 때문에, P_n(F)의 모든 다항식 함수 g는 \\beta의 다항식 함수들의 선형 결합으로 표현될 수 있습니다.\ng = \\sum_{i=0}^n b_i f_i\n따라서\ng(c_j) = \\sum_{i=0}^n b_i f_i(c_j) = b_j\n이므로\ng = \\sum_{i=0}^n g(c_i) f_i\n입니다. 이 표현은 g를 \\beta의 원소들의 선형 결합으로 나타내는 유일한 표현입니다. 이 표현을 **라그랑주 보간 공식(Lagrange interpolation formula)**이라고 부릅니다. 기저의 성질에 의해 P_n(F)에서 g(c_j) = b_j를 만족하는 유일한 다항식은 g(x)입니다.\n세 점을 지나는 이차 다항식 찾기\n예를 들어, (0,0),(1,-1),(2,0)을 지나는 이차 다항식을 찾아보겟습니다. 앞서 보았듯 라그랑주 보간 공식은 n+1개의 점 (c_0, b_0), (c_1, b_1), \\dots, (c_n, b_n)을 지나는 다항식을 다음과 같이 정의하며,\ng(x) = \\sum_{i=0}^n b_i f_i(x)\n여기서 f_i(x)는 다음과 같이 정의됩니다.\nf_i(x) = \\prod_{\\substack{k=0 \\\\ k \\neq i}}^n \\frac{x - c_k}{c_i - c_k}\n주어진 점은 다음과 같으므로,\n\nc_0 = 0, b_0 = 0,\nc_1 = 1, b_1 = -1,\nc_2 = 2, b_2 = 0.\n\nn = 2이며, g(x)는 최대 이차 다항식입니다. 앞선 식을 이용해 f_0(x), f_1(x), f_2(x)을 계산해보겠습니다.\nf_0(x) &amp;= \\frac{(x - c_1)(x - c_2)}{(c_0 - c_1)(c_0 - c_2)} = \\frac{(x - 1)(x - 2)}{(0 - 1)(0 - 2)} =  \\frac{1}{2}(x^2 - 3x + 2)\\\\\nf_1(x) &amp;= \\frac{(x - c_0)(x - c_2)}{(c_1 - c_0)(c_1 - c_2)} = \\frac{(x - 0)(x - 2)}{(1 - 0)(1 - 2)} =  -x^2 + 2x\\\\\nf_2(x) &amp;= \\frac{(x - c_0)(x - c_1)}{(c_2 - c_0)(c_2 - c_1)} = \\frac{(x - 0)(x - 1)}{(2 - 0)(2 - 1)} = \\frac{1}{2}(x^2 - x)\n\\end{align*}$$\n라그랑주 보간 공식을 사용하여 $g(x)$를 계산하면, \n\\begin{align*}\ng(x) &amp;= 0 \\cdot f_0(x) + (-1) \\cdot f_1(x) + 0 \\cdot f_2(x)\\\n&amp;= -f_1(x)\\\n&amp;= x^2 - 2x\n\\end{align*}\n### 세 점이 한 직선 위에 있다면?\n만약 세 점이 $(1, 1), (2, 2), (3, 3)$과 같이 한 직선 위에 있다면 어떻게 될까요? 앞선 방법과 같이 주어진 점을 이용해 $f_0(x), f_1(x), f_2(x)$을 계산해보겠습니다. \n\n- $c_0 = 1, b_0 = 1$,\n- $c_1 = 2, b_1 = 2$,\n- $c_2 = 3, b_2 = 3$.\n\n$n = 2$이므로 $g(x)$는 최대 이차 다항식입니다.\n\\begin{align*}\nf_0(x) = \\frac{(x - c_1)(x - c_2)}{(c_0 - c_1)(c_0 - c_2)} = \\frac{(x - 2)(x - 3)}{(1 - 2)(1 - 3)} =  \\frac{1}{2}(x^2 - 5x + 6)\\\nf_1(x) = \\frac{(x - c_0)(x - c_2)}{(c_1 - c_0)(c_1 - c_2)} = \\frac{(x - 1)(x - 3)}{(2 - 1)(2 - 3)} = -(x^2 - 4x + 3)\\\nf_2(x) = \\frac{(x - c_0)(x - c_1)}{(c_2 - c_0)(c_2 - c_1)} = \\frac{(x - 1)(x - 2)}{(3 - 1)(3 - 2)} = \\frac{1}{2}(x^2 - 3x + 2)\n\\end{align*}\n이제 라그랑주 보간 공식을 사용하여 $g(x)$를 구하면, \ng(x) = 1 \\cdot f_0(x) + 2 \\cdot f_1(x) + 3 \\cdot f_2(x)\n이므로, \n\\begin{align*}\ng(x) &amp;= \\frac{1}{2}(x^2 - 5x + 6) + 2(-x^2 + 4x - 3) + \\frac{3}{2}(x^2 - 3x + 2)\\\n&amp;= \\frac{1}{2}x^2 - \\frac{5}{2}x + 3 - 2x^2 + 8x - 6 + \\frac{3}{2}x^2 - \\frac{9}{2}x + 3\\\n&amp;= x\n\\end{align*}\n결과적으로 $g(x) = x$가 됩니다. 주어진 세 점이 모두 $y = x$라는 직선 위에 있으므로, 보간 결과도 자연스럽게 $y = x$가 됩니다. 라그랑주 보간법을 이용하면 세 점이 한 직선 위에 있는지 여부를 미리 확인하지 않아도, 정확한 직선을 반환합니다. 불필요한 고차 항을 제거하는 수학적 원리 덕분에 계산이 간결해지고, 결과적으로 효율적이고 효과적으로 다항식을 찾아내는 것이 가능합니다."},"Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)":{"slug":"Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)","filePath":"Study/Linear Algebra/라그랑주 보간법(Lagrange Interpolation).md","title":"라그랑주 보간법(Lagrange Interpolation)","links":[],"tags":["다항식","점"],"content":"우리 주변에는 데이터를 이용해 미지의 값을 추정하거나, 연속적인 값을 예측해야 하는 상황이 많습니다. 이렇게 주어진 데이터 점들 사이의 값을 추정하는 과정을 수학에서는 **보간(interpolation)**이라고 합니다.\n이는 점들을 모두 통과하는 하나의 방정식을 찾아낼 수 있는가? 하는 문제로 연결됩니다. 왜냐하면 이 다항식은 주어진 점들을 모두 정확히 통과하면서, 중간 값들을 추정할 수 있게 해주기 때문이지요. 라그랑주 보간법의 원리를 통해 ‘몇 개의 점으로 방정식을 찾을 수 있을까?‘라는 질문에 답을 찾아보겠습니다.\n라그랑주 다항식\n무한 체 F에서 서로 다른 스칼라 c_0, c_1, \\dots, c_n가 주어졌다고 가정해보겠습니다. 이때, 다음과 같이 정의된 다항식 f_0(x), f_1(x), \\dots, f_n(x)을 **라그랑주 다항식(Lagrange polynomials)이라 부릅니다. 각 f_i(x)가 차수가 n인 다항식이며, 따라서 P_n(F)에 속합니다.\nf_i(x) = \\frac{(x - c_0) \\cdots (x - c_{i-1})(x - c_{i+1}) \\cdots (x - c_n)}{(c_i - c_0) \\cdots (c_i - c_{i-1})(c_i - c_{i+1}) \\cdots (c_i - c_n)} = \\prod_{\\substack{k=0 \\\\ k \\neq i}}^{n} \\frac{x - c_k}{c_i - c_{k}}\n이때, f_i(x)는 다항식 함수 f_i : F \\to F이며,\nf_i(c_j) = \n\\begin{cases} \n0 &amp; (i \\neq j) \\\\\n1 &amp; (i = j)\n\\end{cases}\n입니다.\n라그랑주 다항식은 P_n(F)의 기저인가?\n\\beta = \\{f_0, f_1, \\cdots, f_n\\}라 할 때, 다음 함수를 영함수라 가정해보겠습니다.\n\\sum_{i=0}^n a_i f_i = 0\n이 때,  x=c_j라 하면\n\\sum_{i=0}^n a_i f_i(c_j) = 0 \\quad (j = 0, 1, \\dots, n)\n이다. 한편 f_i(c_j)의 성질에 의해,\n\\sum_{i=0}^n a_i f_i(c_j) = a_j\n이므로,  a_j = 0이고, j = 0, 1, \\dots, n에 대해 \\beta는 선형 독립입니다. P_n(F)의 차원이 n+1이므로, \\beta는 P_n(F)의 기저(basis)가 됩니다.\n\\beta가 P_n(F)의 기저이기 때문에, P_n(F)의 모든 다항식 함수 g는 \\beta의 다항식 함수들의 선형 결합으로 표현될 수 있습니다.\ng = \\sum_{i=0}^n b_i f_i\n따라서\ng(c_j) = \\sum_{i=0}^n b_i f_i(c_j) = b_j\n이므로\ng = \\sum_{i=0}^n g(c_i) f_i\n입니다. 이 표현은 g를 \\beta의 원소들의 선형 결합으로 나타내는 유일한 표현입니다. 이 표현을 **라그랑주 보간 공식(Lagrange interpolation formula)**이라고 부릅니다. 기저의 성질에 의해 P_n(F)에서 g(c_j) = b_j를 만족하는 유일한 다항식은 g(x)입니다.\n세 점을 지나는 이차 다항식 찾기\n예를 들어, (0,0),(1,-1),(2,0)을 지나는 이차 다항식을 찾아보겟습니다. 앞서 보았듯 라그랑주 보간 공식은 n+1개의 점 (c_0, b_0), (c_1, b_1), \\dots, (c_n, b_n)을 지나는 다항식을 다음과 같이 정의하며,\ng(x) = \\sum_{i=0}^n b_i f_i(x)\n여기서 f_i(x)는 다음과 같이 정의됩니다.\nf_i(x) = \\prod_{\\substack{k=0 \\\\ k \\neq i}}^n \\frac{x - c_k}{c_i - c_k}\n주어진 점은 다음과 같으므로,\n\nc_0 = 0, b_0 = 0,\nc_1 = 1, b_1 = -1,\nc_2 = 2, b_2 = 0.\n\nn = 2이며, g(x)는 최대 이차 다항식입니다. 앞선 식을 이용해 f_0(x), f_1(x), f_2(x)을 계산해보겠습니다.\n\\begin{align*}\nf_0(x) &amp;= \\frac{(x - c_1)(x - c_2)}{(c_0 - c_1)(c_0 - c_2)} = \\frac{(x - 1)(x - 2)}{(0 - 1)(0 - 2)} =  \\frac{1}{2}(x^2 - 3x + 2)\\\\\nf_1(x) &amp;= \\frac{(x - c_0)(x - c_2)}{(c_1 - c_0)(c_1 - c_2)} = \\frac{(x - 0)(x - 2)}{(1 - 0)(1 - 2)} =  -x^2 + 2x\\\\\nf_2(x) &amp;= \\frac{(x - c_0)(x - c_1)}{(c_2 - c_0)(c_2 - c_1)} = \\frac{(x - 0)(x - 1)}{(2 - 0)(2 - 1)} = \\frac{1}{2}(x^2 - x)\n\\end{align*}\n라그랑주 보간 공식을 사용하여 g(x)를 계산하면,\n\\begin{align*}\ng(x) &amp;= 0 \\cdot f_0(x) + (-1) \\cdot f_1(x) + 0 \\cdot f_2(x)\\\\\n&amp;= -f_1(x)\\\\\n&amp;= x^2 - 2x\n\\end{align*}\n세 점이 한 직선 위에 있다면?\n만약 세 점이 (1, 1), (2, 2), (3, 3)과 같이 한 직선 위에 있다면 어떻게 될까요? 앞선 방법과 같이 주어진 점을 이용해 f_0(x), f_1(x), f_2(x)을 계산해보겠습니다.\n\nc_0 = 1, b_0 = 1,\nc_1 = 2, b_1 = 2,\nc_2 = 3, b_2 = 3.\n\nn = 2이므로 g(x)는 최대 이차 다항식입니다.\n\\begin{align*}\nf_0(x) = \\frac{(x - c_1)(x - c_2)}{(c_0 - c_1)(c_0 - c_2)} = \\frac{(x - 2)(x - 3)}{(1 - 2)(1 - 3)} =  \\frac{1}{2}(x^2 - 5x + 6)\\\\\nf_1(x) = \\frac{(x - c_0)(x - c_2)}{(c_1 - c_0)(c_1 - c_2)} = \\frac{(x - 1)(x - 3)}{(2 - 1)(2 - 3)} = -(x^2 - 4x + 3)\\\\\nf_2(x) = \\frac{(x - c_0)(x - c_1)}{(c_2 - c_0)(c_2 - c_1)} = \\frac{(x - 1)(x - 2)}{(3 - 1)(3 - 2)} = \\frac{1}{2}(x^2 - 3x + 2)\n\\end{align*}\n이제 라그랑주 보간 공식을 사용하여 g(x)를 구하면,\ng(x) = 1 \\cdot f_0(x) + 2 \\cdot f_1(x) + 3 \\cdot f_2(x)\n이므로,\n\\begin{align*}\ng(x) &amp;= \\frac{1}{2}(x^2 - 5x + 6) + 2(-x^2 + 4x - 3) + \\frac{3}{2}(x^2 - 3x + 2)\\\\\n&amp;= \\frac{1}{2}x^2 - \\frac{5}{2}x + 3 - 2x^2 + 8x - 6 + \\frac{3}{2}x^2 - \\frac{9}{2}x + 3\\\\\n&amp;= x\n\\end{align*}\n결과적으로 g(x) = x가 됩니다. 주어진 세 점이 모두 y = x라는 직선 위에 있으므로, 보간 결과도 자연스럽게 y = x가 됩니다. 라그랑주 보간법을 이용하면 세 점이 한 직선 위에 있는지 여부를 미리 확인하지 않아도, 정확한 직선을 반환합니다. 불필요한 고차 항을 제거하는 수학적 원리 덕분에 계산이 간결해지고, 결과적으로 효율적이고 효과적으로 다항식을 찾아내는 것이 가능합니다.\n룽게 현상(Runge’s phenomenon)\n보간법(Interpolation)은 주어진 데이터 점을 정확히 지나는 다항식을 구성하여 함수 값을 추정하는 방법입니다. 하지만 보간 과정에서 점의 배치 방식에 따라 예기치 않은 문제점이 발생할 수 있습니다. 특히, 등간격 분할(equidistant nodes)을 사용할 경우, 점의 개수가 증가할수록 오히려 보간 정확도가 떨어지는 현상이 발생하는데, 이를 룽게 현상(Runge’s Phenomenon)이라고 합니다.\nRunge의 함수\n룽게 현상을 관찰하기 위해 다음과 같은 함수를 보겠습니다.\nf(x) = \\frac{1}{1 + 25x^2} \\quad (x \\in [-1,1])\n이 함수는 구간 [-1,1]에서 매끄럽지만, 등간격으로 분할한 후 보간하면 경계 근처에서 심한 진동(oscillation)이 발생합다.\n\nn = 2 (저차수 보간)\nP_2(x) = 1.0 - 0.9615 x^2\n\n비교적 원래 함수와 잘 맞으며, 진동이 거의 없다.\n\nn = 5 (중간차수 보간)\nP_5(x) = -5.16 \\times 10^{-15} x^5 + 1.2019 x^4 - 1.7308 x^2 + 0.5673\n\n일부 구간에서 진동이 발생하기 시작한다.\n경계에서 오차가 증가하는 경향이 보인다.\n\nn = 10 (고차수 보간)\nP_{10}(x) = -220.94 x^{10} + 494.91 x^8 - 381.43 x^6 + 123.36 x^4 - 16.86 x^2 + 1.0\n\n경계에서 극심한 진동이 발생하며, 원래 함수의 형태와 완전히 다른 양상을 보인다.\n\n위의 예시를 통해 고차 다항식 보간이 항상 정확한 근사를 제공하지는 않는다는 사실을 확인할 수 있습니다. 따라서, 고차 보간을 사용할 때는 등간격 대신 체비셰프 노드(Chebyshev nodes)와 같은 방법을 사용하면 경계에서의 오차를 줄이고, 룽게 현상을 완화하는 효과가 있습니다."},"Study/Linear-Algebra/선형-방정식의-최소해(Minimal-Solution)":{"slug":"Study/Linear-Algebra/선형-방정식의-최소해(Minimal-Solution)","filePath":"Study/Linear Algebra/선형 방정식의 최소해(Minimal Solution).md","title":"선형 방정식의 최소해(Minimal Solution)","links":[],"tags":["Algebra"],"content":"선형 방정식의 최소해(Minimal Solutions to Systems of Linear Equations)\n일반적으로 선형 방정식 Ax = b 가 일관된 경우에도 해가 유일하지 않을 수 있다. 이러한 경우, 최소 노름(norm)의 해를 찾는 것이 유용할 수 있다. 방정식 Ax = b 의 해 s 가 모든 해 u 에 대해 \\|s\\| \\leq \\|u\\| 를 만족할 때, s 를 최소해(minimal solution) 라고 한다.\n최소해를 찾는 방법\nA \\in M_{m \\times n}(F) 이고 b \\in F^m 라 하자. Ax = b 가 일관된다고 가정하자. 그러면 다음이 성립한다.\n\n\nAx = b 의 최소해 s 가 단 하나 존재하며, s \\in R(L_A^*) 이다.\n\n\ns 는 Ax = b 를 만족하는 해 중에서 R(L_A^*) 에 속하는 유일한 해이다. 즉, 만약 (AA^*)u = b 를 만족하는 u 가 있다면, s = A^* u 가 된다.\n\n\n1. 증명\n편의상 W = R(L_A^*) 및 W&#039; = N(L_A) 라 두자. Ax = b 의 임의의 해 x 에 대해, x = s + y 를 만족하는 어떤 s \\in W 와 y \\in W&#039; 가 존재한다. W^\\perp = W&#039; 이므로, b = Ax = As + Ay = As 가 성립한다. 따라서 s 는 Ax = b 의 해이며 W 에 속한다. 이를 최소해임을 보이려면, 임의의 해 v 가 주어졌을 때 s 가 유일한 최소해임을 보이면 된다. v = s + u 이고, 여기서 u \\in W&#039; 이다. s \\in W 이므로 W^\\perp = W&#039; 에 의해 다음이 성립한다.\n\\|v\\|^2 = \\|s + u\\|^2 = \\|s\\|^2 + \\|u\\|^2 \\geq \\|s\\|^2\n따라서 s 가 최소해임을 알 수 있다. 또한 위의 계산에서 \\|v\\| = \\|s\\| 이면 u = 0 이어야 하므로, v = s 가 된다. 따라서 s 는 Ax = b 의 유일한 최소해이다.\n2. 증명\n만약 v 가 Ax = b 를 만족하는 또 다른 해이고 W 에 속한다면,\nv - s \\in W \\cap W&#039; = W \\cap W^\\perp = \\{0\\}\n이므로 v = s 가 성립한다.\n마지막으로, (AA^*)u = b 라고 가정하자. v = A^*u 라 두면, v \\in W 이고 Av = b 이므로, 위의 논의에 의해 s = v = A^* u 가 된다.\n해집합을 s + u 꼴로 나타내는 것이 효율적인 이유\n모든 해를 “최소해 + 영공간의 원소” 꼴로 나타내는 방식이 효율적인 이유는 다음과 같다.\n\n최소해 s 는 유일하므로, 해의 대표성을 명확하게 제공한다.\n\nAx = b 를 만족하는 가장 작은 노름(norm)의 해 를 찾으면, 이것이 고유한 기준점 역할을 한다. 다른 해들은 이 최소해에 어떤 변화를 더한 형태로 쉽게 기술할 수 있다.\n\n해 공간의 구조를 분해하여 해석하기 쉽다.\n\n해집합은 크게 최소해 s 가 만드는 부분 과 영공간의 자유도 N(A) 로 나뉜다. 즉, N(A) 가 얼마나 큰지에 따라 해가 얼마나 많이 존재하는지 쉽게 알 수 있다.\n\n최소해를 찾으면 추가적인 해를 구하는 것이 간단해진다.\n\n만약 최소해 s 를 이미 알고 있다면, 나머지 해들은 단순히 N(A) 에 속하는 벡터 u 를 추가하여 쉽게 생성할 수 있다. 이는 해를 구성하는 효율적인 방법을 제공한다.\n\n선형 시스템의 일반적인 해석과 일관성이 있다.\n\n일반적인 선형 연립방정식의 해는 “특정 해 + 동차 해” 꼴로 표현된다. 최소해를 찾는 것은 특정 해를 찾는 과정과 동일하며, 동차방정식 Ax = 0 의 해 공간이 바로 N(A) 가 된다."},"Study/Linear-Algebra/소멸자":{"slug":"Study/Linear-Algebra/소멸자","filePath":"Study/Linear Algebra/소멸자.md","title":"소멸자(Annihilator)","links":[],"tags":[],"content":"소멸자의 정의\n벡터 공간 V의 부분공간 S가 주어졌을 때, S의 소멸자 S^0 (S-annihilator)는 S를 0으로 보내는 모든 쌍대공간 원소들의 집합이다.\nS^0 = \\{ \\phi \\in V^* \\mid \\phi(s) = 0, \\quad \\forall s \\in S \\}.\nS^0는 V^* (즉, V의 쌍대공간)에서의 부분공간이다.\n이중 소멸자 (S^0)^0\nS^0의 소멸자 (S^0)^0를 정의하면\n(S^0)^0 = \\{ v \\in V \\mid \\phi(v) = 0, \\quad \\forall \\phi \\in S^0 \\}.\n즉, S^0에 속하는 모든 함수들이 0을 출력하는 벡터들의 집합이므로,\n(S^0)^0 = S\n이다.\n소멸자의 차원\n소멸자의 차원은 원래 부분공간과 관계가 있으며, 다음과 같은 공식이 성립한다.\n\\dim S + \\dim S^0 = \\dim V\n\n\nV 에 대해 S 의 기저를 \\{ v_1, v_2, \\dots, v_k \\} 라 하자.\n\n\nS 를 확장하여 V 의 기저를 만들자. 즉,\n\\{ v_1, v_2, \\dots, v_k, v_{k+1}, \\dots, v_n \\}\n를 V 의 기저로 잡을 수 있다. 여기서 \\dim S = k, \\dim V = n 이다.\n\n\n이제 쌍대 공간 V^* 에서, 쌍대 기저(dual basis) 를 고려하면, V^* 에는\n\\{ v_1^*, v_2^*, \\dots, v_n^* \\}\n라는 기저가 존재하며, 이는 다음 조건을 만족한다.\nv_i^*(v_j) =\n\\begin{cases}\n1, &amp; i = j \\\\\n0, &amp; i \\neq j\n\\end{cases}\n\n\n이제 S^0 의 구조를 살펴보자.\n\nS^0 는 S 위에서 0이 되는 모든 선형 사상들의 집합이므로, S 의 기저 벡터 v_1, \\dots, v_k 에 대해 v_i^*(v_j) = 0 인 v_i^* 들이 S^0 를 형성한다.\n따라서 S^0 의 기저는 \\{ v_{k+1}^*, \\dots, v_n^* \\} 로 구성된다.\n이 기저의 개수는 n - k 이므로 \\dim S^0 = n - k.\n\n\n\n따라서,\n\\dim S + \\dim S^0 = k + (n - k) = n = \\dim V\n가 성립함을 보일 수 있다.\n\n\n이는 쌍대 공간을 활용한 차원 정리 중 하나로, 벡터 공간의 부분공간과 그 소멸자(영여공간) 사이에 성립하는 중요한 관계입니다.\n(3) 이중 쌍대공간(Double Dual Space)와의 관계\n이중 소멸자 결과 **(S^0)^0 = S**는 벡터 공간이 그 자체의 이중 쌍대공간과 동형(isomorphic)임을 보이는 방법과 연결된다.\n✔ 특히, 유한 차원 벡터 공간에서는 다음이 성립한다.\nV \\cong V^{**}.\n즉, V 자체가 그 쌍대공간의 쌍대공간과 동형이다.\n이 개념은 쌍대성을 통해 원래 공간을 복구하는 과정을 수학적으로 엄밀히 정당화하는 데 사용된다.\n\n(4) 해석학과 미분방정식에서의 응용\n소멸자는 미분 연산자와의 관계에서도 중요한 역할을 한다.\n특정한 함수 집합을 소멸하는 연산자의 집합을 정의하면, 이 연산자를 이용하여 미분방정식의 해를 찾을 수 있다.\n✔ 예제:\n\n특정 함수 f(x)를 소멸하는 미분 연산자를 찾으면,\n그 미분 연산자를 포함하는 미분방정식을 통해 f(x)의 성질을 연구할 수 있다.\n\n\n4. 결론\n✔ 소멸자 S^0는 부분공간 S를 0으로 만드는 쌍대공간 원소들의 집합이다.\n✔ 이중 소멸자 (S^0)^0는 원래의 부분공간 S를 복구하며, 이는 벡터 공간과 쌍대공간 사이의 중요한 관계를 나타낸다.\n✔ 소멸자는 부분공간을 선형 함수로 기술하는 방법을 제공하며, 해석학, 기하학, 미분방정식 등 다양한 분야에서 활용된다.\n✔ 유한 차원 벡터 공간에서는 V \\cong V^{**}가 성립하며, 이는 쌍대공간이 원래 공간을 정확히 반영하는 성질을 의미한다.\n\n이제 쌍대공간에서의 소멸자의 의미와 그 중요성을 완벽히 이해하셨나요? 😊\n추가 질문이 있으면 언제든지 물어보세요! 🚀"},"Study/Linear-Algebra/스펙트럼-정리-활용":{"slug":"Study/Linear-Algebra/스펙트럼-정리-활용","filePath":"Study/Linear Algebra/스펙트럼 정리 활용.md","title":"스펙트럼 정리 활용","links":[],"tags":[],"content":"주어진 행렬\nA = \\begin{bmatrix} 1 &amp; 2 \\\\ 2 &amp; 1 \\end{bmatrix}\n에 대해\nL_A가 spectral decomposition을 갖는지 확인\nSpectral decomposition이 가능하려면 행렬 A는 다음 조건을 만족해야 합니다.\n\n대칭 행렬일 것 (A^T = A)\n따라서 고윳값이 모두 실수, 고유벡터들이 직교함\n\n주어진 행렬\nA = \\begin{bmatrix} 1 &amp; 2 \\\\ 2 &amp; 1 \\end{bmatrix}, \\quad A^T = A\n→ 실대칭 행렬이므로 스펙트럼 분해가 가능하다.\n고윳값과 직교 투영 행렬 계산\n고윳값 구하기\n고윳값은 특성 다항식\n\\det(A - \\lambda I) = 0\n을 풀면 구할 수 있다.\n\\det \\begin{bmatrix} 1 - \\lambda &amp; 2 \\\\ 2 &amp; 1 - \\lambda \\end{bmatrix}\n= (1 - \\lambda)^2 - 4 = \\lambda^2 - 2\\lambda - 3 = 0\n\\Rightarrow (\\lambda - 3)(\\lambda + 1) = 0\n\\Rightarrow \\lambda_1 = 3, \\quad \\lambda_2 = -1\n고유벡터와 정규 직교 기저 구하기\n\\lambda_1 = 3\n(A - 3I) \\vec{v} = 0 \\Rightarrow\n\\begin{bmatrix} -2 &amp; 2 \\\\ 2 &amp; -2 \\end{bmatrix}\n\\vec{v} = 0\n⇒ 해는 \\vec{v}_1 = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}\n정규화:\nu_1 = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}\n\\lambda_2 = -1\n(A + I) \\vec{v} = 0 \\Rightarrow\n\\begin{bmatrix} 2 &amp; 2 \\\\ 2 &amp; 2 \\end{bmatrix}\n\\vec{v} = 0\n⇒ 해는 \\vec{v}_2 = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\n정규화:\nu_2 = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\n고유공간에 대한 직교 투영 행렬 구하기\nP_i = u_i u_i^T\n\\lambda = 3에 대응하는 투영\nP_1 = u_1 u_1^T =\n\\left( \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\right)\n\\left( \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\end{bmatrix} \\right)\n= \\frac{1}{2} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 1 \\end{bmatrix}\n= \\frac{1}{2} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{bmatrix}\n\\lambda = -1에 대응하는 투영\nP_2 = u_2 u_2^T =\n\\left( \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} \\right)\n\\left( \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; -1 \\end{bmatrix} \\right)\n= \\frac{1}{2} \\begin{bmatrix} 1 &amp; -1 \\\\ -1 &amp; 1 \\end{bmatrix}\nSpectral decomposition으로 복원 확인\nSpectral theorem에 따르면,\nA = \\lambda_1 P_1 + \\lambda_2 P_2\n계산해보면\n3 P_1 = 3 \\cdot \\frac{1}{2} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{bmatrix}\n= \\frac{3}{2} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{bmatrix}\n-1 \\cdot P_2 = -\\frac{1}{2} \\begin{bmatrix} 1 &amp; -1 \\\\ -1 &amp; 1 \\end{bmatrix}\n= \\frac{1}{2} \\begin{bmatrix} -1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix}\nA = \\frac{3}{2} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; 1 \\end{bmatrix}\n+ \\frac{1}{2} \\begin{bmatrix} -1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix}\n= \\frac{1}{2} \\begin{bmatrix} 3 - 1 &amp; 3 + 1 \\\\ 3 + 1 &amp; 3 - 1 \\end{bmatrix}\n= \\begin{bmatrix} 1 &amp; 2 \\\\ 2 &amp; 1 \\end{bmatrix}\n원래 행렬 A가 정확히 복원됨."},"Study/Linear-Algebra/심프슨-공식(Simpson's-rule)":{"slug":"Study/Linear-Algebra/심프슨-공식(Simpson's-rule)","filePath":"Study/Linear Algebra/심프슨 공식(Simpson's rule).md","title":"심프슨 공식(Simpson's rule)","links":[],"tags":[],"content":"라그랑주 다항식의 적분\n주어진 다항식 p(x)를 라그랑주 기저 다항식 p_i(x)로 전개한 후\np(x) = \\sum_{i=0}^{n} p(c_i) p_i(x)\n양변을 a부터 b까지 적분하면\n\\int_a^b p(t) dt = \\int_a^b \\sum_{i=0}^{n} p(c_i) p_i(t) dt\n선형성을 이용하여 적분 기호를 분리할 수 있습니다.\n\\int_a^b p(t) dt = \\sum_{i=0}^{n} p(c_i) \\int_a^b p_i(t) dt\n여기서 d_i를 다음과 같이 정의하면\nd_i = \\int_a^b p_i(t) dt\n정적분을 라그랑주 다항식의 적분으로 표현한 결과는 다음과 같이 정리됩니다.\n\\int_a^b p(t) dt = \\sum_{i=0}^{n} p(c_i) d_i\n\n이때, d_i는 라그랑주 다항식 p_i(x)의 적분 값으로 각 점 c_i에서의 함수 값 p(c_i)에 대한 가중치 역할을 하며, 적절한 c_i 선택에 따라 적분 공식이 다르게 유도됩니다.\n특정한 c_i 선택에 따른 적분 공식\n구간 [a, b]를 n개의 등간격으로 나누어 c_i를 설정하면 다음과 같습니다.\nc_i = a + \\frac{i(b-a)}{n} \\quad (i = 0, 1, \\cdots, n)\nn=1\n\n주어진 식에서 n=1이면 c_0 = a, c_1 = b입니다.\n\n\\int_a^b p(t) dt = p(c_0) d_0 + p(c_1) d_1\n\nd_0, d_1 값 찾기\n임의의 다항식 p(x)에 대해 적분 공식이 항상 성립해야 하므로, 기저 함수 p(x)를 적절히 선택하여 d_0, d_1을 결정할 수 있습니다.\n\n(1) p(x) = 1을 대입\n\\int_a^b 1 \\,dx = b-a\n이므로,\np(a) d_0 + p(b) d_1 = 1 \\cdot d_0 + 1 \\cdot d_1 = b-a\n즉,\nd_0 + d_1 = b-a.\n\n(2) p(x) = x을 대입\n\\int_a^b x \\,dx = \\frac{b^2 - a^2}{2}\n이므로,\na d_0 + b d_1 = \\frac{b^2 - a^2}{2}.\n이를 연립방정식으로 정리하면\n\\begin{cases}\nd_0 + d_1 = b-a \\\\\na d_0 + b d_1 = \\frac{b^2 - a^2}{2}\n\\end{cases}\n입니다.\n\n연립방정식 풀이\n식을 정리하면,\n\nd_0 = \\frac{(b-a)^2}{2(a-b)} = \\frac{b-a}{2}\n이고, 마찬가지로,\nd_1 = b-a - d_0 = b-a - \\frac{b-a}{2} = \\frac{b-a}{2}.\n입니다.\n\n적분 공식에 대입\n\nd_0 = \\frac{b-a}{2}, \\quad d_1 = \\frac{b-a}{2}\n를 적분 공식에 대입하면\n\\begin{align*}\n\\int_a^b p(t) dt &amp;= \\frac{b-a}{2} p(a) + \\frac{b-a}{2} p(b)\\\\\n&amp;= \\frac{b-a}{2} \\left( p(a) + p(b) \\right)\n\\end{align*}\n이며, 이것은 사다리꼴의 넓이 공식(Trapezoidal Rule)과 일치합니다.\nn=2\n\n등간격 분할\nn=2일 때의 경우도 살펴보겠습니다.  앞선 방법과 마찬가지로,\n\n  c_0 = a, \\quad c_1 = a + \\frac{b-a}{2}, \\quad c_2 = b.\n세 개의 점을 사용하여 적분을 근사하겠습니다.\n  \\int_a^b p(t) dt = p(c_0) d_0 + p(c_1) d_1 + p(c_2) d_2\n\nd_0, d_1, d_2 찾기\n(1) p(x) = 1을 대입\n\n\\int_a^b 1 \\,dx = b-a.\n즉,\nd_0 + d_1 + d_2 = b-a.\n(2) p(x) = x을 대입\n\\int_a^b x \\,dx = \\frac{b^2 - a^2}{2}\n즉,\na d_0 + \\left(a + \\frac{b-a}{2} \\right) d_1 + b d_2 = \\frac{b^2 - a^2}{2}\n(3) p(x) = x^2을 대입\n\\int_a^b x^2 \\,dx = \\frac{b^3 - a^3}{3}\n즉,\na^2 d_0 + \\left( a + \\frac{b-a}{2} \\right)^2 d_1 + b^2 d_2 = \\frac{b^3 - a^3}{3}\n이며, 위 세 개의 식을 풀면, 다음과 같은 가중치가 나옵니다.\nd_0 = \\frac{b-a}{6}, \\quad d_1 = \\frac{4(b-a)}{6}, \\quad d_2 = \\frac{b-a}{6}\n\n최종 적분 공식\n이제 d_0, d_1, d_2를 원래 식에 대입하면\n\n\\begin{align*}\n\\int_a^b p(t) dt &amp;= \\frac{b-a}{6} p(a) + \\frac{4(b-a)}{6} p \\left( \\frac{a+b}{2} \\right) + \\frac{b-a}{6} p(b)\\\\\n&amp;= \\frac{b-a}{6} \\left[ p(a) + 4p \\left( \\frac{a+b}{2} \\right) + p(b) \\right]\n\\end{align*}\n입니다. 이 식은 흔히 심프슨 1/3 공식(Simpson’s 1/3 Rule)이라 불립니다!\n더 많은 점으로 분할하면\n같은 방법으로, n=3일 때는,\n\\int_a^b p(x) dx \\approx \\frac{3h}{8} \\left[ p(a) + 3p(a+h) + 3p(a+2h) + p(b) \\right]\n와 같습니다.\np(x)의 차수가 n과 같으면 이 식은 등식이 성립하지만, p(x)의 차수가 n보다 크다면 오차가 발생합니다. 물론 n이 증가할 수록 정확도가 증가하지만, 너무 높은 차수를 사용하면 오차가 커질 수(Runge’s phenomenon) 있습니다.1\n가중치의 대칭성\n눈치가 빠르신 분들은 가중치 d_i가 좌우 대칭이 된다는 것을 아셨을 것입니다. 이러한 대칭성은 라그랑주 다항식의 적분을 통해 유도할 수 있습니다.\n가중치 d_i는 보간 다항식 p_i(x)의 적분 값으로 정의됩니다:\nw_i = \\int_a^b p_i(x) dx.\n여기서 p_i(x)는 라그랑주 다항식(Lagrange basis polynomial)이고,\np_i(x) = \\prod_{\\substack{j=0 \\\\ j\\neq i}}^n \\frac{x - x_j}{x_i - x_j}.\n보간 다항식은 **등간격으로 나눠진 점 x_0, x_1, \\dots, x_n에서 구성되므로, 항상 대칭성을 가집니다.\n\\begin{array}{c|ccccccccccc}\nn &amp; w_0 &amp; w_1 &amp; w_2 &amp; w_3 &amp; w_4 &amp; w_5 &amp; w_6 &amp; w_7 &amp; w_8 &amp; w_9 &amp; w_{10} \\\\\n\\hline\n1 &amp; \\frac{1}{2} &amp; \\frac{1}{2} &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n2 &amp; \\frac{1}{6} &amp; \\frac{4}{6} &amp; \\frac{1}{6} &amp; &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n3 &amp; \\frac{3}{8} &amp; \\frac{9}{8} &amp; \\frac{9}{8} &amp; \\frac{3}{8} &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n4 &amp; \\frac{7}{90} &amp; \\frac{32}{90} &amp; \\frac{12}{90} &amp; \\frac{32}{90} &amp; \\frac{7}{90} &amp; &amp; &amp; &amp; &amp; &amp; \\\\\n5 &amp; \\frac{19}{288} &amp; \\frac{75}{288} &amp; \\frac{50}{288} &amp; \\frac{50}{288} &amp; \\frac{75}{288} &amp; \\frac{19}{288} &amp; &amp; &amp; &amp; &amp; \\\\\n6 &amp; \\frac{41}{840} &amp; \\frac{216}{840} &amp; \\frac{27}{840} &amp; \\frac{272}{840} &amp; \\frac{27}{840} &amp; \\frac{216}{840} &amp; \\frac{41}{840} &amp; &amp; &amp; &amp; \\\\\n7 &amp; \\frac{751}{17280} &amp; \\frac{3577}{17280} &amp; \\frac{1323}{17280} &amp; \\frac{2989}{17280} &amp; \\frac{2989}{17280} &amp; \\frac{1323}{17280} &amp; \\frac{3577}{17280} &amp; \\frac{751}{17280} &amp; &amp; &amp; \\\\\n8 &amp; \\frac{989}{28350} &amp; \\frac{5888}{28350} &amp; -\\frac{928}{28350} &amp; \\frac{10496}{28350} &amp; -\\frac{4540}{28350} &amp; \\frac{10496}{28350} &amp; -\\frac{928}{28350} &amp; \\frac{5888}{28350} &amp; \\frac{989}{28350} &amp; &amp; \\\\\n9 &amp; \\frac{2857}{89600} &amp; \\frac{15741}{89600} &amp; \\frac{1080}{89600} &amp; \\frac{19344}{89600} &amp; \\frac{5778}{89600} &amp; \\frac{5778}{89600} &amp; \\frac{19344}{89600} &amp; \\frac{1080}{89600} &amp; \\frac{15741}{89600} &amp; \\frac{2857}{89600} &amp; \\\\\n10 &amp; \\frac{16067}{598752} &amp; \\frac{106300}{598752} &amp; -\\frac{48525}{598752} &amp; \\frac{272400}{598752} &amp; -\\frac{260550}{598752} &amp; \\frac{427368}{598752} &amp; -\\frac{260550}{598752} &amp; \\frac{272400}{598752} &amp; -\\frac{48525}{598752} &amp; \\frac{106300}{598752} &amp; \\frac{16067}{598752} \\\\\n\\end{array}\nFootnotes\n\n\nRunge, C. (1901). “Über empirische Funktionen und die Interpolation zwischen äquidistanten Ordinaten”. Zeitschrift für Mathematik und Physik. 46: 224–243. ↩\n\n\n"},"Study/Linear-Algebra/쌍대공간":{"slug":"Study/Linear-Algebra/쌍대공간","filePath":"Study/Linear Algebra/쌍대공간.md","title":"쌍대공간","links":[],"tags":[],"content":"우리는 보통 벡터 공간 V 를 “그 자체로” 바라봅니다. 즉, 벡터 x \\in V 는 어떤 물리적 혹은 기하학적 개념(위치, 속도, 힘 등)으로 해석될 수 있습니다. 하지만 벡터를 직접 다루는 대신, 벡터가 다른 객체에 어떻게 작용하는지를 연구할 수도 있습니다. 이를 위해 등장하는 것이 쌍대 공간입니다.\n쌍대 공간(dual space)\nF 위의 벡터 공간 V 에 대해, 우리는 V 의 쌍대 공간(dual space)을\n\\mathcal{L}(V, F)\n로 정의하며, 이를 V^* 로 표기한다. V^* 의 원소는 V 의 벡터를 받아서 스칼라를 반환하는 함수이다.\n즉, V^* 는 V 위의 모든 선형 범함수(linear functionals)로 이루어진 벡터 공간이다. 이 공간에서는 벡터 공간의 덧셈과 스칼라 곱셈이 기존 벡터 공간에서 정의된 방식과 동일하게 적용된다. 또한, V 가 유한 차원(finite-dimensional)이라면, 다음과 같은 관계가 성립한다.\n\\dim(V^*) = \\dim(\\mathcal{L}(V, F)) = \\dim(V) \\cdot \\dim(F) = \\dim(V)\n즉, 유한 차원 벡터 공간 V 의 쌍대 공간 V^* 는 원래 공간 V 와 같은 차원을 가진다.\n쌍대 기저(dual basis)\nV 가 유한 차원 벡터 공간이고, 순서가 있는 기저(ordered basis) 기저 \\beta = \\{ x_1, x_2, \\dots, x_n \\} 가 주어지면,각 벡터는 이 기저를 기준으로 좌표를 가진다. 쌍대 기저 \\beta^* = \\{ f_1, f_2, \\dots, f_n \\} 는 이러한 기저 벡터를 판별하는 도구로 사용된다. \\beta^* 는 V^* 의 순서가 있는 기저이며, 모든 f \\in V^* 에 대해 다음이 성립한다.\nf = \\sum_{i=1}^{n} f(x_i) f_i\n특히, 각 f_i 는 x_j 를 입력했을 때 1 또는 0이 되도록 정의된 함수이다.\nf_i(x_j) = \\delta_{ij}\n원래 벡터 공간에서 기저가 선택되면, 이에 대응하는 유일한 쌍대 기저가 존재한다. 쌍대 공간에서도 쌍대 기저(dual basis)를 이용하면, 모든 선형 범함수를 쌍대 기저의 선형 결합으로 표현할 수 있다.\n쌍대기저 찾기\n네가 지적한 대로, f_1, f_2 를 “기저 행렬의 역행렬의 행벡터로 정하는 것”이 쌍대 기저를 찾는 일반적인 방법은 아니다.\n이는 행렬 표현이 가능한 경우에는 유효하지만, 일반적으로 쌍대 기저는 함수의 작용에 의해 정의되므로 더 일반적인 방법을 사용해야 한다.\n따라서, 일반적인 방법으로 쌍대 기저를 구하는 과정을 다시 정리하고, 기저 행렬의 역행렬을 사용하는 방식이 언제 가능한지 구체적으로 밝히겠다.\n1. 일반적인 쌍대 기저 구하는 과정\nV 가 n 차원 벡터 공간이고, 기저가\n\\{ b_1, b_2, \\dots, b_n \\}\n로 주어졌다고 하자. 쌍대 기저 \\{ f_1, f_2, \\dots, f_n \\} 는 다음을 만족하는 선형 함수들로 이루어져야 한다.\nf_i(b_j) = \\delta_{ij}, \\quad (1 \\leq i, j \\leq n)\n즉, f_i 는 기저 벡터 b_j 를 입력받았을 때 항등행렬의 역할을 하는 선형 함수이다. 쌍대 기저는 특정한 기저 \\{ b_1, \\dots, b_n \\} 에 대해 정의된 선형 함수들의 집합이므로, 이 함수들을 직접 찾기 위해 각 f_i 를 다음과 같은 선형 함수라고 가정하자.\nf_i(x) = a_{i1} x_1 + a_{i2} x_2 + \\dots + a_{in} x_n\n이제 f_i 가 쌍대 기저 조건을 만족하도록 방정식을 세운다.\nf_i(b_j) = \\delta_{ij}\n이를 풀어 f_i 들을 구할 수 있다.\n행렬을 이용해 쌍대기저 찾기\n우리는 어떤 벡터 공간 V 의 기저가 주어졌을 때,  그 기저의 행렬의 역행렬의 행벡터들이 왜 쌍대 기저가 되는지를 일반적으로 증명하려고 한다.\n벡터 공간 V 가 있고, V 의 기저가 다음과 같이 주어졌다고 하자.\n\\{ b_1, b_2, \\cdots, b_n \\}\n이 기저에 대해 임의의 벡터 v \\in V 는 다음과 같이 표현된다.\nv = c_1 b_1 + c_2 b_2 + \\cdots + c_n b_n\n즉, 벡터 v 의 좌표는 새로운 기저 \\{ b_1, \\dots, b_n \\} 에 대한 좌표 벡터 (c_1, \\dots, c_n) 이다. 이 기저를 행렬로 표현하면, 기저 벡터들을 열벡터로 가지는 행렬 B 를 정의할 수 있다.\nB = \\begin{bmatrix}  b_1 &amp; b_2 &amp; \\cdots &amp; b_n \\end{bmatrix}\n임의의 벡터 v 가 있을 때, 그 좌표 벡터 [v]_B = (c_1, \\dots, c_n)^T 는 다음을 만족한다.\nB \\begin{bmatrix} c_1 \\\\ c_2 \\\\ \\vdots \\\\ c_n \\end{bmatrix} = v\n즉, 좌표 벡터 [v]_B 는 v 에 행렬 B^{-1} 을 곱한 결과이다.\n[v]_B = B^{-1} v\n우리는 역행렬 B^{-1} 의 행벡터들이 왜 쌍대 기저가 되는지를 증명해야 한다. 쌍대 공간 V^* 의 기저 \\{ f_1, f_2, \\cdots, f_n \\} 는 다음 성질을 만족하는 선형 함수들로 구성된다.\nf_i(b_j) = \\delta_{ij}, \\quad (1 \\leq i, j \\leq n)\nB^{-1} 의 정의에 의해,\nB^{-1} B = I_n\nB^{-1} 의 행벡터를 r_1, r_2, \\dots, r_n 이라고 하면, 기저 행렬 B 와 곱했을 때, 항등행렬 I_n 이 되어야 한다.\n\\begin{bmatrix} r_1 \\\\ r_2 \\\\ \\vdots \\\\ r_n \\end{bmatrix}\n\\begin{bmatrix} b_1 &amp; b_2 &amp; \\cdots &amp; b_n \\end{bmatrix}\n=\n\\begin{bmatrix} 1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; 1 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\dots &amp; 1 \\end{bmatrix}\n즉,\nr_i \\cdot b_j = \\delta_{ij}\n이므로, 쌍대 기저의 정의에 의해 B^{-1}의 행벡터는 쌍대 기저를 이룬다.\n이중 공간(double dual space)\n유한 차원 벡터 공간 V 에 대해 함수\n\\psi: V \\to V^{**}\n를 다음과 같이 정의하자.\n\\psi(x) = \\hat{x}, \\quad \\text{where} \\quad \\hat{x}(f) = f(x) \\quad \\forall f \\in V^*\n그러면 \\psi 는 동형사상(isomorphism)이다.\nV \\cong V^{**}\n즉, 유한 차원에서는 V^{**} 가 단순히 원래 공간 V 와 같은 공간으로 볼 수 있다. 벡터 공간 V 를 벡터를 벡터로 보든, 함수로 보든 결과적으로 같은 공간을 연구하는 것이 된다는 점을 의미한다. 내적을 고려하면 이 관계가 더욱 명확해집니다.\n내적이 존재하는 공간에서 쌍대 공간\n내적(inner product) 이 정의된 벡터 공간에서는 쌍대 공간 V^* 을 원래 공간 V 와 동일하게 생각할 수 있다.\n유클리드 공간에서의 쌍대 공간\n유클리드 공간 \\mathbb{R}^n 을 생각해보자. 내적 \\langle \\cdot, \\cdot \\rangle 을 이용하면, 어떤 벡터 v \\in \\mathbb{R}^n 에 대해 다음과 같은 선형 함수 f_v 를 정의할 수 있다.\nf_v(x) = \\langle v, x \\rangle, \\quad \\forall x \\in \\mathbb{R}^n\n즉, 벡터 v 가 있으면, 이 벡터를 이용해 벡터 공간 위에서 선형 범함수를 만들 수 있다. 이 함수 f_v 는 실제로 \\mathbb{R}^n 의 쌍대 공간 (\\mathbb{R}^n)^* 의 원소가 된다. 중요한 점은, 모든 선형 범함수 f \\in (\\mathbb{R}^n)^* 가 이런 형태로 표현될 수 있다는 것이다. 즉, 모든 선형 함수는 어떤 벡터 v 에 대한 내적을 통해 나타낼 수 있다.\nf(x) = \\langle v, x \\rangle, \\quad \\text{for some } v \\in \\mathbb{R}^n\n이 말은 곧, 모든 선형 함수 f 가 어떤 벡터 v 와 정확히 일대일 대응된다는 것을 의미한다. 따라서, 벡터 공간 \\mathbb{R}^n 과 그 쌍대 공간 (\\mathbb{R}^n)^* 이 사실상 같은 공간이라는 결론이 나온다.\n힐베르트 공간에서 일반화\n유클리드 공간뿐만 아니라, 내적이 존재하는 힐베르트 공간(Hilbert space) 에서도 동일한 결과가 성립한다. 힐베르트 공간에서는 모든 선형 함수가 내적을 통해 표현될 수 있으므로, 원래 공간과 쌍대 공간이 동형(isomorphic)이다. 이를 리스 표현 정리(Riesz Representation Theorem)라고 부른다."},"Study/Linear-Algebra/오른손-좌표계와-향(Orientation)":{"slug":"Study/Linear-Algebra/오른손-좌표계와-향(Orientation)","filePath":"Study/Linear Algebra/오른손 좌표계와 향(Orientation).md","title":"오른손 좌표계와 향(Orientation)","links":[],"tags":[],"content":"벡터의 순서쌍 \\{ \\mathbf{u}, \\mathbf{w} \\}가 오른손 좌표계를 형성하기 위한 필요충분 조건이 O( \\mathbf{u}, \\mathbf{w} ) = 1과 동치임을 보인다.\n방향성(Orientation)의 정의\n주어진 \\mathbb{R}^2의 기저 \\{ \\mathbf{u}, \\mathbf{w} \\}에 대해 방향성(Orientation) O( \\mathbf{u}, \\mathbf{w} )를 다음과 같이 정의한다.\nO \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} = \\frac{ \\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} }{ \\left| \\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} \\right| }\n이는 행렬식 \\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix}의 부호를 의미하며, 다음이 성립한다.\nO \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} = 1 \\quad \\iff \\quad \\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} &gt; 0\n회전에 대한 행렬식의 부호\n이제, 벡터 \\mathbf{w}가 \\mathbf{u}를 0 &lt; \\theta &lt; \\pi만큼 반시계 방향으로 회전하여 얻어지는 경우를 고려하자. 즉,\n\\mathbf{u} = ( a_{1}, a_2 ), \\quad \\mathbf{w} = (a_1 \\cos \\theta - a_2 \\sin \\theta, a_1 \\sin \\theta + a_2 \\cos \\theta )\n이때, 행렬식을 계산하면\n\\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} = \\det \\begin{bmatrix} a_1 &amp; a_2 \\\\ a_1 \\cos \\theta - a_2 \\sin \\theta &amp; a_1 \\sin \\theta + a_2 \\cos \\theta \\end{bmatrix}\n전개하여 정리하면,\n\\begin{aligned}\n\\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} &amp;= a_1(a_1 \\sin \\theta + a_2 \\cos \\theta) - a_2(a_1 \\cos \\theta - a_2 \\sin \\theta) \\\\\n&amp;= a_1^2 \\sin \\theta + a_1 a_2 \\cos \\theta - a_2 a_1 \\cos \\theta + a_2^2 \\sin \\theta \\\\\n&amp;= (a_1^2 + a_2^2) \\sin \\theta\n\\end{aligned}\n여기서 a_1^2 + a_2^2 &gt; 0이고, \\sin \\theta &gt; 0 (왜냐하면 0 &lt; \\theta &lt; \\pi이므로)임을 이용하면\n\\det \\begin{bmatrix} \\mathbf{u} \\\\ \\mathbf{w} \\end{bmatrix} &gt; 0\nO( \\mathbf{u}, \\mathbf{w} ) = 1이 성립한다."},"Study/Linear-Algebra/원뿔곡선과-주축정리":{"slug":"Study/Linear-Algebra/원뿔곡선과-주축정리","filePath":"Study/Linear Algebra/원뿔곡선과 주축정리.md","title":"원뿔곡선과 주축정리","links":[],"tags":[],"content":"원뿔 곡선 (Conic Sections)\n다음과 같은 이차 방정식을 고려하자.\nax^2 + 2bxy + cy^2 + dx + ey + f = 0 \\tag 1\n특정 계수 값을 선택하면, 우리는 다양한 원뿔 곡선을 얻을 수 있다. 예를 들어, a = c = 1, b = d = e = 0, f = -1을 선택하면 원점 중심의 원 x^2 + y^2 = 1을 얻게 된다. 나머지 원뿔 곡선(타원, 포물선, 쌍곡선)은 계수의 다른 선택을 통해 얻어진다.\n만약 b = 0이라면, xy 항이 없으므로 완전제곱법을 이용하여 방정식을 쉽게 그래프로 나타낼 수 있다. 예를 들어, 방정식\nx^2 + 2x + y^2 + 4y + 2 = 0\n는 완전제곱법을 이용하여 다음과 같이 변형될 수 있다.\n(x+1)^2 + (y+2)^2 = 3\n이는 반지름이 \\sqrt{3}이고 중심이 (-1, -2)인 원을 나타낸다. 좌표 변환\n(x, y) \\to (x&#039;, y&#039;), \\quad x&#039; = x + 1, \\quad y&#039; = y + 2\n을 고려하면 방정식은 단순한 형태인\n(x&#039;)^2 + (y&#039;)^2 = 3\n로 변환된다. 이러한 변수 변환을 통해 x 및 y 항을 제거할 수 있다.\n동반된 이차형식(associated quadratic form)\n이제 우리는 xy 항의 제거에 집중한다. 이를 위해, 다음과 같은 동반된 이차 형식(associated quadratic form)을 고려한다.\nax^2 + 2bxy + cy^2 \\tag 2\n행렬을 다음과 같이 정의하면,\nA = \\begin{pmatrix} a &amp; b \\\\ b &amp; c \\end{pmatrix}, \\quad X = \\begin{pmatrix} x \\\\ y \\end{pmatrix}\n위 식은 다음과 같이 표현될 수 있다.\nX^t A X = \\langle AX, X \\rangle\n예를 들어, 이차 형식 3x^2 + 4xy + 6y^2는 행렬 표현으로 다음과 같이 나타낼 수 있다.\nX^t \\begin{pmatrix} 3 &amp; 2 \\\\ 2 &amp; 6 \\end{pmatrix} X\n행렬 A가 대칭 행렬이라는 점이 중요한 역할을 한다. 대칭행렬은 실대각행렬과 직교동치(orthognally equivalent)이므로, 우리는 직교 행렬 P와 대각 행렬 D를 선택할 수 있으며, 이때 D의 대각 원소는 실수 고윳값 \\lambda_1, \\lambda_2이다. 즉,\nP^t A P = D\n이제 다음과 같이 새로운 좌표를 정의한다.\nX&#039; = \\begin{pmatrix} x&#039; \\\\ y&#039; \\end{pmatrix}\n여기서,\nX&#039; = P^t X\n혹은 동등하게,\nP X&#039; = X \\quad \\Rightarrow \\quad P P^t X = X\n이제,\nX^t A X = (PX&#039;)^t A (PX&#039;) = X&#039;^t (P^t A P) X&#039; = X&#039;^t D X&#039; = \\lambda_1 (x&#039;)^2 + \\lambda_2 (y&#039;)^2\n따라서 좌표 변환 (x, y) \\to (x&#039;, y&#039;)를 수행하면, 주어진 방정식에서 xy 항을 제거할 수 있다.\n추가적으로, P가 직교 행렬이므로,\n\\det(P) = \\pm 1\n만약 \\det(P) = -1이라면, 우리는 P의 열 벡터를 바꾸어 행렬 Q를 얻을 수 있다. 행렬 P의 열 벡터는 A의 고유 벡터 정규 직교 기저(orthonormal basis of eigenvectors)를 이루므로, Q도 마찬가지다. 따라서,\nQ^t A Q = \\begin{pmatrix} \\lambda_2 &amp; 0 \\\\ 0 &amp; \\lambda_1 \\end{pmatrix}\n\\det(Q) = -\\det(P) = 1임을 주목하자. 따라서, 만약 \\det(P) = -1이라면, 우리는 Q를 새로운 P로 선택할 수 있다. 따라서 항상 \\det(P) = 1이 되도록 P를 선택할 수 있다. (\\det(P) = 1인 직교 행렬 P는 회전을 나타낸다.)\n요약하면, 식 (2)에 있는 xy 항은 x-축과 y-축을 새로운 축 x&#039; 및 y&#039;로 회전시켜 제거할 수 있으며, 이는\nX = P X&#039;\n로 주어진다. 여기서 P는 직교 행렬이며, \\det(P) = 1이다. 또한, (x&#039;)^2과 (y&#039;)^2의 계수는 행렬\nA = \\begin{pmatrix} a &amp; b \\\\ b &amp; c \\end{pmatrix}\n의 고윳값들이다.\n\n이 결과는 주축 정리 (principal axis theorem)의 재진술이다. 위의 논의는 n개의 변수를 가지는 이차 방정식으로 쉽게 확장될 수 있다. 예를 들어, n = 3인 경우, 계수의 특수한 선택을 통해 이차 곡면(quadratic surfaces)을 얻을 수 있다. 즉, 타원형 원뿔(elliptic cone), 타원체(ellipsoid), 쌍곡 포물면(hyperbolic paraboloid) 등이 포함된다.\n\n활용\n다음과 같은 이차 방정식을 고려하자.\n2x^2 - 4xy + 5y^2 - 36 = 0\n이 방정식에 대응하는 동반된 이차 형식(associated quadratic form)은\n2x^2 - 4xy + 5y^2\n이다. 우리가 사용한 행렬 표기법을 적용하면,\nA = \\begin{pmatrix} 2 &amp; -2 \\\\ -2 &amp; 5 \\end{pmatrix}\n이 된다. 이 행렬의 고윳값은 1과 6이며, 이에 대응하는 고유벡터(eigenvectors)는 다음과 같다.\n\\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix}, \\quad \\begin{pmatrix} -1 \\\\ 2 \\end{pmatrix}\n두 고윳값은 서로 다르므로, 이 벡터들은 서로 직교(orthogonal)하다. 이에 대응하는 직교 정규 기저(orthonormal basis of eigenvectors)는 다음과 같다.\n\\beta = \\left\\{ \\begin{pmatrix} \\frac{2}{\\sqrt{5}} \\\\ \\frac{1}{\\sqrt{5}} \\end{pmatrix}, \\begin{pmatrix} \\frac{-1}{\\sqrt{5}} \\\\ \\frac{2}{\\sqrt{5}} \\end{pmatrix} \\right\\}\n이러한 기저 벡터는 새로운 좌표축 x&#039; 및 y&#039;을 결정하며, 이는 그림 6.4에서 볼 수 있다. 따라서 행렬 P를 다음과 같이 정의할 수 있다.\nP = \\begin{pmatrix} \\frac{2}{\\sqrt{5}} &amp; \\frac{-1}{\\sqrt{5}} \\\\ \\frac{1}{\\sqrt{5}} &amp; \\frac{2}{\\sqrt{5}} \\end{pmatrix} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 2 &amp; -1 \\\\ 1 &amp; 2 \\end{pmatrix}\n그렇다면\nP^t A P = \\begin{pmatrix} 1 &amp; 0 \\\\ 0 &amp; 6 \\end{pmatrix}\n이 된다.\n좌표 변환 X = PX&#039;을 적용하면,\nx = \\frac{2}{\\sqrt{5}} x&#039; - \\frac{1}{\\sqrt{5}} y&#039;\ny = \\frac{1}{\\sqrt{5}} x&#039; + \\frac{2}{\\sqrt{5}} y&#039;\n이 된다.\n이를 이용하면 새로운 이차 형식은\n(x&#039;)^2 + 6(y&#039;)^2\n로 변환된다. 따라서 원래의 방정식\n2x^2 - 4xy + 5y^2 = 36\n은 새로운 좌표계에서\n(x&#039;)^2 + 6(y&#039;)^2 = 36\n으로 나타낼 수 있다. 여기서 x&#039;-축과 y&#039;-축은 각각 \\beta의 첫 번째 및 두 번째 고유벡터의 방향을 따른다. 이 방정식은 타원(ellipse)을 나타낸다는 것이 명백하다.\n\n주어진 행렬 P는 다음과 같은 형태를 가진다.\n\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\ \\sin\\theta &amp; \\cos\\theta \\end{pmatrix}\n여기서\n\\theta = \\cos^{-1} \\left(\\frac{2}{\\sqrt{5}}\\right) \\approx 26.6^\\circ\n즉, P는 \\mathbb{R}^2에서 각도 \\theta만큼의 회전을 나타내는 행렬이다. 따라서 변수 변환 X = P X&#039;는 x-축과 y-축을 회전하여 수행할 수 있다.\n그러나 P에는 또 다른 선택이 존재한다. 만약 행렬 A의 고윳값 6에 대응하는 고유벡터를 (-1,2) 대신 (1,-2)로 선택하고, 고윳값들의 순서를 바꾼다면, 다음과 같은 행렬을 얻을 수 있다.\n\\begin{pmatrix} \\frac{1}{\\sqrt{5}} &amp; \\frac{2}{\\sqrt{5}} \\\\ \\frac{-2}{\\sqrt{5}} &amp; \\frac{1}{\\sqrt{5}} \\end{pmatrix}\n이 행렬은 다음과 같은 각도 \\theta를 갖는 회전 행렬을 나타낸다.\n\\theta = \\sin^{-1} \\left(\\frac{-2}{\\sqrt{5}}\\right) \\approx -63.4^\\circ\n이 경우, 결과적으로 동일한 타원이 생성되지만, x&#039;-축과 y&#039;-축의 이름이 서로 바뀐다."},"Study/Linear-Algebra/유니타리-동치(unitary-equivalence)-판별법":{"slug":"Study/Linear-Algebra/유니타리-동치(unitary-equivalence)-판별법","filePath":"Study/Linear Algebra/유니타리 동치(unitary equivalence) 판별법.md","title":"유니타리 동치(unitary equivalence) 판별법","links":[],"tags":[],"content":"유니타리 동치(Unitarily Equivalent)의 정의\n두 n \\times n 복소 행렬 A 와 B 가 유니타리 동치(unitarily equivalent) 라고 하면, 다음을 만족하는 유니타리 행렬 P 가 존재해야 한다.\nB = P^* A P\n여기서 P^* 는 P 의 켤레전치(conjugate transpose)이며, 유니타리 행렬의 정의에 따라 다음이 성립한다.\nP^* P = P P^* = I\n즉, 유니타리 행렬은 정규직교 기저를 보존하는 성질을 가지며, 행렬의 크기를 변형시키지 않는다.\n\\text{tr}(A^* A) = \\text{tr}(B^* B)\n\\begin{align*}\nB^* B &amp;= (P^* A P)^* (P^* A P) \\\\\n&amp;= P^* A^* (P^* P) A P\n\\end{align*}\n유니타리 행렬 P 는 유니타리 성질 P P^* = I 을 만족하므로,\nB^* B = P^* A^* A P\n이제 트레이스의 기본 성질을 이용하면,\n\\text{tr}(A^* A) = \\text{tr}(P^* A^* A P)\n트레이스의 순환 성질 \\text{tr}(XY) = \\text{tr}(YX) 를 적용하면,\n\\begin{align*}\n\\text{tr}(P^* A^* A P) &amp;= \\text{tr}(A^* A P P^*) \\\\\n&amp;= \\text{tr}(A^* A I) \\\\\n&amp;= \\text{tr}(A^* A)\n\\end{align*}\n따라서,\n\\text{tr}(A^* A) = \\text{tr}(B^* B)\n\\sum_{i,j} |A_{ij}|^2 = \\sum_{i,j} |B_{ij}|^2\n트레이스의 정의를 이용하면,\n\\text{tr}(A^* A) = \\sum_{k=1}^{n} (A^* A)_{kk}\n행렬 성분을 전개하면,\n(A^* A)_{kk} = \\sum_{l=1}^{n} \\overline{A_{lk}} A_{lk}\n이를 다시 전체 트레이스로 합하면,\n\\text{tr}(A^* A) = \\sum_{k=1}^{n} \\sum_{l=1}^{n} \\overline{A_{lk}} A_{lk}\n복소수 성분의 제곱 절댓값을 이용하면,\n\\text{tr}(A^* A) = \\sum_{k=1}^{n} \\sum_{l=1}^{n} |A_{lk}|^2\n행렬 성분의 순서를 변경하면,\n\\text{tr}(A^* A) = \\sum_{i=1}^{n} \\sum_{j=1}^{n} |A_{ij}|^2\n위에서 증명한 첫 번째 명제에 의해,\n\\text{tr}(A^* A) = \\text{tr}(B^* B)\n따라서 동일한 과정으로 B 에 대해서도 적용하면,\n\\sum_{i=1}^{n} \\sum_{j=1}^{n} |A_{ij}|^2 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} |B_{ij}|^2\n즉,\n\\sum_{i,j} |A_{ij}|^2 = \\sum_{i,j} |B_{ij}|^2\n제곱합이 같지만 유니타리 동치가 아닌 행렬의 예시\n다음 두 행렬을 고려하자.\nA = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix}, \\quad\nB = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix}\n\n제곱합 계산\n행렬의 모든 원소의 절댓값 제곱을 더해보자.\n\n\\sum_{i,j} |A_{ij}|^2 = 1^2 + 0^2 + 0^2 + 1^2 = 2\n\\sum_{i,j} |B_{ij}|^2 = 0^2 + 1^2 + 1^2 + 0^2 = 2\n즉, 두 행렬의 원소의 제곱합은 같다.\n\n\n유니타리 동치 여부 확인\n행렬이 유니타리 동치이려면, 반드시 같은 고윳값을 가져야 한다.\n\nA 의 고윳값:\n\n\n\n\\det(A - \\lambda I) = \\begin{vmatrix} 1 - \\lambda &amp; 0 \\\\ 0 &amp; 1 - \\lambda \\end{vmatrix} = (1-\\lambda)(1-\\lambda) = 0\n\\lambda = 1, 1\n\nB 의 고윳값:\n\n\\det(B - \\lambda I) = \\begin{vmatrix} -\\lambda &amp; 1 \\\\ 1 &amp; -\\lambda \\end{vmatrix} = \\lambda^2 - 1 = 0\n\\lambda = \\pm 1\n즉, A 의 고윳값은 (1,1), B 의 고윳값은 (1,-1) 이므로, 두 행렬은 서로 다른 고윳값을 가진다.\n이 반례를 통해, 행렬의 모든 원소의 절댓값 제곱합이 같다고 해서 유니타리 동치인 것은 아니라는 사실을 확인할 수 있다."},"Study/Linear-Algebra/유니타리-행렬(Unitary-Matrix)":{"slug":"Study/Linear-Algebra/유니타리-행렬(Unitary-Matrix)","filePath":"Study/Linear Algebra/유니타리 행렬(Unitary Matrix).md","title":"유니타리 행렬(Unitary Matrix)","links":[],"tags":[],"content":"유니타리 행렬(Unitary Matrix)\n유니타리 행렬 U은 다음 조건을 만족하는 정사각 행렬이다.\nU^* U = U U^* = I\n\nU^*는 U의 켤레 전치(conjugate transpose)\n\n유니타리 행렬의 성질1\n노름 보존(Norm Preservation)\n유니타리 행렬은 벡터의 노름(norm)을 보존한다. 즉, 임의의 복소수 벡터 x에 대해,\n\\| Ux \\| = \\| x \\|\n이 성질은 유니타리 행렬이 내적을 보존한다는 의미이기도 하다.\n\\langle Ux, Uy \\rangle = \\langle x, y \\rangle\n이를 통해 유니타리 행렬이 길이를 변형하지 않는 등거리 변환(isometry)임을 알 수 있다.\n고윳값의 크기는 1\n유니타리 행렬은 내적을 보존하므로,\n\\langle Ux, Ux \\rangle = \\langle \\lambda x, \\lambda x \\rangle = \\langle x, x \\rangle\n내적의 선형성과 켤레 복소수 성질을 이용하면,\n\\lambda \\overline{\\lambda} \\langle x, x \\rangle = |\\lambda|^2 \\langle x, x \\rangle = \\langle x, x \\rangle \nx \\neq 0이므로,\n|\\lambda| = 1\n따라서 자명하게,\n|\\det(U)| = 1\n이는 유니타리 행렬이 부피를 보존한다는 의미이기도 하다.\n정규직교기저\n유니타리 행렬은 U^* U = I을 만족하므로,\n(U^* U)_{ij} = u_i^* u_j = \\delta_{ij}\n각 열벡터의 노름이 1이고,  i \\neq j일 때, \\langle u_i, u_j \\rangle = 0이므로 열벡터들은 서로 직교한다. 따라서, 유니타리 행렬의 열벡터(행벡터)는 정규직교 기저를 이룬다.\n\\det(A^*) = \\overline{\\det(A)}\n임의의 복소수 정사각행렬 A에 대해 켤레 전치(conjugate transpose, Hermitian transpose)를 취한 행렬의 행렬식(determinant)은 원래 행렬식의 켤레 복소수와 같다.\nA가 n \\times n 행렬일 때, 행렬식의 정의에 의해,\n\\det(A) = \\sum_{\\sigma \\in S_n} \\operatorname{sgn}(\\sigma) \\prod_{i=1}^{n} a_{i, \\sigma(i)}\n여기서 S_n은 대칭군(순열군)이고, \\operatorname{sgn}(\\sigma)는 순열의 부호(순열을 만들기 위해 필요한 교환 횟수가 짝수인 경우 +1, 홀수인 경우 -1)를 나타낸다.\n행렬 A^*의 성분은 (A^*)_{ij} = \\overline{A_{ji}}이므로,\n\\det(A^*) = \\sum_{\\sigma \\in S_n} \\operatorname{sgn}(\\sigma) \\prod_{i=1}^{n} \\overline{a_{\\sigma(i), i}}\n복소수의 켤레 연산은 곱셈과 덧셈에서 분배되므로,\n\\det(A^*) = \\overline{\\sum_{\\sigma \\in S_n} \\operatorname{sgn}(\\sigma) \\prod_{i=1}^{n} a_{\\sigma(i), i}}\n위 식의 우변은 정확히 \\det(A)의 켤레 복소수와 같으므로,\n\\det(A^*) = \\overline{\\det(A)}\nFootnotes\n\n\n이러한 성질은 유니타리 행렬의 필요충분조건이기도 하다. ↩\n\n\n"},"Study/Linear-Algebra/정규연산자":{"slug":"Study/Linear-Algebra/정규연산자","filePath":"Study/Linear Algebra/정규연산자.md","title":"정규연산자","links":[],"tags":[],"content":"\n벡터공간 V의 연산자가 대각화가능하기 위한 필요충분조건은 ‘이 연산자의 고유벡터로 이루어진 (V의) ==기저==가 존재한다’이다.\n(유한차원 복소내적공간 V의 선형연산자 T에 대하여) T가 정규연산자일 필요충분조건은 T의 고유벡터들로 이루어진 (V의) ==정규직교기저==가 존재한다는 것이다.\n"},"Study/Linear-Algebra/조르당-표준형-구하기":{"slug":"Study/Linear-Algebra/조르당-표준형-구하기","filePath":"Study/Linear Algebra/조르당 표준형 구하기.md","title":"조르당 표준형 구하기","links":[],"tags":[],"content":"개념\n대수적 중복도 (Algebraic Multiplicity, AM)\n어떤 고유값 \\lambda가 특성 다항식 \\det(A - \\lambda I) = 0의 해로 몇 번 나오는지 나타냅니다. 예를들어, \\det(A - \\lambda I) = (\\lambda - 3)^2(\\lambda - 5)^1 라면, 고윳값 3의 AM = 2, 고윳값 5의 AM = 1 입니다.\n기하적 중복도 (Geometric Multiplicity, GM)\n고유공간 E_\\lambda = \\ker(A - \\lambda I)의 차원 즉, 고유값 λ에 대해 선형독립인 고유벡터의 개수를 나타냅니다.\nGM = \\dim(\\ker(A - \\lambda I)) = \\text{nullity}(A - \\lambda I)\n대수적 중복도와 기하적 중복도 관계\n고유벡터는 다음 조건을 만족하는 벡터입니다.\n(A - \\lambda I)\\vec{v} = 0\n즉, 고유공간은 A - \\lambda I의 영공간(null space)입니다. 그런데 이 영공간의 차원, 즉 GM은 A - \\lambda I의 계수(rank)에 따라 달라지며, 행렬 자체가 특정 구조를 가지면 null space가 제한될 수 있습니다.\n예를들어 \\lambda가 대수적으로 3번 중복되도, 실제로 A - \\lambda I의 영공간이 크지 않다면 독립된 고유벡터는 3개가 안 될 수 있습니다.\n따라서\n1 \\leq \\text{GM} \\leq \\text{AM}\n\nGM = AM이면: 대각화 가능\nGM &lt; AM이면: 대각화 불가능, 조르당 블록 생김\n\n점 도표(Dot Diagram)의 구조와 해석\n점 도표는 고유값과 일반화 고유벡터의 관계를 시각적으로 나타내는 방법입니다. 각 점은 고유벡터 또는 일반화 고유벡터를 나타내며, 점의 위치는 해당 벡터가 속한 고유값과 일반화 고유공간을 나타냅니다.\nK_{\\lambda_i}로의 T의 제한을 T_i, T_i의 점 도표의 j행에 위치한 점의 개수를 r_j라 하면,\n\nr_1 = \\dim V - \\text{rank}(T - \\lambda I)\nj &gt; 1 일 때, r_j = \\text{rank}((T - \\lambda I)^{j-1}) - \\text{rank}((T - \\lambda I)^j)\n\n예제 1\nA = \\begin{bmatrix}\n2 &amp; -1 &amp; 0 &amp; 1 \\\\\n0 &amp; 3 &amp; -1 &amp; 0 \\\\\n0 &amp; 1 &amp; 1 &amp; 0 \\\\\n0 &amp; -1 &amp; 0 &amp; 3\n\\end{bmatrix}\n특성 다항식 및 고윳값\n특성 다항식은 다음과 같습니다.\n\\det(A - tI) = (t - 2)^3(t - 3)\n\n\\lambda_1 = 2, AM = 3\n\\lambda_2 = 3, AM = 1\n\n\\lambda_2의 기하적 중복도는 1이므로 고유벡터는 1개만 필요합니다. 반면에 \\lambda_1의 기하적 중복도는 계산을 통해 구해야 합니다.\n\\lambda_1의 기하적 중복도\nA - 2I = \n\\begin{bmatrix}\n0 &amp; -1 &amp; 0 &amp; 1 \\\\\n0 &amp; 1 &amp; -1 &amp; 0 \\\\\n0 &amp; 1 &amp; -1 &amp; 0 \\\\\n0 &amp; -1 &amp; 0 &amp; 1\n\\end{bmatrix}\nr_1 = 4 - \\text{rank}(A - 2I) = 4 - 2 = 2\n(A - 2I)^2 = \n\\begin{bmatrix}\n0 &amp; -2 &amp; 1 &amp; 1 \\\\\n0 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; -2 &amp; 1 &amp; 1\n\\end{bmatrix}\n\\Rightarrow\n\\text{rank} = 1\nr_2 = \\text{rank}(A - 2I) - \\text{rank}((A - 2I)^2) = 2 - 1 = 1\n그러므로 점 도표는 다음과 같다.\n\\begin{matrix}\n\\bullet &amp; \\bullet \\\\\n\\bullet\n\\end{matrix}\n4️⃣ 일반화 고유벡터 구하기\n\nK_{\\lambda_1} = \\ker((A - 2I)^2) → 차원 3\nN(T - 2I) → 차원 2\n\n▶ v_1 선택\nv_1 \\in N((A - 2I)^2), \\quad v_1 \\notin N(A - 2I)\n\\Rightarrow\nv_1 = \\begin{bmatrix} 0 \\\\ 1 \\\\ 2 \\\\ 0 \\end{bmatrix}\n▶ v_2 = (A - 2I)v_1\nv_2 = \\begin{bmatrix} -1 \\\\ -1 \\\\ -1 \\\\ -1 \\end{bmatrix}\n→ 이 두 벡터가 하나의 조르당 사슬 형성\n(하단에서 상단으로: v_1 \\rightarrow v_2)\n5️⃣ 두 번째 사슬: 고유벡터 v_3\n\nv_3 \\in E_{\\lambda_1}\nv_3 \\notin \\text{span}(v_2)\n\n선택:\nv_3 = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix}\n6️⃣ 고유값 3에 대한 고유벡터\n\n\\lambda_2 = 3의 대수/기하 중복도는 1이므로 고유벡터 1개만 필요\n\nv_4 = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 1 \\end{bmatrix}\n7️⃣ 조르당 기저 정리 및 조르당 행렬\n▶ 조르당 기저:\n\\beta = \\left\\{\n\\begin{bmatrix} -1 \\\\ -1 \\\\ -1 \\\\ -1 \\end{bmatrix},\n\\begin{bmatrix} 0 \\\\ 1 \\\\ 2 \\\\ 0 \\end{bmatrix},\n\\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix},\n\\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 1 \\end{bmatrix}\n\\right\\}\n▶ 조르당 정규형 J:\nJ = \\begin{bmatrix}\n2 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 2 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 2 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 3\n\\end{bmatrix}\n8️⃣ 결론: 전이행렬 Q\n해당 기저를 열벡터로 갖는 전이행렬 Q:\nQ = \\begin{bmatrix}\n-1 &amp; 0 &amp; 1 &amp; 1 \\\\\n-1 &amp; 1 &amp; 0 &amp; 0 \\\\\n-1 &amp; 2 &amp; 0 &amp; 0 \\\\\n-1 &amp; 0 &amp; 0 &amp; 1\n\\end{bmatrix}\n\\Rightarrow\nJ = Q^{-1}AQ\n📌 핵심 요약\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n항목값고유값2 (AM=3, GM=2), 3 (AM=1, GM=1)도트 다이어그램위 2, 아래 1점일반화 고유벡터 사슬길이 2 (v₁, v₂)조르당 기저일반화 고유벡터 포함조르당 정규형상삼각 블록 포함된 J\n이러한 예제는 조르당 정규형을 구성하는 전형적인 과정으로, 추상적인 개념을 행렬 연산, 기저 변환, 고유공간 분해를 통해 구체화하는 데 큰 도움이 됩니다.\n원하시면 이와 유사한 문제나 다른 고유값 구조에 대한 예제도 함께 다룰 수 있습니다."},"Study/Linear-Algebra/주성분-분석-(Principal-Component-Analysis)":{"slug":"Study/Linear-Algebra/주성분-분석-(Principal-Component-Analysis)","filePath":"Study/Linear Algebra/주성분 분석 (Principal Component Analysis).md","title":"주성분 분석 (Principal Component Analysis)","links":[],"tags":[],"content":"건강 문제를 다루는 다음 연구를 고려해 보겠습니다. 우리는 연령, 두 가지 콜레스테롤 수치(고밀도 지단백과 저밀도 지단백), 두 가지 혈압 수치(이완기와 수축기), 체중, 키, 운동 습관, 하루 지방 섭취량, 하루 소금 섭취량과 같은 변수들을 사용하여 대규모 사람(피험자) 데이터를 수집합니다. 이 10개의 변수를 두세 개의 새로운 변수로 대체할 수 있다면 훨씬 더 편리할 것입니다. 그러면서도 중요한 정보를 크게 잃지 않도록 하려면 어떻게 해야 할까요?\n만약 두 개의 변수가 서로 매우 밀접한 관계를 가지고 있다면, 예를 들어 키와 체중처럼, 이 두 변수를 하나의 새로운 변수로 대체할 수도 있습니다. 이러한 응용에서는 선형 대수를 사용하여 보다 적은 수의 새로운 변수를 찾아냅니다. 우리가 사용하는 방법은 주성분 분석(Principal Component Analysis, PCA) 이라고 하며, 이는 Pearson(1901) 과 Hotelling(1933) 에 의해 개발되었습니다. (자세한 내용은 [4] 및 [1]을 참조하세요.)\nPCA의 주요 실용적 결과\nPCA를 사용하면 다음과 같은 실질적인 결과를 얻을 수 있습니다.\n\n\n많은 양의 데이터를 전송해야 할 경우, PCA를 사용한 변수 축소는 훨씬 적은 양의 데이터로도 본래의 정보를 거의 잃지 않고 전달할 수 있도록 해줍니다.\n\n\n대부분의 경우, PCA는 변수들의 군집을 보여줍니다. 예를 들어, 양적 점수와 언어적 점수, 또는 대근육 운동 기술과 소근육 운동 기술을 구분할 수 있습니다. 이는 해당 관심 분야에서 유용한 정보를 제공할 수 있습니다.\n\n\n데이터가 그래프로 표현될 때, PCA는 데이터에 대해 최소 제곱법(least squares sense) 에 가장 적합한 선, 평면 및 초평면을 찾습니다. 또한 데이터를 그래프로 나타낼 때 적절한 축 회전(appropriate rotation of axes) 을 수행하여 최적의 시각화를 제공합니다. 예를 들어, 데이터가 타원형을 따른다면, 타원의 주축과 부축을 좌표축으로 설정하는 것이 바람직할 수 있습니다.\n\n\n최소 제곱 분석 또는 다른 통계 분석을 수행하는 경우, 적은 수의 변수로 분석을 수행할 수 있습니다. 이는 통계적 검정력(statistical power) 을 증가시키는 효과를 가질 수 있습니다.\n\n\nPCA에 대해 더 알고 싶다면 [5] 및 [3]을 참조하세요.\n기초 통계 개념\nPCA를 설명하기 전에 몇 가지 기본적인 통계 개념을 짚고 넘어가겠습니다.\nm개의 관측값 x_1, x_2, \\dots, x_m 가 주어졌을 때, 이 관측값들의 “중심”을 나타내는 익숙한 척도는 (표본) 평균(sample mean) 이며, 이는 다음과 같이 정의됩니다.\n\\bar{x} = \\frac{1}{m} (x_1 + x_2 + \\dots + x_m)\n예를 들어, 데이터가 3, 8, 7 이라면, 평균은 다음과 같이 계산됩니다.\n\\bar{x} = \\frac{1}{3} (3 + 8 + 7) = 6\n그러나 평균만으로는 데이터의 분산(spread) 또는 변동성(variability) 을 측정할 수 없습니다.\n따라서 하나의 합리적인 접근법은 측정값들이 평균에서 얼마나 벗어나 있는지를 제곱하여 평균을 내는 것입니다.\n이를 통해 (표본) 분산(sample variance) 의 정의를 얻을 수 있습니다.\ns^2 = \\frac{1}{m-1} \\sum_{i=1}^{m} (x_i - \\bar{x})^2\n대부분의 통계 교재에서는 분모에 m-1 을 사용하는 이유 를 설명합니다. 이는 표본이 모집단에서 추출되었을 때, 모집단의 분산을 보다 정확하게 추정할 수 있도록 해주기 때문입니다. (자세한 내용은 [2]를 참조하세요.)\n같은 데이터(3, 8, 7)를 사용하여 분산을 계산하면,\ns^2 = \\frac{1}{2} \\left[ (3-6)^2 + (8-6)^2 + (7-6)^2 \\right] = 7\n가 됩니다.\n만약 원래의 측정값이 인치 단위로 된 키(height)라면, 평균 \\bar{x} 역시 인치 단위로 주어집니다. 하지만 분산 s^2 은 제곱 인치(square inches) 단위로 표현됩니다.\n원래 데이터와 동일한 단위를 유지하면서 데이터의 변동성을 측정하기 위해, 우리는 분산의 양의 제곱근(positive square root)을 사용합니다. 이 값을 표준 편차(standard deviation) s 라고 하며, 다음과 같이 계산됩니다.\ns = \\sqrt{7}\n행렬(matrix) 표기법을 사용하면 분산을 표현하는 것이 매우 유용합니다.\n관측값 x_1, x_2, \\dots, x_m 을 다음과 같은 벡터로 나타낸다고 가정합시다.\nX = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_m \\end{pmatrix}\n그리고 평균 벡터를 다음과 같이 정의합니다.\n\\bar{X} = \\begin{pmatrix} \\bar{x} \\\\ \\bar{x} \\\\ \\vdots \\\\ \\bar{x} \\end{pmatrix}\n이때, 분산 s_x^2 는 다음과 같이 쉽게 표현할 수 있습니다.\ns_x^2 = \\frac{1}{m-1} (X - \\bar{X})^T (X - \\bar{X}) = \\frac{1}{m-1} \\|X - \\bar{X}\\|^2\n(때때로, 관측값이 벡터 X 의 성분으로 표현될 수 있음을 강조하기 위해, 표본 분산(sample variance)을 s_x^2 로 표기하기도 합니다.)\n앞서, 두 개의 변수가 매우 밀접한 관계를 가질 경우, 하나의 변수로 대체해도 큰 정보 손실 없이 표현할 수 있다고 언급했습니다.\n이러한 두 변수 간 선형 관계(linear relationship) 의 강도를 측정하는 일반적인 방법 중 하나가 표본 공분산(sample covariance) 입니다.\n이를 보다 구체적으로 살펴보겠습니다. 다음과 같이 두 변수 X 와 Y 를 정의합시다.\nX = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_m \\end{pmatrix}, \\quad Y = \\begin{pmatrix} y_1 \\\\ y_2 \\\\ \\vdots \\\\ y_m \\end{pmatrix}\n이때, X 와 Y 의 표본 공분산(sample covariance) 은 다음과 같이 정의됩니다.\n\\text{cov}(X, Y) = \\frac{1}{m-1} \\sum_{i=1}^{m} (x_i - \\bar{x}) (y_i - \\bar{y})\n행렬 표기법을 사용하면 다음과 같이 간단하게 표현됩니다.\n\\text{cov}(X, Y) = \\frac{1}{m-1} (X - \\bar{X})^T (Y - \\bar{Y})\n또는,\n\\text{cov}(X, Y) = \\frac{1}{m-1} (X - \\bar{X}) \\cdot (Y - \\bar{Y})\n하지만 공분산을 사용할 때 발생하는 한 가지 문제점은 측정 단위(units of measurement) 에 따라 값의 크기가 영향을 받는다는 것입니다.\n예를 들어, 만약 x 가 피트(feet) 단위이고, y 가 파운드(pounds) 단위라면, 공분산은 피트-파운드(foot-pounds) 단위가 됩니다.\n반면, 단위를 인치(inches)와 온스(ounces) 로 바꾸면, 공분산의 값이 크게 증가할 수 있습니다.\n이러한 문제를 방지하기 위해, 우리는 대신 다음과 같은 상관 계수(correlation coefficient) 를 사용합니다.\n\\frac{\\text{cov}(X, Y)}{s_X s_Y}\n여기서 s_X 와 s_Y 는 각각 X 와 Y 의 표준 편차(standard deviation)입니다.\n이러한 비율을 (표본) 상관 계수(sample correlation coefficient) 라고 합니다.\n이는 “단위가 없는(unit-free)” 척도 이며, 조금 더 계산하면 상관 계수의 값이 항상 -1과 1 사이에 위치함을 보일 수 있습니다.\n\n\n완전한 선형 관계(perfectly linear relationship) 인 경우, 즉, 모든 점 (x_1, y_1), (x_2, y_2), \\dots, (x_m, y_m) 이 직선 위 에 놓여 있다면, 상관 계수는 다음과 같이 결정됩니다.\n\n기울기가 양수 이면 +1,\n기울기가 음수 이면 -1.\n\n\n\n거의 상관 관계가 없거나(linear 관계가 약한 경우) 상관 계수는 0에 가깝습니다.\n\n\n예제 1\n다음과 같은 두 벡터 X 와 Y 가 주어졌다고 가정하겠습니다.\nX = \\begin{pmatrix} 4 \\\\ -2 \\\\ 7 \\end{pmatrix}, \\quad Y = \\begin{pmatrix} 3 \\\\ 4 \\\\ 5 \\end{pmatrix}\n\nX 와 Y 의 평균\n\n\\bar{X} = \\frac{1}{3} (4 - 2 + 7) = 3, \\quad \\bar{Y} = \\frac{1}{3} (3 + 4 + 5) = 4\n\nX 와 Y 의 분산\n\ns_X^2 = \\frac{1}{3-1} \\left[ (4 - 3)^2 + (-2 - 3)^2 + (7 - 3)^2 \\right] = 21\ns_Y^2 = \\frac{1}{3-1} \\left[ (3 - 4)^2 + (4 - 4)^2 + (5 - 4)^2 \\right] = 1\n\nX 와 Y 의 공분산\n\n\\text{cov}(X, Y) = \\frac{1}{3-1} \\left[ (4 - 3)(3 - 4) + (-2 - 3)(4 - 4) + (7 - 3)(2 - 4) \\right] = -\\frac{9}{2}\n\nX 와 Y 의 상관 계수\n\n\\frac{\\text{cov}(X, Y)}{s_X s_Y} = \\frac{\\left(-\\frac{9}{2}\\right)}{\\sqrt{21} \\cdot \\sqrt{1}} = \\frac{-9}{2\\sqrt{21}}\n공분산 행렬(Covariance Matrix)\n내적(dot product)의 성질을 이용하면, 공분산 은 다음 성질을 만족합니다.\n\\text{cov}(X, Y) = \\text{cov}(Y, X)\n즉, X 와 Y 의 공분산은 Y 와 X 의 공분산과 같습니다.\n일반적으로, n개의 변수 X_1, X_2, \\dots, X_n 이 주어졌을 때, 이를 m \\times 1 벡터 로 간주하면,\nn \\times n 크기의 행렬 을 정의할 수 있습니다. 이를 공분산 행렬(covariance matrix) 이라고 하며,\n공분산 행렬의 (i, j) 번째 성분은 공분산 \\text{cov}(X_i, X_j) 입니다.\n행렬 표기법을 사용하여,\nX = (X_1 \\quad X_2 \\quad \\dots \\quad X_n)\n\\bar{X} = (\\bar{X_1} \\quad \\bar{X_2} \\quad \\dots \\quad \\bar{X_n})\n라고 하면, 공분산 행렬은 다음과 같이 표현할 수 있습니다.\nC = \\frac{1}{m-1} (X - \\bar{X})^T (X - \\bar{X})\n이 공식이 벡터 X 의 분산 s_X^2 과 유사함을 알 수 있습니다.\n마찬가지로, 상관 행렬(correlation matrix) 은 n \\times n 크기의 행렬 로 정의되며,\n행렬의 (i,j) 번째 성분은 변수 X_i 와 Y_j 사이의 상관 계수 입니다.\n상관 행렬의 형태를 이해하기 위해, 몇 가지 용어를 정의하겠습니다.\n\n\n변수 Z 가 “scaled variable” 이라는 의미:\n\n평균이 0 이고, 표준 편차가 1 인 변수\n\n\n\n비영(非零) 분산을 가진 변수 X 는 “스케일링(scaled) 또는 표준화(standardized)” 할 수 있습니다.\n이는 평균 벡터 \\bar{X} 를 빼고, 표준 편차 s_X 로 나누는 방식으로 이루어집니다.\n\n\nZ = \\frac{X - \\bar{X}}{s_X}\n위와 같은 변환을 거친 변수 Z 를 스케일링된 변수(scaled variable) 라고 합니다.\n따라서, n개의 변수 X_1, X_2, \\dots, X_n 이 주어졌을 때,\n이 변수들을 스케일링하여 새로운 변수 Z_1, Z_2, \\dots, Z_n 을 얻을 수 있습니다.\n이와 같은 스케일링은 일반적으로 변수들이 서로 다른 단위를 가지고 있는 경우 사용됩니다.\n이 과정을 통해 모든 변수를 동일한 기준(equal footing) 위에 놓을 수 있습니다.\n만약 다음과 같이 스케일링된 변수 행렬을 정의한다면,\nZ = (Z_1 \\quad Z_2 \\quad \\dots \\quad Z_n)\n원래 변수의 상관 행렬(correlation matrix) 은 다음과 같이 표현됩니다.\nC_0 = \\frac{1}{m-1} Z^T Z\n또한, 다음 성질이 성립합니다.\n\n변수 X_i 와 X_j 사이의 상관 계수는 변수 Z_i 와 Z_j 의 상관 계수와 동일합니다.\n상관 행렬과 공분산 행렬은 대칭 행렬(symmetric matrix)입니다.\n\n예제 2\n다음은 주어진 텍스트의 한국어 번역입니다.\n예제 2\n다음 표의 데이터는 14명의 Honors Calculus(고급 미적분) 수업 학생들 에 대한 정보입니다.\n4개의 변수는 다음과 같습니다.\n\nACT 점수(ACT): 국가 시험 점수(범위: 0 ~ 36)\nFE 점수(FE): 기말 시험 점수(범위: 0 ~ 200)\nQ_{\\text{av}}: 8개의 퀴즈 점수 평균(범위: 0 ~ 100)\nTav: 3개의 시험 점수 평균(범위: 0 ~ 100)\n\n이러한 변수들은 마지막 네 개의 열에서 스케일링된 변수(scaled variables) 로 변환되었습니다.\n스케일링된 변수에는 별표(*) 가 추가되어 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudentACTFEQavTavACT*FE*Qav*Tav*13318195891.270.941.300.9523116981890.480.480.290.953211766568-1.580.75-0.88-0.644251816690-0.630.94-0.811.0352916989810.320.480.870.356241036157-0.86-2.05-1.17-1.477241508176-0.86-0.250.29-0.0382914786760.32-0.360.65-0.03936181981021.980.941.521.9410261637270-0.390.25-0.37-0.49113116395810.800.251.300.35122914765670.32-0.36-0.88-0.7113231606268-1.100.14-1.10-0.6414261006356-0.39-2.16-1.02-1.55\n상관 행렬 (Correlation Matrix)\n컴퓨터 대수 시스템 MATLAB 을 사용하여\nC_0 = \\frac{1}{m-1} Z^T Z\n을 계산한 결과, 4 \\times 4 상관 행렬 C_0 을 얻었습니다.\n다음 표는 C_0 의 항목을 소수점 네 자리까지 반올림한 값입니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nACT*FE*Qav*Tav*ACT*10.33600.81110.7010FE*0.336010.49990.7958Qav*0.81110.499910.7487Tav*0.70100.79580.74871\n이 행렬을 보면, 다음과 같은 특성을 확인할 수 있습니다.\n\nACT 점수와 퀴즈 평균(Qav)의 상관 계수: 0.8111 (높은 양의 상관관계)\nACT 점수와 시험 평균(Tav)의 상관 계수: 0.7010 (상당한 양의 상관관계)\n기말 시험(FE) 점수와 시험 평균(Tav)의 상관 계수: 0.7958 (높은 양의 상관관계)\n퀴즈 평균(Qav)과 시험 평균(Tav)의 상관 계수: 0.7487 (높은 양의 상관관계)\n\n이처럼 상관 행렬을 분석하면 변수들 간의 관계를 명확하게 파악할 수 있습니다.\n관찰 결과 (Observations)\n\n\n모든 대각 원소(diagonal entries)는 1 입니다.\n\n이는 어떤 변수와 자기 자신 간의 상관 계수 가 항상 1 이기 때문입니다.\n\n\n\nACT 점수와 퀴즈 평균(Qav) 간의 상관 계수는 0.8111 로 매우 높습니다.\n\n\nACT 점수와 기말 시험(FE) 간의 상관 계수가 0.3360 으로 가장 약한 상관 관계를 보입니다.\n\n\n물론, 이 데이터셋은 표본 크기가 매우 작습니다(14명).\n따라서 만약 더 큰 표본을 사용하거나, 동일한 결과가 다른 표본에서도 반복된다면\n일반적인 결론을 도출할 수도 있을 것입니다.\n예를 들어, 시험 평균(Tav) 변수는 다른 모든 변수들과 높은 상관 관계 를 가집니다.\n특히, ACT 점수(ACT)와 높은 관련이 있는 변수 중 하나입니다.\nACT는 대학 입학 전 학생들에게 제공되는 시험이므로, 만약 단 하나의 변수만 사용하여 데이터를 대표해야 한다면,\nTav를 선택하는 것이 가장 적절할 수도 있습니다.\n주성분 분석(Principal Component Analysis, PCA)\n이제 예제 2의 데이터를 사용하여 주성분 분석(PCA) 에 대해 논의할 준비가 되었습니다.\n우리는 다음 두 가지 질문에서 시작합니다.\n\n기존 변수를 대체할 새로운 변수를 어떻게 찾을 수 있을까?\n이 새로운 변수들이 원래 변수를 얼마나 잘 표현하는지 어떻게 측정할 수 있을까?\n\n이 방법을 설명하기 위해, 원본 데이터셋을 사용 하되,\n이는 다른 데이터셋에도 일반화될 수 있음을 명심하십시오.\n\n네 개의 변수 X_1, X_2, X_3, X_4 가 있습니다.\n각각은 14 × 1 열 벡터(column vector) 입니다.\n변수들의 단위가 다르기 때문에, 스케일링된 변수 Z_1, Z_2, Z_3, Z_4 를 사용하는 것이 더 적절합니다.\n즉, 다음과 같이 정의합니다.\n\nZ = (Z_1 \\quad Z_2 \\quad Z_3 \\quad Z_4)\n4 × 4 상관 행렬 C_0\nC_0 = \\begin{pmatrix}\n1.0000 &amp; 0.3360 &amp; 0.8111 &amp; 0.7010 \\\\\n0.3360 &amp; 1.0000 &amp; 0.4999 &amp; 0.7958 \\\\\n0.8111 &amp; 0.4999 &amp; 1.0000 &amp; 0.7487 \\\\\n0.7010 &amp; 0.7958 &amp; 0.7487 &amp; 1.0000\n\\end{pmatrix}\n우리가 앞서 논의한 대로, 이 행렬은 반드시 대칭(symmetric)입니다.\n(즉, C_0 의 (i,j) 항목은 (j,i) 항목과 동일합니다.)\n고유값 분해(Eigenvalue Decomposition)\n이제 정리 6.20(Theorem 6.20) 에 따라,\n상관 행렬 C_0 에는 직교 정규 기저(orthonormal basis) 가 존재합니다.\n즉, C_0 의 고유벡터(eigenvectors) U_1, U_2, U_3, U_4  를 찾을 수 있습니다.\n이에 대응하는 고유값(eigenvalues) \\lambda_1, \\lambda_2, \\lambda_3, \\lambda_4  을 찾을 수 있습니다.\n우리는 MATLAB 을 사용하여 아래의 직교 행렬(orthogonal matrix) P 와\n대각 행렬(diagonal matrix) D 을 얻었습니다.\n고유벡터 행렬 P\n(각 열은 C_0 의 고유벡터)\nP = \\begin{pmatrix}\n0.4856 &amp; -0.5561 &amp; 0.5128 &amp; 0.4381 \\\\\n0.4378 &amp; 0.7317 &amp; -0.0640 &amp; 0.5185 \\\\\n0.5209 &amp; -0.3275 &amp; -0.7848 &amp; -0.0744 \\\\\n0.5489 &amp; 0.2192 &amp; 0.3421 &amp; -0.7305\n\\end{pmatrix}\n고유값 행렬 D\nD = \\begin{pmatrix}\n2.9654 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0.7593 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0.1844 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 0.0910\n\\end{pmatrix}\n첫 번째 새로운 변수는 첫 번째 주성분(principal component) 이라고 하며, 다음과 같이 정의됩니다.\nY_1 = Z U_1\n여기서 U_1 은 가장 큰 고유값(2.9654)을 가진 C_0 의 고유벡터(eigenvector) 입니다.\n두 번째 주성분은\nY_2 = Z U_2\n로 정의되며, U_2 은 두 번째로 큰 고유값(0.7593)을 가진 고유벡터 입니다.\n첫 번째와 두 번째 주성분\nY_1 = 0.4856Z_1 + 0.4378Z_2 - 0.5209Z_3 + 0.5489Z_4\nY_2 = -0.5561Z_1 + 0.7317Z_2 - 0.3275Z_3 + 0.2192Z_4\n이를 원래 스케일링된 변수 ACT^*, FE^*, Qav^*, Tav^* 로 나타내면,\nY_1 = 0.4856 ACT^* + 0.4378 FE^* - 0.5209 Qav^* + 0.5489 Tav^*\nY_2 = -0.5561 ACT^* + 0.7317 FE^* - 0.3275 Qav^* + 0.2192 Tav^*\n주성분 해석\n\n주어진 계수(coefficient)는 고유벡터의 성분을 의미하며, “로딩(loading)” 이라고 불립니다.\n각 변수의 계수 값은 해당 변수가 특정 주성분과 얼마나 관련이 있는지를 나타냅니다.\n첫 번째 주성분 Y_1 은 네 개 변수의 가중 평균(weighted average) 에 가까운 형태로,\n각 변수의 가중치가 거의 동일하게 분포 되어 있습니다.\n반면 두 번째 주성분 Y_2 은 기말 시험(FE)과 시험 평균(Tav)의 쌍과, ACT와 퀴즈 평균(Qav)의 쌍 사이의 대비(contrast) 를 나타냅니다.\n\n즉, FE와 Tav의 계수는 양수, ACT와 Qav의 계수는 음수 로 나타나며, 서로 반대 방향의 영향을 줍니다.\n\n\n\n통계적 해석: 분산 설명 능력\n주성분을 사용할 때 가장 중요한 기준 중 하나는,\n새로운 변수가 원래 데이터의 분산(variance)을 얼마나 설명하는지 여부입니다.\n\n직관적으로, 변수를 줄이더라도 데이터의 전체 변동성이 크게 줄어들지 않는 것이 중요 합니다.\n각 주성분의 분산은 해당 주성분의 고유값(eigenvalue)과 동일 합니다.\n\n즉,\n\n첫 번째 주성분의 분산:\n\n\\text{Var}(Y_1) = \\lambda_1 = 2.9654\n\n전체 분산(고유값의 합):\n\n2.9654 + 0.7593 + 0.1844 + 0.0910 = 4.0000\n\n따라서, Y_1 이 설명하는 분산의 비율:\n\n\\frac{2.9654}{4.0000} = 74.14\\%\n\n첫 번째와 두 번째 주성분이 설명하는 총 분산:\n\n\\frac{2.9654 + 0.7593}{4.0000} = 93.12\\%\n즉, 첫 번째와 두 번째 주성분만으로 원래 데이터의 93.12%를 설명할 수 있습니다.\n이는 네 개의 원래 변수를 모두 사용하는 것보다 훨씬 효율적입니다.\n주성분과 원래 변수 간의 상관 관계\n다음 표는 스케일링된 변수와 첫 번째 및 두 번째 주성분 간의 상관 계수 를 나타냅니다.\n(소수점 네 자리까지 반올림)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nACT*FE*Qav*Tav*Y_1Y_2ACT*1.00000.36600.81110.70100.8362-0.4846FE*0.33601.00000.49990.79580.75390.6376Qav*0.81110.49991.00000.74870.8969-0.2854Tav*0.70100.79580.74871.00000.94520.1911Y_10.83620.75390.89690.94521.00000.0000Y_2-0.48460.6376-0.28540.19110.00001.0000\n상관 관계 분석\n\nY_1 과 Tav* (시험 평균)의 상관 계수는 0.9452\n→ 시험 평균이 첫 번째 주성분에 가장 중요한 영향을 줌 을 의미\nY_2 와 Tav* 의 상관 계수는 0.1911\n→ 시험 평균이 두 번째 주성분에는 거의 기여하지 않음\nY_1 과 Y_2 간의 상관 계수는 0\n→ 주성분은 상호 독립적(uncorrelated) 임을 의미\n\n결론 및 코멘트\n\n주성분 분석(PCA)은 고차원 데이터를 더 적은 차원의 데이터로 축소하는 기법 입니다.\n\n원래 데이터의 대부분의 정보를 유지하면서 효율적으로 변수 수를 줄일 수 있습니다.\n\n\n각 주성분은 원래 변수들의 선형 결합(linear combination)으로 표현됩니다.\n첫 번째 몇 개의 주성분만으로도 전체 데이터의 분산을 높은 비율로 설명할 수 있습니다.\n\n이 경우, 첫 번째와 두 번째 주성분만으로 93.12% 설명 가능\n\n\n주성분은 상호 독립적(uncorrelated)입니다.\n주성분은 해석이 직관적이지 않을 수도 있습니다.\n\nY_1 은 원래 변수들의 평균과 유사한 역할을 하지만,\nY_2 는 특정 변수들의 대비(contrast)를 나타냅니다.\n\n\n이론적 분석을 위해 변수들의 확률 분포(statistical distribution)에 대한 가정은 하지 않았습니다.\n\n이 주제는 보다 깊은 수학적 통계적 배경 이 필요합니다.\n\n\n"},"Study/Linear-Algebra/최소-다항식":{"slug":"Study/Linear-Algebra/최소-다항식","filePath":"Study/Linear Algebra/최소 다항식.md","title":"최소 다항식(Minimal Polynomial)","links":[],"tags":["Algebra"],"content":"선형대수에서 최소 다항식(Minimal Polynomial)은 주어진 행렬 A 또는 선형 변환 T을 소거하는 최소 차수의 단위계수(Monic) 다항식이다. 특성 다항식(Characterstic Polynomial)과 밀접한 관계가 있지만, 서로 다르다.\n특성 다항식 (Characteristic Polynomial)\n어떤 정사각 행렬 A의 특성 다항식은 다음과 같이 정의된다.\np_A(\\lambda) = \\det(A - \\lambda I)\n\n항상 n차 다항식이다.\n행렬 A의 고유값(Eigenvalues)들이 근이 된다.\n모든 정사각 행렬에 대해 정의된다.\n\n최소 다항식 (Minimal Polynomial)\n정사각 행렬 A의 최소 다항식 m_A(x)는 다음을 만족하는 가장 낮은 차수의 단위계수 다항식이다.\nm_A(A) = 0\n즉, m_A(x)는 A를 대입했을 때 영행렬이 되는 가장 차수가 낮은 다항식이다.\n최소 다항식의 성질\n\nA의 특성 다항식 p_A(x)의 약수\n\nm_A(x) \\mid p_A(x)\n\n\n단위계수 (Monic Polynomial)\n최소 다항식은 최고차항의 계수가 항상 1인 단위 다항식입니다.\n\n\n차수\n최소 다항식의 차수는 특성 다항식의 차수보다 작거나 같다.\n\n\n   \\deg m_A(x) \\leq \\deg p_A(x)\n특히, 행렬이 대각화 가능할 경우 두 다항식의 차수가 같을 수 있다.\n아래는 문제와 해답 아이디어를 한국어로 번역·정리한 내용입니다.\n조르당 표준형의 최소다항식\n유한 차원 벡터 공간 위의 선형 연산자 T의 특성 다항식이 일차식으로 완전히 분해된다고 하자. 서로 다른 고유값을 \\lambda_1,\\dots,\\lambda_k라 하고, 각 \\lambda_i에 대응하는 조르당 표준형(Jordan canonical form)에서 가장 큰 블록의 크기를 p_i라 하자. 이때 T의 최소다항식은\np(t)\\;=\\;(t-\\lambda_1)^{p_1}(t-\\lambda_2)^{p_2}\\cdots(t-\\lambda_k)^{p_k}\n조르당 기저(고윳값별 일반고유벡터 사슬) \\beta를 취하면, 각 일반고유벡터 v (길이가 p_i인 사슬의 끝벡터)에 대해\n     (T - \\lambda_i I)^{p_i}(v) = 0\n이다. 따라서 p(T)를 \\beta 위에 작용시키면 모든 벡터가 0으로 보내져\n     p(T)(\\beta) = \\{0\\}\n가 되어 p(T)는 영(零) 변환이다.\n최소다항식 q(t)는 q(T)=0인 모든 다항식 중 차수가 최소인 것이다. p(T)=0이므로 q(t)는 p(t)를 나누어야 한다. 따라서\n     q(t)\\;=\\;\\prod_{i=1}^k (t - \\lambda_i)^{r_i}\n     \\quad\\bigl(1\\le r_i\\le p_i\\bigr)\n형태이다.\n만약 어떤 i에 대해 r_i &lt; p_i라면,  조르당 기저에 길이가 p_i인 일반고유벡터 사슬의 끝벡터 u가 있다. 이 u에 대해\n     (T-\\lambda_i I)^{r_i}(u) \\;=\\; w \\;\\neq\\;0\n가 된다.\n다른 고유값 블록에서는 (T-\\lambda_j I)가 가역이므로, (t-\\lambda_j)^{r_j} 꼴 인자들은 w를 0으로 만들지 못한다. 따라서\n     q(T)(u)\\;=\\;\\prod_j\\bigl(T-\\lambda_j I\\bigr)^{r_j}(u)\n     \\;=\\;(T-\\lambda_i I)^{r_i}(u)\\;\\neq 0\n가 되어 최소다항식이 q(T)=0이라는 사실에 모순된다. 그러므로 r_i는 꼭 p_i와 같아야 한다.\n직합의 최소다항식\n선형 변환 T가 주어지고, T에 대해 불변인 부분공간 W_1, W_2가 있다고 하자. 이때 V = W_1 \\oplus W_2라고 가정하자. T의 제한 T_{W_1}과 T_{W_2}의 최소 다항식이 각각 p_1(t)와 p_2(t)라고 하면,\np_1(t)=\\prod_\\lambda(t-\\lambda)^{a_\\lambda},\\quad\np_2(t)=\\prod_\\lambda(t-\\lambda)^{b_\\lambda}\nV = W_1 \\oplus W_2의 최소다항식은 p_1(t)와 p_2(t)의 최소공배수(Least Common Multiple)로 주어진다. 즉, T의 최소 다항식은 다음과 같다.\nm_T(t)\\;=\\;\\mathrm{lcm}\\bigl(p_1(t),\\,p_2(t)\\bigr)\n\\;=\\;\\prod_\\lambda(t-\\lambda)^{\\max(a_\\lambda,b_\\lambda)}\n즉, 각 고유값 \\lambda에 대해 양쪽에서 나타난 블록 크기의 최대값을 취한다. m_T(t)는 두 제한 p_1(T)=0, p_2(T)=0을 동시에 만족하는 가장 낮은 차수의 다항식이기 때문에 곱 대신 최소공배수가 되어야\u001e한다.\n소멸자 (Annihilator)\nT가 유한 차원 벡터 공간 V 위의 선형 변환이고, x가 V의 비영벡터라고 하자. 다항식 p(t)가 T-소멸자(Annihilator)라고 하면, p(t)는 단위계수(Monic) 다항식으로서 p(T)(x) = 0이 되는 가장 낮은 차수의 다항식이다.\n벡터 x에 대한 T-소멸자과 연산자 T 자체의 최소다항식(minimal polynomial)은 비슷해 보이지만, 관점과 적용 범위가 다르다. T-소멸자 p_x(t)는 벡터 x에 대해서만 작용하는 반면, 최소다항식 m_T(t)는 연산자 T가 작용하는 모든 벡터에 대해 작용한다.\n따라서 각 x의 소멸다항식 p_x(t)는 반드시 m_T(t)를 나눈다.\n    p_x(t)\\;\\bigm|\\;m_T(t).\n즉, 최소다항식은 모든 벡터의 소멸다항식들의 최소공배수다.\n    m_T(t)\\;=\\;\\mathrm{lcm}\\bigl\\{\\,p_x(t):x\\in V\\,\\bigr\\},\n특히 하나의 벡터로 V 전체를 생성(=cyclic)할 수 있으면 그 x의 소멸다항식이 곧 최소다항식이 된다.\n소멸자를 이용한 최소다항식 구하기\n먼저 벡터 v를 하나 선택합니다. 보통 무작위 벡터나 표준기저를 시도하며, 실제로는 랜덤 벡터가 사이클릭일 확률이 높습니다.\n벡터공간의 차원이 n이라면 케일리-해밀턴 정리에 의해 \\{ v,\\;Tv,\\;T^2v,\\cdots,\\;T^n v \\}는 반드시 선형종속입니다.\n이때, 가장 작은 k에 대해\na_0 v + a_1 T v + \\cdots + a_k T^k v =0 \\quad (a_k\\neq0)\n을 만족하는 계수들을 찾으면, 이를 통해 소멸다항식\np_v(t)=t^k+\\frac{a_{k-1}}{a_k}t^{k-1}+\\cdots+\\frac{a_0}{a_k}\n을 구할 수 있습니다.\n만약 \\deg p_v = \\dim V이면, v는 사이클릭 벡터이므로\nm_T(t)=p_v(t)\n가 됩니다.\n반면에 \\deg p_v&lt;\\dim V인 경우, v가 생성하는 부분공간 V_1=\\langle v,,Tv,\\dots,T^{k-1}v\\rangle에서 다루지 못한 부분에 대해 새로운 벡터 w를 선택하여 동일한 과정을 반복합니다. 최종적으로 구한 소멸다항식들의 최소공배수가 변환 T의 최소다항식이 됩니다.\nKrylov 부분공간\n주어진 선형연산자 T:V\\to V와 시작벡터 v\\in V에 대하여,\n       \\mathcal K_m(T,v)=\\langle\\,v,\\;T v,\\;T^2v,\\;\\dots,\\;T^{m-1}v\\,\\rangle\n     $$\n\n꼴로 늘려가는 부분공간을 Krylov 부분공간이라 부르고, 그 생성집합 $\\{v,Tv,\\dots,T^{m-1}v\\}$ Krylov 기저의 후보라고 합니다. 보통 $m=\\dim V$까지 진행하며, 어딘가에서 선형종속이 발생(즉 $\\{v,\\dots,T^m v\\}$ 중 하나가 앞의 조합)하면 더 이상 차수가 올라가지 않으므로 소멸다항식이 발견됩니다. 구현도 비교적 간단하면서 $\\mathcal{O}(n^3)$ 내외로 빠르게 동작합니다.\n\n### Krylov-Gauss 예시\n\nA =\n\\begin{pmatrix}\n3 &amp; 0 &amp; 1 \\\n2 &amp; 2 &amp; 2 \\\n-1 &amp; 0 &amp; 1\n\\end{pmatrix}\n\n1. $v_1 = (1, 0, 0)^T$\n\n\\begin{aligned}\nv_1 &amp;= \\begin{pmatrix}1\\0\\0\\end{pmatrix} \\\n\\\nA v_1 &amp;= \\begin{pmatrix}3\\2\\-1\\end{pmatrix} \\\n\\\nA^2 v_1 &amp;= A (A v_1) = A \\begin{pmatrix}3\\2\\-1\\end{pmatrix} = \\begin{pmatrix}8\\8\\-4\\end{pmatrix}\n\\end{aligned}\n이므로\n\nA^2 v_1 - 4 A v_1 + 4 v_1 = 0\n\n따라서\n\n{p_1(t) = (t - 2)^2 = t^2 - 4t + 4}\n\n2. $v_2 = (0, 1, 0)^T$\n\n\\begin{aligned}\nv_2 &amp;= \\begin{pmatrix}0\\1\\0\\end{pmatrix} \\\n\\\nA v_2 &amp;= \\begin{pmatrix}0\\2\\0\\end{pmatrix}\n\\end{aligned}\n\n이므로\n\nA v_2 - 2 v_2 = 0 \\quad \\Rightarrow \\quad (A - 2I)v_2 = 0\n\n따라서\n\np_2(t) = t - 2\n\n3. 최소 다항식\n두 소멸다항식의 최소공배수는\n\nm_A(t) = (t - 2)\n\n이므로 행렬 $A$의 최소다항식은 $(t - 2)^2$ 입니다."},"Study/Linear-Algebra/최소-제곱-근사(Least-Squares-Approximation)":{"slug":"Study/Linear-Algebra/최소-제곱-근사(Least-Squares-Approximation)","filePath":"Study/Linear Algebra/최소 제곱 근사(Least Squares Approximation).md","title":"최소제곱법(Least Squares Approximation)","links":[],"tags":[],"content":"최소 제곱 근사 (Least Squares Approximation)\n한 실험자가 측정값 y_1, y_2, \\cdots, y_m 을 시간 t_1, t_2, \\cdots, t_m 에서 수집한다고 하자.\n\n데이터 (t_1, y_1), (t_2, y_2), \\cdots, (t_m, y_m) 이 평면상의 점으로 표시되어 있다고 가정하자. 우리는 y 와 t 사이에 본질적으로 선형적인 관계가 존재한다고 느낀다.\ny = ct + d\n와 같은 관계가 존재한다고 가정하고, 이 방정식에서 상수 c 와 d 를 찾아서 주어진 데이터에 대해 최적의 적합(fit)을 이루는 직선을 구하고자 한다.\n이러한 적합도를 평가하는 한 가지 방법은, 데이터 점들로부터 직선까지의 수직 거리의 제곱합을 나타내는 오차 E 를 계산하는 것이다.\nE = \\sum_{i=1}^{m} (y_i - c t_i - d)^2\n이제 행렬 표현을 도입하자.\nA = \\begin{bmatrix} \nt_1 &amp; 1 \\\\ \nt_2 &amp; 1 \\\\ \n\\vdots &amp; \\vdots \\\\ \nt_m &amp; 1 \n\\end{bmatrix}, \n\\quad \nx = \\begin{bmatrix} \nc \\\\ \nd \n\\end{bmatrix}, \n\\quad \ny = \\begin{bmatrix} \ny_1 \\\\ \ny_2 \\\\ \n\\vdots \\\\ \ny_m \n\\end{bmatrix}\n라고 하면, 오차는 다음과 같이 표현할 수 있다.\nE = \\| y - Ax \\|^2\n우리는 이제 일반적인 방법을 사용하여 E 를 최소화하는 명시적인 벡터 x_0 \\in F^n 을 찾고자 한다. 즉, 주어진 m \\times n 행렬 A 에 대해,\n\\| y - Ax_0 \\| \\leq \\| y - Ax \\|\n가 모든 벡터 x \\in F^n 에 대해 성립하는 x_0 을 찾는다.\n최소제곱 해를 찾는 방법\nA 를 m \\times n 행렬, y 를 F^m 의 원소로 두고, 집합\nW = \\{ Ax : x \\in F^n \\}\n를 정의하자. 즉, W 는 A 에 의해 생성된 열 공간(column space) R(L_A) 이다.\n\n벡터 y가 행렬 A의 열공간 W에 속하지 않는 경우, y 에 가장 가까운 벡터가 W 안에 유일하게 존재한다. 이 벡터를 u=Ax_0 라 하자. 여기서 x_0 는 F^n 의 원소이다.\n그러면\n\\| Ax_0 - y \\| \\leq \\| Ax - y \\|, \\quad \\forall x \\in F^n\n가 성립한다. 즉, x_0 는\nE = \\| Ax_0 - y \\|\n를 최소화하는 성질을 갖는다. 이제 이러한 x_0 를 찾는 실용적인 방법을 개발하고자 한다.\nAx_0 - y \\in W^\\perp\n가 성립하므로,\n\\langle Ax, Ax_0 - y \\rangle_m = 0, \\quad \\forall x \\in F^n\n이 된다. 내적의 성질1에 의해\n\\langle x, A^*(Ax_0 - y) \\rangle_n = 0, \\quad \\forall x \\in F^n\n즉,\nA^*(Ax_0 - y) = 0\n이 된다. 결국, 우리는 다음 방정식을 만족하는 x_0 를 찾으면 된다.\nA^* A x_0 = A^* y\n추가로, A 의 랭크가 n 이라고 가정2하면,\nx_0 = (A^* A)^{-1} A^* y\n를 얻는다. 이제 이 내용을 다음의 정리로 요약할 수 있다.\n정리\nA \\in M_{m \\times n}(F) 및 y \\in F^m 에 대하여, 다음을 만족하는 x_0 \\in F^n 이 존재한다.\n(A^* A) x_0 = A^* y\n또한,\n\\| Ax_0 - y \\| \\leq \\| Ax - y \\|, \\quad \\forall x \\in F^n\n가 성립한다.\n추가적으로, 만약 \\text{rank}(A) = n 이라면,\nx_0 = (A^* A)^{-1} A^* y\n이 성립한다.\n활용\n수집한 데이터가 다음과 같다고 가정하자.\n(1,2), (2,3), (3,5), (4,7)\n이 데이터를 행렬 형태로 나타내면,\nA = \\begin{bmatrix} \n1 &amp; 1 \\\\ \n2 &amp; 1 \\\\ \n3 &amp; 1 \\\\ \n4 &amp; 1 \n\\end{bmatrix}, \n\\quad \ny = \\begin{bmatrix} \n2 \\\\ \n3 \\\\ \n5 \\\\ \n7 \n\\end{bmatrix}\n따라서,\nA^* A = \n\\begin{bmatrix} \n1 &amp; 2 &amp; 3 &amp; 4 \\\\ \n1 &amp; 1 &amp; 1 &amp; 1 \n\\end{bmatrix}\n\\begin{bmatrix} \n1 &amp; 1 \\\\ \n2 &amp; 1 \\\\ \n3 &amp; 1 \\\\ \n4 &amp; 1 \n\\end{bmatrix}\n=\n\\begin{bmatrix} \n30 &amp; 10 \\\\ \n10 &amp; 4 \n\\end{bmatrix}\n이제, (A^* A)^{-1} 를 구하면,\n(A^* A)^{-1} = \\frac{1}{20} \n\\begin{bmatrix} \n4 &amp; -10 \\\\ \n-10 &amp; 30 \n\\end{bmatrix}\n따라서, 최소제곱 해 x_0 = (c, d)^T 는 다음과 같이 계산된다.\n\\begin{bmatrix} \nc \\\\ \nd \n\\end{bmatrix} \n= x_0 = \\frac{1}{20} \n\\begin{bmatrix} \n4 &amp; -10 \\\\ \n-10 &amp; 30 \n\\end{bmatrix}\n\\begin{bmatrix} \n2 \\\\ \n3 \\\\ \n5 \\\\ \n7 \n\\end{bmatrix}\n이를 계산하면,\nx_0 = \\begin{bmatrix} \n1.7 \\\\ \n0 \n\\end{bmatrix}\n즉, 최소제곱 직선은\ny = 1.7x\n가 된다.\n또한, 최소제곱 오차 E 는 다음과 같이 계산된다.\nE = \\| Ax_0 - y \\|^2 = 0.3\nA^*A의 구조\nA^* 는 A 의 켤레전치행렬이므로,\nA^* =\n\\begin{bmatrix}\n\\overline{t_1} &amp; \\overline{t_2} &amp; \\cdots &amp; \\overline{t_m} \\\\\n1 &amp; 1 &amp; \\cdots &amp; 1\n\\end{bmatrix}\n이를 A 와 곱하면,\nA^* A =\n\\begin{bmatrix}\n\\overline{t_1} &amp; \\overline{t_2} &amp; \\cdots &amp; \\overline{t_m} \\\\\n1 &amp; 1 &amp; \\cdots &amp; 1\n\\end{bmatrix}\n\\begin{bmatrix}\nt_1 &amp; 1 \\\\\nt_2 &amp; 1 \\\\\n\\vdots &amp; \\vdots \\\\\nt_m &amp; 1\n\\end{bmatrix}\n이므로,\nA^* A =\n\\begin{bmatrix}\n\\sum_{i=1}^{m} ||t_i ||^2 &amp; \\sum_{i=1}^{m} t_i \\\\\n\\sum_{i=1}^{m} t_i &amp; m\n\\end{bmatrix}\n즉, 행렬의 각 성분은 다음과 같이 해석할 수 있다.\nA^* A =\n\\begin{bmatrix}\n\\text{측정된 시간값들의 제곱합} &amp; \\text{시간값들의 합} \\\\\n\\text{시간값들의 합} &amp; \\text{데이터 개수}\n\\end{bmatrix}\n일반화 공식\nA^* y =\n\\begin{bmatrix}\n\\sum_{i=1}^{m} t_i y_i \\\\\n\\sum_{i=1}^{m} y_i\n\\end{bmatrix}\n이므로, 일반적인 최소제곱 직선의 해는 다음과 같다.\n\\begin{bmatrix}\nc \\\\\nd\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\sum ||t_i ||^2 &amp; \\sum t_i \\\\\n\\sum t_i &amp; m\n\\end{bmatrix}^{-1}\n\\begin{bmatrix}\n\\sum t_i y_i \\\\\n\\sum y_i\n\\end{bmatrix}\n위의 식을 전개하면,\nc = \\frac{m \\sum t_i y_i - \\sum t_i \\sum y_i}{m \\sum ||t_i||^2 - (\\sum t_i)^2}\n이고,\nd = \\frac{\\sum y_i - c \\sum t_i}{m}\n이다.\nFootnotes\n\n\n임의의 행렬 A, 벡터 x, y 에 대해 Ax 와 y 의 내적은 x 와 A^* y 의 내적과 같다. 즉, \\langle Ax, y \\rangle_m = \\langle x, A^* y \\rangle_n 이 성립한다. 이는 선형 변환을 적용한 후의 내적이 전치 연산을 통해 변환될 수 있음을 의미한다. 이를 증명하기 위해 내적의 성질을 사용하면, \\langle Ax, y \\rangle_m = y^* (Ax) 가 되고, 행렬 곱셈의 결합 법칙을 적용하면 y^* (Ax) = (y^* A) x 가 된다. 여기서 y^* A 는 (A^* y)^* 와 같으므로, 최종적으로 (A^* y)^* x = \\langle x, A^* y \\rangle_n 이 성립한다. 따라서 원래 명제가 참임을 알 수 있다. ↩\n\n\n행렬 A^* A 의 랭크는 A 의 랭크와 같다. 즉, \\text{rank}(A^* A) = \\text{rank}(A) 가 성립한다. 이를 증명하기 위해 차원 정리를 사용하면, 영공간(null space)의 차원이 같으면 랭크의 차원도 같기에 A^* A x = 0 이 Ax = 0 과 동치임을 보이면 된다. 먼저, Ax = 0 이면 명백히 A^* A x = A^* 0 = 0 이므로 성립한다. 반대로, A^* A x = 0 이라고 가정하면, 내적의 성질을 이용하여 0 = \\langle A^* A x, x \\rangle_n 이 성립한다. \\langle A^* A x, x \\rangle_n = \\langle Ax, Ax \\rangle_m = \\| Ax \\|^2 이므로, \\| Ax \\|^2 = 0 이고 Ax = 0 이 성립한다. 결국, A^* A 의 영공간과 A 의 영공간이 동일하다는 결론을 얻을 수 있고, 이를 통해 A^* A 와 A 의 랭크가 동일함을 보일 수 있다. 행렬 A 가 m \\times n 행렬이며 \\text{rank}(A) = n 이면, A^* A 는 가역 행렬이다. \\text{rank}(A^* A) = \\text{rank}(A) 가 성립하므로, 만약 A 가 풀랭크(full-rank)라면 A^* A 도 풀랭크가 되어 가역 행렬이 됨을 의미한다. 이 성질은 최소제곱 해를 구하는 공식 x_0 = (A^* A)^{-1} A^* y 가 유일한 해를 갖도록 보장하는 중요한 역할을 한다. ↩\n\n\n"},"Study/Linear-Algebra/케일리-해밀턴-정리(Cayley-Hamilton-theorem)":{"slug":"Study/Linear-Algebra/케일리-해밀턴-정리(Cayley-Hamilton-theorem)","filePath":"Study/Linear Algebra/케일리 해밀턴 정리(Cayley-Hamilton theorem).md","title":"케일리 해밀턴 정리(Cayley-Hamilton theorem)","links":[],"tags":[],"content":"케일리 해밀턴 정리(Cayley-Hamilton theorem)\nT를 유한 차원 벡터 공간 V 위의 선형 변환이라 하자. 또한, f(t)를 T의 특성 다항식이라 하자. 그러면\nf(T) = T_0\n즉, T는 자신의 특성 방정식을 만족한다.\nT-순환 부분공간 (T-cyclic subspace)\nT를 벡터 공간 V 위의 선형 변환이라 하고, x를 V의 0이 아닌 벡터라고 하자. 이때, 부분공간\nW = \\text{span}(\\{x, T(x), T^2(x), \\dots\\})\n를 x에 의해 생성된 V의 T-순환 부분공간이라고 한다. W는 x를 포함하는 V의 가장 작은 T-불변 부분공간이다. 즉, x를 포함하는 모든 T-불변 부분공간은 반드시 W를 포함해야 한다.\nT_W의 특성 다항식은 T의 특성 다항식을 나눈다.\nW가 V의 T-불변 부분공간이면, T_W의 특성 다항식은 T의 특성 다항식을 나눈다. W에 대한 순서 있는 기저를 \\gamma = \\{v_1, v_2, \\dots, v_k\\}라 하고, 이를 확장하여 V에 대한 순서 있는 기저 \\beta = \\{v_1, v_2, \\dots, v_k, v_{k+1}, \\dots, v_n\\}를 정의하자. 이때,\nA = [T]_{\\beta}, \\quad B_1 = [T_W]_{\\gamma}\n라고 하면,\nA =\n\\begin{pmatrix}\nB_1 &amp; B_2 \\\\\nO &amp; B_3\n\\end{pmatrix}\n의 형태로 쓸 수 있다.\nT의 특성 다항식을 f(t), T_W의 특성 다항식을 g(t)라 하자. 그러면\n\nf(t) = \\det(A - t I_n) = \\det\n\n\\begin{pmatrix}\n\nB_1 - t I_k &amp; B_2 \\\\\n\nO &amp; B_3 - t I_{n-k}\n\n\\end{pmatrix}\n\n= g(t) \\cdot \\det(B_3 - t I_{n-k})\n\n이다. 따라서 g(t)는 f(t)를 나눈다.\nT_W의 특성다항식\n만약\na_0 v + a_1 T(v) + \\dots + a_{k-1} T^{k-1}(v) + T^k(v) = 0\n을 만족하는 스칼라 a_0, a_1, \\dots, a_{k-1}가 존재한다면, T_W의 특성 다항식은\nf(t) = (-1)^k (a_0 + a_1 t + \\dots + a_{k-1} t^{k-1} + t^k)\n이다.\n\\dim{W}=k일 때, \\beta = \\{v, T(v), \\dots, T^{k-1}(v)\\}를 W의 순서 기저라 하자.\n스칼라 a_0, a_1, \\dots, a_{k-1}가 존재하여\n\na_0 v + a_1 T(v) + \\dots + a_{k-1} T^{k-1}(v) + T^k(v) = 0\n\n이 성립한다고 하자. 이때,\n\n[T_W]_{\\beta} =\n\n\\begin{pmatrix}\n\n0 &amp; 0 &amp; \\dots &amp; 0 &amp; -a_0 \\\\\n\n1 &amp; 0 &amp; \\dots &amp; 0 &amp; -a_1 \\\\\n\n0 &amp; 1 &amp; \\dots &amp; 0 &amp; -a_2 \\\\\n\n\\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\\n\n0 &amp; 0 &amp; \\dots &amp; 1 &amp; -a_{k-1}\n\n\\end{pmatrix}\n\n이다. 이 행렬의 특성 다항식은\n\nf(t) = (-1)^k (a_0 + a_1 t + \\dots + a_{k-1} t^{k-1} + t^k)\n\n이다.\n케일리 해밀턴 정리 증명\nf(T)(v) = 0임을 모든 v \\in V에 대해 보인다. v = 0일 경우 자명하므로, v \\neq 0인 경우를 가정하자. v에 의해 생성되는 T-순환 부분공간 W를 고려하자.\n\\dim(W) = k라 하면, T^{k} (v) \\in W이므로, 스칼라 a_0, a_1, \\dots, a_{k-1}가 존재하여 다음이 성립한다.\na_0 v + a_1 T(v) + \\dots + a_{k-1} T^{k-1}(v) + T^k(v) = 0\n따라서 T_W의 특성 다항식 g(t)는 다음과 같다.\ng(t) = (-1)^k (a_0 + a_1 t + \\dots + a_{k-1} t^{k-1} + t^k)\n위 식에서 T를 적용하면,\ng(T)(v) = (-1)^k (a_0 I + a_1 T + \\dots + a_{k-1} T^{k-1} + T^k)(v) = 0\n이다.\n불변 부분공간의 특성 다항식 g(t)는 특성 다항식 f(t)를 나누므로, 어떤 다항식 q(t)가 존재하여\nf(t) = q(t) g(t)\n이다.\nf(T)(v) = q(T) g(T)(v) = q(T) (0) = 0\n따라서 f(T) = 0이 성립한다.\n행렬로 표현한 케일리-해밀턴 정리\nn \\times n 행렬 A와 A의 특성다항식 f(t)에 대하여,\nf(A)=O\n이다.\n이차 정사각행렬에서의 케일리-해밀턴 정리\n2 \\times 2 행렬 A를\nA = \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix}\n라 하자. 이때,\n\\begin{align*}\nf(t) = \\det(A - tI) &amp;= \\det\\begin{pmatrix} a-t &amp; b \\\\ c &amp; d-t \\end{pmatrix} \\\\\\\\\n&amp; = (a-t)(d-t) - bc \\\\\\\\\n&amp; = t^2 - (a+d)t + (ad-bc) \\\\\\\\\n&amp; = t^2 - \\text{tr}(A)t + \\text{det}(A)\n\\end{align*}\n이므로, 케일리 해밀턴 정리에 의해\nA^2 - \\text{tr}(A)A + \\text{det}(A)I = O\n이 성립한다."},"Study/Linear-Algebra/켤레-전치(Conjugate-Transpose)행렬":{"slug":"Study/Linear-Algebra/켤레-전치(Conjugate-Transpose)행렬","filePath":"Study/Linear Algebra/켤레 전치(Conjugate Transpose)행렬.md","title":"켤레 전치(Conjugate Transpose, Hermitian Transpose) 행렬","links":[],"tags":[],"content":"켤레 전치(Conjugate Transpose)의 정의\n행렬 A 에 대해, 켤레 전치는 다음과 같이 정의된다.\nA^* = \\overline{A}^T\n즉, 행렬을 전치(Transpose)한 후, 복소 켤레(Conjugate)를 취한 것이다. 문헌에 따라 다르게 표현하는 경우도 있다. (A^H 또는 특히 양자역학에서 A^\\dagger)\n켤레 전치의 성질\n덧셈과 곱셈에 대한 성질\n\n\n덧셈과 스칼라 곱에 대한 성질\n (A + B)^* = A^* + B^* \n (\\lambda A)^* = \\overline{\\lambda} A^*, \\quad \\forall \\lambda \\in \\mathbb{C} \n\n\n곱셈에 대한 성질 (반자동형)\n (AB)^* = B^* A^* \n\n\n즉, 켤레 전치를 취하면 행렬 곱의 순서가 바뀐다.\n켤레와 전치\n\n두 번 켤레 전치를 취하면 원래 행렬이 된다.\n\n(A^*)^* = A\n\n켤레와 전치는 가환이다.\n\nA^* = \\overline{A^T} = (\\overline{A})^T\n켤레 전치와 역행렬\n(A^{-1})^* = (A^*)^{-1}\n역행렬의 켤레 전치는 켤레 전치의 역행렬과 동일하다.\n켤레 전치의 행렬식(Determinant)\n\\det(A^*)= \\overline{\\det(A)}\n행렬식(Determinant)의 켤레는 행렬의 켤레 전치의 행렬식과 동일하다.1\n켤레 전치와 고유값(Eigenvalues)\nA x = \\lambda x \\quad \\Rightarrow \\quad A^* \\overline{x} = \\overline{\\lambda} \\overline{x}\n즉, A 의 고유값이 \\lambda 이면, A^* 의 고유값은 \\overline{\\lambda} 입이다.\nFootnotes\n\n\n\\det(\\overline{A})= \\sum_{\\sigma \\in S_n} \\operatorname{sgn}(\\sigma)\\prod_{i=1}^{n} \\overline{A_{i, \\sigma(i)}} = \\overline{\\sum_{\\sigma \\in S_n} \\operatorname{sgn}(\\sigma)\\prod_{i=1}^{n} A_{i, \\sigma(i)}} 이므로, \\det(\\overline{A})= \\overline{\\det(A)} ↩\n\n\n"},"Study/Linear-Algebra/행렬-곱의-정의":{"slug":"Study/Linear-Algebra/행렬-곱의-정의","filePath":"Study/Linear Algebra/행렬 곱의 정의.md","title":"행렬의 곱은 왜 이렇게 이상하게 정의되어있을까?","links":[],"tags":["행렬","곱","변환"],"content":"행렬의 합과 스칼라 곱을 각각 선형변환의 합과 스칼라 곱에 대응하는 방식으로 행렬과 선형변환의 개념을 연결하였다. 선형변환의 합성에 대응하는 행렬의 연산은 무엇일까? 바로 행렬 곱이다.\n이제 행렬의 곱셈에 주목하겠습니다.\nV, W, Z를 유한 차원의 벡터 공간이라고 하고 T: V \\to W, U: W \\to Z가 선형 변환이라고 하겠습니다. A = [U]_\\beta^\\gamma, B = [T]_\\alpha^\\beta라고 가정하며, 여기서 \\alpha = \\{v_1, v_2, \\dots, v_n\\}, \\beta = \\{w_1, w_2, \\dots, w_m\\}, \\gamma = \\{z_1, z_2, \\dots, z_p\\}는 각각 V, W, Z의 순서가 지정된 기저입니다. 우리는 행렬 AB를 정의하여 AB = [UT]_\\alpha^\\gamma가 되도록 하고자 합니다.\n행렬 곱 (UT)를 고려하면, j = 1, 2, \\dots, n에 대해 다음이 성립합니다.\n\\begin{align*}\n(UT)(v_j) &amp;= U(T(v_j)) \\\\\n&amp;= U\\left(\\sum_{k=1}^m B_{kj} w_k\\right) \\\\\n&amp;= \\sum_{k=1}^m B_{kj} U(w_k) \\\\\n&amp;= \\sum_{k=1}^m B_{kj} \\left(\\sum_{i=1}^p A_{ik} z_i\\right) \\\\\n&amp;= \\sum_{i=1}^p \\left(\\sum_{k=1}^m A_{ik} B_{kj}\\right) z_i \\\\\n&amp;= \\sum_{i=1}^p C_{ij} z_i\n\\end{align*}\n여기서 C_{ij}의 계산은 행렬 곱셈 정의를 유도합니다.\nC_{ij} = \\sum_{k=1}^m A_{ik} B_{kj}.\n정의. A를 m \\times n 행렬, B를 n \\times p 행렬이라고 하겠습니다. 우리는 A와 B의 곱을 AB로 표시하며, AB를 m \\times p 행렬로 정의합니다. 이때,\n(AB)_{ij} = \\sum_{k=1}^n A_{ik} B_{kj}, \\quad 1 \\leq i \\leq m, \\quad 1 \\leq j \\leq p.\n(AB)_{ij}는 A의 i번째 행과 B의 j번째 열에서 해당 원소들의 곱의 합을 의미합니다. 이 식으로부터 AB가 정의되기 위해서는 A와 B의 상대적인 크기에 제약 조건이 있음을 알아야 합니다. 다음의 기억 장치(mnemonic device)는 도움이 될 수 있습니다.\n(m \\times n) \\cdot (n \\times p) = (m \\times p)\n즉, 곱 AB가 정의되기 위해서는 두 “내부” 차원(inner dimensions)이 같아야 하며, 두 “외부” 차원(outer dimensions)이 곱의 크기를 결정합니다.\n\n예제\nU: P_3(\\mathbb{R}) \\to P_2(\\mathbb{R})와 T: P_2(\\mathbb{R}) \\to P_3(\\mathbb{R})를 각각 다음과 같이 정의된 선형 변환이라고 하겠습니다.\nU(f(x)) = f&#039;(x), \\quad T(f(x)) = \\int_0^x f(t) \\, dt.\nP_3(\\mathbb{R})와 P_2(\\mathbb{R})의 표준 기저를 각각 \\alpha=\\{ 1, x, x^{2}, x^3\\}와 \\beta=\\{ 1, x, x^{2}\\}라 하겠습니다.미적분학에 의해\nU(T(f(x))) = \\frac{d}{dx} \\left( \\int_0^{x} {f(t) \\, dt} \\right)=f(x)\n입니다. 행렬로 나타내면 UT = I (여기서 I는 P_2(\\mathbb{R})에서의 항등 변환)임을 알 수 있습니다.\n[UT]_\\beta = [U]_\\alpha^\\beta [T]_\\beta^\\alpha = \n\\begin{pmatrix}\n0 &amp; 1 &amp; 0 &amp; 0  \\\\\n0 &amp; 0 &amp; 2 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 3\n\\end{pmatrix}\n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; \\frac{1}{2} &amp; 0 \\\\\n0 &amp; 0 &amp; \\frac{1}{3}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; 1 &amp; 0 \\\\\n0 &amp; 0 &amp; 1\n\\end{pmatrix}\n= [I]_\\beta.\n반대로, TU는 어떨까요? 미적분학의 기본 정리에 의해 TU는 f(x)에서 상수항(즉, f(0))을 제거하는 변환임을 알 수 있습니다.\nTU(f(x)) = T(f&#039;(x)) = \\int_0^{x} {f&#039;(t) \\, dt} = f(x) - f(0)\n이를 행렬로 나타내면 다음과 같습니다.\n[TU]_\\alpha = [T]_\\beta^\\alpha [U]_\\alpha^\\beta =\n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; \\frac{1}{2} &amp; 0 \\\\\n0 &amp; 0 &amp; \\frac{1}{3}\n\\end{pmatrix}\n\\begin{pmatrix}\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 2 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 3\n\\end{pmatrix} = \n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 1 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 1\n\\end{pmatrix}\nUT는 P_2(\\mathbb{R})에서 항등 변환으로 작용합니다. 반면 TU는 P_3(\\mathbb{R})에서 P_3(\\mathbb{R})로 작용하지만, 항등 변환은 아닙니다. 이 차이는 행렬 표현에서 나타나는 차원과 구조적 특징의 차이로 명확히 드러납니다."},"Study/Linear-Algebra/행렬곱의-응용-1":{"slug":"Study/Linear-Algebra/행렬곱의-응용-1","filePath":"Study/Linear Algebra/행렬곱의 응용 1.md","title":"Online Linear Algebra Applications","links":[],"tags":["암컷","인구","분포","연령대","집단","다음"],"content":"Leslie 행렬과 인구 변화\n동물 집단의 개체 수는 집단 내 각 연령대의 출생률과 사망률에 따라 달라집니다. 예를 들어, 어떤 포유동물 집단의 구성원이 3년 미만의 수명을 가진다고 가정해 봅시다. 집단의 출생률을 연구하기 위해 암컷을 세 연령대로 나눕니다: 1세 미만, 1세에서 2세 사이, 2세. 집단의 사망률 데이터를 통해 신생 암컷의 40%가 1세까지 생존하며, 1세 암컷의 50%가 2세까지 생존한다는 것을 알 수 있습니다. 집단에서 암컷과 수컷 개체 수 사이에는 알려진 관계가 존재하므로, 각 연령대의 암컷이 암컷 자손을 낳는 비율만 관찰하면 됩니다. 1세 미만의 암컷은 자손을 낳지 않으며, 1세에서 2세 사이 암컷은 평균 2명의 암컷 자손을 낳고, 2세 암컷은 평균 1명의 암컷 자손을 낳는다고 가정합니다. 현재 1세 미만, 1세에서 2세, 2세 암컷의 수를 각각 x_1, x_2, x_3라 하고, 다음 해의 해당 연령대 암컷의 수를 y_1, y_2, y_3라 하겠습니다. 올해에서 내년으로의 변화는 아래 표와 같이 나타낼 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n연령(년)현재 연도다음 연도0–1x_1y_11–2x_2y_22–3x_3y_3\n벡터 x = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{pmatrix}는 암컷 집단의 현재 인구 분포를 나타냅니다. 위 정보를 이용하여 다음 해의 인구 분포를 예측할 수 있으며, 이는 벡터 y = \\begin{pmatrix} y_1 \\\\ y_2 \\\\ y_3 \\end{pmatrix}로 나타낼 수 있습니다. 다음 해의 인구에서 1세 미만 암컷의 수 y_1는 올해 각 연령대의 암컷이 낳은 자손의 수에 의해 결정됩니다. 현재 1세에서 2세 사이의 암컷은 x_2명이 있으며, 각각 평균 2명의 암컷 자손을 낳습니다. 또한 2세 암컷은 x_3명이 있고, 각각 평균 1명의 암컷 자손을 낳습니다. 따라서 y_1에 대한 식은 다음과 같습니다:\ny_1 = 2x_2 + x_3.\n1세에서 2세 사이의 암컷 수 y_2는 다음 해 1세 그룹에 속하는 암컷의 수입니다. 올해 1세 미만 그룹에 속했던 암컷의 40%만이 생존하여 1세에서 2세 그룹으로 진입하므로 y_2 = 0.4x_1이 됩니다. 마찬가지로, y_3 = 0.5x_2입니다. 이 세 식을 모아보면:\ny_1 = 2.0x_2 + 1.0x_3, \\quad y_2 = 0.4x_1, \\quad y_3 = 0.5x_2.\n이 세 식은 행렬 방정식 y = Ax로 표현할 수 있으며, 여기서 x와 y는 각각 위에서 정의된 인구 분포를 나타내는 벡터이고, A는 3 \\times 3 행렬입니다:\nA = \\begin{pmatrix} 0.0 &amp; 2.0 &amp; 1.0 \\\\ 0.4 &amp; 0.0 &amp; 0.0 \\\\ 0.0 &amp; 0.5 &amp; 0.0 \\end{pmatrix}.\n예를 들어, x = \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix}라 하면, 즉 각 연령대에 암컷이 1000명씩 존재한다고 가정하면:\ny = Ax = \\begin{pmatrix} 0.0 &amp; 2.0 &amp; 1.0 \\\\ 0.4 &amp; 0.0 &amp; 0.0 \\\\ 0.0 &amp; 0.5 &amp; 0.0 \\end{pmatrix} \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix} = \\begin{pmatrix} 3000 \\\\ 400 \\\\ 500 \\end{pmatrix}\n따라서 1년 후에는 1세 미만 암컷이 3000명, 1세에서 2세 암컷이 400명, 2세 암컷이 500명이 됩니다.\nk년 후의 인구 분포\n모든 양의 정수 k에 대해, p_k를 초기 인구 분포 p_0로부터 k년 후의 인구 분포라 하겠습니다. 위 예에서:\np_0 = x = \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix}, \\quad p_1 = y = \\begin{pmatrix} 3000 \\\\ 400 \\\\ 500 \\end{pmatrix}\n모든 양의 정수 k에 대해, 다음이 성립합니다:\np_k = A p_{k-1}\n따라서:\np_k = A p_{k-1} = A^2 p_{k-2} = \\cdots = A^k p_0\n이 방식을 통해 장기적인 인구 추세를 예측할 수 있습니다. 예를 들어, 10년 후의 인구 분포를 예측하려면 p_{10} = A^{10} p_0를 계산합니다. 계산 결과는 다음과 같습니다:\np_{10} = A^{10} p_0 = \\begin{pmatrix} 1987 \\\\ 851 \\\\ 387 \\end{pmatrix}\n여기서 각 항목은 가장 가까운 정수로 반올림되었습니다. 이 과정을 10년 단위로 반복하면, (반올림된 결과로) 다음과 같은 분포를 얻습니다:\np_{20} = \\begin{pmatrix} 2043 \\\\ 819 \\\\ 408 \\end{pmatrix}, \\quad p_{30} = p_{40} = \\begin{pmatrix} 2045 \\\\ 818 \\\\ 409 \\end{pmatrix}\n이를 통해 인구가 30년 후 안정화된다는 것을 알 수 있습니다. 실제로, 벡터:\nz = \\begin{pmatrix} 2045 \\\\ 818 \\\\ 409 \\end{pmatrix},\n에 대해 Az = z가 성립합니다. 이러한 상황에서 인구 분포 z는 안정적이며, 해마다 변화하지 않습니다.\n일반화\n일반적으로, 동물 집단의 인구 분포가 안정적인 상태로 접근하는지 여부는 각 연령대의 생존율과 출생률의 특성에 따라 달라집니다.\n이 상황을 임의의 동물 집단으로 일반화할 수 있습니다. 집단의 암컷을 n개의 연령대로 나누고, x_i를 i-번째 연령대의 개체 수라고 하겠습니다. 개별 연령대의 시간 지속 기간은 반드시 1년일 필요는 없지만, 모든 연령대의 지속 시간은 동일해야 합니다. x = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{pmatrix}를 암컷 집단의 인구 분포라 하고, p_i를 i-번째 연령대의 암컷이 다음 연령대로 생존할 비율이라 하며, b_i를 i-번째 연령대의 개체가 낳는 평균 암컷 자손 수라고 하겠습니다. 만약 y = \\begin{pmatrix} y_1 \\\\ y_2 \\\\ \\vdots \\\\ y_n \\end{pmatrix}가 다음 기간 동안의 인구 분포라면, 다음이 성립합니다:\ny_1 = b_1 x_1 + b_2 x_2 + \\cdots + b_n x_n,\ny_2 = p_1 x_1,\ny_3 = p_2 x_2,\n\\vdots\ny_n = p_{n-1} x_{n-1}.\n따라서:\nA = \\begin{pmatrix} \nb_1 &amp; b_2 &amp; \\cdots &amp; b_n \\\\ \np_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ \n0 &amp; p_2 &amp; \\cdots &amp; 0 \\\\ \n\\vdots &amp; \\vdots &amp; &amp; \\vdots \\\\ \n0 &amp; 0 &amp; \\cdots &amp; p_{n-1} \n\\end{pmatrix},\n에 대해:\ny = A x.\n행렬 A는 집단의 Leslie 행렬이라 불립니다. 이 이름은 1940년대에 이 행렬을 도입한 P. H. Leslie의 이름에서 유래되었습니다. 초기 인구 분포를 x_0라 하면, k개의 시간 간격 이후의 인구 분포는:\nx_k = A^k x_0.\n와 같습니다."},"Study/Linear-Algebra/행렬곱의-응용":{"slug":"Study/Linear-Algebra/행렬곱의-응용","filePath":"Study/Linear Algebra/행렬곱의 응용.md","title":"Leslie 행렬","links":[],"tags":["암컷","인구","분포","연령대","집단"],"content":"Leslie 행렬과 인구 변화\n동물 집단의 개체 수는 집단 내 각 연령대의 출생률과 사망률에 따라 달라집니다. 예를 들어, 어떤 포유동물 집단의 구성원이 3년 미만의 수명을 가진다고 가정해 봅시다. 집단의 출생률을 연구하기 위해 암컷을 세 연령대로 나눕니다: 1세 미만, 1세에서 2세 사이, 2세. 집단의 사망률 데이터를 통해 신생 암컷의 40%가 1세까지 생존하며, 1세 암컷의 50%가 2세까지 생존한다는 것을 알 수 있습니다. 집단에서 암컷과 수컷 개체 수 사이에는 알려진 관계가 존재하므로, 각 연령대의 암컷이 암컷 자손을 낳는 비율만 관찰하면 됩니다. 1세 미만의 암컷은 자손을 낳지 않으며, 1세에서 2세 사이 암컷은 평균 2명의 암컷 자손을 낳고, 2세 암컷은 평균 1명의 암컷 자손을 낳는다고 가정합니다. 현재 1세 미만, 1세에서 2세, 2세 암컷의 수를 각각 x_1, x_2, x_3라 하고, 다음 해의 해당 연령대 암컷의 수를 y_1, y_2, y_3라 하겠습니다. 올해에서 내년으로의 변화는 아래 표와 같이 나타낼 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n연령(년)현재 연도다음 연도0–1x_1y_11–2x_2y_22–3x_3y_3\n벡터 x = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{pmatrix}는 암컷 집단의 현재 인구 분포를 나타냅니다. 위 정보를 이용하여 다음 해의 인구 분포를 예측할 수 있으며, 이는 벡터 y = \\begin{pmatrix} y_1 \\\\ y_2 \\\\ y_3 \\end{pmatrix}로 나타낼 수 있습니다. 다음 해의 인구에서 1세 미만 암컷의 수 y_1는 올해 각 연령대의 암컷이 낳은 자손의 수에 의해 결정됩니다. 현재 1세에서 2세 사이의 암컷은 x_2명이 있으며, 각각 평균 2명의 암컷 자손을 낳습니다. 또한 2세 암컷은 x_3명이 있고, 각각 평균 1명의 암컷 자손을 낳습니다. 따라서 y_1에 대한 식은 다음과 같습니다:\ny_1 = 2x_2 + x_3.\n1세에서 2세 사이의 암컷 수 y_2는 다음 해 1세 그룹에 속하는 암컷의 수입니다. 올해 1세 미만 그룹에 속했던 암컷의 40%만이 생존하여 1세에서 2세 그룹으로 진입하므로 y_2 = 0.4x_1이 됩니다. 마찬가지로, y_3 = 0.5x_2입니다. 이 세 식을 모아보면:\ny_1 = 2.0x_2 + 1.0x_3, \\quad y_2 = 0.4x_1, \\quad y_3 = 0.5x_2.\n이 세 식은 행렬 방정식 y = Ax로 표현할 수 있으며, 여기서 x와 y는 각각 위에서 정의된 인구 분포를 나타내는 벡터이고, A는 3 \\times 3 행렬입니다:\nA = \\begin{pmatrix} 0.0 &amp; 2.0 &amp; 1.0 \\\\ 0.4 &amp; 0.0 &amp; 0.0 \\\\ 0.0 &amp; 0.5 &amp; 0.0 \\end{pmatrix}.\n예를 들어, x = \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix}라 하면, 즉 각 연령대에 암컷이 1000명씩 존재한다고 가정하면:\ny = Ax = \\begin{pmatrix} 0.0 &amp; 2.0 &amp; 1.0 \\\\ 0.4 &amp; 0.0 &amp; 0.0 \\\\ 0.0 &amp; 0.5 &amp; 0.0 \\end{pmatrix} \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix} = \\begin{pmatrix} 3000 \\\\ 400 \\\\ 500 \\end{pmatrix}\n따라서 1년 후에는 1세 미만 암컷이 3000명, 1세에서 2세 암컷이 400명, 2세 암컷이 500명이 됩니다.\nk년 후의 인구 분포\n모든 양의 정수 k에 대해, p_k를 초기 인구 분포 p_0로부터 k년 후의 인구 분포라 하겠습니다. 위 예에서:\np_0 = x = \\begin{pmatrix} 1000 \\\\ 1000 \\\\ 1000 \\end{pmatrix}, \\quad p_1 = y = \\begin{pmatrix} 3000 \\\\ 400 \\\\ 500 \\end{pmatrix}\n모든 양의 정수 k에 대해, 다음이 성립합니다:\np_k = A p_{k-1}\n따라서:\np_k = A p_{k-1} = A^2 p_{k-2} = \\cdots = A^k p_0\n이 방식을 통해 장기적인 인구 추세를 예측할 수 있습니다. 예를 들어, 10년 후의 인구 분포를 예측하려면 p_{10} = A^{10} p_0를 계산합니다. 계산 결과는 다음과 같습니다:\np_{10} = A^{10} p_0 = \\begin{pmatrix} 1987 \\\\ 851 \\\\ 387 \\end{pmatrix}\n여기서 각 항목은 가장 가까운 정수로 반올림되었습니다. 이 과정을 10년 단위로 반복하면, (반올림된 결과로) 다음과 같은 분포를 얻습니다:\np_{20} = \\begin{pmatrix} 2043 \\\\ 819 \\\\ 408 \\end{pmatrix}, \\quad p_{30} = p_{40} = \\begin{pmatrix} 2045 \\\\ 818 \\\\ 409 \\end{pmatrix}\n이를 통해 인구가 30년 후 안정화된다는 것을 알 수 있습니다. 실제로, 벡터:\nz = \\begin{pmatrix} 2045 \\\\ 818 \\\\ 409 \\end{pmatrix},\n에 대해 Az = z가 성립합니다. 이러한 상황에서 인구 분포 z는 안정적이며, 해마다 변화하지 않습니다.\n일반화\n일반적으로, 동물 집단의 인구 분포가 안정적인 상태로 접근하는지 여부는 각 연령대의 생존율과 출생률의 특성에 따라 달라집니다.\n이 상황을 임의의 동물 집단으로 일반화할 수 있습니다. 집단의 암컷을 n개의 연령대로 나누고, x_i를 i-번째 연령대의 개체 수라고 하겠습니다. 개별 연령대의 시간 지속 기간은 반드시 1년일 필요는 없지만, 모든 연령대의 지속 시간은 동일해야 합니다. x = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{pmatrix}를 암컷 집단의 인구 분포라 하고, p_i를 i-번째 연령대의 암컷이 다음 연령대로 생존할 비율이라 하며, b_i를 i-번째 연령대의 개체가 낳는 평균 암컷 자손 수라고 하겠습니다. 만약 y = \\begin{pmatrix} y_1 \\\\ y_2 \\\\ \\vdots \\\\ y_n \\end{pmatrix}가 다음 기간 동안의 인구 분포라면, 다음이 성립합니다:\ny_1 = b_1 x_1 + b_2 x_2 + \\cdots + b_n x_n,\ny_2 = p_1 x_1,\ny_3 = p_2 x_2,\n\\vdots\ny_n = p_{n-1} x_{n-1}.\n따라서:\nA = \\begin{pmatrix} \nb_1 &amp; b_2 &amp; \\cdots &amp; b_n \\\\ \np_1 &amp; 0 &amp; \\cdots &amp; 0 \\\\ \n0 &amp; p_2 &amp; \\cdots &amp; 0 \\\\ \n\\vdots &amp; \\vdots &amp; &amp; \\vdots \\\\ \n0 &amp; 0 &amp; \\cdots &amp; p_{n-1} \n\\end{pmatrix},\n에 대해:\ny = A x.\n행렬 A는 집단의 Leslie 행렬이라 불립니다. 이 이름은 1940년대에 이 행렬을 도입한 P. H. Leslie의 이름에서 유래되었습니다. 초기 인구 분포를 x_0라 하면, k개의 시간 간격 이후의 인구 분포는:\nx_k = A^k x_0.\n와 같습니다."},"Study/Linear-Algebra/행렬로-정의하는-대칭과-사영":{"slug":"Study/Linear-Algebra/행렬로-정의하는-대칭과-사영","filePath":"Study/Linear Algebra/행렬로 정의하는 대칭과 사영.md","title":"행렬로 정의하는 대칭과 사영","links":[],"tags":["사영","대칭","행렬"],"content":"직선 y = mx에 대한 대칭 변환과 사영 변환을 찾고자 합니다. 일반적인 표준기저에서 해당 식을 찾는 과정은 복잡하므로, 새로운 기저를 이용해 다시 표준변환하는 과정을 설명해보겠습니다.\n개념정리\nT를 유한 차원 벡터 공간 V 위의 선형 연산자라고 하고, \\beta와 \\beta&#039;를 V의 순서 있는 기저라고 하자. Q를 \\beta&#039;-좌표를 \\beta-좌표로 변환하는 기저 변환 행렬이라고 가정하면, 다음이 성립한다.\n[T]_{\\beta&#039;} = Q^{-1} [T]_{\\beta} Q\nT의 표준기저 표현을 찾는 것은 어려우므로, 새로운 기저 \\beta&#039;를 선택하여 T를 표현하고자 합니다.\n새로운 기저의 구성\n대칭 변환을 쉽게 표현하기 위해, 직선 y = mx에 평행한 벡터와 수직인 벡터를 새로운 기저로 선택합니다. 왜냐하면 평행한 방향의 벡터는 그대로 유지하고, 수직한 벡터는 방향이 반전되기 때문입니다.\n\n평행한 벡터: (1, m)\n직선의 방향 벡터로, 기울기 m을 가진 직선과 평행합니다.\n수직인 벡터: (-m, 1)\n평행한 벡터와 수직을 이루는 벡터입니다. (1,m) \\cdot (-m,1) = -m + m = 0\n\n이렇게 구성된 새로운 기저 \\beta&#039;는 다음과 같습니다.\n\\beta&#039; = \\{(1, m), (-m, 1)\\}\n대칭 변환 행렬 계산\n대칭 변환 T 가 새로운 기저 \\beta&#039;에서 어떻게 표현되는지 알아보겠습니다.\n\\begin{align*}\n  T(1, m) &amp;= 1(1, m) + 0(-m, 1) = (1, m)\\\\\n  T(-m, 1) &amp;= 0(1, m) + 1(-m, 1) = (-m, 1)\n\\end{align*}\nT는 새로운 기저 \\beta&#039;에서 대칭축과 평행한 벡터는 유지하고, 수직한 벡터의 방향을 바꾸는 방식으로 동작합니다. 따라서 T의 행렬 표현은 다음과 같습니다.\n[T]_{\\beta&#039;} = \n\\begin{bmatrix}\n1 &amp; 0 \\\\\n0 &amp; -1\n\\end{bmatrix}\n이제, [T]_{\\beta&#039;} = Q^{-1} [T]_{\\beta} Q 관계식을 이용하면, [T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1}를 구할 수 있습니다.\n기저 변환 행렬 Q\n기저 변환 행렬 Q는 새로운 기저 \\beta&#039;를 기존 표준 기저 \\beta로 나타내는 역할을 합니다.\n1. 좌표 변환을 이용한 Q 계산\nQ = [I_V]_{\\beta&#039;}^{\\beta}\n\n(1, m)의 표준 기저 표현\n\n  I_V(1, m) = 1(1, 0) + m(0, 1) = \n  \\begin{bmatrix}\n  1 \\\\\n  m\n  \\end{bmatrix}\n\n(-m, 1)의 표준 기저 표현\n\n  I_V(-m, 1) = -m(1, 0) + 1(0, 1) = \n  \\begin{bmatrix}\n  -m \\\\\n  1\n  \\end{bmatrix}\n따라서 Q는 다음과 같습니다.\nQ= \n\\begin{bmatrix}\n1 &amp; -m \\\\\nm &amp; 1\n\\end{bmatrix}\n2. Q^{-1} 계산\nQ의 역행렬을 계산하여 Q^{-1}를 구하면 다음과 같습니다.\nQ^{-1} = \\frac{1}{\\det(Q)} \\operatorname{adj}(Q) = \n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\n1 &amp; m \\\\\n-m &amp; 1\n\\end{bmatrix}\n대칭 변환 행렬 [T]_{\\beta} 계산\n마지막으로 [T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1} 관계식을 이용하여 대칭 변환 행렬 [T]_{\\beta}를 계산합니다.\n\\begin{align*}\n[T]_{\\beta} &amp;= Q [T]_{\\beta&#039;}Q^{-1}\\\\\\\\\n&amp;= \\begin{bmatrix} 1 &amp; -m \\\\ m &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} \\frac{1}{1 + m^2} \\begin{bmatrix} 1 &amp; m \\\\ -m &amp; 1 \\end{bmatrix}\\\\\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} 1 - m^2 &amp; 2m \\\\ 2m &amp; m^2 - 1 \\end{bmatrix}\n\\end{align*}\n행렬 [T]_{\\beta}를 사용하여 선형 변환 T(x, y)를 정의합니다.\n\\begin{align*}\nT(x, y) &amp;=\n\\frac{1}{1 + m^2} \\begin{bmatrix} 1 - m^2 &amp; 2m \\\\ 2m &amp; m^2 - 1 \\end{bmatrix}\n\\begin{bmatrix}\nx \\\\\ny\n\\end{bmatrix}\\\\\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} (1 - m^2)x + 2my \\\\ 2mx + (m^2 - 1)y \\end{bmatrix}\n\\end{align*}\n따라서, T(x, y)는 다음과 같습니다.\nT(x, y) =\n\\left(\n\\frac{x - m^2x + 2my}{1 + m^2},\n\\frac{2mx + m^2y - y}{1 + m^2}\n\\right)\n사영 변환 행렬 계산\n사영 변환 T 가 새로운 기저 \\beta&#039;에서 어떻게 표현되는지 알아보겠습니다.\n\\begin{align*}\n  T(1, m) &amp;= 1(1, m) + 0(-m, 1) = (1, m)\\\\\n  T(-m, 1) &amp;= 0(1, m) + 0(-m, 1) = (0, 0)\n\\end{align*}\nT는 새로운 기저 \\beta&#039;에서 사영축과 평행한 벡터는 유지하고, 수직한 벡터는 한 점으로 수렴(\\vec{0})하는 방식으로 동작합니다. 따라서 T의 행렬 표현은 다음과 같습니다.\n[T]_{\\beta&#039;} =\n\\begin{bmatrix}\n1 &amp; 0 \\\\\n0 &amp; 0\n\\end{bmatrix}\n사영 변환 행렬 [T]_{\\beta} 계산\n[T]_{\\beta} = Q[T]_{\\beta&#039;}Q^{-1} 관계식을 이용하여 사영 변환 행렬 [T]_{\\beta}를 계산합니다.\n\\begin{align*}\n[T]_{\\beta} &amp;= Q [T]_{\\beta&#039;}Q^{-1}\\\\\\\\\n&amp;= \\begin{bmatrix} 1 &amp; -m \\\\ m &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; 0 \\end{bmatrix} \\frac{1}{1 + m^2} \\begin{bmatrix} 1 &amp; m \\\\ -m &amp; 1 \\end{bmatrix}\\\\\\\\\n&amp;= \\frac{1}{1 + m^2} \\begin{bmatrix} 1  &amp; m \\\\ m &amp; m^2 \\end{bmatrix}\n\\end{align*}\n행렬 [T]_{\\beta}를 사용하여 선형 변환 T(x, y)를 정의합니다.\n\\begin{align*}\nT(x, y) &amp;=\n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\n1 &amp; m \\\\\nm &amp; m^2\n\\end{bmatrix}\n\\begin{bmatrix}\nx \\\\\ny\n\\end{bmatrix}\\\\\n&amp;=\n\\frac{1}{1 + m^2}\n\\begin{bmatrix}\nx + my \\\\\nmx + m^2y\n\\end{bmatrix}\n\\end{align*}\n따라서, T(x, y)는 다음과 같습니다.\nT(x, y) =\n\\left(\n\\frac{x + my}{1 + m^2},\n\\frac{mx + m^2y}{1 + m^2}\n\\right)"},"Study/Linear-Algebra/행렬의-곱":{"slug":"Study/Linear-Algebra/행렬의-곱","filePath":"Study/Linear Algebra/행렬의 곱?.md","title":"행렬의 곱?","links":[],"tags":["행렬","곱","변환"],"content":"행렬의 곱은 왜 이렇게 이상하게 정의되어있을까?\n행렬의 합과 스칼라 곱을 각각 선형변환의 합과 스칼라 곱에 대응하는 방식으로 행렬과 선형변환의 개념을 연결하였다. 선형변환의 합성에 대응하는 행렬의 연산은 무엇일까? 바로 행렬 곱이다.\n이제 행렬의 곱셈에 주목하겠습니다.\nV, W, Z를 유한 차원의 벡터 공간이라고 하고 T: V \\to W, U: W \\to Z가 선형 변환이라고 하겠습니다. A = [U]_\\beta^\\gamma, B = [T]_\\alpha^\\beta라고 가정하며, 여기서 \\alpha = \\{v_1, v_2, \\dots, v_n\\}, \\beta = \\{w_1, w_2, \\dots, w_m\\}, \\gamma = \\{z_1, z_2, \\dots, z_p\\}는 각각 V, W, Z의 순서가 지정된 기저입니다. 우리는 행렬 AB를 정의하여 AB = [UT]_\\alpha^\\gamma가 되도록 하고자 합니다.\n행렬 곱 (UT)를 고려하면, j = 1, 2, \\dots, n에 대해 다음이 성립합니다.\n\\begin{align*}\n(UT)(v_j) &amp;= U(T(v_j)) \\\\\n&amp;= U\\left(\\sum_{k=1}^m B_{kj} w_k\\right) \\\\\n&amp;= \\sum_{k=1}^m B_{kj} U(w_k) \\\\\n&amp;= \\sum_{k=1}^m B_{kj} \\left(\\sum_{i=1}^p A_{ik} z_i\\right) \\\\\n&amp;= \\sum_{i=1}^p \\left(\\sum_{k=1}^m A_{ik} B_{kj}\\right) z_i \\\\\n&amp;= \\sum_{i=1}^p C_{ij} z_i\n\\end{align*}\n여기서 C_{ij}의 계산은 행렬 곱셈 정의를 유도합니다.\nC_{ij} = \\sum_{k=1}^m A_{ik} B_{kj}.\n정의. A를 m \\times n 행렬, B를 n \\times p 행렬이라고 하겠습니다. 우리는 A와 B의 곱을 AB로 표시하며, AB를 m \\times p 행렬로 정의합니다. 이때,\n(AB)_{ij} = \\sum_{k=1}^n A_{ik} B_{kj}, \\quad 1 \\leq i \\leq m, \\quad 1 \\leq j \\leq p.\n(AB)_{ij}는 A의 i번째 행과 B의 j번째 열에서 해당 원소들의 곱의 합을 의미합니다. 이 식으로부터 AB가 정의되기 위해서는 A와 B의 상대적인 크기에 제약 조건이 있음을 알아야 합니다. 다음의 기억 장치(mnemonic device)는 도움이 될 수 있습니다:\n(m \\times n) \\cdot (n \\times p) = (m \\times p)\n즉, 곱 AB가 정의되기 위해서는 두 “내부” 차원(inner dimensions)이 같아야 하며, 두 “외부” 차원(outer dimensions)이 곱의 크기를 결정합니다.\n\n예제\nU: P_3(\\mathbb{R}) \\to P_2(\\mathbb{R})와 T: P_2(\\mathbb{R}) \\to P_3(\\mathbb{R})를 각각 다음과 같이 정의된 선형 변환이라고 하겠습니다.\nU(f(x)) = f&#039;(x), \\quad T(f(x)) = \\int_0^x f(t) \\, dt.\nP_3(\\mathbb{R})와 P_2(\\mathbb{R})의 표준 기저를 각각 \\alpha=\\{ 1, x, x^{2}, x^3\\}와 \\beta=\\{ 1, x, x^{2}\\}라 하겠습니다.미적분학에 의해\nU(T(f(x))) = \\frac{d}{dx} \\left( \\int_0^{x} {f(t) \\, dt} \\right)=f(x)\n입니다. 행렬로 나타내면 UT = I (여기서 I는 P_2(\\mathbb{R})에서의 항등 변환)임을 알 수 있습니다.\n[UT]_\\beta = [U]_\\alpha^\\beta [T]_\\beta^\\alpha = \n\\begin{pmatrix}\n0 &amp; 1 &amp; 0 &amp; 0  \\\\\n0 &amp; 0 &amp; 2 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 3\n\\end{pmatrix}\n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; \\frac{1}{2} &amp; 0 \\\\\n0 &amp; 0 &amp; \\frac{1}{3}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; 1 &amp; 0 \\\\\n0 &amp; 0 &amp; 1\n\\end{pmatrix}\n= [I]_\\beta.\n반대로, TU는 어떨까요? 미적분학의 기본 정리에 의해 TU는 f(x)에서 상수항(즉, f(0))을 제거하는 변환임을 알 수 있습니다.\nTU(f(x)) = T(f&#039;(x)) = \\int_0^{x} {f&#039;(t) \\, dt} = f(x) - f(0)\n이를 행렬로 나타내면 다음과 같습니다.\n[TU]_\\alpha = [T]_\\beta^\\alpha [U]_\\alpha^\\beta =\n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 0 \\\\\n0 &amp; \\frac{1}{2} &amp; 0 \\\\\n0 &amp; 0 &amp; \\frac{1}{3}\n\\end{pmatrix}\n\\begin{pmatrix}\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 2 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 3\n\\end{pmatrix} = \n\\begin{pmatrix}\n0 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 1 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 1\n\\end{pmatrix}\nUT는 P_2(\\mathbb{R})에서 항등 변환으로 작용합니다. 반면 TU는 P_3(\\mathbb{R})에서 P_3(\\mathbb{R})로 작용하지만, 항등 변환은 아닙니다. 이 차이는 행렬 표현에서 나타나는 차원과 구조적 특징의 차이로 명확히 드러납니다."},"Study/Linear-Algebra/행렬이-가환(Commutativity)이기-위한-충분조건":{"slug":"Study/Linear-Algebra/행렬이-가환(Commutativity)이기-위한-충분조건","filePath":"Study/Linear Algebra/행렬이 가환(Commutativity)이기 위한 충분조건.md","title":"행렬이 가환(Commutativity)이기 위한 충분조건","links":[],"tags":[],"content":"행렬의 가환\n대각화 가능(diagonalizable)한 두 행렬 A와 B에 대해, 다음 두 조건이 동치(equivalent)이다.\n\nA와 B가 가환(commute), 즉 AB = BA\nA와 B가 동시에 대각화 가능(simultaneously diagonalizable)\n\n즉, A와 B가 대각화 가능하다고 가정하면, AB = BA일 필요충분 조건은 A와 B가 동시에 대각화 가능하다는 것이다.\n필요조건(⇒) A와 B가 동시에 대각화 가능하면 AB = BA\nA와 B가 동시에 대각화 가능하다는 것은, 어떤 가역 행렬 P가 존재하여 P^{-1} A P와 P^{-1} B P가 모두 대각 행렬이 된다는 것이다.\nP^{-1} A P = D_A, \\quad P^{-1} B P = D_B\n여기서 D_A와 D_B는 각각 A와 B의 대각 행렬이다.\n\\begin{align*}\nP^{-1} A B P = (P^{-1} A P)(P^{-1} B P)= D_A D_B\\\\\nP^{-1} B A P = (P^{-1} B P)(P^{-1} A P)= D_B D_A\n\\end{align*}\n\n대각 행렬 D_A와 D_B는 서로 가환(즉, D_A D_B = D_B D_A) 이므로,\n\nP^{-1} A B P = P^{-1} B A P\nP가 가역이므로, 양변에 P를 곱하면,\nAB = BA\n즉, 동시에 대각화 가능하면 AB = BA가 성립한다.\n충분조건(⇐) AB = BA이면 A와 B가 동시에 대각화 가능\nA와 B가 대각화 가능하므로, 두 행렬의 각각의 고유벡터로 이루어진 기저가 존재한다. A의 고유벡터들을 살펴보자.\nA v_i = \\lambda_i v_i\nAB = BA이므로, A의 고유벡터 v_i에 B를 작용하면,\nA (B v_i)= B (A v_i)= B (\\lambda_i v_i)= \\lambda_i (B v_i)\nB v_i도 A에 대한 고유공간 안에 포함된다. 만약 A의 각 고유값에 대해 1차 독립인 고유벡터들이 존재한다면, B는 이 기저에 대해 삼각 행렬(triangular form)로 표현될 수 있다. B가 대각화 가능하므로, B도 어떤 기저에서 대각 행렬로 표현된다. 그런데, 이미 A의 고유벡터들이 B에 대해서도 불변이라는 사실을 알았다. 그러므로, A와 B는 공통된 기저에서 동시에 대각화 가능하다.\n아이디어\n고유공간(Eigenspace)\n행렬 A가 주어졌을 때, 고유공간(eigenspace)E_{\\lambda}은 고윳값 \\lambda에 대응하는 모든 고유벡터들로 이루어진 부분공간이다. 즉, 고유공간 E_{\\lambda}는 다음을 만족하는 모든 벡터들의 집합이다.\nE_{\\lambda} = \\{ v \\in \\mathbb{R}^n \\mid A v = \\lambda v \\} = N(A - \\lambda I)\n고유공간은 원점을 포함하는 선형 부분공간(subspace)이다. 즉, 고유벡터뿐만 아니라 고유벡터의 모든 선형 조합도 고유공간에 속한다.\n불변 부분공간(Invariant Subspace)\n선형 연산자 T가 벡터 공간 V의 부분공간 W에 대해 다음을 만족하면, W를 T-불변(invariant under T)이라고 한다.\nT(W)\\subseteq W\n즉, W의 임의의 벡터 v에 대해, T(v)도 여전히 W안에 있어야 한다.\n동시 대각화의 의미\n따라서, A, B가 동시에 대각화 가능하다는 것은, A의 모든 고유공간이 B에 대해 불변(invariant)하다는 것을 의미한다."},"Study/Topology/Arzela-Ascoil-Theorem":{"slug":"Study/Topology/Arzela-Ascoil-Theorem","filePath":"Study/Topology/Arzela-Ascoil Theorem.md","title":"Arzela-Ascoil Theorem","links":[],"tags":[],"content":""},"Study/Topology/Baire-공간":{"slug":"Study/Topology/Baire-공간","filePath":"Study/Topology/Baire 공간.md","title":"Baire 공간(Baire Spaces)","links":[],"tags":[],"content":"빈 내부(empty interior)\nA가 빈 내부(empty interior)를 갖는다는 것은 A가 공집합을 제외하고는 X의 어떤 열린집합도 포함하지 않는다는 의미입니다. 즉, \\text{int}(A) = \\emptyset인 상태를 말합니다.\nA에 속한 어떤 점 a를 잡아도, 그 점 주변에 온전히 A에만 속하는 근방을 만들 수 없다는 것은 a의 근방에 A의 바깥, 즉 A^c의 점을 포함하게 됩니다. 따라서, A가 공집합 내부를 갖는 것은 A의 모든 점이 A^c의 극한점(limit point)에 포함됩니다.\n\\overline{A^c} =  (A^c )&#039; \\cup A^c = X\n따라서 A^c는 X에서 조밀(dense)합니다.\n성긴 집합(nowhere dense)\nA가 nowhere dense라는 것은 \\overline{A}의 내부가 공집합인 상태를 말합니다.\n\\text{int}(\\overline{A}) = \\emptyset\nBaire 공간(Baire Spaces)\n정의\nX의 닫힌집합들로 이루어진 가산 집합족(countable collection) \\{A_n\\}의 각 원소 A_n이 모두 X에서 빈 내부(empty interior)를 가질 때, 그들의 합집합 \\bigcup A_n 또한 X에서 빈 내부를 가진다.\n\\{ A_n \\}이 닫힌집합이면, A_n = \\overline{A_n}이므로, A_n은 nowhere dense 집합이다. 따라서, Baire 공간의 정의는 “X의 nowhere dense 집합들로 이루어진 가산 집합족 \\{A_n\\}이 주어졌을 때, \\bigcup_{n=1}^{\\infty} A_n은 X에서 빈 내부(empty interior)를 가진다”로 바꿀 수 있다.\n이를 이용하면 Baire 공간을 쉽게 판단할 수도 있다.\n\\text{int} \\left( \\bigcup_{n=1}^{\\infty} A_n \\right) = \\emptyset \\quad \\Rightarrow  \\quad \\bigcup_{n=1}^{\\infty} A_n \\not= X\n보조정리\n공간 X가 베르 공간인 것은, X의 열린집합들로 이루어진 임의의 가산 집합족(countable collection) \\{U_n\\}에서 각 U_n이 모두 X에서 조밀(dense)할 때, 그들의 교집합 \\bigcap U_n 또한 X에서 조밀한 것과 필요충분조건이다.1\ncategory\n어떤 집합 S가 제1 범주라는 것은, S = \\bigcup_{n=1}^{\\infty} A_n 을 만족하는, 성긴(nowhere dense) 집합들의 수열 \\{A_n\\}이 존재한다는 의미이다.\n어떤 집합 S가 제2 범주라는 것은, S가 제1 범주가 아니라는 것이다. 풀어서 쓰면 S = \\bigcup_{n=1}^{\\infty} A_n을 만족하는, 성긴(nowhere dense) 집합들의 수열 \\{A_n\\}이 존재하지 않는다는 의미다. 즉, 공간 X가 베르 공간이라는 것은, 공간 X 자기 자신이 제2 범주라는 뜻입니다.\n예시1. 실수 직선 \\mathbb{R}\n\\mathbb{R}에서 가산개의 nowhere dense 집합들 A_1, A_2, A_3, \\cdots에 대하여, \\text{int} \\left( \\bigcup_{n=1}^{\\infty} A_n \\right) \\not= \\emptyset이라 가정하면, (a, b) \\subset \\bigcup_{n=1}^{\\infty} A_n을 만족하는 a, b가 존재한다.\nA_1은 성긴 집합이므로, \\overline{A_1}이 열린구간 (a,b)를 완전히 덮을 수 없다. 따라서, (a,b) \\setminus \\overline{A_1}은 공집합이 아닌 열린집합이다.\n실수에서 공집합이 아닌 열린집합 안에는 반드시 어떤 닫힌구간이 존재하므로 (a,b) \\setminus \\overline{A_1} 안에 완전히 포함되는 닫힌구간 [a_1, b_1]을 선택할 수 있다.\n[a_1, b_1] \\subset (a,b) \\setminus \\overline{A_1}\n이제 열린구간 (a_1, b_1)에 대하여 A_2 역시 성긴 집합이므로, \\overline{A_2}는 (a_1, b_1)을 완전히 덮을 수 없다. 같은 방법으로, 이 안에 완전히 포함되는 닫힌구간 [a_2, b_2]를 선택할 수 있다.\n[a_2, b_2] \\subset (a_1, b_1) \\setminus \\overline{A_2}\n\n이 과정을 반복하면, 축소하는 닫힌구간열을 만들 수 있다.\n(a,b) \\supset [a_1, b_1] \\supset [a_2, b_2] \\supset \\cdots \\supset [a_n, b_n] \\supset \\cdots\n그리고 각각의 n에 대하여, [a_n, b_n] \\cap \\overline{A_n} = \\emptyset 이다. 교집합에 속하는 임의의 점 x를 생각해보면,\nx \\in \\bigcap_{n=1}^{\\infty} [a_n, b_n]\n\nx는 모든 n에 대해 [a_n, b_n]에 속한다. 그런데 우리는 각 [a_n, b_n]을 \\overline{A_n}과 만나지 않도록 잡았다. 따라서 x는 어떤 \\overline{A_n}에도 속하지 않으며, 당연히 어떤 A_n에도 속하지 않는다.\nx \\notin \\bigcup_{n=1}^{\\infty} A_n\n\n임의의 열린구간 (a,b) 안에 \\bigcup A_n에 속하지 않는 점 x가 존재하므로, (a, b) \\subset \\bigcup_{n=1}^{\\infty} A_n라는 가정에 모순된다. 따라서, \\text{int} \\left( \\bigcup_{n=1}^{\\infty} A_n \\right) = \\emptyset이므로, 실수 직선 \\mathbb{R}은 Baire 공간이다.\n예시 2. 유리수 \\mathbb{Q}\n유리수 \\mathbb{Q}에서 한 점 집합은 닫혀있고, 빈 내부를 갖는다.(따라서 유리수 \\mathbb{Q}는 nowhere dense 집합이다.) 유리수 \\mathbb{Q}는 자신의 한 점 집합들의 가산 합집합이므로, \\mathbb{Q}는 제1 범주이다. 따라서 \\mathbb{Q}는 Baire 공간이 아니다.\n베르 범주 정리(Baire Category Theorem)\n만약 X가 컴팩트 하우스도르프 공간(compact Hausdorff space)이거나 완비 거리 공간(complete metric space)이면, X는 베르 공간(Baire space)이다.\n증명\n빈 내부(empty interior)를 갖는 X의 닫힌집합들로 이루어진 가산 집합족 \\{A_n\\}이 주어졌을 때, 우리는 그들의 합집합 \\bigcup A_n 또한 빈 내부를 가짐을 보여야 한다. 그러므로, X의 공집합이 아닌 임의의 열린집합 U_0가 주어졌을 때, 우리는 U_0에 속하면서 A_n 중 어느 곳에도 놓이지 않는 점 x를 찾아야 한다.\n첫 번째 집합 A_1을 생각해보자. 가정에 의해, A_1은 U_0를 포함하지 않는다. 따라서 우리는 A_1에 속하지 않는 U_0의 한 점 y를 선택할 수 있다. X의 정칙성(Regularity)과 A_1이 닫힌집합이라는 사실을 이용하면, 우리는 y의 근방(neighborhood) U_1을 다음과 같이 선택할 수 있다.\n\\begin{gather*}\n\\overline{U}_1 \\cap A_1 = \\emptyset, \\\\\n\\overline{U}_1 \\subset U_0\n\\end{gather*}\n만약 X가 거리 공간(metric)이라면, 우리는 또한 U_1을 지름(diameter)이 1보다 작도록 충분히 작게 선택할 수 있다.\n일반적으로, 공집합이 아닌 열린집합 U_{n-1}이 주어졌을 때, 우리는 닫힌집합 A_n에 속하지 않는 U_{n-1}의 한 점을 선택하고, 이 점의 근방 U_n을 다음과 같이 선택한다. (단, 거리 공간의 경우, \\text{diam } U_n &lt; 1/n)\n\\begin{gather*}\n\\overline{U}_n \\cap A_n = \\emptyset, \\\\\n\\overline{U}_n \\subset U_{n-1}\n\\end{gather*}\n우리는 교집합 \\bigcap \\overline{U}_n이 공집합이 아니라고 주장한다. 이로부터 우리의 정리는 따라 나온다. 만약 x가 \\bigcap \\overline{U}_n의 점이라면, \\overline{U}_1 \\subset U_0이므로 x는 U_0 안에 있다. 그리고 각각의 n에 대해, \\overline{U}_n이 A_n과 서로소이기 때문에 점 x는 A_n에 속하지 않는다.\n\\bigcap \\overline{U}_n이 공집합이 아니라는 증명은 X가 컴팩트 하우스도르프 공간인지 혹은 완비 거리 공간인지에 따라 두 부분으로 나뉜다. 만약 X가 컴팩트 하우스도르프 공간이면, 우리는 공집합이 아닌 컴팩트 부분집합들의 축소 수열(nested sequence) \\overline{U}_1 \\supset \\overline{U}_2 \\supset \\cdots을 갖는다. 집합족 \\{\\overline{U}_n\\}은 유한 교집합 성질(finite intersection property)을 가진다. X가 컴팩트이므로, 교집합 \\bigcap \\overline{U}_n은 반드시 공집합이 아니어야 한다.\n만약 X가 완비 거리 공간이라면, 우리는 다음의 보조정리를 적용한다.\nlemma\n완비 거리 공간(complete metric space) X에서, C_1 \\supset C_2 \\supset \\cdots가 공집합이 아닌 닫힌집합들의 축소 수열(nested sequence)이라고 하자. 만약 \\text{diam } C_n \\to 0 이면, 그 교집합 \\bigcap C_n은 공집합이 아니다.\n각각의 n에 대해 x_n \\in C_n을 선택하자. n, m \\ge N일 때 x_n, x_m \\in C_N이고, N을 충분히 크게 선택함으로써 \\text{diam } C_N을 임의의 주어진 \\epsilon보다 작게 만들 수 있으므로, 수열 (x_n)은 코시 수열(Cauchy sequence)이다. 이 수열이 x로 수렴한다고 가정하자. 그러면 주어진 k에 대해, 부분수열 x_k, x_{k+1}, \\cdots 또한 x로 수렴한다. 따라서 x는 필연적으로 \\overline{C}_k = C_k에 속한다. 그러므로 원하는 대로 x \\in \\bigcap C_k이다.\nFootnotes\n\n\n빈 내부를 갖는 닫힌집합의 가산합집합이 빈 내부를 갖는다는 것은, 성긴 집합의 가산합집합이 빈 내부를 갖는다는 것과 동치다. 또한, 조밀한 열린집합의 가산교집합이 조밀하다는 것과도 동치이다. ↩\n\n\n"},"Study/Topology/The-Urysohn-Lemma":{"slug":"Study/Topology/The-Urysohn-Lemma","filePath":"Study/Topology/The Urysohn Lemma.md","title":"The Urysohn Lemma","links":[],"tags":[],"content":"유리손 보조정리(Urysohn lemma)\n정규 공간 X에서 서로소인 두 닫힌집합 A, B가 있다고 하자. 실직선 위의 닫힌구간 [a, b]에 대해, 모든 x \\in A와 모든 x \\in B에 대하여, 다음을 만족하는 연속함수\nf : X \\longrightarrow [a, b]\n가 존재한다.\n증명\n구간이 [a, b]일 때의 일반적인 경우는 [0, 1]의 경우로부터 쉽게 따라오므로, [0, 1]인 경우만 증명하면 충분하다.\n증명의 첫 번째 단계는, 정규성을 이용하여 X의 열린집합들로 이루어진 어떤 족 U_p를 구성하는 것이다. 이 집합들은 유리수들을 지표로 하여 구성되며, 이 열린집합들을 이용해 연속함수 f를 정의하게 된다.\nStep 1.\n구간 [0,1]에 속하는 모든 유리수들의 집합을 P라 하자. 우리는 P의 각 원소 p에 대해, 열린집합 U_p \\subset X를 다음 조건을 만족하도록 정의할 것이다.\np &lt; q \\quad \\Rightarrow \\quad \\overline{U_p} \\subset U_q.\n이 조건을 만족하므로, U_p들의 족은 유리수들의 표준적인 순서와 같은 방식으로 포함관계에 따라 단순히 정렬된다.\nP는 가산집합이므로, 우리는 유도(정확히는 재귀정의의 원리)를 통해 U_p들을 정의할 수 있다. P의 원소들을 어떤 순서로든 배열한 뒤, 편의를 위해 처음 두 항을 1과 0이라고 하자.\n이제 다음과 같이 U_p들을 정의한다. 우선 U_1 = X - B로 둔다. 다음으로, A는 닫힌집합이고 U_1은 열린집합이므로, 정규성에 따라 다음 조건을 만족하는 열린집합 U_0가 존재한다.\nA \\subset U_0, \\quad \\overline{U_0} \\subset U_1.\n일반적으로, P_n을 앞의 순서에서 첫 n개의 유리수로 이루어진 집합이라 하자. 귀납가정에 따라, P_n에 속하는 모든 p에 대해 U_p가 정의되어 있으며, 아래 조건을 만족한다고 하자.\n(\\ast) \\quad p &lt; q \\quad \\Rightarrow \\quad \\overline{U_p} \\subset U_q.\n이제 다음 유리수 r에 대해 U_r을 정의하고자 한다.\nP_{n+1} = P_n \\cup \\{r\\}는 유한집합이며, 실수의 표준적인 순서에서 유도된 간단한 순서를 갖는다. 유한한 단순정렬집합에서는 (가장 작은 원소와 가장 큰 원소를 제외하고) 모든 원소가 정확히 하나의 바로 앞 원소와 하나의 바로 뒤 원소를 가진다(Theorem 10.1 참고).\n이때 0은 가장 작은 원소이고, 1은 가장 큰 원소이며, r은 둘 다 아닌 경우이므로, r은 P_{n+1} 내에서 어떤 p와 q 사이에 있어 p &lt; r &lt; q를 만족한다.\n귀납가정에 따라 U_p, U_q는 이미 정의되어 있고 \\overline{U_p} \\subset U_q이다. 정규성을 사용하여 다음 조건을 만족하는 열린집합 U_r를 정의할 수 있다.\n\\overline{U_p} \\subset U_r, \\quad \\overline{U_r} \\subset U_q.\n이제 우리는 조건 (\\ast)이 P_{n+1}의 모든 쌍에 대해 성립함을 주장한다. 만약 비교되는 두 원소가 모두 P_n에 속한다면, 귀납가정에 의해 조건이 성립한다. 한 원소가 r이고 다른 하나가 P_n의 원소 s일 경우.\n\n만약 s \\le p이면,\n\n\\overline{U_s} \\subset \\overline{U_p} \\subset U_r\n\n반대로 s \\ge q이면,\n\n  \\overline{U_r} \\subset U_q \\subset U_s\n이로써 조건 (\\ast)은 P_{n+1}의 모든 쌍에 대해 성립하게 된다.\n따라서 P_{n+1}의 모든 쌍에 대해 조건 (\\ast)이 성립하게 된다. 귀납법에 의해 이제 P의 모든 유리수 p에 대해 U_p가 정의되었다.\n설명을 돕기 위해, 유리수들을 다음과 같은 표준적인 순서로 나열했다고 가정하자.\nP = \\left\\{ 1,\\ 0,\\ \\tfrac{1}{2},\\ \\tfrac{1}{3},\\ \\tfrac{2}{3},\\ \\tfrac{1}{4},\\ \\tfrac{3}{4},\\ \\tfrac{1}{5},\\ \\tfrac{2}{5},\\ \\tfrac{3}{5},\\ \\ldots \\right\\}\n\n우리가 먼저 U_0와 U_1을 정의한 다음에는, \\overline{U_0} \\subset U_{1/2}이고 \\overline{U_{1/2}} \\subset U_1이 되도록 U_{1/2}를 정의하게 된다. 그 다음으로는 U_{1/3}을 U_0와 U_{1/2} 사이에 적절히 넣고, U_{2/3}은 U_{1/2}와 U_1 사이에 위치하도록 설정한다. 이와 같은 방식으로 계속해서 진행하며, 증명의 여덟 번째 단계에서는 그림과 같은 상황이 만들어지고, 아홉 번째 단계에서는 U_{2/5}를 U_{1/3}과 U_{1/2} 사이에 맞춰 넣는 열린집합으로 택하게 된다. 이와 같은 과정을 반복한다.\n\n\nStep 2.\n이제 우리는 구간 [0,1] 안의 모든 유리수 p에 대해 U_p를 정의하였다. 이제 이를 실수 전체에 속한 유리수 p \\in \\mathbb{Q}에 대해 다음과 같이 확장한다.\nU_p = \\emptyset \\quad \\text{(if } p &lt; 0), \\qquad U_p = X \\quad \\text{(if } p &gt; 1)\n이 확장 정의 하에서도 여전히 다음 조건은 성립한다 (직접 확인할 수 있다).\np &lt; q \\quad \\Rightarrow \\quad \\overline{U_p} \\subset U_q\nStep 3.\n이제 X의 점 x에 대해 다음과 같은 집합 \\mathbb{Q}(x)를 정의하자. \\mathbb{Q}(x)는 x \\in U_p가 되는 유리수 p들의 집합이다.\n\\mathbb{Q}(x) = \\{ p \\in \\mathbb{Q} \\mid x \\in U_p \\}\n이 집합에는 0보다 작은 유리수는 포함되지 않는다. 왜냐하면 p &lt; 0일 때 U_p = \\emptyset이므로 x가 그 안에 포함될 수 없기 때문이다. 또한 이 집합에는 1보다 큰 모든 유리수가 포함된다. 왜냐하면 p &gt; 1일 때 U_p = X이므로 모든 x가 포함되기 때문이다.\n따라서 \\mathbb{Q}(x)는 [0,1] 안에 하계가 존재하는 집합이며, 그 최대 하계는 [0,1] 안의 어떤 실수이다. 이 값을 다음과 같이 정의하자.\nf(x) = \\inf \\mathbb{Q}(x) = \\inf \\{ p \\in \\mathbb{Q} \\mid x \\in U_p \\}\nStep 4.\n이제 f가 우리가 원하는 함수임을 보이자. 먼저 x \\in A일 경우, p \\ge 0인 모든 유리수에 대해 x \\in U_p이므로 \\mathbb{Q}(x)는 0 이상인 모든 유리수로 구성된다. 따라서\nf(x) = \\inf \\mathbb{Q}(x) = 0\n반면 x \\in B이면, p \\le 1인 어떤 p에 대해서도 x \\notin U_p이므로 \\mathbb{Q}(x)는 1보다 큰 유리수들로만 구성되며\nf(x) = 1\n여기까지는 쉽다. 가장 어려운 부분은 f가 연속함수임을 보이는 것이다. 이를 위해, 다음의 기본 성질 두 가지를 먼저 증명한다.\n\nx \\in \\overline{U_r} \\Rightarrow f(x) \\le r\nx \\notin U_r \\Rightarrow f(x) \\ge r\n\n1번 증명\nx \\in \\overline{U_r}이면, r &lt; s인 모든 s에 대해 x \\in U_s가 되어야 하므로, \\mathbb{Q}(x)는 r보다 큰 모든 유리수를 포함한다\nf(x) = \\inf \\mathbb{Q}(x) \\le r\n2번 증명\nx \\notin U_r이면, s &lt; r인 모든 s에 대해서도 x \\notin U_s이므로 \\mathbb{Q}(x)는 r보다 작은 유리수를 포함하지 않는다.\nf(x) = \\inf \\mathbb{Q}(x) \\ge r\n이제 f의 연속성을 증명하자. X의 한 점 x_0와, 실수 \\mathbb{R} 안의 열린구간 (c,d)가 주어졌고, f(x_0) \\in (c,d)라 하자. 우리는 x_0의 근방 U를 찾아서 f(U) \\subset (c,d)가 되게 할 것이다.\n실수 c &lt; p &lt; f(x_0) &lt; q &lt; d인 유리수 p, q를 잡는다. 이때 열린집합\nU = U_q \\setminus \\overline{U_p}\n는 x_0의 근방이 되며, 이 U에 속한 모든 점 x에 대해 f(x) \\in (c,d)가 되도록 만들어진 것이다.\n\n먼저, x_0 \\in U임을 확인하자. 이는 f(x_0) &lt; q라면 조건 (2)에 의해 x_0 \\in U_q, 그리고 f(x_0) &gt; p라면 조건 (1)에 의해 x_0 \\notin \\overline{U_p}이므로 자명하다.\n다음으로, f(U) \\subset (c, d)임을 보이자. x \\in U인 점을 하나 택하자. 그러면 x \\in U_q \\subset \\overline{U_q}이므로\n조건 (1)에 의해 f(x) \\le q이다. 또한 x \\notin \\overline{U_p}이므로 x \\notin U_p, 따라서 조건 (2)에 의해 f(x) \\ge p이다. 결국,\nf(x) \\in [p, q] \\subset (c, d)\n가 되어, 원하는 결과를 얻는다.\n정의\n위상공간 X의 두 부분집합 A, B가 주어졌을 때, 만약 f : X \\to [0,1]인 연속함수 f가 존재하여\nf(A) = \\{0\\}, \\quad f(B) = \\{1\\}\n이 되면, 우리는 A와 B가 연속함수에 의해 분리될 수 있다(can be separated by a continuous function)고 말한다."},"Study/Topology/Topology-Knowledge-Graph":{"slug":"Study/Topology/Topology-Knowledge-Graph","filePath":"Study/Topology/Topology Knowledge Graph.md","title":"Topology Knowledge Graph","links":[],"tags":["mermaid"],"content":"Separation Axioms"},"Study/Topology/limit-point-compactness":{"slug":"Study/Topology/limit-point-compactness","filePath":"Study/Topology/limit point compactness.md","title":"limit point compactness","links":[],"tags":[],"content":"limit point compact\nA space X is said to be limit point compact if every inﬁnite subset of X has a limit point.\nFréchet\nMaurice René Fréchet (1878–1973)는 프랑스의 수학자이며, 현대 위상수학과 함수해석학의 창시자 중 한 명입니다.\n\n“프레셰 공간(Fréchet space)”이라는 용어에서도 그의 이름을 본 적 있을 수 있습니다.\n그는 추상 위상 공간 개념을 정립했고, 함수의 수렴이나 극한 개념을 집합 위에서 일반화하려고 시도했습니다.\n그의 연구는 위상수학의 “초기 형식화”에 큰 영향을 주었습니다.\n\nBolzano–Weierstrass Property\n\n유계이고 무한한 실수열은 수렴하는 부분수열을 갖는다.\n\nSequentially compact\nA space X is said to be sequentially compact if every sequence in X has a convergent subsequence whose limit is in X.\nminimal uncountable well-ordered set S_\\Omega\n최소비가산 정렬집합 (Minimally Uncountable Well-ordered Set)\n\n보통 기호로는 S_\\Omega 또는 [0, \\omega_1)으로 표현합니다.\n이는 모든 가산 순서수(countable ordinals)들의 집합입니다.\n이 집합 자체는 \\omega_1 (첫 번째 비가산 순서수)을 포함하지 않습니다.\n이전 질문에서 다루었듯이, [0, \\omega_1)은 컴팩트하지 않습니다. 하지만 극한점 컴팩트하고 수열 컴팩트합니다.\n\n\\Omega = [0, \\omega_1]\n\n이는 최소비가산 정렬집합 [0, \\omega_1)에 가장 큰 원소(maximum element)로 \\omega_1을 추가한 집합입니다.\n즉, [0, \\omega_1] = [0, \\omega_1) \\cup \\{\\omega_1\\} 입니다.\n이 마지막 점 \\omega_1의 추가가 바로 컴팩트성을 갖게 만드는 핵심적인 차이입니다.\n"},"Study/Topology/locally-compact":{"slug":"Study/Topology/locally-compact","filePath":"Study/Topology/locally compact.md","title":"locally compact","links":[],"tags":[],"content":"컴팩트 하우스도르프인데 거리화 불가능한 공간\n가장 대표적인 예시 중 하나는 최소비가산 순서수 공간에 최대 원소를 추가한 공간, 즉 \\Omega = [0, \\omega_1] 입니다. 여기서 \\omega_1은 첫 번째 비가산 순서수입니다.\n하우스도르프 (Hausdorff) 공간\n순서 위상(order topology)을 갖는 모든 전순서집합(totally ordered set)은 하우스도르프 공간입니다. 임의의 서로 다른 두 점 \\alpha, \\beta \\in [0, \\omega_1] (예를 들어 \\alpha &lt; \\beta)에 대해, \\alpha와 \\beta 사이에 다른 원소 \\gamma가 존재한다면 (예: \\gamma = \\alpha + 1 또는 \\beta의 직전 원소), (\\leftarrow, \\gamma) 와 (\\gamma, \\rightarrow) 와 같이 서로소인 열린 근방을 찾을 수 있습니다. 만약 \\beta = \\alpha + 1 이라면, (\\leftarrow, \\beta) 와 (\\alpha, \\rightarrow) (또는 더 작은 적절한 열린 구간)을 사용하여 분리할 수 있습니다.\n컴팩트 (Compact) 공간\n[0, \\omega_1]은 컴팩트합니다. 이를 보이는 일반적인 방법은 다음과 같습니다.\n\n[0, \\omega_1]의 임의의 열린 덮개 \\{U_i\\}_{i \\in I}를 생각합니다.\n\\omega_1은 어떤 U_k에 속해야 합니다. U_k는 열린집합이므로, \\omega_1을 포함하는 어떤 열린 구간 (\\alpha, \\omega_1] (여기서 \\alpha &lt; \\omega_1)을 포함합니다.\n이제 닫힌 부분집합 [0, \\alpha]를 고려합니다. 이 집합은 이전 질문에서 다룬 [0, \\omega_1)과 유사하게 생각할 수 있는데, 모든 원소가 가산 순서수인 정렬 집합의 초기 부분입니다. 하지만 여기서 중요한 점은 [0, \\alpha]는 \\omega_1보다 “작은” 부분이라는 것입니다.\n컴팩트성을 증명하는 표준적인 방법은 최소 원소 원리(well-ordering principle)를 이용합니다. 만약 유한 부분덮개가 존재하지 않는다고 가정하면, 덮이지 않는 가장 작은 원소 \\beta \\in [0, \\omega_1]가 존재해야 합니다.\n\\beta = 0일 수 없습니다. (0은 어떤 열린집합에 포함되므로)\n\\beta가 극한 순서수가 아니라면 (즉, 직전 원소 \\beta-1이 존재한다면), \\beta-1은 어떤 유한 부분덮개로 덮여야 하고, \\beta 자신도 어떤 열린집합에 속하므로 모순이 발생합니다.\n\\beta가 극한 순서수라면, \\beta를 포함하는 어떤 열린집합 U_j는 (\\gamma, \\beta] 형태의 구간을 포함해야 합니다 (\\gamma &lt; \\beta). 가정에 의해 \\gamma는 유한 부분덮개로 덮여야 하는데, 이는 \\beta도 덮일 수 있음을 의미하여 모순입니다.\n따라서 [0, \\omega_1]은 컴팩트합니다.\n\n거리화 불가능 (Non-metrizable) 공간\n[0, \\omega_1]은 거리화 가능하지 않습니다. 그 이유는 여러 가지가 있지만, 대표적인 이유는 다음과 같습니다.\n\n\n제1가산공리(First-countable axiom)를 만족하지 않습니다: 점 \\omega_1에서 가산 국소 기저(countable local base)가 존재하지 않습니다. \\omega_1의 모든 근방은 (\\alpha, \\omega_1] 형태의 구간을 포함해야 합니다 (어떤 \\alpha &lt; \\omega_1에 대해). 만약 \\omega_1에서 가산 국소 기저 \\{( \\alpha_n, \\omega_1 ] \\}_{n \\in \\mathbb{N}}가 존재한다면, \\alpha^* = \\sup_{n \\in \\mathbb{N}} \\alpha_n을 생각할 수 있습니다. 가산 개의 가산 순서수들의 상한은 여전히 가산 순서수이므로 \\alpha^* &lt; \\omega_1 입니다. 그러면 (\\alpha^*, \\omega_1]은 \\omega_1의 근방이지만, 어떤 n에 대해서도 (\\alpha_n, \\omega_1] \\not\\subseteq (\\alpha^*, \\omega_1] 이므로, 이는 가산 국소 기저가 될 수 없습니다. 거리화 가능 공간은 항상 제1가산공리를 만족해야 하므로, [0, \\omega_1]은 거리화 가능하지 않습니다.\n\n\n분해 불가능(Non-separable)합니다: 거리화 가능한 컴팩트 공간은 분해 가능(separable, 즉 가산 조밀 부분집합을 가짐)해야 합니다. 하지만 [0, \\omega_1]은 분해 가능하지 않습니다. 만약 D \\subseteq [0, \\omega_1]가 가산 조밀 부분집합이라면, D의 모든 원소는 가산 순서수입니다. \\sup(D) = \\alpha &lt; \\omega_1가 됩니다. 그러면 (\\alpha, \\omega_1]은 공집합이 아닌 열린집합인데 D와 만나지 않으므로, D는 조밀하지 않습니다.\n\n\n또 다른 유명한 예시로는 “긴 직선 (Long Line)“의 컴팩트화 버전이나, 티호노프 판 (Tychonoff Plank) 등이 있습니다."},"Study/Topology/국소-유한(locally-finite)":{"slug":"Study/Topology/국소-유한(locally-finite)","filePath":"Study/Topology/국소 유한(locally finite).md","title":"국소 유한(locally finite)","links":[],"tags":[],"content":"국소 유한 (Locally Finite)\n어떤 위상 공간 (X, \\mathcal{T})의 부분\n집합들의 모음 \\mathcal{A} = \\{A_i\\}_{i \\in I}이 국소 유한이라는 것은,\n\n공간 X의 모든 점 x에 대해, x를 포함하는 어떤 열린 근방(open neighborhood) U_x가 존재하여, 이 U_x가 \\mathcal{A}의 원소들 중 유한개하고만 만난다.\n\n라는 의미입니다. 즉, U_x \\cap A_i \\neq \\emptyset 인 A_i들의 개수가 유한하다는 뜻입니다.\n직관적으로 집합들의 모음이 국소 유한하다는 것은, 공간 전체를 보면 무한히 많은 집합이 있을 수 있지만, 특정 점 주변을 확대해서 보면 유한한 개수만 보인다는 개념입니다.\n가산 국소 유한 (Countably Locally Finite or \\sigma-Locally Finite)\n어떤 위상 공간 (X, \\mathcal{T})의 부분 집합들의 모음 \\mathcal{A} = \\{A_i\\}_{i \\in I}이 가산 국소 유한이라는 것은,\n\n\\mathcal{A}가 가산개의 국소 유한 모음들의 합집합으로 표현될 수 있다.\n\n라는 의미입니다. 즉, \\mathcal{A} = \\bigcup_{j=1}^{\\infty} \\mathcal{A}_j 와 같이 쓸 수 있고, 여기서 각 \\mathcal{A}_j는 국소 유한 모음이라는 것입니다.\n가산 국소 유한은 국소 유한보다 훨씬 더 광범위한 집합들의 모음을 포괄하는 개념입니다. 특정 점 주변을 확대해도 무한히 많은 집합이 나타날 수 있지만, 그 무한한 집합들을 셀 수 있는(가산) 묶음들로 나누었을 때, 각 묶음은 국소 유한하다는 것입니다.\n\\mathbb{R}의 모든 열린 구간들의 모음\n위상 공간 (X, \\mathcal{T}) = (\\mathbb{R}, \\mathcal{U}) (여기서 \\mathcal{U}는 \\mathbb{R}의 보통 위상)을 생각하고, 집합족 \\mathcal{A}를 \\mathbb{R}의 모든 열린 구간들의 모음이라고 합시다.\n\\mathcal{A} = \\{ (a, b) \\mid a, b \\in \\mathbb{R}, a &lt; b \\}\n\n\\mathcal{A}는 국소 유한은 아니지만 가산 국소 유한입니다.\n\\mathcal{A}는 국소 유한이 아니다.\n\n국소 유한의 정의: 공간 X의 모든 점 x에 대해, x를 포함하는 어떤 열린 근방 U_x가 존재하여, 이 U_x가 \\mathcal{A}의 원소들 중 유한개하고만 만난다.\n\n이 정의에 따라 \\mathcal{A}가 국소 유한이 아님을 보여보겠습니다.\n예를 들어, x=0이고 U_x = (-1, 1)이라고 가정해 봅시다. \\mathcal{A}에 속하는 다음과 같은 열린 구간들을 생각해 보면\n\\mathcal{A}_k = \\left( -\\frac{1}{k}, \\frac{1}{k}\\right) \\quad (k=1, 2, 3, \\cdots)\n이 모든 구간들은 U_x = (-1, 1) 안에 포함되며, 따라서 U_x와 교집합이 공집합이 아닙니다. 그리고 이 구간들은 무한히 많습니다. 마찬가지로, U_x가 아무리 작더라도, 예를 들어 U_x = (x-\\epsilon, x+\\epsilon)이더라도, 이 구간 안에 무한히 많은 형태의 열린 구간 (예: (x-\\epsilon/k, x+\\epsilon/k))이 존재하며, 이는 U_x와 교차합니다.\n따라서 어떤 점 x를 잡더라도, x의 임의의 열린 근방은 \\mathcal{A}의 무한히 많은 원소와 만납니다. 그러므로 \\mathcal{A}는 국소 유한이 아닙니다.\n\\mathcal{A}는 가산 국소 유한입니다.\n\n가산 국소 유한의 정의: \\mathcal{A}가 가산개의 국소 유한 모음들의 합집합으로 표현될 수 있습니다. 즉, \\mathcal{A} = \\bigcup_{j=1}^{\\infty} \\mathcal{A}_j 이고, 각 \\mathcal{A}_j는 국소 유한입니다.\n\n\\mathbb{R}의 모든 열린 구간들의 모음 \\mathcal{A}를 다음과 같이 분할합니다.\n\\mathcal{A}_n = \\{ (a, b) \\in \\mathcal{A} \\mid b - a \\ge 1/n \\}\n길이가 1/n 이상인 모든 열린 구간들의 모음 \\mathcal{A}_n이 국소 유한임을 보이겠습니다.\n임의의 점 x \\in \\mathbb{R}에 대해 근방 U_x = (x-1/(2n), x+1/(2n))에 대하여 구간 (a,b) \\in \\mathcal{A}_n이 U_x와 만난다면, a &lt; x + 1/(2n) 이고 b &gt; x - 1/(2n) 이어야 합니다. b - a \\ge 1/n 이므로, 이를 결합하면 a &lt; x + 1/(2n) 이고 a + 1/n \\le b 입니다. 따라서 a &lt; x + 1/(2n) 이고 x - 1/(2n) &lt; a + 1/n 입니다. 정리하면 x - 3/(2n) &lt; a &lt; x + 1/(2n) 마찬가지로 b에 대해서는 x - 1/(2n) &lt; b &lt; x + 1/(2n) + 1/n = x + 3/(2n) 입니다.\n따라서 U_x와 만나는 모든 구간 (a,b) \\in \\mathcal{A}_n은 다음을 만족합니다.\nx - 3/(2n) &lt; a &lt; b &lt; x + 3/(2n)\n구간 (x - 3/(2n), x + 3/(2n))의 길이는 3/n입니다. 이 유한한 구간 안에서 서로 다른 길이 \\ge 1/n인 열린 구간들의 개수는 최대 3개를 넘을 수 없습니다. 왜냐하면 각 구간의 길이가 최소 1/n이므로, 3개보다 많으면 총 길이가 3/n을 초과하기 때문입니다.\n마지막으로 임의의 열린 구간 (a,b) \\in \\mathcal{A}에 대해 L = b-a &gt; 0이므로, 아르키메데스 성질에 의해 1/n \\le L을 만족하는 자연수 n이 존재합니다. 따라서 (a,b) \\in \\mathcal{A}_n이고, \\mathcal{A} = \\bigcup_{n=1}^{\\infty} \\mathcal{A}_n입니다. 따라서 \\mathcal{A}는 가산개의 국소 유한 집합족들의 합집합이므로 가산 국소 유한입니다.\n세분(Refinement)\n세분(refinement)은 주어진 집합족(collection of subsets) \\mathcal{A}에 대해, 더 ‘미세한’ 집합족 \\mathcal{B}를 만들어서, \\mathcal{A}의 구조를 더 잘 파악하거나, 더 정밀하게 다루고자 할 때 사용합니다. 예를 들어, 어떤 공간 X의 open cover(열린 덮개) \\mathcal{A}가 주어졌을 때, 이 덮개를 더 작은 열린 집합들로 이루어진 open refinement(열린 세분) \\mathcal{B}로 바꿔서, 각 B \\in \\mathcal{B}가 어떤 A \\in \\mathcal{A}에 포함되도록 할 수 있습니다. 이 과정은 Compactness(콤팩트성) 같은 위상수학의 중요한 성질을 증명할 때 필수적입니다.\n\nX라는 공간의 부분집합들의 모임 \\mathcal{A}가 있다고 하자. X의 부분집합들의 모임 \\mathcal{B}가 \\mathcal{A}의 세분(refinement)이라고 하거나, \\mathcal{B}가 \\mathcal{A}를 세분한다고 말하는 것은, \\mathcal{B}의 각 원소 B에 대해 B를 포함하는 \\mathcal{A}의 원소 A가 존재함을 의미한다. 만약 \\mathcal{B}의 원소들이 모두 열린 집합(open set)이라면, \\mathcal{B}를 \\mathcal{A}의 열린 세분(open refinement)이라고 부른다. 만약 \\mathcal{B}의 원소들이 모두 닫힌 집합(closed set)이라면, \\mathcal{B}를 \\mathcal{A}의 닫힌 세분(closed refinement)이라고 부른다.\n\nLemma\n거리화 가능 공간 X의 임의의 열린 덮개(open covering) \\mathcal{A}가 있을 때, \\mathcal{A}를 세분(refine)하는 가산 국소 유한(countably locally finite) 열린 덮개 \\mathcal{E}가 존재한다.\n가산 국소 유한 기저(Countably Locally Finite Basis)\n위상 공간 (X, \\mathcal{T})의 부분 집합들의 모음 \\mathcal{B}가 가산 국소 유한 기저(countably locally finite basis)라는 것은 \\mathcal{B}가 (X, \\mathcal{T})의 기저이면서 동시에 가산 국소 유한 집합족이라는 조건을 모두 만족하는 경우를 지칭합니다.\n\n\n\\mathcal{B}는 위상 공간 (X, \\mathcal{T})의 기저(basis)여야 합니다. 어떤 집합족 \\mathcal{B} \\subseteq \\mathcal{T}가 위상 \\mathcal{T}의 기저가 된다는 것은 임의의 열린 집합(open set) U \\in \\mathcal{T}와 그 안의 임의의 점 x \\in U에 대하여, x \\in B \\subseteq U를 만족하는 B \\in \\mathcal{B}가 존재해야 합니다. 이는 모든 열린 집합 U \\in \\mathcal{T}가 \\mathcal{B}의 원소들의 합집합으로 표현될 수 있다는 것과 동치입니다. 즉, \\mathcal{B}의 원소들은 모두 열린 집합이어야 하며, 이들을 이용하여 X의 모든 열린 집합을 생성할 수 있어야 합니다.\n\n\n\\mathcal{B}는 가산 국소 유한(countably locally finite) 집합족이어야 합니다. 집합족 \\mathcal{B}가 가산 국소 유한이라는 것은, \\mathcal{B}를 다음과 같이 국소 유한인 집합족 \\mathcal{B}_n들의 가산 합집합으로 표현할 수 있다는 의미입니다.\n\n\n\\mathcal{B} = \\bigcup_{n=1}^{\\infty} \\mathcal{B}_n\n여기서 각각의 \\mathcal{B}_n (n \\in \\mathbb{N})은 국소 유한(locally finite) 집합족입니다. 집합족 \\mathcal{B}_n이 국소 유한이라는 것은, X 안의 모든 점 x \\in X에 대하여, x의 적절한 열린 근방(open neighborhood) N_{x,n}이 존재하여, 이 N_{x,n}과 교집합을 가지는 \\mathcal{B}_n의 원소의 개수가 유한하다는 것을 의미합니다. 즉, 집합 \\{ B \\in \\mathcal{B}_n \\mid N_{x,n} \\cap B \\neq \\emptyset \\}의 원소의 개수가 유한개라는 것입니다.\n여기서 중요한 점은, 각각의 \\mathcal{B}_n이 그 자체로 (X, \\mathcal{T})의 기저일 필요는 없다는 것입니다. 기저의 성질은 \\mathcal{B}_n들의 합집합인 \\mathcal{B} 전체에 대해 요구되는 조건입니다. 즉, \\mathcal{B} = \\bigcup_{n=1}^{\\infty} \\mathcal{B}_n이 (X, \\mathcal{T})의 기저가 되어야 하며, 동시에 각 구성 요소인 \\mathcal{B}_n은 국소 유한의 성질을 만족해야 합니다. 각각의 \\mathcal{B}_n은 단순히 열린 집합들의 모임일 수 있으며, 이들이 모여 전체 기저 \\mathcal{B}를 형성하는 것입니다.\n가산기저와 가산국소유한기저\n가산 기저(countable basis)를 가지는 위상 공간은 항상 가산 국소 유한 기저(countably locally finite basis)를 가집니다.\n이를 증명하기 위해, 위상 공간 (X, \\mathcal{T})가 가산 기저 \\mathcal{B}를 가진다고 가정해 보겠습니다. \\mathcal{B}가 가산 기저이므로, 우리는 \\mathcal{B}의 원소들을 다음과 같이 셀 수 있습니다. (단, B_n (n \\in \\mathbb{N})은 열린 집합)\n\\mathcal{B} = \\{B_1, B_2, B_3, \\dots, B_n, \\cdots \\} \n이제 우리는 \\mathcal{B}를 국소 유한(locally finite) 집합족들의 가산 합집합으로 표현해야 합니다.\n다음과 같이 각 n \\in \\mathbb{N}에 대하여 집합족 \\mathcal{B}_n을 정의합니다.\n\\mathcal{B}_n = {B_n} \n즉, \\mathcal{B}_n은 단 하나의 원소 B_n만을 가지는 집합족입니다. 그러면 \\mathcal{B}는 이 \\mathcal{B}n들의 가산 합집합으로 표현될 수 있습니다.\n\\mathcal{B}  = \\bigcup_{n=1}^{\\infty} \\mathcal{B}_n\n\\mathcal{B}_n은 단 하나의 원소 B_n만을 가지고 있으므로 임의의 열린 근방 N_x에 대하여, N_x와 교집합을 가지는 \\mathcal{B}_n의 원소는 B_n이거나(N_x \\cap B_n \\neq \\emptyset), 혹은 없을 수도(N_x \\cap B_n = \\emptyset)있습니다. 어느 경우든, N_x와 교집합을 가지는 \\mathcal{B}_n의 원소의 개수는 유한하므로, \\mathcal{B}는 가산 국소 유한 기저의 정의를 만족합니다."},"Study/Topology/국소연결-(locally-connected)":{"slug":"Study/Topology/국소연결-(locally-connected)","filePath":"Study/Topology/국소연결 (locally connected).md","title":"국소연결 (locally connected)","links":[],"tags":[],"content":"성분 (Component)\n위상공간 X에서 성분이란 극대 연결 부분집합을 의미합니다. 다시 말해, 어떤 부분집합 C가 연결되어 있고, C를 진부분집합으로 포함하는 더 큰 연결 부분집합이 존재하지 않을 때 C를 성분이라고 부릅니다. 전체 공간 X의 성분들은 서로 분리되어 있으며, 이들의 합집합은 X 전체가 됩니다.\n어떤 성분 C를 생각해봅시다. C의 닫힘(closure) \\overline{C}를 고려하면, \\overline{C}는 C를 포함하는 닫힌 집합입니다. 여기서 A \\subseteq B \\subseteq \\overline{A}인 임의의 집합 B도 연결되어 있으므로, C의 성분은 \\overline{C}의 성분과 같습니다. 즉, C의 성분은 \\overline{C}의 성분과 일치합니다. 이로 인해, 성분은 항상 닫힌 집합이 됩니다.\n각 성분은 닫힌집합이므로, 유한 개의 닫힌집합의 합집합인 X\\setminus C_i = \\bigcup_{j\\neq i} C_j 역시 닫힌집합입니다. 따라서 C_i는 닫힌집합의 여집합이므로 열린집합이 됩니다. 결과적으로 위상공간의 성분이 유한개일 때, 각 성분은 닫힌집합인 동시에 열린집합(clopen set)이 됩니다.\n국소연결 공간(Locally Connected Space)\n국소연결 공간은 x를 포함하는 열린 집합 U에 대해 연결되어있는 열린 집합 V가 존재하여 x \\in V \\subseteq U인 경우를 말합니다.\nX가 국소연결이기 위한 필요충분조건은 X의 모든 열린집합 U에 대해 U의 성분이 X에서 열린집합인 경우입니다."},"Study/Topology/근방(Neighborhood)":{"slug":"Study/Topology/근방(Neighborhood)","filePath":"Study/Topology/근방(Neighborhood).md","title":"근방(Neighborhood)","links":["Study/Topology/근방(Neighborhood)"],"tags":[],"content":"위상수학에서 근방(Neighborhood)의 뜻을 엄밀히 정의하면 다음과 같습니다.\n정의. (X,\\tau)를 위상 공간이라 하고, x\\in X를 한 점이라 하자.\n집합 N\\subset X이 x의 근방(neighborhood)이라고 부르려면,\n\\exists\\,U\\in\\tau\\quad\\text{such that}\\quad x\\in U\\subset N\n즉, N 내에 x를 포함하는 어떤 열린집합 U가 꼭 있어야 합니다.\n\n이때 열린집합 U를 x의 열린 근방(open neighborhood)이라 합니다.\n만약 N 자체가 이미 열린집합이라면, “N는 x의 근방”과 “N는 x의 열린 근방”이 동치입니다.\n\n또한, 집합 A\\subset X 전체의 근방을 정의할 때는,\nN\\subset X\\quad\\text{이 $A$의 근방}\\quad\\Longleftrightarrow\\quad\n\\exists\\,U\\in\\tau\\;\\bigl(A\\subset U\\subset N\\bigr)\n즉 N 안에 A를 포함하는 어떤 열린집합 U가 있으면 N을 A의 근방이라 합니다.\n이 정의를 통해 “어떤 점이나 부분집합 주위의 충분히 작은 ‘열린’ 공간”을 가리켜 근방이라 부르며, 이를 바탕으로 연속성·국소연결성·경로연결성 등을 정의합니다."},"Study/Topology/나가타-스미르노프-거리화-정리":{"slug":"Study/Topology/나가타-스미르노프-거리화-정리","filePath":"Study/Topology/나가타-스미르노프 거리화 정리.md","title":"나가타-스미르노프 거리화 정리(Nagata-Smirnov metrization theorem)","links":[],"tags":[],"content":"나가타-스미르노프 거리화 정리(Nagata-Smirnov metrization theorem)\n나가타-스미르노프 거리화 정리는 위상공간이 거리화 가능(Metrizable)하기 위한 필요충분조건으로, 정칙공간(Regular space)과 국소 유한 기저(Locally finite basis)의 존재를 제시합니다.\n나가타-스미르노프 거리화 정리의 증명은 다음과 같이 네 단계로 세분화할 수 있습니다.\n\n첫 번째 단계에서는 정칙공간(Regular space) X가 국소 유한 기저(Locally finite basis) \\mathcal{B}를 가진다고 가정합니다.\n두 번째 단계에서는 \\mathcal{B}의 각 원소 B에 대해 닫힌집합(Closed set) F_B와 열린집합(Open set) U_B를 적절히 선택하여 F_B \\subset B \\subset U_B가 되도록 하고, Urysohn의 보조정리(Urysohn’s lemma)를 이용해 X에서 F_B와 X \\setminus U_B를 구분하는 연속함수 f_B : X \\to [0,1]를 정의합니다.\n세 번째 단계에서는 이 함수들의 집합 \\{f_B\\}_{B \\in \\mathcal{B}}를 이용하여 X 위에 거리함수(Metric) d(x,y) = \\sum_{B \\in \\mathcal{B}} 2^{-n(B)} |f_B(x) - f_B(y)|를 정의합니다. 여기서 n(B)는 \\mathcal{B}의 원소에 일대일로 대응되는 자연수입니다.\n네 번째 단계에서는 이 거리함수 d가 X의 원래 위상과 일치함을 보임으로써, X가 거리화 가능함을 증명합니다.\n\nG_\\delta\nG_\\delta 집합은 가산개의 닫힌집합의 교집합으로 정의됩니다. 여기서 G 는 독일어 “Gebiet”(영역, open set)을, \\delta는 그리스 문자로 “Durchschnitt”(교집합, intersection)을 의미합니다.\nG_\\delta 집합의 예\nFirst countable(제1가산공간)이고 Hausdorff(하우스도르프)인 위상공간 X에서 임의의 한 점 집합 \\{x\\}이 G_\\delta 집합이 됩니다.\n실수 전체 집합 \\mathbb{R}에서 열린구간 (-1/n, 1/n)의 무한 교집합을 생각해봅니다.\n\\bigcap_{n=1}^{\\infty} \\left(-\\frac{1}{n}, \\frac{1}{n}\\right)\n각 n에 대해 (-1/n, 1/n)은 0을 중심으로 한 점점 더 좁아지는 열린구간입니다. n이 커질수록 구간의 길이는 2/n으로 점점 작아집니다. 임의의 x \\neq 0에 대해, |x| &gt; 0이므로, 충분히 큰 n에 대해 1/n &lt; |x|가 됩니다. 이때 x \\notin (-1/n, 1/n)이므로, x는 교집합에 포함되지 않습니다. 오직 x = 0만이 모든 n에 대해 0 \\in (-1/n, 1/n)을 만족합니다.\n따라서\n\\bigcap_{n=1}^{\\infty} \\left(-\\frac{1}{n}, \\frac{1}{n}\\right) = \\{0\\}\n입니다. 즉, 이 교집합은 공집합이 아니고, 오직 0만을 포함하는 한 점 집합입니다."},"Study/Topology/분리-공리-(Separation-Axioms)":{"slug":"Study/Topology/분리-공리-(Separation-Axioms)","filePath":"Study/Topology/분리 공리 (Separation Axioms).md","title":"분리 공리 (Separation Axioms)","links":[],"tags":[],"content":"수학자들은 어떤 집합에 위상을 부여할 때, 그 위상이 특정 공리를 만족하도록 선택함으로써, 해당 공간에 대해 많은 정보를 미리 알 수 있기를 원한다. 이를 위해 일반적인 위상공간의 공리 외에도, 추가적인 조건을 요구하는 것이 가능하며, 그 대표적인 예가 바로 분리 공리(Separation Axioms)이다.\n이러한 공리들은 서로 다른 점이나 닫힌집합을 열린집합으로 분리할 수 있는 정도를 규정하며, 다음과 같이 정의된다. 위상공간 (X, \\tau)에 대해 다음 조건들을 고려할 수 있다:\n\nT_0 공리는 서로 다른 두 점 a, b \\in X에 대해, a만 포함하거나 b만 포함하는 열린집합 O가 존재하는지를 요구한다. 즉, a \\in O, b \\notin O 또는 b \\in O, a \\notin O인 경우가 있어야 한다.\nT_1 공리는 각 점 a와 b에 대해, a를 포함하되 b는 포함하지 않는 열린집합과, b를 포함하되 a는 포함하지 않는 열린집합이 각각 존재해야 한다.\nT_2 공리, 즉 하우스도르프(Hausdorff) 공리는 두 점 a, b를 각각 포함하는 열린집합 O_a, O_b가 존재하며 이 둘이 서로소(O_a \\cap O_b = \\varnothing)가 되도록 요구한다.\nT_3 공리는 닫힌집합 A와 A에 속하지 않는 점 b에 대해, A와 b를 각각 포함하는 서로소인 열린집합이 존재함을 요구한다.\nT_4 공리는 서로소인 닫힌집합 A, B에 대해, A와 B를 각각 포함하는 서로소 열린집합이 존재해야 한다.\nT_5 공리는 서로 분리된 집합 A, B에 대해, 마찬가지로 서로소인 열린 근방이 존재해야 함을 의미한다. 여기서 분리되었다는 것은 A \\cap \\overline{B} = \\overline{A} \\cap B = \\varnothing인 경우를 말한다.\n\n공간이 이러한 공리들 중 하나라도 만족한다면, 우리는 그 공간을 T_i 공간이라 부른다. T_0 공간은 Kolmogorov 공간, T_1 공간은 Fréchet 공간, 그리고 T_2 공간은 일반적으로 Hausdorff 공간이라고 불린다.\n이러한 분리 공리는 위상공간의 일반 공리들과는 독립적으로 존재할 수 있다. 예를 들어, 어떤 위상공간은 이 공리들 중 어느 것도 만족하지 않을 수 있다 (예: Double Pointed Countable Complement Topology). 그러나 이 공리들 사이에는 포함 관계가 존재한다. 예를 들어, T_2는 T_1을 함의하며, T_1은 T_0를 함의한다.\n하지만 그 역은 항상 성립하지 않는다. 예를 들어, T_0이지만 나머지 공리를 만족하지 않는 공간이 존재한다 (예: Overlapping Interval Topology). 또, T_1이지만 T_2 이상은 만족하지 않는 공간도 있으며 (예: Finite Complement Topology on a Countable Space), T_2 공간이면서도 T_3, T_4, T_5는 만족하지 않는 공간도 존재한다 (예: Irrational Slope Topology).\n한편, T_3 또는 T_4 공리가 다른 분리 공리들을 함의하지 않으며 (예: 각각 Tychonoff Corkscrew, Thomas’ Corkscrew), T_2 공간이면서 컴팩트하면 T_4가 되지만 T_5는 보장되지 않는다 (예: Tychonoff Plank). 이와 달리 T_5 공리는 T_4를 항상 포함하지만, 다른 공리들과는 여전히 독립적이다.\n이러한 구조는 위상공간을 분류할 때 매우 유용하다. 각각의 분리 공리는 위상의 세밀한 구조를 설명하며, 특히 함수의 연속성, 닫힘 조건, 컴팩트성 등의 개념과 밀접한 관계를 갖는다.\n정칙 공간과 정규 공간 (Regular and Normal Spaces)\n분리 공리 그 자체보다 더 중요한 것은, 이러한 공리를 활용하여 점점 더 강력한 성질을 정의할 수 있다는 점이다. 예를 들어, 한 공간이 T_3이며 동시에 T_0일 때, 그것은 T_2가 된다. 반면 T_4이고 동시에 T_1이면, 그것은 T_3 공간이 된다. 이 중 전자의 경우를 정칙 공간(regular space) 이라 하고, 후자의 경우를 정규 공간(normal space) 이라 부른다.\n구체적으로 말하면, 위상공간 X가 다음 조건을 만족할 때:\n\nT_0이면서 T_3이면, 정칙(regular)이라 하고,\nT_1이면서 T_4이면, 정규(normal)이라 하며,\nT_1이면서 T_5이면, 완전정규(completely normal)이라 한다.\n\n이러한 정의들 사이에는 다음과 같은 포함 관계가 성립한다:\n\\text{완전정규} \\Rightarrow \\text{정규} \\Rightarrow \\text{정칙} \\Rightarrow \\text{하우스도르프} \\Rightarrow T_1 \\Rightarrow T_0\n그러나 이러한 포함 관계의 역은 일반적으로 성립하지 않는다. 다음의 예시는 각각의 역이 성립하지 않음을 보여주는 반례들이다:\n\nT_4이지만 T_1이 아닌 경우: Tychonoff Plank\n정칙이지만 완전정칙이 아닌 경우: Tychonoff Corkscrew\n완전정칙이지만 정규은 아닌 경우: Deleted Tychonoff Corkscrew\n하우스도르프이지만 완전하우스도르프는 아닌 경우: Irrational Slope Topology\nT_1이지만 T_0 이외 공리는 만족하지 않는 경우: Finite Complement Topology on a Countable Space\nT_0이지만 그 외 공리는 만족하지 않는 경우: Overlapping Interval Topology\n\n문헌에 따라 “정칙(regular)“과 “정규(normal)“의 용법은 다를 수 있다. 일부 문헌에서는 이를 각각 T_3, T_4 공간과 동일시하지만, 여기에서는 “정칙”과 “정규”이라는 고유한 용어를 사용하여 혼동을 피하고자 한다.\n완전 하우스도르프 공간\n분리 성질의 변형 가운데 하나는, T_2, T_3, T_4 공리에서 열린집합 대신 닫힌 근방(closed neighborhood) 을 사용하는 방식이다.\n정규 공간에서는, 열린집합 O가 닫힌집합 A를 포함할 경우 항상 O 안에 A의 닫힌 근방이 존재한다. 예를 들어 A, B가 서로소인 닫힌집합이면, 이를 포함하는 열린집합 O_A, O_B에 대해 닫힌 근방 \\overline{O}_A, \\overline{O}_B 역시 서로소가 된다:\n\\overline{O}_A \\cap \\overline{O}_B = \\varnothing\n그러므로 정규성의 정의에서 열린집합 대신 닫힌 근방을 사용하는 경우도 같은 공간 범주를 정의한다.\n하지만 하우스도르프 공간 중에는 두 점을 분리하는 닫힌 근방이 존재하지 않는 경우도 있으므로, 다음과 같은 새로운 공리를 도입한다:\nT_{2\\frac{1}{2}} \\text{ 공리: 두 점 } a, b \\in X \\text{ 에 대해, } a, b \\text{ 를 포함하는 열린집합 } O_a, O_b \\text{ 가 존재하여 } \\overline{O}_a \\cap \\overline{O}_b = \\varnothing \\text{ 를 만족}.\n이 조건을 만족하는 공간을 완전 하우스도르프 공간 (completely Hausdorff space) 이라고 부른다. 모든 정칙 공간은 완전 하우스도르프이며, 이는 다시 하우스도르프 공간을 포함한다. 그러나 완전 하우스도르프이면서도 정칙이 아닌 경우도 존재한다 (예: Modified Fort Space).\n요약하면 완전 하우스도르프 성질은 하우스도르프와 정칙 사이의 중간 수준에 해당한다.\n완전 정칙 공간\n분리 공리의 두 번째 변형은, 특정 연속 실수값 함수의 존재를 다룬다. 공간 X의 서로소 부분집합 A, B에 대해, Urysohn 함수란 다음 조건을 만족하는 연속 함수 f: X \\to [0,1]이다:\nf|_A = 0, \\quad f|_B = 1\nUrysohn의 유명한 보조정리에 따르면, 만약 A와 B가 T_4 공간의 서로소 닫힌집합이라면, 그러한 Urysohn 함수는 항상 존재한다. 반대로, 만약 임의의 서로소 닫힌집합 A, B에 대해 항상 이러한 함수가 존재한다면, 그 공간은 T_4 공간이다. 그러나 이러한 함수의 존재가 곧 T_1 공간이거나 정규 공간임을 보장하지는 않는다 (예: Sierpiński Space).\n한편, 정칙 공간에서의 Urysohn 보조정리는 일반적으로 성립하지 않는다 (예: Tychonoff Corkscrew, 예시 90 참조). 따라서 이 경우에는 다음과 같은 새로운 공리를 정의한다:\nT_{3\\frac{1}{2}} \\text{ 공리: } A \\text{ 가 } X \\text{ 의 닫힌집합이고, } b \\notin A \\text{ 일 때, } A \\text{ 와 } \\{b\\} \\text{ 에 대해 Urysohn 함수가 존재한다}.\n이 공리를 만족하는 공간을 완전 정칙 공간(completely regular space) 또는 Tychonoff 공간이라고 한다. 이러한 공간은 항상 T_3 공간이지만, 반드시 T_2이거나 T_1 공간일 필요는 없다. 그러나 만약 T_0까지 만족한다면, 이는 곧 T_3 공간이 된다. 따라서 완전 정칙 공간은 일반 정칙 공간보다 더 강한 조건이며, 동시에 하우스도르프이고, 따라서 T_1 공간이다.\n정규 공간은 항상 T_{3\\frac{1}{2}} 공간이기 때문에, 완전 정칙이기도 하다. 왜냐하면 정규 공간에서는 모든 점이 닫힌집합이므로, Urysohn 보조정리를 적용할 수 있기 때문이다. 그러나 정칙이면서 완전 정칙이 아닌 공간도 존재하고 (예: Tychonoff Corkscrew), 완전 정칙이면서도 정규 공간이 아닌 경우도 존재한다 (예: Deleted Tychonoff Corkscrew).\n정규 공간은 일반적으로 T_{3\\frac{1}{2}} 공간이지만, T_4 공간이 항상 그런 것은 아니다 (예: Sorgenfrey Plane, 예시 55 참조). 그러나 어떤 T_4 공간이 T_3 공간이기도 하다면, 비록 정규은 아닐지라도 반드시 T_{3\\frac{1}{2}} 공리를 만족하게 된다. 그 이유는 다음과 같다. 점 p가 닫힌집합 A에 속하지 않는다면, T_3 공간에서 A와 p를 분리하는 열린집합이 존재하고, 그 여집합 B는 A와 서로소인 닫힌집합이 된다. 이때 공간이 T_4이면, Urysohn 보조정리를 사용하여 A와 B를 구분하는 Urysohn 함수를 구성할 수 있다. 이 함수는 A와 \\{p\\}를 구분하는 함수가 되므로, T_{3\\frac{1}{2}} 조건을 만족하게 된다.\n\\text{완전정규} \\Rightarrow \\text{정규} \\Rightarrow \\text{완전정칙} \\Rightarrow \\text{정칙} \\Rightarrow \\text{완전하우스도르프} \\Rightarrow T_2 \\Rightarrow T_1 \\Rightarrow T_0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n포함 관계번호예시완전정상 ⇒ 정규(86)Tychonoff Plank정규 ⇒ 완전정칙(82)Deleted Tychonoff Corkscrew완전정칙 ⇒ 정칙(90)Tychonoff Corkscrew정칙 ⇒ 완전하우스도르프(78)Arens Square완전하우스도르프 ⇒ 하우스도르프(75)Irrational Slope TopologyT_2 ⇒ T_1(18)Finite Complement Topology on a Countable SetT_1 ⇒ T_0(8)Particular Point Topology\n함수, 곱공간, 부분공간\n모든 분리 성질들은 위상적 성질들이며, 이는 곧 이러한 성질들이 위상동형(homeomorphism)에 대해 보존된다는 뜻이다. 그러나 일부 성질들은 더 약한 함수들에 대해서도 보존된다.\n만약 X와 Y가 위상공간이고, f: X \\to Y가 닫힌 전단사(closed bijection)이며 X가 T_0, T_1, 하우스도르프(Hausdorff), 또는 완전 하우스도르프(completely Hausdorff) 공간이라면, Y 역시 각각 T_0, T_1, 하우스도르프, 또는 완전 하우스도르프가 된다. 특히, \\tau_1 \\subset \\tau_2가 X 위의 위상들이라면, (X, \\tau_1)에서 (X, \\tau_2)로 가는 항등 함수는 닫힌 함수이다. 우리는 \\tau_2를 \\tau_1의 확장(expansion) 이라 부르며, 이러한 확장은 위에서 언급한 분리 성질들을 보존한다. 그러나 더 강한 분리 성질들은 일반적으로 확장에서 보존되지 않는다 (예: Modified Dieudonné Plank, 원래는 Example 66).\n대부분의 분리 성질들은 곱공간(product)에서는 보존된다. 만약 X = \\prod X_\\alpha이고, X_\\alpha가 각각 T_0, T_1, 하우스도르프, 완전 하우스도르프, 정칙(regular), 또는 완전 정칙(completely regular) 공간이라면, 전체 곱공간 X 역시 그러하다. 다시 말해, 각 성분이 해당 성질을 가질 때, 전체 곱도 해당 성질을 갖는다. 그러나 만약 X가 정규(normal) 또는 완전 정규(completely normal) 공간이라면, 각 X_\\alpha가 정규 혹은 완전 정규이긴 하지만, 그 역은 성립하지 않는다 (예: Product of Countably Many Closed Intervals with the Box Topology, 원래는 Example 84).\n정규성은 부분공간의 경우에서도 다른 분리 성질들과는 다르게 작용한다. T_0, T_1, 하우스도르프, 완전 하우스도르프, 정칙, 또는 완전 정칙 공간의 모든 부분공간은 동일한 성질을 가진다. 그러나 정규 공간의 부분공간이 항상 정규일 필요는 없다. 오직 닫힌 부분공간만이 정규성을 보존한다 (예: Tychonoff Plank, 원래는 Example 86).\n반면, 완전 정규 공간(completely normal space)의 모든 부분공간은 완전 정규이다. 왜냐하면 어떤 공간이 모든 부분공간에서 정규이면, 그 공간은 완전 정규이기 때문이다. 실제로, 어떤 공간이 T_5 공간임과 모든 부분공간이 T_4 공간임은 동치이다.\n추가적인 분리 성질\nUrysohn의 보조정리에 따르면, T_4 공간에서는 임의의 서로소 닫힌집합들 사이에 Urysohn 함수가 항상 존재한다. 이러한 함수를 점과 닫힌집합 사이에 요구하면 T_{3\\frac{1}{2}} 성질이 되며, 이는 T_3보다 강한 조건이다. 이 조건을 두 점 사이에 요구하면 이는 완전 하우스도르프(completely Hausdorff)보다도 더 강한 조건이 된다 (예: Arens Square). 우리는 임의의 두 점에 대해 Urysohn 함수가 존재하는 공간을 Urysohn 공간이라 부른다.\n모든 닫힌집합이 G_\\delta 집합인 T_4 공간은 흔히 완전 T_4 공간이라 불리며, 그것이 T_1 공간이기도 하면 완전정규(perfectly normal) 공간이라 부른다. 모든 완전정규 공간은 완전정규이지만, 그 역은 일반적으로 성립하지 않는다 (예: Closed Ordinal Space).\n한편, T_3 공간에서는 모든 열린집합이 그 안의 각 점을 포함하는 닫힌 근방을 포함하므로, 결국 모든 열린집합은 정칙(open = int(cl(open)))인 열린집합들의 합으로 표현될 수 있다. 그러나 그 역은 일반적으로 성립하지 않으므로 (예: Prime Ideal Topology), 우리는 정칙 열린집합들이 위상의 기저를 이루는 모든 T_2 공간을 준정칙(semiregular) 공간이라 부른다. 그러나 이러한 준정칙 공간이 반드시 완전 하우스도르프나 Urysohn 공간이 되는 것은 아니다 (예: Arens Square 및 Prime Ideal Topology).\n추가된 성질들을 기존의 분리 공리 체계에 포함하면, 아래와 같은 포함 관계가 성립한다:\n\\text{완전정규} \\Rightarrow \\text{완전정규} \\Rightarrow \\text{정규} \\Rightarrow \\text{완전정칙} \\Rightarrow \\text{Urysohn} \\Rightarrow \\text{정칙} \\Rightarrow \\text{완전하우스도르프} \\Rightarrow T_2 \\Rightarrow T_1 \\Rightarrow T_0\n준정칙 공간은 정칙 공간보다 약하지만, T_2 성질은 유지한다:\n\\text{준정칙} \\Rightarrow T_2 \\Rightarrow T_1 \\Rightarrow T_0"},"Study/Topology/분리공리-(Seperation-Axiom)":{"slug":"Study/Topology/분리공리-(Seperation-Axiom)","filePath":"Study/Topology/분리공리 (Seperation Axiom).md","title":"분리공리 (Seperation Axiom)","links":[],"tags":[],"content":"\nT₀: 콜모고로프 공간(Kol)\nT₁: 프레셰 공간\nT₂: 하우스도르프 공간\nT₃: 정칙공간(regular space)\nT₃½: 완전 정칙공간(completely regular space) 또는 티초노프 공간\nT₄: 정규공간(normal space)\n\n이 중에서, 완전 정칙공간(T₃½)은 정칙공간(T₃)보다 더 강한 조건이며, 모든 완전 정칙공간은 정칙공간이지만 그 역은 성립하지 않습니다."},"Study/Topology/순서-정리,-정렬-정리":{"slug":"Study/Topology/순서-정리,-정렬-정리","filePath":"Study/Topology/순서 정리, 정렬 정리.md","title":"순서 정리, 정렬 정리","links":[],"tags":[],"content":"순서형(order type)의 정의\n정렬 집합(well-ordered set) 또는 일반적인 전순서 집합(totally ordered set) (X, \\leq) 에 대해, 다음 조건을 만족하는 함수가 존재하면, 두 집합은 같은 순서형을 가진다고 말한다.\n같은 순서형\n두 정렬 집합 A 와 B 에 대해, 전단사 함수(bijection) f: A \\to B 가 존재하고, 임의의 x, y \\in A 에 대해\nx &lt; y \\iff f(x) &lt; f(y)\n를 만족하면, A 와 B 는 같은 순서형(same oder type)을 갖는다고 한다. 이런 경우, 우리는 A 와 B 가 순서 동형(order isomorphic) 이라고 하고, 기호로\nA \\cong B\n라고 쓴다."},"Study/Topology/연걸성-(Connected)":{"slug":"Study/Topology/연걸성-(Connected)","filePath":"Study/Topology/연걸성 (Connected).md","title":"연걸성 (Connected)","links":[],"tags":[],"content":"\\operatorname{Int}A 와 \\partial A 가 각각 connected일 때, A 는 connected이다.\nA 의 내부 \\operatorname{Int}A 와 경계 \\partial A 가 둘 다 연결되어 있다면 A 도 연결.\n우선 용어를 다시 정확히 정의합니다.\n\n\\operatorname{Int}A 는 A 의 내부, 즉 X 의 open set 중 A 에 포함된 것들의 합집합입니다.\n\\partial A 는 A 의 경계, 즉 \\overline{A}\\setminus \\operatorname{Int}A 입니다. 여기서 \\overline{A} 는 A 의 closure 입니다.\n한 공간이 connected(연결) 이라는 것은, 그 공간을 서로소이면서 nonempty한 두 개의 open set의 합으로 나눌 수 없다는 뜻입니다.\n\n류법을 사용하여, A 가 연결되지 않았다고 가정하고 모순을 도출하겠습니다.\nA 가 연결되지 않았다고 가정하겠습니다. 그러면 A 는 서로소인 두 nonempty한 부분집합 C 와 D 의 합으로 나뉠 수 있습니다. 이때\n\nC,D\\subset A,\nC\\cap D = \\varnothing,\nC,D 는 A 의 상대위상에서 모두 open이고 closed 입니다,\n즉 A = C \\cup D 입니다.\n\n이제 \\operatorname{Int}A 가 연결이라는 가정을 사용하겠습니다. \\operatorname{Int}A 는 A 의 내부이므로 C 와 D 로 나눌 수밖에 없습니다. 즉, \\operatorname{Int}A = (\\operatorname{Int}A \\cap C) \\cup (\\operatorname{Int}A \\cap D) 입니다. 그런데 C,D 는 A 에서 서로소이고 closed \\cap open 이므로, 이 두 교집합은 \\operatorname{Int}A 의 서로소 closed \\cap open 집합입니다.\n\\operatorname{Int}A 가 connected 라는 가정에 따라 이 둘 중 하나는 공집합이어야 합니다. 일반성을 잃지 않고 \\operatorname{Int}A\\subset C 라고 두겠습니다. 즉 \\operatorname{Int}A \\cap D = \\varnothing 입니다.\n이제 D 는 A 에 포함된 집합으로서 \\operatorname{Int}A 와 겹치지 않습니다. 하지만 D 는 비어있지 않으므로 적어도 하나의 점을 포함합니다. 이 점들은 A 의 내부에 속하지 않으므로 A 의 경계 위에 있어야 합니다. 정확히 말해 D\\subset A\\setminus \\operatorname{Int}A\\subset \\overline{A}\\setminus \\operatorname{Int}A = \\partial A 가 됩니다.\n즉 D\\subset \\partial A 입니다.\nD 가 A 에서 open 이고 D \\subset \\partial A 이면, D 는 \\partial A 에서 open 입니다. 왜냐하면, D = A \\cap V 로 V 가 X 에서 open 이면 \\partial A \\cap V 는 \\partial A 에서 open 이고, D = \\partial A \\cap V 이므로 \\partial A 에서 open 입니다.\n따라서 D 는 \\partial A 안에서 open \\cap closed 입니다. D 와 \\partial A \\setminus D 는 서로소 closed \\cap open 집합이며 합하면 \\partial A 가 됩니다. 그리고 D 는 비어 있지 않습니다.\n이는 \\partial A 가 connected 라는 가정과 모순됩니다. 왜냐하면 connected 공간은 nontrivial 한 open \\cap closed 분해를 가질 수 없습니다.\nThe long line is path connected and locally homeomorphic to \\mathbb{R}, but it cannot be imbedded in \\mathbb{R}.\nlong line이란, S_\\Omega \\times [0,1) 의 dictionary order 로 정의된 순서공간입니다. 단, S_\\Omega 에서 최소원소을 제외한 나머지 원소들은 잘 정렬된 집합입니다.\n(a)  어떤 순서집합 X 안에서 a &lt; b &lt; c 일 때, [a, c) 이 [0,1) 과 동형이려면 [a,b], [b,c] 도 [0,1] 과 동형이 되어야 한다는 것을 보이시오.\n핵심 아이디어:\n순서동형의 핵심은 순서와 위상이 모두 보존된다는 점입니다.\n[a,c] 가 [0,1] 과 동형이면, 그 안의 임의의 중간점 b 를 잡았을 때 양쪽 절반도 역시 [0,1] 의 부분구간과 같은 구조여야 합니다.\n즉 [a,b], [b,c] 가 [0,1] 과 위상적으로 동형이 아니면 [a,c] 전체도 그럴 수 없습니다.\n(b)\n질문: x_0 &lt; x_1 &lt; \\dots 는 X 안의 증가수열이고, 극한 b = \\sup \\{x_i\\} 를 가정할 때, [x_0,b] 가 [0,1] 과 동형이려면 각 구간 [x_i, x_{i+1}] 이 [0,1] 과 동형이어야 함을 보이시오.\n핵심 아이디어:\n작은 조각들이 전부 [0,1] 과 같다면, countable many 조각들의 union 이므로 전체도 그런 성질을 유지할 수 있습니다.\n반대로 전체 구간이 [0,1] 과 동형이라면, 중간의 유한 조각도 반드시 그 구조를 가져야 합니다.\n\\Rightarrow 전체의 동형성을 조각별로 쪼개는 조건으로 연결합니다.\n(c)\n질문: S_\\Omega 의 원소 a 에 대해, [a_0 \\times 0, a \\times 0] 이 [0,1] 과 동형임을 귀한 유도(transfinite induction)로 보이시오.\n핵심 아이디어:\n이건 long line S_\\Omega \\times [0,1) 이 어떻게 순서정렬되는지를 보여주는 기초입니다.\nS_\\Omega 는 최소 비가산 잘 정렬 집합이므로, transfinite induction 을 사용할 수 있습니다.\n\nsuccessor ordinal 일 경우엔 이전 점에서 조각을 붙이듯 진행합니다.\nlimit ordinal 이면 점렬극한이 존재하는 경우처럼 처리합니다.\n조각들이 전부 [0,1] 과 같다면 전체도 쌓아서 만들어짐을 유도할 수 있습니다.\n\n(d)\n질문: L 이 path connected 임을 보여라.\n핵심 아이디어:\nL 은 직관적으로 보면 매우 긴 선분처럼 생긴 순서공간입니다.\n시작점에서부터 임의의 점까지 “좌표 증가”를 따라 계속 올라가는 경로를 만들 수 있습니다.\n즉, L 의 각 점은 그 앞에 countable 혹은 uncountable 한 길이가 있으며, 그 길이만큼 점차 증가하면서 이어지는 path 를 만들 수 있습니다.\n순서공간에서의 경로 연결성은 이러한 점들의 “이동 경로”로 구현됩니다.\n(e)\n질문: L 의 임의의 점은 \\mathbb{R} 의 열린구간과 위상동형인 neighborhood 를 갖는다는 것을 보여라.\n핵심 아이디어:\nL = S_\\Omega \\times [0,1) 의 dictionary order 는 각 점에서 로컬로 보면 \\mathbb{R} 의 간격처럼 보입니다.\n즉 각 점은 이전 점들과 연속적으로 연결되어 있으며, 주변을 확대해 보면 \\mathbb{R} 의 간격처럼 보입니다.\n이로 인해 L 은 locally Euclidean 하며, local homeomorphism 으로 \\mathbb{R} 의 간격과 같다고 말할 수 있습니다.\n(f)\n질문: L 은 \\mathbb{R} 안에 (또는 \\mathbb{R}^n 안에도) homeomorphic 하게 매장될 수 없음을 보이시오.\n힌트: \\mathbb{R}^n 의 부분공간은 countable 한 basis 를 가져야 함.\n핵심 아이디어:\nL 은 uncountable 한 구조를 갖고 있으며, \\sigma-compact 하지 않고, first countable 도 아닙니다.\n반면, \\mathbb{R}^n 의 부분공간은 항상 countable basis (즉, second countable) 를 갖습니다.\n따라서 L 이 그 안에 homeomorphic 하게 들어갈 수 없습니다.\n이는 일반적인 위상적 embedding 조건에서 자주 사용하는 대조적 특징입니다.\nLong line에 대한 질문\n\n시각적으로 어떻게 이해하는게 좋을까?\n\nLong line L 은 일반적인 실수 직선 \\mathbb{R} 과 로컬(topologically locally) 로는 같지만, 글로벌(global) 하게는 훨씬 더 깁니다. \\mathbb{R} 의 길이를 넘는, 비가산한 “길이”를 갖는 선분처럼 생각하면 좋습니다.\n이를 시각화하려면 다음과 같이 생각할 수 있습니다:\n\n먼저 \\mathbb{R} 은 countable 한 많은 간격들로 덮일 수 있습니다.\n반면 S_\\Omega 는 uncountable 하게 긴 정렬된 집합이고, 여기에 [0,1) 를 곱해서 각 \\alpha \\in S_\\Omega 에 길이 1 인 작은 열린 간격을 붙인다고 생각하면,\nL = S_\\Omega \\times [0,1) 는 \\omega_1 개의 간격을 이어붙인 긴 줄입니다.\n순서가 (\\alpha,x) &lt; (\\beta,y) iff \\alpha &lt; \\beta, 또는 \\alpha = \\beta 이고 x &lt; y 라는 dictionary order 로 정해져 있으므로,\n각 \\alpha 에 [0,1) 을 붙인 것을 좌에서 우로, 하나씩 순서대로 이어붙인 구조라고 생각하면 됩니다.\n이 선은 로컬로 보면 늘 \\mathbb{R} 과 같지만, 그 길이는 \\mathbb{R} 로는 닿을 수 없을 만큼 깁니다.\n\n그래픽 상상법:\n\n가산히 많은 간격을 이어붙인 건 \\mathbb{R} 처럼 보이지만,\n비가산히 많은 간격을 이어붙인 건 무한히 더 긴 선입니다.\n하지만 이 “선”은 어디에도 꼬이거나 접히거나 하지 않으며, 순서대로 한 방향으로만 쭉 이어집니다.\n\n\n최소원소를 제외한 이유가 뭘까?\n\nL 을 정의할 때 가장 작은 원소 (0,0) 을 제외하는 이유는 다음 두 가지 관점에서 이해할 수 있습니다.\n(1) 로컬 위상 성질 유지:\n(0,0) 은 L 에서 유일하게 left neighborhood 가 존재하지 않는 점입니다.\n즉, (0,0) 은 가장 왼쪽에 고립된 점이므로, 이 점만 다른 점들과 달리 \\mathbb{R} 과 위상동형인 열린 근방을 가질 수 없습니다.\n그래서 L 이 모든 점에서 \\mathbb{R} 과 locally homeomorphic 하다는 성질을 가지려면 (0,0) 을 제외해야 합니다.\n(2) 기술적 단순화 및 통일성:\n이 점 하나가 특이점(singular point)이기 때문에 L 을 path connected 하거나 위상동형성 판단 등을 논의할 때 걸림돌이 됩니다.\n따라서 위상적 성질을 보다 명확하게 논의하고 싶을 때, 보통 이 점을 제거한 버전을 다룹니다.\n\nlong line이란 표현을 쓴 이유는 무엇일까?\n\n“Long line” 이라는 명칭은 수학적으로도, 직관적으로도 다음과 같은 이유에서 적절합니다.\n(1) 긴 직선처럼 생긴 위상공간:\n\nL 은 실수직선 \\mathbb{R} 과 로컬 구조가 똑같고,\n모든 점이 직선처럼 양옆으로 열린 간격을 가지며,\n연결되고, 심지어 path-connected 하기도 합니다.\n즉, 진짜 “선(line)” 입니다.\n\n(2) 하지만 훨씬 길다:\n\n\\mathbb{R} 은 countable 한 개의 [0,1) 로 덮을 수 있지만,\nL 은 uncountable 개의 [0,1) 를 이어붙인 것이므로 \\mathbb{R} 보다 훨씬 긴 공간입니다.\n심지어 \\mathbb{R} 에는 embedding 할 수도 없습니다.\n\n(3) 끝없는 오른쪽 방향:\n\nL 은 순서가 정의되어 있으며 맨 왼쪽에서 시작하여 끝없이 오른쪽으로 이어지는 한 줄의 구조입니다.\n하지만 단순한 실수 직선이 아니라, \\omega_1 개의 간격을 가지는 무한히 긴 선이라는 점에서 “long” 입니다.\n\n요약하면,\n\n“long line” 은 로컬로는 \\mathbb{R} 같고, 전역적으로는 훨씬 더 길어서 실수공간에 들어갈 수 없는, 직관적이면서도 위상적으로 특별한 “직선”입니다.\n\n국소 연결(locally connected)\nX가 국소연결이려면, 임의의 점 x\\in X와 그 점의 임의의 근방 N에 대해, “x를 포함하는 연결 열린집합이 N 안에 있다”가 성립해야 합니다.\n“X가 국소연결이다”\n\\Longleftrightarrow\n“X의 모든 열린집합 U\\subset X에 대해, U의 각 연결성분 C\\subset U가 다시 X에서 열린집합이다.”\n정리하자면, U의 성분이란 U 안에서 더 이상 커질 수 없는 최대 연결 부분집합을 말합니다. 국소연결이기 위해서는, 임의의 열린 U\\subset X를 이 성분들로 나눌 때, 그 나눠진 각 덩어리(성분) 역시 X에서 열린이어야 한다는 것이 필요·충분조건입니다.\n성분(connected component)\n위상 공간 (X,\\tau)에서 연결 집합이란, 두 개의 서로 다른(비어 있지 않으면서) 열린집합으로 나눌 수 없는 집합을 말합니다.\nU\\subset X가 임의의 부분집합일 때, U의 성분이란 U 안에서 더 이상 커질 수 없는(maximal) 연결 부분집합을 뜻합니다.\n구체적으로, x\\in U를 택하면\n    C_x \\;=\\;\\bigcup\\{\\;A\\subset U\\mid A\\text{는 연결이고 }x\\in A\\}\n로 두면, C_x는 x를 포함하는 최대 연결 부분집합—즉 U의 하나의 성분—이 됩니다. U의 각 성분들은 서로소(공통점이 없고)이며, 그 합집합이 U를 이루므로 \\{C_x:x\\in U\\}가 U의 분할(partition) 을 이룹니다.\n어떤 성분 C\\subset U는 항상 U 안에서는 닫힌집합(closed in U)입니다. 왜냐하면, 최대 연결집합이라는 성질로 인해, U\\setminus C가 열린이기 때문입니다.\n그러나 열린집합(open in U)인지 여부는 일반 위상공간에서 자동으로 성립하지 않습니다. 특히 U가 X에서 열린이라고 해도,\nC\\text{가 }U\\text{에서 열린} \\; \\nRightarrow \\; C\\text{가 }X\\text{에서 열린}\n은 “X가 국소연결이다”라는 추가 가정이 있을 때만 보장됩니다. 따라서 국소연결이 아닐 경우, C는 X에서 닫힌집합이지만 U에서는 열린집합이 아닐 수 있습니다."},"Study/Topology/위상수학자의-사인곡선":{"slug":"Study/Topology/위상수학자의-사인곡선","filePath":"Study/Topology/위상수학자의 사인곡선.md","title":"위상수학자의 사인곡선","links":[],"tags":[],"content":"아래에서 S\\subset\\Bbb R^2를\nS \\;=\\;\\bigl\\{\\,(x,\\sin\\!\\tfrac1x)\\colon 0&lt;x\\le1\\bigr\\}\\;\\cup\\;\\bigl(\\{0\\}\\times[-1,1]\\bigr)\n연결성(connectedness)\nS는 연결이다.\n위상 공간에서 “연속 함수의 상(image)”과 “집합의 폐포”는 연결성을 보존한다.\n\n(0,1]은 실수선의 구간이므로 연결이다.\nf:(0,1]\\to\\Bbb R^2,\\;f(x)=(x,\\sin\\!1/x)는 연속 함수이므로 f((0,1])=\\{(x,\\sin\\!1/x):0&lt;x\\le1\\}도 연결이다.\n“연결 집합의 폐포(closure)” 역시 연결이므로\n\n\\overline{f((0,1])}\n   =f((0,1])\\;\\cup\\;\\bigl(\\{0\\}\\times[-1,1]\\bigr)\n   =S\n도 연결이다.\nS는 경로연결(path‐connected)하지 않다.\n정리(연속사상 분리에 의한 불가능성)\n경로 \\gamma:[0,1]\\to S가 존재하여\n\\gamma(0)=(0,y_0)\\in\\{0\\}\\times[-1,1],\\quad\n\\gamma(1)=(x_1,\\sin(1/x_1)),\\;x_1&gt;0\n를 잇는다고 치자.\nπ_1:\\Bbb R^2\\to\\Bbb R를 첫째 좌표 사상이라 하면,\nh(t)=π_1(\\gamma(t))\n는 연속 함수이고 h(0)=0,\\;h(1)=x_1&gt;0이다.\n중간값 정리에 따라 h([0,1])=[0,x_1]. 이때\nh^{-1}(\\{0\\})\n\\;=\\;\\{\\,t\\in[0,1]\\mid h(t)=0\\}\n는 닫힌 집합이지만, 동시에 열린 집합이 되어야 합니다. 왜냐하면\n\\gamma^{-1}\\bigl(\\{0\\}\\times[-1,1]\\bigr)\n\\;=\\;h^{-1}(\\{0\\})\n가 \\gamma^{-1}에 의해 \\{0\\}\\times[-1,1]의 열린 부분(상대위상)이 되어야 하기 때문입니다.\n\\{0\\}\\times[-1,1] 내의 상대열린집합이면서 0을 포함하는 것은 [0,ε)\\times(y_0-δ,y_0+δ)\\cap S 형태이고,\n이들은 t에 대해 열린/닫힌 양쪽 조건을 동시에 만족시킬 수 없어 모순을 빚습니다.\n따라서 그러한 \\gamma는 존재할 수 없습니다.\nS는 국소연결(local connected)하지 않다.\n국소연결이 되려면 임의의 p\\in S와 그 근방 U\\subset S에 대해,\np\\in V\\subset U인 연결 열린 V가 있어야 한다.\np=(0,y_0)\\in\\{0\\}\\times[-1,1]를 고정하고, 반경 ε&gt;0인 유클리드 공(open disk)\nU=B\\bigl((0,y_0),ε\\bigr)\\cap S\n를 취해 보자. 임의의 충분히 작은 δ\\ll ε에 대해,\n\\bigl(\\tfrac1{(n+½)\\pi},\\sin((n+½)\\pi)\\bigr)\n\\quad(n\\gg1)\n처럼 U 안에 점이 무수히 흩어져 있다.\n이들 사이를 잇는 연결 열린 V\\subset U를 만들 수 없으므로 모순.\n결국 S는 국소연결이 아니다.\nS는 국소경로연결(local path‐connected)하지 않다.\n국소경로연결 또한 경로연결의 국소형이므로, 위의 (3)의 논리를 그대로 적용할 수 있습니다.\np=(0,y_0)의 임의의 작은 근방 U 안에, 서로 다른 진동 주기의 점들이 흩어져 있어 p를 포함하는 경로연결 열린 V\\subset U를 만들 수 없기 때문입니다."},"Study/Topology/유한-교집합-성질-(Finite-Intersection-Property,-FIP)":{"slug":"Study/Topology/유한-교집합-성질-(Finite-Intersection-Property,-FIP)","filePath":"Study/Topology/유한 교집합 성질 (Finite Intersection Property, FIP).md","title":"유한 교집합 성질 (Finite Intersection Property, FIP)","links":[],"tags":[],"content":"유한 교집합 성질 (FIP) 정의\n집합 X의 부분집합들로 이루어진 모임(collection or family) \\mathcal{F}가 있다고 합시다. 만약 \\mathcal{F}에서 임의의 유한 개(finite number)의 집합들을 뽑아서 교집합(intersection)을 구했을 때, 그 결과가 절대로 공집합(\\emptyset)이 되지 않으면, 이 모임 \\mathcal{F}는 유한 교집합 성질(FIP)을 갖는다고 말합니다.\n모임 \\mathcal{F}가 FIP를 갖는다 \\iff \\mathcal{F}의 임의의 유한 부분 모임 \\{A_1, A_2, \\dots, A_n\\} \\subseteq \\mathcal{F}에 대해, A_1 \\cap A_2 \\cap \\dots \\cap A_n \\neq \\emptyset 이다.\nFIP는 어떤 집합 모임이 ‘충분히 서로 겹쳐있는가’를 측정하는 방법 중 하나로 볼 수 있습니다. 유한 개만 뽑아서는 절대 서로소(disjoint)가 되지 않는다는 것은, 그 집합들이 전체적으로 ‘모여있을 가능성’이 높다는 것을 시사합니다. 컴팩트성은 이 ‘가능성’이 (닫힌 집합들에 대해) ‘실제’가 되도록 하는 공간의 성질입니다.\nFIP와 Compactness\nFIP를 이용한 정의(모든 닫힌 집합 모임이 FIP를 가지면 전체 교집합도 공집합이 아니다)와 열린 덮개를 이용한 정의(모든 열린 덮개가 유한 부분 덮개를 갖는다)는 컴팩트 공간에 대해 서로 동치입니다. 둘 중 어느 것을 기본 정의로 삼아도 논리적으로는 문제가 없습니다.\n그럼에도 불구하고 대부분의 교재에서 열린 덮개를 이용한 정의를 먼저 소개하는 이유는 주로 다음과 같습니다.\n\n직관성 및 역사성: 위상수학은 실수 공간(\\mathbb{R}^n)에서의 해석학을 일반화하는 과정에서 발전했습니다. \\mathbb{R}의 유계 닫힌 구간 [a, b]가 컴팩트하다는 하이네-보렐 정리(Heine-Borel theorem)는 ‘구간을 덮는 무한히 많은 열린 구간들이 있어도, 항상 유한 개만으로도 덮을 수 있다’는 열린 덮개의 개념으로 설명하는 것이 더 자연스럽고 직관적으로 받아들여졌습니다. 이러한 역사적 배경과 직관성 때문에 열린 덮개 정의가 먼저 소개되는 경향이 있습니다.\n연속성과의 연관성: 함수의 연속성은 보통 열린 집합의 역상(preimage)을 이용해 정의됩니다 (f^{-1}(V)가 열린 집합). 컴팩트 공간에서 연속 함수의 상(image)이 다시 컴팩트하다는 중요한 정리를 증명할 때, 열린 덮개 정의를 사용하는 것이 FIP 정의를 사용하는 것보다 더 직접적이고 자연스러울 수 있습니다.\n위상의 기본 요소: 위상 공간은 ‘열린 집합’들을 기본 요소로 정의합니다. 따라서 공간의 중요한 성질인 컴팩트성을 이 기본 요소인 열린 집합(들의 모임인 열린 덮개)을 사용해 정의하는 것이 더 근본적(foundational)이라고 여겨질 수 있습니다.\n\n하지만 여러 공간의 곱공간(product space)의 컴팩트성을 다루는 티코노프 정리(Tychonoff’s theorem)와 같이 더 추상적이고 이론적인 결과를 증명할 때 FIP 정의가 더 유용합니다. 또한, 필터(filter)나 네트(net)와 같은 다른 위상수학적 도구들과의 연결성도 좋습니다."},"Study/Topology/차원론":{"slug":"Study/Topology/차원론","filePath":"Study/Topology/차원론.md","title":"차원론(Dimension Theory)","links":[],"tags":[],"content":"차원의 정의\n공간 X의 모든 열린 덮개(open covering) \\mathcal{A}에 대하여 \\mathcal{A}를 세분1하면서 차수2가 최대 m+1인 열린 덮개 \\mathcal{B}가 존재하는 정수 m이 있을 때, X가 유한 차원(finite dimensional)이라고 한다. X의 위상적 차원은 이 명제가 성립하게 하는 가장 작은 m의 값으로 정의한다. 우리는 이것을 \\text{dim } X로 표기하자.3\n\n\\text{dim}(X) = 0: 임의의 열린 덮개를 가져와도, 서로소인(disjoint) 열린집합들로 이루어진 세분을 만들 수 있다. 예를들어, 점들이 완전히 분리되어 있어 겹치지 않게 덮을 수 있는 정수 집합 \\mathbb{Z}이 있다.\n\\text{dim}(X) = 1: 선분을 열린구간들로 덮을 때,\n\\text{dim}(X) = 2: 평면을 원판들로 덮을 때\n\n공간의 차원이 정확히 n이라는 것은, \\text{dim}(X) \\le n은 만족하지만 \\text{dim}(X) \\le n-1은 만족하지 않는다는 것을 의미한다.\n차원의 정의에 대한 설명\n이 정의는 차원이 높을수록 공간을 덮는 열린집합들이 더 많이 겹칠 수밖에 없다는 직관을 수학적으로 정식화한 것이다. 오직 ‘열린집합’, ‘포함 관계’, ‘합집합’ 등 위상적인 성질만을 사용한다. 거리, 각도, 부피 같은 기하학적 개념을 전혀 쓰지 않는다. 따라서 위상동형(homeomorphic), 즉 위상적으로 같은 공간들은 항상 같은 차원을 갖는다.\n역사적 맥락\n19세기 후반, 칸토어는 1차원 직선 위의 점들과 2차원 평면 위의 점들 사이에 일대일 대응이 존재함을 증명했다. 이는 단순히 ‘점의 개수’로는 차원을 정의할 수 없다는 충격적인 사실을 보여주었다. 이후 페아노와 힐베르트는 1차원 선을 구부리고 접어서 2차원 정사각형을 빈틈없이 채우는 연속 함수를 발견했다. 이는 ‘연속성’만으로는 차원을 구분할 수 없음을 의미했다. 이러한 ‘병리적인’ 예시들 때문에 수학자들은 위상동형 변환에 의해 변하지 않는, 즉 ‘늘리거나 구부려도’ 바뀌지 않는 위상적 불변량의 필요성으로써 진정한 차원의 속성이 필요하다는 것을 깨달았다. 20세기 초, 푸앵카레, 브라우어, 멩거, 우리손 등 여러 수학자들이 차원을 정의하려 시도했다. 그 중 프랑스 수학자 앙리 르베그가 덮9개의 ‘겹침’ 정도를 이용하는 이 아이디어를 제시했고, 이는 가장 일반적이고 유용한 정의 중 하나로 자리 잡게 되었다.\nFootnotes\n\n\nX의 부분집합들의 모음 \\mathcal{A}가 주어졌을 때, 또 다른 모음\\mathcal{B}가 \\mathcal{A}를 세분(refine)한다라고 하는 것은, \\mathcal{B}의 각 원소 B에 대해 B \\subset A를 만족하는 \\mathcal{A}의 원소 A가 존재할 때를 의미한다. ↩\n\n\n공간 X의 부분집합들의 모음(collection) \\mathcal{A}에 대하여, X의 어떤 점은 \\mathcal{A}의 m+1개 원소에 속하며, X의 어떤 점도 m+1개보다 많은 \\mathcal{A}의 원소에 속하지는 않으면, 차수(order) m+1을 갖는다고 한다. 공간 내의 한 점이 최대 몇 개의 열린집합에 동시에 포함될 수 있는지를 나타내는 수를 의미한다. 예를 들어, 어떤 점이라도 최대 3개의 집합에만 속한다면 그 덮개의 차수는 3이다. ↩\n\n\n핵심 아이디어는 어떤 공간을 얼마나 효율적으로 덮을 수 있는가?를 기준으로 차원을 측정하는 것이다. 여기서 효율성이란 ‘겹침’을 최소화하는 것을 의미한다. ↩\n\n\n"},"Study/Topology/파라컴팩트":{"slug":"Study/Topology/파라컴팩트","filePath":"Study/Topology/파라컴팩트.md","title":"파라컴팩트(paracompact)","links":[],"tags":[],"content":"정의\n파라컴팩트(paracompact)란, 위상 공간 X가 모든 열린 덮개 \\mathcal{A}에 대해 X를 덮는 국소 유한한 열린 세분 \\mathcal{B}가 존재하는 것을 의미한다.\n컴팩트 공간은 모든 열린 덮개에 대해 유한한 세분 덮개가 존재하는 것을 의미한다. 즉, 컴팩트 공간은 파라컴팩트 공간의 특별한 경우이다.\nA space X is paracompact if every open covering A of X has a locally ﬁnite open reﬁnement B that covers X."},"Study/Topology/포화-집합(Saturated-Set)":{"slug":"Study/Topology/포화-집합(Saturated-Set)","filePath":"Study/Topology/포화 집합(Saturated Set).md","title":"포화 집합(Saturated Set)","links":[],"tags":[],"content":"포화 집합(Saturated Set)\n전사함수 p: X \\to Y에 대해, 부분집합 C \\subseteq X가 포화(saturated)되었다는 것은:\n\nC가 만나는 모든 동치류(=역상 p^{-1}(\\{y\\}))를 통째로 포함하고 있다는 뜻입니다.\n\n즉, 다음을 만족합니다:\n\\forall y \\in Y, \\quad \\left[ p^{-1}(\\{y\\}) \\cap C \\neq \\emptyset \\Rightarrow p^{-1}(\\{y\\}) \\subseteq C \\right]\n다르게 말하면, C는 어떤 B \\subseteq Y의 완전한 역상으로 쓸 수 있어야 합니다.\nC = p^{-1}(B) \\quad \\text{for some } B \\subseteq Y\n이를 달리 말하면 C는 자신이 만나는 모든 동치류 p^{-1}(\\{y\\})를 통째로 포함해야 합니다.\n예시\n\nX = \\mathbb{R}\nY = \\mathbb{R} / \\mathbb{Z} (즉, 실수를 정수 차이로 식별한 몫공간)\n사상 p : \\mathbb{R} \\to \\mathbb{R} / \\mathbb{Z}, p(x) = x \\mod \\mathbb{Z}\n\n이때, x \\sim y \\iff x - y \\in \\mathbb{Z}, 즉 x와 y가 정수만큼 차이 나면 같은 동치류입니다.\n각 동치류는 다음처럼 생겼습니다:\np^{-1}(\\{[x]\\}) = \\{ x + n \\mid n \\in \\mathbb{Z} \\}\nC = \\bigcup_{r \\in [0, 0.5)} \\{ r + n \\mid n \\in \\mathbb{Z} \\}\n즉, [0,0.5) 구간 안의 모든 수에 대해, 정수만큼 이동한 점들을 다 모읍니다. 이건 다음과 같이 쓸 수 있습니다:\nC = p^{-1}([0, 0.5)) \\quad \\Rightarrow \\text{포화}\n이 집합은 어떤 동치류를 만나면 그 전체를 포함하므로 포화입니다."},"Study/Topology/필터-(FILTERS)":{"slug":"Study/Topology/필터-(FILTERS)","filePath":"Study/Topology/필터 (FILTERS).md","title":"필터 (FILTERS)","links":[],"tags":[],"content":"필터 (FILTERS)\n집합 X 위의 필터(filter) F는 다음 성질을 만족하는 X의 부분집합들의 모임이다.1\nF_1: F의 원소인 집합을 포함하는 X의 모든 부분집합은 F에 속한다.2\nF_2: F의 원소인 집합들의 모든 유한 교집합은 F에 속한다.\nF_3: 공집합은 F에 속하지 않는다.\n필터 F를 갖는 집합 X는 F에 의해 필터화된 집합(a set filtered by F), 또는 간단히 필터화된 집합(a filtered set)이라고 불린다.\n만약 \\mathcal{B}가 공집합 \\emptyset을 포함하지 않는 X의 부분집합들로 이루어진 공집합이 아닌 집합족일 때, \\mathcal{B}의 어떤 원소를 포함하는 X의 모든 부분집합들의 모임이 필터 F가 될 필요충분조건은 \\mathcal{B}에 속한 임의의 두 집합의 교집합이 \\mathcal{B}에 속한 어떤 집합을 포함하는 것이다. 이러한 \\mathcal{B}를 필터 F의 기저(base)라고 하며, F는 \\mathcal{B}에 의해 생성된(generated) 필터라고 불린다. 이와 동등하게, 필터 F의 부분집합 \\mathcal{B}가 F의 기저가 될 필요충분조건은 F의 모든 집합이 \\mathcal{B}의 집합을 하나 포함하는 것이다. 두 필터 기저가 동일한 필터를 생성할 때, 그들은 동치(equivalent)라고 한다. 조건 F_2와 F_3은 집합족 F가 유한 교차성(finite intersection property)을 만족함을 의미한다. 즉, 이 집합족에 속한 임의의 유한 개의 집합들의 교집합은 공집합이 아니다. 역으로, 유한 교차성을 만족하는 어떤 집합족은 필터의 준기저(subbase)가 된다. 왜냐하면 그 집합족의 원소들의 모든 유한 교집합들의 모임은 필터 기저가 되기 때문이다.\n만약 F, F&#039;가 같은 집합 X 위의 두 필터일 때, F&#039;가 F보다 더 섬세하다(finer)고 하는 것은(F가 F&#039;보다 더 성기다(coarser)고 하는 것은) F \\subset F&#039;일 때이다. 만약 F \\neq F&#039;이기도 하다면, F&#039;는 F보다 엄격하게 더 섬세하다(strictly finer)고 하거나, F는 F&#039;보다 엄격하게 더 성기다(strictly coarser)고 한다. 두 필터 중 하나가 다른 하나보다 더 섬세할 때, 이 두 필터는 비교 가능(comparable)하다고 한다. 기저 \\mathcal{B}&#039;을 갖는 필터 F&#039;가 기저 \\mathcal{B}를 갖는 필터 F보다 더 섬세할 필요충분조건은 \\mathcal{B}의 모든 집합이 \\mathcal{B}&#039;의 집합을 하나 포함하는 것이다.\nX 위의 필터 F가 F보다 엄격하게 더 섬세한 필터 F&#039;가 존재하지 않는 성질을 가질 때, 이 필터 F를 극대 필터(ultrafilter)라고 한다. 이와 동등하게, F가 극대 필터가 될 필요충분조건은 ==A \\cup B \\in F를 만족하는 X의 임의의 두 서로소 부분집합 A, B에 대해, A \\in F이거나 또는 B \\in F인 것이다.==3 따라서 만약 F가 극대 필터이고 E \\subset X이면, E \\in F이거나 또는 X-E \\in F이다. 더 나아가, 만약 F와 F&#039;가 서로 다른 극대 필터라면, A \\in F이고 A \\notin F&#039;인 집합 A가 존재한다; 그런데 그러면 X-A \\in F&#039;이므로, 우리는 A \\in F이고 X-A \\in F&#039;임을 알 수 있다.4\n한 점 x가 어떤 필터의 모든 집합에 포함될 때, 우리는 그것을 집적점(cluster point)이라고 부른다. 명백하게, 극대 필터는 최대 하나의 집적점만을 가질 수 있다. 집적점 p를 갖는 극대 필터는 그 점을 포함하는 모든 집합들의 모임이며, 이를 고정(fixed) 또는 주(principal) 극대 필터라고 부른다. 집적점이 없는 극대 필터는 자유(free) 또는 비주(nonprincipal) 극대 필터라고 불린다.\n만약 X가 위상 공간일 때, X의 임의의 공집합이 아닌 부분집합 A의 모든 근방들의 집합 N을 A의 근방 필터(neighborhood filter)라고 한다. F를 X 위의 임의의 필터라고 하자. 만약 F가 점 x의 근방 필터 N보다 더 섬세하다면, 점 x \\in X를 F의 극한점(limit point)이라고 한다; 또한 F는 x로 수렴한다(converge)고도 한다. 점 x는 X 위의 필터 기저 \\mathcal{B}의 극한(limit)이라고 하며, \\mathcal{B}를 기저로 하는 필터가 x로 수렴할 때 \\mathcal{B}는 x로 수렴한다(converge)고 한다. 이와 동등하게, 위상 공간 X 위의 필터 기저 \\mathcal{B}가 x로 수렴한다고 할 필요충분조건은 x의 모든 근방이 \\mathcal{B}의 집합을 하나 포함하는 것이다.\n근방 필터 예시\n위상 공간 (X, \\mathcal{T})와 그 안의 한 점 p \\in X가 주어졌다고 하자.\n\n집합 N \\subseteq X이 점 p의 근방(neighborhood)이라는 것은, p \\in U \\subseteq N을 만족하는 열린집합 U \\in \\mathcal{T}가 존재하는 것이다.\n\n이때 점 p의 모든 근방들의 집합족을 \\mathcal{N}_p라 표기하자.\n\\mathcal{N}_p = \\{ N \\subseteq X \\mid N ~\\text{is a neighborhood of } p \\}\n이 집합족 \\mathcal{N}_p는 X 위의 필터가 되며, 이를 점 p의 근방 필터(neighborhood filter)라 부른다.\n\n\n(F_1) N \\in \\mathcal{N}_p이고 N \\subseteq M이라 하자. N \\in \\mathcal{N}_p이므로 정의에 따라 p \\in U \\subseteq N인 열린집합 U가 존재한다. 가정에서 N \\subseteq M이므로, p \\in U \\subseteq M이 성립한다. 따라서 M 또한 p의 근방이므로 M \\in \\mathcal{N}_p이다.\n\n\n(F_2) N_1, N_2 \\in \\mathcal{N}_p이라 하자. 정의에 의해 p \\in U_1 \\subseteq N_1인 열린집합 U_1과 p \\in U_2 \\subseteq N_2인 열린집합 U_2가 존재한다. 위상의 공리에 의해 U_1 \\cap U_2 또한 열린집합이며, p \\in U_1 \\cap U_2이다. 또한 U_1 \\cap U_2 \\subseteq N_1 \\cap N_2이므로, N_1 \\cap N_2는 p의 근방이다. 따라서 N_1 \\cap N_2 \\in \\mathcal{N}_p이다.\n\n\n(F_3) 임의의 N \\in \\mathcal{N}_p에 대하여, 정의상 p \\in N이므로 N은 공집합이 될 수 없다. 따라서 \\emptyset \\notin \\mathcal{N}_p이다.\n\n\nPrincipal(Fixed) Ultrafilter 예시\n집적점(cluster point)을 갖는 극대 필터를 ‘주 극대 필터’라고 한다. 이와 같이 정의된 주 극대 필터는 그 집적점 p를 포함하는 모든 집합들의 모임이다. 즉, 주 극대 필터는 점 p에 의해 생성되는 필터라고 할 수 있다.\n\\mathcal{U}_p = \\{ A \\subseteq X \\mid p \\in A \\}\n\nNonprincipal(Free) Ultrafilter 예시\n집적점이 없는 극대 필터로, 무한집합에만 존재하며, 그 존재는 선택 공리에 의해 수학적으로 보장되지만, 우리가 그 원소를 하나하나 구체적으로 나열할 수는 없다.\nFootnotes\n\n\n필터를 한마디로 정의하면 ‘큰 집합들의 모임’이라고 생각할 수 있다. 어떤 집합 X의 부분집합들 중에서 ‘충분히 크다’고 여겨지는 것들만 모아놓은 컬렉션이다. 다만, 아무렇게나 ‘크다’고 정하는 게 아니라, 일관성을 유지하기 위해 다음 세 가지 규칙을 반드시 지켜야한다. 어떤 집합 A가 ‘큰 집합’으로 인정받았다면, A를 포함하는 더 큰 집합 B (A \\subset B)는 당연히 ‘큰 집합’ 모임에 속해야 한다. 큰 집합 A, B를 가져왔을 때, 둘의 공통 부분A \\cap B도 여전히 ‘큰 집합’으로 인정되어야한다. 마지막으로 원소가 하나도 없는 공집합은 클 수 없다. ↩\n\n\n필터의 첫 번째 성질 F_1은 “어떤 집합 A가 필터 F에 속하면, A를 포함하는 모든 집합(초집합) B도 F에 속한다”는 것이다. ↩\n\n\nF가 모든 부분집합에 대해 “가질 것인가, 버릴 것인가”의 양자택일을 강요한다. ↩\n\n\nA \\in F이면, X - A \\in F이므로, 유한 교집합을 통해 A \\cap (X - A) = \\emptyset \\in F이 성립한다. 이는 F가 필터라는 정의에 위배된다. 따라서 A \\in F이면서 X - A \\notin F인 집합 A가 존재한다. 이와 유사하게, X - A \\in F&#039;이면서 A \\notin F&#039;인 집합 A도 존재한다. 따라서 두 극대 필터는 서로 다른 집합을 포함한다. ↩\n\n\n"},"Thought-dump/Template/Notes":{"slug":"Thought-dump/Template/Notes","filePath":"Thought dump/Template/Notes.md","title":"Notes","links":["Class/공통-수학/분할과-분배","Class/공통-수학/순열과-조합","Class/공통-수학/원의-접선의-방정식","Class/공통-수학/이차-방정식의-판별식","Class/공통-수학/이차함수의-최대,-최소","Class/공통-수학/점-대칭,-선-대칭","Class/공통-수학/좌표평면-위의-삼각형의-넓이","Class/공통-수학/특수한-형태의-유리식의-계산","Class/기하/삼각형의-넓이","Class/기하/알아두면-좋은-기하-성질","Class/대수/무제","Class/대수/복소수(Complex-number)","Class/대수/삼각-부등식,-코시-슈바르츠-부등식","Class/대수/선형-연산(Linear-operator)","Class/대수/행렬-OX","Class/미적/그래프-완전정복-1---기본","Class/미적/그래프-완전정복-2---사칙연산","Class/미적/그래프-완전정복-3---평행,-대칭,-주기,-확대","Class/미적/그래프-완전정복-4---절댓값-함수,-가우스-함수","Class/미적/그래프-완전정복-5---합성함수","Class/미적/그래프-완전정복-6---볼록함수","Class/미적/다항함수의-넓이-공식","Class/미적/등차수열","Class/미적/로피탈","Class/미적/사인함수의-넓이","Class/미적/삼각함수의-각-변환","Class/미적/삼차-함수","Class/미적/수열의-귀납적-정의","Class/미적/연속-함수","Class/미적/우함수와-기함수","Class/미적/함수-OX","Class/미적/테일러-급수","Class/미적/편미분","Class/영재/나머지-정리","Class/영재/소수(Prime-Numbers)","Class/영재/수학적-귀납법","Class/영재/약수(divisor)와-배수(multiple)","Class/영재/양의-약수의-성질","Class/영재/오일러-함수와-오일러-정리","Class/영재/유클리드-호제법(Euclidean-Algorithm)","Class/영재/정수론(Number-Theory)","Class/영재/최대공약수와-최소공배수","Class/영재/합동식","Class/확률과-통계/완전-순열","Class/확률과-통계/여러가지-순열","Class/확률과-통계/연속-확률-변수와-정규-분포","Class/확률과-통계/이산-확률-변수와-이항분포","Class/확률과-통계/이항정리","Class/확률과-통계/조건부-확률","Class/확률과-통계/통계적-추정","Class/확률과-통계/함수의-개수","Class/확률과-통계/확률","Ray-math/Script/0으로-나눌-수-없다.","Ray-math/Script/0으로-나눌-수-있다.","Ray-math/Script/감정은-전염되는가","Ray-math/Script/거리와-원","Ray-math/Script/모든-것을-알기위한-열쇠,-독립","Ray-math/Script/모든-세자리-수를-만드는-분수","Ray-math/Script/무리수인데-왜-정수비로-표현되나요","Ray-math/Script/비버가-바쁠만-했네","Ray-math/Script/샤워할-때-왜-우리의-목소리가-더-좋게-들릴까","Ray-math/Script/피타고라스-정리","Ray-math/Script/로그","Ray-math/Script/미분","Ray-math/Script/만유인력의-법칙","Ray-math/Script/허수-i","Ray-math/Script/오일러-방정식","Ray-math/Script/소수를-분모로-갖는-분수의-반복되는-특별한-성질","Ray-math/Script/142857","Ray-math/Script/슈타이너-트리","Ray-math/Script/어느새-부터-패턴은-안멋져","Ray-math/Script/이건-또-뭐야-...999=-1","Ray-math/Script/초월수-e","Ray-math/Script/튜링-정지-문제와-괴델의-불완전성-정리","Ray-math/Script/트럼프가-수학-공식을-들고온-이유","Ray-math/Script/파울하버","Ray-math/Script/파티-플래너-문제","Ray-math/Script/폴리아-추측(Polya-conjecture)","Ray-math/Script/함수의-연속","Ray-math/Shorts/1만-더했을-뿐인데","Ray-math/Shorts/3,5,7-삼각형","Ray-math/Shorts/7로-나누기","Ray-math/Shorts/그녀는-나보다-달에게-더-끌린다","Ray-math/Shorts/길이-차이가-1인-삼각형","Ray-math/Shorts/다른-수도-가능할까","Ray-math/Shorts/마방진","Ray-math/Shorts/무리수도-꽤나-규칙적이다","Ray-math/Shorts/배수를-빠르게-판단하는-법","Ray-math/Shorts/알았으면-끄덕여","Ray-math/Shorts/요일의-순서","Ray-math/Shorts/인수분해-팁","Ray-math/Shorts/자기-자신을-만들어-내는식","Ray-math/Shorts/절단-가능-소수","Ray-math/Shorts/제곱한-후-나누어-더하면-자기-자신이-되는-수","Ray-math/Shorts/추측을-함부로-하면-안되는-이유","Ray-math/Shorts/투자와-수학-1","Ray-math/Shorts/포획--and--재포획법","Ray-math/Shorts/A4-용지와-B4용지","Ray-math/Shorts/emirp","Study/Differential-Geometry/1-2.-Parametrized-Curves","Study/Differential-Geometry/1-3.-Regular-Curves;-Arc-Length","Study/Differential-Geometry/1-4.-The-Vector-Product-in-R3","Study/Differential-Geometry/1-5-The-Local-Theory-of-Curves-Parametrized-by-Arc-Length","Study/Differential-Geometry/1-6.-The-Local-Canonical-Form","Study/Differential-Geometry/1-7.-Global-Properties-of-Plane-Curves","Study/Differential-Geometry/2-2.-Regular-Surfaces;-Inverse-Images-of-Regular-Value","Study/Differential-Geometry/2-3.-Change-of-Parameters;-Differentiable-Functions-on-Surface","Study/Differential-Geometry/2-4.-The-Tangent-Plane;The-Differential-of-a-Map","Study/Differential-Geometry/2-5.-The-First-Fundamental-Form;-Area","Study/Differential-Geometry/2-6.-Orientation-of-Surfaces","Study/Differential-Geometry/2-7.-A-Characterization-of-Compact-Orientable-Surfaces","Study/Differential-Geometry/2-8.-A-Geometric-Deﬁnition-of-Area","Study/Differential-Geometry/2-Appendix.-A-Brief-Review-of-Continuity-and-Differentiability","Study/Differential-Geometry/3-2.-The-Deﬁnition-of-the-Gauss-Map-and-Its-Fundamental-Properties","Study/Differential-Geometry/Differential-Geometry","Study/Dump/양의-정부호(Positive-Definite,-PD)와-양의-준정부호(Positive-Semidefinite,-PSD)","Study/Dump/유한차원에서-전단사","Study/Dump/카탈란-수(Catalan-Number)란","Study/Linear-Algebra/내적-보존,-노름-보존","Study/Linear-Algebra/동반행렬(companion-matrix)","Study/Linear-Algebra/동차-선형-미분-방정식","Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)","Study/Linear-Algebra/라그랑주-보간법(Lagrange-Interpolation)-1","Study/Linear-Algebra/선형-방정식의-최소해(Minimal-Solution)","Study/Linear-Algebra/소멸자","Study/Linear-Algebra/스펙트럼-정리-활용","Study/Linear-Algebra/심프슨-공식(Simpson's-rule)","Study/Linear-Algebra/쌍대공간","Study/Linear-Algebra/오른손-좌표계와-향(Orientation)","Study/Linear-Algebra/원뿔곡선과-주축정리","Study/Linear-Algebra/유니타리-동치(unitary-equivalence)-판별법","Study/Linear-Algebra/유니타리-행렬(Unitary-Matrix)","Study/Linear-Algebra/정규연산자","Study/Linear-Algebra/조르당-표준형-구하기","Study/Linear-Algebra/주성분-분석-(Principal-Component-Analysis)","Study/Linear-Algebra/최소-다항식","Study/Linear-Algebra/최소-제곱-근사(Least-Squares-Approximation)","Study/Linear-Algebra/케일리-해밀턴-정리(Cayley-Hamilton-theorem)","Study/Linear-Algebra/켤레-전치(Conjugate-Transpose)행렬","Study/Linear-Algebra/행렬로-정의하는-대칭과-사영","Study/Linear-Algebra/행렬의-곱","Study/Linear-Algebra/행렬-곱의-정의","Study/Linear-Algebra/행렬이-가환(Commutativity)이기-위한-충분조건","Study/Linear-Algebra/행렬곱의-응용","Study/Linear-Algebra/행렬곱의-응용-1","Study/Linear-Algebra/y=mx에-대한-대칭과-사영","Study/Topology/국소-유한(locally-finite)","Study/Topology/국소연결-(locally-connected)","Study/Topology/근방(Neighborhood)","Study/Topology/나가타-스미르노프-거리화-정리","Study/Topology/분리-공리-(Separation-Axioms)","Study/Topology/분리공리-(Seperation-Axiom)","Study/Topology/순서-정리,-정렬-정리","Study/Topology/연걸성-(Connected)","Study/Topology/위상수학자의-사인곡선","Study/Topology/유한-교집합-성질-(Finite-Intersection-Property,-FIP)","Study/Topology/차원론","Study/Topology/파라컴팩트","Study/Topology/포화-집합(Saturated-Set)","Study/Topology/필터-(FILTERS)","Study/Topology/Arzela-Ascoil-Theorem","Study/Topology/Baire-공간","Study/Topology/limit-point-compactness","Study/Topology/locally-compact","Study/Topology/The-Urysohn-Lemma","Study/Topology/Topology-Knowledge-Graph","Thought-dump/Template/Notes","Thought-dump/Template/Templater---Notes"],"tags":[],"content":"Class\n공통 수학\n\n분할과 분배\n순열과 조합\n원의 접선의 방정식\n이차 방정식의 판별식\n이차함수의 최대, 최소\n점 대칭, 선 대칭\n좌표평면 위의 삼각형의 넓이\n특수한 형태의 유리식의 계산\n\n기하\n\n삼각형의 넓이\n알아두면 좋은 기하 성질\n\n대수\n\n무제\n복소수(Complex number)\n삼각 부등식(triangle inequality)과 코시 슈바르츠 부등식(Cauchy-Schwarz inequality)\n선형 연산자(Linear operator)\n행렬 참, 거짓 문제\n\n미적\n\n그래프 그리기 1\n그래프 그리기 2\n그래프 그리기 3\n그래프 그리기 4\n그래프 그리기 5\n그래프 그리기 6\n다항 함수의 넓이 공식\n등차수열(Arithmetic sequence)\n로피탈의 법칙(L’Hôpital’s rule)\n사인 함수의 넓이\n삼각함수의 각 변환\n삼차함수(Cubic function)\n수열의 귀납적 정의(Recursive Definition of a Sequence)\n연속 함수(Continuous)\n우함수와 기함수(Even &amp; Odd function)\n일대일 함수\n테일러 급수(Taylor series)\n편미분\n\n영재\n\n나머지 정리\n소수(Prime Numbers)\n수학적 귀납법\n약수(divisor)와 배수(multiple)\n양의 약수의 성질\n오일러 함수와 오일러 정리\n유클리드 호제법(Euclidean Algorithm)\n정수론(Number Theory)\n최대공약수와 최소공배수\n합동식\n\n확률과 통계\n\n교란(Derangement)\n여러가지 순열\n연속 확률 변수와 정규 분포\n이산 확률 변수와 이항분포\n이항정리(Binomial theorem)\n조건부 확률\n통계적 추정\n함수의 개수\n확률\n\nRay math\nScript\n\n0으로 나눌 수 없다.\n0으로 나눌 수 있다.\n감정은 전염되는가\n거리와 원\n모든 것을 알기위한 열쇠, 독립\n모든 세자리 수를 만드는 분수\n무리수인데 왜 정수비로 표현되나요\n비버가 바쁠만 했네\n샤워할 때 왜 우리의 목소리가 더 좋게 들릴까\n세상을 바꾼 방정식 1 - 피타고라스 정리\n세상을 바꾼 방정식 2 - 로그\n세상을 바꾼 방정식 3 - 미분\n세상을 바꾼 방정식 4 - 만유인력의 법칙\n세상을 바꾼 방정식 5 -  허수 i\n세상을 바꾼 방정식 6 - 오일러 방정식\n소수를 분모로 갖는 분수의 반복되는 특별한 성질\n순환수 142857\n슈타이너 트리\n어느새 부터 패턴은 안멋져\n이건 또 뭐야 …999=-1\n인류는 어떻게 e를 발견했는가?\n튜링 정지 문제와 괴델의 불완전성 정리\n트럼프가 수학 공식을 들고온 이유\n파울하버(Faulhaber)의 공식\n파티 플래너 문제\n폴리아 추측(Pólya conjecture)\n함수의 연속에 대하여\n\nShorts\n\n1만 더했을 뿐인데\n3,5,7 삼각형\n7로 나누기\n그녀는 나보다 달에게 더 끌린다\n길이 차이가 1인 삼각형\n다른 수도 가능할까\n마방진\n무리수도 꽤나 규칙적이다\n배수를 빠르게 판단하는 법\n알았으면 끄덕여\n요일의 순서\n인수분해 팁\n자기 자신을 만들어 내는식\n절단 가능 소수\n제곱한 후 나누어 더하면 자기 자신이 되는 수\n추측을 함부로 하면 안되는 이유\n투자와 수학 1\n포획 &amp; 재포획법\nA4 용지와 B4용지\nemirp\n\nStudy\nDifferential Geometry\n\n1-2. Parametrized Curves\n1-3. Regular Curves; Arc Length\n1-4. The Vector Product in R3\n1-5 The Local Theory of Curves Parametrized by Arc Length\n1-6. The Local Canonical Form\n1-7. Global Properties of Plane Curves\n2-2. Regular Surfaces; Inverse Images of Regular Value\n2-3. Change of Parameters; Differentiable Functions on Surface\n2-4. The Tangent Plane;The Differential of a Map\n2-5. The First Fundamental Form; Area\n2-6. Orientation of Surfaces\n2-7. A Characterization of Compact Orientable Surfaces\n2-8. A Geometric Deﬁnition of Area\n2-Appendix. A Brief Review of Continuity and Differentiability\n3-2. The Deﬁnition of the Gauss Map and Its Fundamental Properties\nDifferential Geometry\n\nDump\n\n양의 정부호(Positive Definite, PD)와 양의 준정부호(Positive Semidefinite, PSD)\n유한차원에서 전단사\n카탈란 수(Catalan Number)란?\n\nLinear Algebra\n\n내적 보존, 노름 보존\n동반행렬(companion matrix)\n동차 선형 미분 방정식 (Homogeneous Linear Differential Equations with Constant Coefficients)\n라그랑주 보간법(Lagrange Interpolation)\n라그랑주 보간법(Lagrange Interpolation) 1\n선형 방정식의 최소해(Minimal Solution)\n소멸자(Annihilator)\n스펙트럼 정리 활용\n심프슨 공식(Simpson’s rule)\n쌍대공간\n오른손 좌표계와 향(Orientation)\n원뿔곡선과 주축정리\n유니타리 동치(unitary equivalence) 판별법\n유니타리 행렬(Unitary Matrix)\n정규연산자\n조르당 표준형 구하기\n주성분 분석 (Principal Component Analysis)\n최소 다항식(Minimal Polynomial)\n최소제곱법(Least Squares Approximation)\n케일리 해밀턴 정리(Cayley-Hamilton theorem)\n켤레 전치(Conjugate Transpose, Hermitian Transpose) 행렬\n행렬로 정의하는 대칭과 사영\n행렬의 곱?\n행렬의 곱은 왜 이렇게 이상하게 정의되어있을까?\n행렬이 가환(Commutativity)이기 위한 충분조건\nLeslie 행렬\nOnline Linear Algebra Applications\ny=mx에 대한 대칭과 사영\n\nTopology\n\n국소 유한(locally finite)\n국소연결 (locally connected)\n근방(Neighborhood)\n나가타-스미르노프 거리화 정리(Nagata-Smirnov metrization theorem)\n분리 공리 (Separation Axioms)\n분리공리 (Seperation Axiom)\n순서 정리, 정렬 정리\n연걸성 (Connected)\n위상수학자의 사인곡선\n유한 교집합 성질 (Finite Intersection Property, FIP)\n차원론(Dimension Theory)\n파라컴팩트(paracompact)\n포화 집합(Saturated Set)\n필터 (FILTERS)\nArzela-Ascoil Theorem\nBaire 공간(Baire Spaces)\nlimit point compactness\nlocally compact\nThe Urysohn Lemma\nTopology Knowledge Graph\n\nThought dump\nTemplate\n\nNotes\nTemplater - Notes\n"},"Thought-dump/Template/Templater---Notes":{"slug":"Thought-dump/Template/Templater---Notes","filePath":"Thought dump/Template/Templater - Notes.md","title":"Templater - Notes","links":[],"tags":[],"content":"&lt;%*\nconst rootFolder = “content”; // Vault 내부 상대 경로\nconst outputPath = ${rootFolder}/Thought dump/Template/Notes.md; // 저장할 파일 경로\nasync function generateNotes() {\ntry {\n// 1️⃣ 모든 Markdown 파일 가져오기 (루트 폴더 제외)\nconst allFiles = app.vault.getFiles()\n.filter(file ⇒ file.path.startsWith(rootFolder + ”/”) &amp;&amp; file.extension === “md”)\n.filter(file ⇒ file.path.split(”/“).length &gt; 2)\n.map(file ⇒ {\nconst fileCache = app.metadataCache.getCache(file.path) || {};\nconst frontmatter = fileCache.frontmatter || {};\nconst title = frontmatter.title ? String(frontmatter.title) : file.basename; // title이 없으면 file.basename 사용\n            return {\n                name: file.basename,\n                title: title || file.basename, // title이 없으면 file.basename을 기본값으로\n                path: file.path\n            };\n        });\n\n    // 2️⃣ **정리할 파일이 없는 경우 빈 파일 생성**\n    if (allFiles.length === 0) {\n        await app.vault.adapter.write(outputPath, &quot;---\\npublished: \\&quot;false\\&quot;\\n---\\n\\n&quot;);\n        new Notice(`✅ 빈 파일 생성 완료: ${outputPath}`);\n        return;\n    }\n\n    // 3️⃣ **모든 폴더 및 하위 폴더 목록을 정리 (가나다순)**\n    const folderMap = {};\n\n    allFiles.forEach(file =&gt; {\n        const parts = file.path.split(&quot;/&quot;);\n        if (parts.length &lt; 3) return;\n\n        const folder = parts[1];\n        const subFolder = parts.length &gt; 3 ? parts[2] : null;\n\n        if (!folderMap[folder]) folderMap[folder] = { files: [], subFolders: {} };\n        if (subFolder) {\n            if (!folderMap[folder].subFolders[subFolder]) folderMap[folder].subFolders[subFolder] = [];\n            folderMap[folder].subFolders[subFolder].push(file);\n        } else {\n            folderMap[folder].files.push(file);\n        }\n    });\n\n    // 4️⃣ **폴더 및 하위 폴더 정렬 (가나다순)**\n    const sortedFolders = Object.keys(folderMap).sort((a, b) =&gt; a.localeCompare(b, &quot;ko-KR&quot;));\n\n    // 5️⃣ **파일 목록 생성**\n    let content = &quot;&quot;;\n\n    for (const folder of sortedFolders) {\n        content += `## ${folder}\\n`;\n\n        let topLevelFiles = folderMap[folder].files.sort((a, b) =&gt; (a.title || a.name).localeCompare(b.title || b.name, &quot;ko-KR&quot;));\n\n        for (const file of topLevelFiles) {\n            content += `- [[${file.name} | ${file.title}]]\\n`;\n        }\n\n        let sortedSubFolders = Object.keys(folderMap[folder].subFolders).sort((a, b) =&gt; a.localeCompare(b, &quot;ko-KR&quot;));\n\n        for (const subFolder of sortedSubFolders) {\n            content += `\\n### ${subFolder}\\n`;\n\n            let subFolderFiles = folderMap[folder].subFolders[subFolder].sort((a, b) =&gt; (a.title || a.name).localeCompare(b.title || b.name, &quot;ko-KR&quot;));\n\n            for (const file of subFolderFiles) {\n                content += `- [[${file.name} | ${file.title}]]\\n`;\n            }\n        }\n\n        content += &quot;\\n&quot;;\n    }\n\n    // 6️⃣ **파일 무조건 덮어쓰기**\n    await app.vault.adapter.write(outputPath, content);\n    new Notice(`✅ 파일 생성 완료: ${outputPath}`);\n\n} catch (error) {\n    new Notice(`⚠️ 오류 발생: ${error.message}`);\n    console.error(error);\n}\n\n}\n// 비동기 실행\ngenerateNotes();\n%&gt;"},"index":{"slug":"index","filePath":"index.md","title":"What is cooler than magic?","links":["Thought-dump/Template/Notes"],"tags":[],"content":"Math!\nRay 수학에 오신 것을 환영합니다.\nClass\n중, 고등학교 수학 수업 내용을 정리해두었습니다.\n\n공통 수학\n미적분\n확률과 통계\n대수\n기하\n\nYotube\nRay 수학 YouTube 채널의 대본 및 자료는 아래 링크로 정리해두었습니다.\n\nScript\nShorts\n\n모든 노트는 Notes를 확인하세요.\nStudy\n전공 수학을 공부하는 분들을 위한 자료입니다.\n\n선형대수학\n위상수학\n미분기하학\n"}}